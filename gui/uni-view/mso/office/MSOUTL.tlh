// Created by Microsoft (R) C/C++ Compiler Version 11.00.61030.0 (e550f145).
//
// ..\kernel\debug\MSOUTL.tlh
//
// C++ source equivalent of Win32 type library {00062fff-0000-0000-c000-000000000046}
// compiler-generated file created 10/02/15 at 15:13:17 - DO NOT EDIT!

//
// Cross-referenced type libraries:
//
//

#pragma once
#pragma pack(push, 8)

#include <comdef.h>

namespace Outlook {

//
// Forward references and typedefs
//

struct __declspec(uuid("00062fff-0000-0000-c000-000000000046"))
/* LIBID */ __Outlook;
struct __declspec(uuid("d87e7e17-6897-11ce-a6c0-00aa00608faa"))
/* dispinterface */ _DRecipientControlEvents;
struct /* coclass */ _RecipientControl;
struct __declspec(uuid("43507dd0-811d-11ce-b565-00aa00608faa"))
/* interface */ _IDocSiteControl;
struct __declspec(uuid("0006f026-0000-0000-c000-000000000046"))
/* dispinterface */ _DDocSiteControl;
struct __declspec(uuid("50bb9b50-811d-11ce-b565-00aa00608faa"))
/* dispinterface */ _DDocSiteControlEvents;
struct /* coclass */ _DocSiteControl;
enum OlMousePointer;
enum OlScrollBars;
enum OlBackStyle;
enum OlBorderStyle;
enum OlEnterFieldBehavior;
enum OlDragBehavior;
enum OlComboBoxStyle;
enum OlAlignment;
enum OlMultiSelect;
enum OlTextAlign;
enum OlMatchEntry;
enum OlPageType;
enum OlTimeStyle;
enum OlShiftState;
enum OlMouseButton;
enum OlPictureAlignment;
enum OlAppointmentTimeField;
enum OlHorizontalLayout;
enum OlVerticalLayout;
struct __declspec(uuid("00067366-0000-0000-c000-000000000046"))
/* dual interface */ OlkControl;
struct __declspec(uuid("000672da-0000-0000-c000-000000000046"))
/* dual interface */ _OlkTextBox;
struct __declspec(uuid("000672e6-0000-0000-c000-000000000046"))
/* dispinterface */ OlkTextBoxEvents;
struct /* coclass */ OlkTextBox;
struct __declspec(uuid("000672d9-0000-0000-c000-000000000046"))
/* dual interface */ _OlkLabel;
struct __declspec(uuid("000672e5-0000-0000-c000-000000000046"))
/* dispinterface */ OlkLabelEvents;
struct /* coclass */ OlkLabel;
struct __declspec(uuid("000672db-0000-0000-c000-000000000046"))
/* dual interface */ _OlkCommandButton;
struct __declspec(uuid("000672e0-0000-0000-c000-000000000046"))
/* dispinterface */ OlkCommandButtonEvents;
struct /* coclass */ OlkCommandButton;
struct __declspec(uuid("000672dd-0000-0000-c000-000000000046"))
/* dual interface */ _OlkCheckBox;
struct __declspec(uuid("000672e2-0000-0000-c000-000000000046"))
/* dispinterface */ OlkCheckBoxEvents;
struct /* coclass */ OlkCheckBox;
struct __declspec(uuid("000672dc-0000-0000-c000-000000000046"))
/* dual interface */ _OlkOptionButton;
struct __declspec(uuid("000672e1-0000-0000-c000-000000000046"))
/* dispinterface */ OlkOptionButtonEvents;
struct /* coclass */ OlkOptionButton;
struct __declspec(uuid("000672de-0000-0000-c000-000000000046"))
/* dual interface */ _OlkComboBox;
struct __declspec(uuid("000672e3-0000-0000-c000-000000000046"))
/* dispinterface */ OlkComboBoxEvents;
struct /* coclass */ OlkComboBox;
struct __declspec(uuid("000672df-0000-0000-c000-000000000046"))
/* dual interface */ _OlkListBox;
struct __declspec(uuid("000672e4-0000-0000-c000-000000000046"))
/* dispinterface */ OlkListBoxEvents;
struct /* coclass */ OlkListBox;
struct __declspec(uuid("000672f6-0000-0000-c000-000000000046"))
/* dual interface */ _OlkInfoBar;
struct __declspec(uuid("000672f7-0000-0000-c000-000000000046"))
/* dispinterface */ OlkInfoBarEvents;
struct /* coclass */ OlkInfoBar;
struct __declspec(uuid("000672eb-0000-0000-c000-000000000046"))
/* dual interface */ _OlkContactPhoto;
struct __declspec(uuid("000672ec-0000-0000-c000-000000000046"))
/* dispinterface */ OlkContactPhotoEvents;
struct /* coclass */ OlkContactPhoto;
struct __declspec(uuid("000672ed-0000-0000-c000-000000000046"))
/* dual interface */ _OlkBusinessCardControl;
struct __declspec(uuid("000672ee-0000-0000-c000-000000000046"))
/* dispinterface */ OlkBusinessCardControlEvents;
struct /* coclass */ OlkBusinessCardControl;
struct __declspec(uuid("000672f8-0000-0000-c000-000000000046"))
/* dual interface */ _OlkPageControl;
struct __declspec(uuid("000672f9-0000-0000-c000-000000000046"))
/* dispinterface */ OlkPageControlEvents;
struct /* coclass */ OlkPageControl;
struct __declspec(uuid("000672fa-0000-0000-c000-000000000046"))
/* dual interface */ _OlkDateControl;
struct __declspec(uuid("000672fb-0000-0000-c000-000000000046"))
/* dispinterface */ OlkDateControlEvents;
struct /* coclass */ OlkDateControl;
struct __declspec(uuid("000672ef-0000-0000-c000-000000000046"))
/* dual interface */ _OlkTimeControl;
struct __declspec(uuid("000672f0-0000-0000-c000-000000000046"))
/* dispinterface */ OlkTimeControlEvents;
struct /* coclass */ OlkTimeControl;
struct __declspec(uuid("000672f4-0000-0000-c000-000000000046"))
/* dual interface */ _OlkCategory;
struct __declspec(uuid("000672f5-0000-0000-c000-000000000046"))
/* dispinterface */ OlkCategoryEvents;
struct /* coclass */ OlkCategory;
struct __declspec(uuid("00067352-0000-0000-c000-000000000046"))
/* dual interface */ _OlkFrameHeader;
struct __declspec(uuid("00067353-0000-0000-c000-000000000046"))
/* dispinterface */ OlkFrameHeaderEvents;
struct /* coclass */ OlkFrameHeader;
struct __declspec(uuid("00067355-0000-0000-c000-000000000046"))
/* dual interface */ _OlkSenderPhoto;
struct __declspec(uuid("00067356-0000-0000-c000-000000000046"))
/* dispinterface */ OlkSenderPhotoEvents;
struct /* coclass */ OlkSenderPhoto;
struct __declspec(uuid("000630fd-0000-0000-c000-000000000046"))
/* dual interface */ _TimeZone;
struct __declspec(uuid("00063001-0000-0000-c000-000000000046"))
/* dual interface */ _Application;
enum OlObjectClass;
struct __declspec(uuid("00063002-0000-0000-c000-000000000046"))
/* dual interface */ _NameSpace;
struct __declspec(uuid("00063045-0000-0000-c000-000000000046"))
/* dual interface */ Recipient;
struct __declspec(uuid("0006304b-0000-0000-c000-000000000046"))
/* dual interface */ AddressEntry;
enum OlDisplayType;
struct __declspec(uuid("0006304a-0000-0000-c000-000000000046"))
/* dual interface */ AddressEntries;
struct __declspec(uuid("00063021-0000-0000-c000-000000000046"))
/* dual interface */ _ContactItem;
struct __declspec(uuid("0006303e-0000-0000-c000-000000000046"))
/* dual interface */ Actions;
struct __declspec(uuid("00063043-0000-0000-c000-000000000046"))
/* dual interface */ Action;
enum OlActionCopyLike;
enum OlActionReplyStyle;
enum OlActionResponseStyle;
enum OlActionShowOn;
struct __declspec(uuid("0006303c-0000-0000-c000-000000000046"))
/* dual interface */ Attachments;
struct __declspec(uuid("00063007-0000-0000-c000-000000000046"))
/* dual interface */ Attachment;
enum OlAttachmentType;
struct /* coclass */ PropertyAccessor;
struct __declspec(uuid("0006302d-0000-0000-c000-000000000046"))
/* dual interface */ _PropertyAccessor;
enum OlAttachmentBlockLevel;
struct __declspec(uuid("00063046-0000-0000-c000-000000000046"))
/* dual interface */ FormDescription;
enum OlFormRegistry;
struct __declspec(uuid("00063005-0000-0000-c000-000000000046"))
/* dual interface */ _Inspector;
enum OlEditorType;
enum OlInspectorClose;
enum OlWindowState;
enum OlImportance;
enum OlSensitivity;
struct __declspec(uuid("0006303d-0000-0000-c000-000000000046"))
/* dual interface */ UserProperties;
struct __declspec(uuid("00063042-0000-0000-c000-000000000046"))
/* dual interface */ UserProperty;
enum OlUserPropertyType;
struct __declspec(uuid("00063006-0000-0000-c000-000000000046"))
/* dual interface */ MAPIFolder;
enum OlItemType;
struct __declspec(uuid("00063040-0000-0000-c000-000000000046"))
/* dual interface */ _Folders;
struct __declspec(uuid("00063041-0000-0000-c000-000000000046"))
/* dual interface */ _Items;
struct __declspec(uuid("00063003-0000-0000-c000-000000000046"))
/* dual interface */ _Explorer;
struct __declspec(uuid("00063009-0000-0000-c000-000000000046"))
/* dual interface */ Panes;
struct __declspec(uuid("00063087-0000-0000-c000-000000000046"))
/* dual interface */ Selection;
enum OlPane;
struct __declspec(uuid("000630e6-0000-0000-c000-000000000046"))
/* dual interface */ _NavigationPane;
struct /* coclass */ NavigationModule;
struct __declspec(uuid("000630e8-0000-0000-c000-000000000046"))
/* dual interface */ _NavigationModule;
enum OlNavigationModuleType;
struct /* coclass */ NavigationModules;
struct __declspec(uuid("000630e7-0000-0000-c000-000000000046"))
/* dual interface */ _NavigationModules;
enum OlSearchScope;
struct __declspec(uuid("00063095-0000-0000-c000-000000000046"))
/* dual interface */ View;
enum OlViewSaveOption;
enum OlViewType;
struct __declspec(uuid("0006308d-0000-0000-c000-000000000046"))
/* dual interface */ _Views;
enum OlShowItemCount;
struct /* coclass */ Store;
struct __declspec(uuid("000630c7-0000-0000-c000-000000000046"))
/* dual interface */ _Store;
enum OlExchangeStoreType;
struct /* coclass */ Rules;
struct __declspec(uuid("000630cc-0000-0000-c000-000000000046"))
/* dual interface */ _Rules;
struct __declspec(uuid("000630cd-0000-0000-c000-000000000046"))
/* dual interface */ _Rule;
enum OlRuleType;
struct /* coclass */ RuleActions;
struct __declspec(uuid("000630ce-0000-0000-c000-000000000046"))
/* dual interface */ _RuleActions;
struct __declspec(uuid("000630cf-0000-0000-c000-000000000046"))
/* dual interface */ _RuleAction;
enum OlRuleActionType;
struct /* coclass */ MoveOrCopyRuleAction;
struct __declspec(uuid("000630d0-0000-0000-c000-000000000046"))
/* dual interface */ _MoveOrCopyRuleAction;
struct /* coclass */ RuleAction;
struct /* coclass */ SendRuleAction;
struct __declspec(uuid("000630d1-0000-0000-c000-000000000046"))
/* dual interface */ _SendRuleAction;
struct __declspec(uuid("0006303b-0000-0000-c000-000000000046"))
/* dual interface */ Recipients;
struct /* coclass */ AssignToCategoryRuleAction;
struct __declspec(uuid("000630d4-0000-0000-c000-000000000046"))
/* dual interface */ _AssignToCategoryRuleAction;
struct /* coclass */ PlaySoundRuleAction;
struct __declspec(uuid("000630d5-0000-0000-c000-000000000046"))
/* dual interface */ _PlaySoundRuleAction;
struct /* coclass */ MarkAsTaskRuleAction;
struct __declspec(uuid("000630d6-0000-0000-c000-000000000046"))
/* dual interface */ _MarkAsTaskRuleAction;
enum OlMarkInterval;
struct /* coclass */ NewItemAlertRuleAction;
struct __declspec(uuid("000630d7-0000-0000-c000-000000000046"))
/* dual interface */ _NewItemAlertRuleAction;
struct /* coclass */ RuleConditions;
struct __declspec(uuid("000630d8-0000-0000-c000-000000000046"))
/* dual interface */ _RuleConditions;
struct __declspec(uuid("000630d9-0000-0000-c000-000000000046"))
/* dual interface */ _RuleCondition;
enum OlRuleConditionType;
struct /* coclass */ RuleCondition;
struct /* coclass */ ImportanceRuleCondition;
struct __declspec(uuid("000630da-0000-0000-c000-000000000046"))
/* dual interface */ _ImportanceRuleCondition;
struct /* coclass */ AccountRuleCondition;
struct __declspec(uuid("000630db-0000-0000-c000-000000000046"))
/* dual interface */ _AccountRuleCondition;
struct /* coclass */ Account;
struct __declspec(uuid("000630c5-0000-0000-c000-000000000046"))
/* dual interface */ _Account;
enum OlAccountType;
struct /* coclass */ TextRuleCondition;
struct __declspec(uuid("000630e0-0000-0000-c000-000000000046"))
/* dual interface */ _TextRuleCondition;
struct /* coclass */ CategoryRuleCondition;
struct __declspec(uuid("000630dc-0000-0000-c000-000000000046"))
/* dual interface */ _CategoryRuleCondition;
struct /* coclass */ FormNameRuleCondition;
struct __declspec(uuid("000630dd-0000-0000-c000-000000000046"))
/* dual interface */ _FormNameRuleCondition;
struct /* coclass */ ToOrFromRuleCondition;
struct __declspec(uuid("000630de-0000-0000-c000-000000000046"))
/* dual interface */ _ToOrFromRuleCondition;
struct /* coclass */ AddressRuleCondition;
struct __declspec(uuid("000630fa-0000-0000-c000-000000000046"))
/* dual interface */ _AddressRuleCondition;
struct /* coclass */ SenderInAddressListRuleCondition;
struct __declspec(uuid("000630df-0000-0000-c000-000000000046"))
/* dual interface */ _SenderInAddressListRuleCondition;
struct __declspec(uuid("00063049-0000-0000-c000-000000000046"))
/* dual interface */ AddressList;
enum OlAddressListType;
struct /* coclass */ FromRssFeedRuleCondition;
struct __declspec(uuid("000630fb-0000-0000-c000-000000000046"))
/* dual interface */ _FromRssFeedRuleCondition;
struct /* coclass */ Rule;
enum OlSpecialFolders;
enum OlStorageIdentifierType;
struct __declspec(uuid("000630cb-0000-0000-c000-000000000046"))
/* dual interface */ _StorageItem;
struct /* coclass */ Table;
struct __declspec(uuid("000630d2-0000-0000-c000-000000000046"))
/* dual interface */ _Table;
struct /* coclass */ Row;
struct __declspec(uuid("000630d3-0000-0000-c000-000000000046"))
/* dual interface */ _Row;
struct /* coclass */ Columns;
struct __declspec(uuid("000630e1-0000-0000-c000-000000000046"))
/* dual interface */ _Columns;
struct __declspec(uuid("000630e5-0000-0000-c000-000000000046"))
/* dual interface */ _Column;
struct /* coclass */ Column;
struct /* coclass */ CalendarSharing;
struct __declspec(uuid("000630e2-0000-0000-c000-000000000046"))
/* dual interface */ _CalendarSharing;
enum OlCalendarMailFormat;
struct /* coclass */ MailItem;
struct __declspec(uuid("00063034-0000-0000-c000-000000000046"))
/* dual interface */ _MailItem;
enum OlFlagStatus;
enum OlRemoteStatus;
struct __declspec(uuid("0006308a-0000-0000-c000-000000000046"))
/* dual interface */ Links;
struct __declspec(uuid("00063089-0000-0000-c000-000000000046"))
/* dual interface */ Link;
struct __declspec(uuid("000630a8-0000-0000-c000-000000000046"))
/* dual interface */ ItemProperties;
struct __declspec(uuid("000630a7-0000-0000-c000-000000000046"))
/* dual interface */ ItemProperty;
enum OlBodyFormat;
enum OlDownloadState;
enum OlFlagIcon;
struct __declspec(uuid("000630c2-0000-0000-c000-000000000046"))
/* dual interface */ Conflicts;
struct __declspec(uuid("000630c3-0000-0000-c000-000000000046"))
/* dual interface */ Conflict;
enum OlPermission;
enum OlPermissionService;
struct /* coclass */ ContactItem;
struct __declspec(uuid("0006303a-0000-0000-c000-000000000046"))
/* dispinterface */ ItemEvents;
struct __declspec(uuid("0006302b-0000-0000-c000-000000000046"))
/* dispinterface */ ItemEvents_10;
enum OlCalendarDetail;
struct /* coclass */ UserDefinedProperties;
struct __declspec(uuid("00063047-0000-0000-c000-000000000046"))
/* dual interface */ _UserDefinedProperties;
struct __declspec(uuid("0006305c-0000-0000-c000-000000000046"))
/* dual interface */ _UserDefinedProperty;
struct /* coclass */ UserDefinedProperty;
enum OlGender;
enum OlMailingAddress;
enum OlContactPhoneNumber;
enum OlBusinessCardType;
struct /* coclass */ ExchangeUser;
struct __declspec(uuid("000630c9-0000-0000-c000-000000000046"))
/* dual interface */ _ExchangeUser;
enum OlAddressEntryUserType;
struct /* coclass */ ExchangeDistributionList;
struct __declspec(uuid("000630ca-0000-0000-c000-000000000046"))
/* dual interface */ _ExchangeDistributionList;
enum OlResponseStatus;
enum OlTrackingStatus;
struct __declspec(uuid("00063048-0000-0000-c000-000000000046"))
/* dual interface */ AddressLists;
enum OlDefaultFolders;
struct __declspec(uuid("00063086-0000-0000-c000-000000000046"))
/* dual interface */ SyncObjects;
struct /* coclass */ SyncObject;
struct __declspec(uuid("00063083-0000-0000-c000-000000000046"))
/* dual interface */ _SyncObject;
struct __declspec(uuid("00063085-0000-0000-c000-000000000046"))
/* dispinterface */ SyncObjectEvents;
enum OlSyncState;
enum OlExchangeConnectionMode;
enum OlStoreType;
struct /* coclass */ Accounts;
struct __declspec(uuid("000630c4-0000-0000-c000-000000000046"))
/* dual interface */ _Accounts;
struct /* coclass */ Stores;
struct __declspec(uuid("000630c6-0000-0000-c000-000000000046"))
/* dual interface */ _Stores;
struct __declspec(uuid("000630f8-0000-0000-c000-000000000046"))
/* dispinterface */ StoresEvents_12;
struct /* coclass */ SelectNamesDialog;
struct __declspec(uuid("000630c8-0000-0000-c000-000000000046"))
/* dual interface */ _SelectNamesDialog;
enum OlRecipientSelectors;
enum OlDefaultSelectNamesDisplayMode;
struct /* coclass */ Categories;
struct __declspec(uuid("000630e4-0000-0000-c000-000000000046"))
/* dual interface */ _Categories;
struct __declspec(uuid("000630e3-0000-0000-c000-000000000046"))
/* dual interface */ _Category;
enum OlCategoryColor;
enum OlCategoryShortcutKey;
struct /* coclass */ Category;
struct /* coclass */ SharingItem;
struct __declspec(uuid("0006302f-0000-0000-c000-000000000046"))
/* dual interface */ _SharingItem;
enum OlSharingProvider;
enum OlSharingMsgType;
enum OlAutoDiscoverConnectionMode;
struct __declspec(uuid("0006300a-0000-0000-c000-000000000046"))
/* dual interface */ _Explorers;
struct /* coclass */ Explorer;
struct __declspec(uuid("0006304f-0000-0000-c000-000000000046"))
/* dispinterface */ ExplorerEvents;
struct __declspec(uuid("0006300f-0000-0000-c000-000000000046"))
/* dispinterface */ ExplorerEvents_10;
enum OlFolderDisplayMode;
struct __declspec(uuid("00063008-0000-0000-c000-000000000046"))
/* dual interface */ _Inspectors;
struct /* coclass */ Inspector;
struct __declspec(uuid("0006307d-0000-0000-c000-000000000046"))
/* dispinterface */ InspectorEvents;
struct __declspec(uuid("0006302a-0000-0000-c000-000000000046"))
/* dispinterface */ InspectorEvents_10;
struct __declspec(uuid("0006300b-0000-0000-c000-000000000046"))
/* dual interface */ Search;
struct __declspec(uuid("0006300c-0000-0000-c000-000000000046"))
/* dual interface */ _Results;
struct __declspec(uuid("000630b1-0000-0000-c000-000000000046"))
/* dual interface */ _Reminders;
struct __declspec(uuid("000630b0-0000-0000-c000-000000000046"))
/* dual interface */ _Reminder;
enum OlReferenceType;
struct /* coclass */ TimeZones;
struct __declspec(uuid("000630fc-0000-0000-c000-000000000046"))
/* dual interface */ _TimeZones;
struct __declspec(uuid("00067367-0000-0000-c000-000000000046"))
/* dual interface */ _OlkTimeZoneControl;
struct __declspec(uuid("00067368-0000-0000-c000-000000000046"))
/* dispinterface */ OlkTimeZoneControlEvents;
struct /* coclass */ OlkTimeZoneControl;
enum OlBusyStatus;
enum OlDaysOfWeek;
enum OlJournalRecipientType;
enum OlMailRecipientType;
enum OlMeetingRecipientType;
enum OlMeetingResponse;
enum OlMeetingStatus;
enum OlNetMeetingType;
enum OlNoteColor;
enum OlOutlookBarViewType;
enum OlRecurrenceState;
enum OlRecurrenceType;
enum OlSaveAsType;
enum OlSortOrder;
enum OlTaskDelegationState;
enum OlTaskOwnership;
enum OlTaskRecipientType;
enum OlTaskResponse;
enum OlTaskStatus;
enum OlOfficeDocItemsType;
enum OlFormRegionMode;
enum OlFormRegionSize;
enum OlRuleExecuteOption;
enum OlDefaultExpandCollapseSetting;
enum OlMultiLine;
enum OlGridLineStyle;
enum OlIconViewType;
enum OlIconViewPlacement;
enum OlCalendarViewMode;
enum OlDayWeekTimeScale;
enum OlTimelineViewMode;
enum OlAutoPreview;
enum OlColor;
enum OlAlign;
enum OlFormatCurrency;
enum OlFormatDateTime;
enum OlFormatDuration;
enum OlFormatInteger;
enum OlFormatKeywords;
enum OlFormatNumber;
enum OlFormatPercent;
enum OlFormatYesNo;
enum OlFormatEnumeration;
enum OlFormatSmartFrom;
enum OlContextMenu;
enum OlFormatText;
enum OlGroupType;
enum OlTableContents;
enum OlFormRegionIcon;
struct __declspec(uuid("0006304e-0000-0000-c000-000000000046"))
/* dispinterface */ ApplicationEvents;
struct __declspec(uuid("00063080-0000-0000-c000-000000000046"))
/* dual interface */ PropertyPages;
struct __declspec(uuid("00063044-0000-0000-c000-000000000046"))
/* dual interface */ RecurrencePattern;
struct __declspec(uuid("0006304c-0000-0000-c000-000000000046"))
/* dual interface */ Exceptions;
struct __declspec(uuid("0006304d-0000-0000-c000-000000000046"))
/* dual interface */ Exception;
struct /* coclass */ AppointmentItem;
struct __declspec(uuid("00063033-0000-0000-c000-000000000046"))
/* dual interface */ _AppointmentItem;
struct /* coclass */ MeetingItem;
struct __declspec(uuid("00063062-0000-0000-c000-000000000046"))
/* dual interface */ _MeetingItem;
struct __declspec(uuid("00063078-0000-0000-c000-000000000046"))
/* dispinterface */ ExplorersEvents;
struct __declspec(uuid("00063076-0000-0000-c000-000000000046"))
/* dispinterface */ FoldersEvents;
struct __declspec(uuid("00063079-0000-0000-c000-000000000046"))
/* dispinterface */ InspectorsEvents;
struct __declspec(uuid("00063077-0000-0000-c000-000000000046"))
/* dispinterface */ ItemsEvents;
struct __declspec(uuid("0006308c-0000-0000-c000-000000000046"))
/* dispinterface */ NameSpaceEvents;
struct __declspec(uuid("00063073-0000-0000-c000-000000000046"))
/* dual interface */ OutlookBarGroup;
struct __declspec(uuid("00063074-0000-0000-c000-000000000046"))
/* dual interface */ _OutlookBarShortcuts;
struct __declspec(uuid("00063075-0000-0000-c000-000000000046"))
/* dual interface */ OutlookBarShortcut;
struct __declspec(uuid("00063072-0000-0000-c000-000000000046"))
/* dual interface */ _OutlookBarGroups;
struct __declspec(uuid("0006307b-0000-0000-c000-000000000046"))
/* dispinterface */ OutlookBarGroupsEvents;
struct __declspec(uuid("00063070-0000-0000-c000-000000000046"))
/* dual interface */ _OutlookBarPane;
struct __declspec(uuid("00063071-0000-0000-c000-000000000046"))
/* dual interface */ OutlookBarStorage;
struct __declspec(uuid("0006307a-0000-0000-c000-000000000046"))
/* dispinterface */ OutlookBarPaneEvents;
struct __declspec(uuid("0006307c-0000-0000-c000-000000000046"))
/* dispinterface */ OutlookBarShortcutsEvents;
struct __declspec(uuid("0006307e-0000-0000-c000-000000000046"))
/* interface */ PropertyPage;
struct __declspec(uuid("0006307f-0000-0000-c000-000000000046"))
/* dual interface */ PropertyPageSite;
struct __declspec(uuid("0006303f-0000-0000-c000-000000000046"))
/* dual interface */ Pages;
struct __declspec(uuid("0006300e-0000-0000-c000-000000000046"))
/* dispinterface */ ApplicationEvents_10;
struct __declspec(uuid("0006302c-0000-0000-c000-000000000046"))
/* dispinterface */ ApplicationEvents_11;
struct /* coclass */ AttachmentSelection;
struct __declspec(uuid("000630f9-0000-0000-c000-000000000046"))
/* dual interface */ _AttachmentSelection;
struct /* coclass */ Folder;
struct __declspec(uuid("000630f7-0000-0000-c000-000000000046"))
/* dispinterface */ MAPIFolderEvents_12;
struct __declspec(uuid("0006300d-0000-0000-c000-000000000046"))
/* dispinterface */ ResultsEvents;
struct __declspec(uuid("000630a5-0000-0000-c000-000000000046"))
/* dispinterface */ _ViewsEvents;
struct __declspec(uuid("000630b2-0000-0000-c000-000000000046"))
/* dispinterface */ ReminderCollectionEvents;
struct __declspec(uuid("00063081-0000-0000-c000-000000000046"))
/* dual interface */ _DistListItem;
struct __declspec(uuid("00063020-0000-0000-c000-000000000046"))
/* dual interface */ _DocumentItem;
struct __declspec(uuid("00063022-0000-0000-c000-000000000046"))
/* dual interface */ _JournalItem;
struct __declspec(uuid("00063025-0000-0000-c000-000000000046"))
/* dual interface */ _NoteItem;
struct __declspec(uuid("00063024-0000-0000-c000-000000000046"))
/* dual interface */ _PostItem;
struct __declspec(uuid("00063023-0000-0000-c000-000000000046"))
/* dual interface */ _RemoteItem;
struct __declspec(uuid("00063026-0000-0000-c000-000000000046"))
/* dual interface */ _ReportItem;
struct __declspec(uuid("00063035-0000-0000-c000-000000000046"))
/* dual interface */ _TaskItem;
struct /* coclass */ TaskItem;
struct __declspec(uuid("00063038-0000-0000-c000-000000000046"))
/* dual interface */ _TaskRequestAcceptItem;
struct __declspec(uuid("00063039-0000-0000-c000-000000000046"))
/* dual interface */ _TaskRequestDeclineItem;
struct __declspec(uuid("00063036-0000-0000-c000-000000000046"))
/* dual interface */ _TaskRequestItem;
struct __declspec(uuid("00063037-0000-0000-c000-000000000046"))
/* dual interface */ _TaskRequestUpdateItem;
struct __declspec(uuid("0006305a-0000-0000-c000-000000000046"))
/* dual interface */ _FormRegion;
struct __declspec(uuid("0006305b-0000-0000-c000-000000000046"))
/* dispinterface */ FormRegionEvents;
struct __declspec(uuid("00063096-0000-0000-c000-000000000046"))
/* dual interface */ _TableView;
struct /* coclass */ ViewFields;
struct __declspec(uuid("000630a1-0000-0000-c000-000000000046"))
/* dual interface */ _ViewFields;
struct __declspec(uuid("000630a0-0000-0000-c000-000000000046"))
/* dual interface */ _ViewField;
struct /* coclass */ ColumnFormat;
struct __declspec(uuid("0006309e-0000-0000-c000-000000000046"))
/* dual interface */ _ColumnFormat;
struct /* coclass */ ViewField;
struct /* coclass */ OrderFields;
struct __declspec(uuid("0006309a-0000-0000-c000-000000000046"))
/* dual interface */ _OrderFields;
struct __declspec(uuid("0006309b-0000-0000-c000-000000000046"))
/* dual interface */ _OrderField;
struct /* coclass */ OrderField;
struct /* coclass */ ViewFont;
struct __declspec(uuid("0006309d-0000-0000-c000-000000000046"))
/* dual interface */ _ViewFont;
struct /* coclass */ AutoFormatRules;
struct __declspec(uuid("00063094-0000-0000-c000-000000000046"))
/* dual interface */ _AutoFormatRules;
struct /* coclass */ AutoFormatRule;
struct __declspec(uuid("00063093-0000-0000-c000-000000000046"))
/* dual interface */ _AutoFormatRule;
struct __declspec(uuid("00063097-0000-0000-c000-000000000046"))
/* dual interface */ _IconView;
struct __declspec(uuid("00063098-0000-0000-c000-000000000046"))
/* dual interface */ _CardView;
struct __declspec(uuid("00063099-0000-0000-c000-000000000046"))
/* dual interface */ _CalendarView;
struct __declspec(uuid("0006309c-0000-0000-c000-000000000046"))
/* dual interface */ _TimelineView;
struct __declspec(uuid("000630e9-0000-0000-c000-000000000046"))
/* dual interface */ _MailModule;
struct __declspec(uuid("000630ef-0000-0000-c000-000000000046"))
/* dual interface */ _NavigationGroups;
struct __declspec(uuid("000630f0-0000-0000-c000-000000000046"))
/* dual interface */ _NavigationGroup;
struct /* coclass */ NavigationFolders;
struct __declspec(uuid("000630f1-0000-0000-c000-000000000046"))
/* dual interface */ _NavigationFolders;
struct __declspec(uuid("000630f2-0000-0000-c000-000000000046"))
/* dual interface */ _NavigationFolder;
struct /* coclass */ NavigationFolder;
struct /* coclass */ NavigationGroup;
struct __declspec(uuid("000630ea-0000-0000-c000-000000000046"))
/* dual interface */ _CalendarModule;
struct __declspec(uuid("000630eb-0000-0000-c000-000000000046"))
/* dual interface */ _ContactsModule;
struct __declspec(uuid("000630ec-0000-0000-c000-000000000046"))
/* dual interface */ _TasksModule;
struct __declspec(uuid("000630ed-0000-0000-c000-000000000046"))
/* dual interface */ _JournalModule;
struct __declspec(uuid("000630ee-0000-0000-c000-000000000046"))
/* dual interface */ _NotesModule;
struct __declspec(uuid("000630f3-0000-0000-c000-000000000046"))
/* dispinterface */ NavigationPaneEvents_12;
struct __declspec(uuid("000630f4-0000-0000-c000-000000000046"))
/* dispinterface */ NavigationGroupsEvents_12;
struct __declspec(uuid("000630a2-0000-0000-c000-000000000046"))
/* dual interface */ _BusinessCardView;
struct __declspec(uuid("00063059-0000-0000-c000-000000000046"))
/* dual interface */ _FormRegionStartup;
struct /* coclass */ FormRegion;
struct /* coclass */ Application;
struct /* coclass */ DistListItem;
struct /* coclass */ DocumentItem;
struct /* coclass */ Explorers;
struct /* coclass */ Inspectors;
struct /* coclass */ Folders;
struct /* coclass */ Items;
struct /* coclass */ JournalItem;
struct /* coclass */ NameSpace;
struct /* coclass */ NoteItem;
struct /* coclass */ OutlookBarGroups;
struct /* coclass */ OutlookBarPane;
struct /* coclass */ OutlookBarShortcuts;
struct /* coclass */ PostItem;
struct /* coclass */ RemoteItem;
struct /* coclass */ ReportItem;
struct /* coclass */ TaskRequestAcceptItem;
struct /* coclass */ TaskRequestDeclineItem;
struct /* coclass */ TaskRequestItem;
struct /* coclass */ TaskRequestUpdateItem;
struct /* coclass */ Results;
struct /* coclass */ Views;
struct /* coclass */ Reminder;
struct /* coclass */ Reminders;
struct /* coclass */ StorageItem;
struct /* coclass */ NavigationPane;
struct /* coclass */ NavigationGroups;
struct /* coclass */ DoNotUseMeFolder;
struct /* coclass */ TimelineView;
struct /* coclass */ MailModule;
struct /* coclass */ CalendarModule;
struct /* coclass */ ContactsModule;
struct /* coclass */ TasksModule;
struct /* coclass */ JournalModule;
struct /* coclass */ NotesModule;
struct /* coclass */ TableView;
struct /* coclass */ IconView;
struct /* coclass */ CardView;
struct /* coclass */ CalendarView;
struct /* coclass */ BusinessCardView;
struct /* coclass */ FormRegionStartup;
struct /* coclass */ TimeZone;

//
// Smart pointer typedef declarations
//

_COM_SMARTPTR_TYPEDEF(_DRecipientControlEvents, __uuidof(_DRecipientControlEvents));
_COM_SMARTPTR_TYPEDEF(_IDocSiteControl, __uuidof(_IDocSiteControl));
_COM_SMARTPTR_TYPEDEF(_DDocSiteControl, __uuidof(_DDocSiteControl));
_COM_SMARTPTR_TYPEDEF(_DDocSiteControlEvents, __uuidof(_DDocSiteControlEvents));
_COM_SMARTPTR_TYPEDEF(OlkControl, __uuidof(OlkControl));
_COM_SMARTPTR_TYPEDEF(_OlkTextBox, __uuidof(_OlkTextBox));
_COM_SMARTPTR_TYPEDEF(OlkTextBoxEvents, __uuidof(OlkTextBoxEvents));
_COM_SMARTPTR_TYPEDEF(_OlkLabel, __uuidof(_OlkLabel));
_COM_SMARTPTR_TYPEDEF(OlkLabelEvents, __uuidof(OlkLabelEvents));
_COM_SMARTPTR_TYPEDEF(_OlkCommandButton, __uuidof(_OlkCommandButton));
_COM_SMARTPTR_TYPEDEF(OlkCommandButtonEvents, __uuidof(OlkCommandButtonEvents));
_COM_SMARTPTR_TYPEDEF(_OlkCheckBox, __uuidof(_OlkCheckBox));
_COM_SMARTPTR_TYPEDEF(OlkCheckBoxEvents, __uuidof(OlkCheckBoxEvents));
_COM_SMARTPTR_TYPEDEF(_OlkOptionButton, __uuidof(_OlkOptionButton));
_COM_SMARTPTR_TYPEDEF(OlkOptionButtonEvents, __uuidof(OlkOptionButtonEvents));
_COM_SMARTPTR_TYPEDEF(_OlkComboBox, __uuidof(_OlkComboBox));
_COM_SMARTPTR_TYPEDEF(OlkComboBoxEvents, __uuidof(OlkComboBoxEvents));
_COM_SMARTPTR_TYPEDEF(_OlkListBox, __uuidof(_OlkListBox));
_COM_SMARTPTR_TYPEDEF(OlkListBoxEvents, __uuidof(OlkListBoxEvents));
_COM_SMARTPTR_TYPEDEF(_OlkInfoBar, __uuidof(_OlkInfoBar));
_COM_SMARTPTR_TYPEDEF(OlkInfoBarEvents, __uuidof(OlkInfoBarEvents));
_COM_SMARTPTR_TYPEDEF(_OlkContactPhoto, __uuidof(_OlkContactPhoto));
_COM_SMARTPTR_TYPEDEF(OlkContactPhotoEvents, __uuidof(OlkContactPhotoEvents));
_COM_SMARTPTR_TYPEDEF(_OlkBusinessCardControl, __uuidof(_OlkBusinessCardControl));
_COM_SMARTPTR_TYPEDEF(OlkBusinessCardControlEvents, __uuidof(OlkBusinessCardControlEvents));
_COM_SMARTPTR_TYPEDEF(_OlkPageControl, __uuidof(_OlkPageControl));
_COM_SMARTPTR_TYPEDEF(OlkPageControlEvents, __uuidof(OlkPageControlEvents));
_COM_SMARTPTR_TYPEDEF(_OlkDateControl, __uuidof(_OlkDateControl));
_COM_SMARTPTR_TYPEDEF(OlkDateControlEvents, __uuidof(OlkDateControlEvents));
_COM_SMARTPTR_TYPEDEF(_OlkTimeControl, __uuidof(_OlkTimeControl));
_COM_SMARTPTR_TYPEDEF(OlkTimeControlEvents, __uuidof(OlkTimeControlEvents));
_COM_SMARTPTR_TYPEDEF(_OlkCategory, __uuidof(_OlkCategory));
_COM_SMARTPTR_TYPEDEF(OlkCategoryEvents, __uuidof(OlkCategoryEvents));
_COM_SMARTPTR_TYPEDEF(_OlkFrameHeader, __uuidof(_OlkFrameHeader));
_COM_SMARTPTR_TYPEDEF(OlkFrameHeaderEvents, __uuidof(OlkFrameHeaderEvents));
_COM_SMARTPTR_TYPEDEF(_OlkSenderPhoto, __uuidof(_OlkSenderPhoto));
_COM_SMARTPTR_TYPEDEF(OlkSenderPhotoEvents, __uuidof(OlkSenderPhotoEvents));
_COM_SMARTPTR_TYPEDEF(ItemEvents, __uuidof(ItemEvents));
_COM_SMARTPTR_TYPEDEF(ItemEvents_10, __uuidof(ItemEvents_10));
_COM_SMARTPTR_TYPEDEF(SyncObjectEvents, __uuidof(SyncObjectEvents));
_COM_SMARTPTR_TYPEDEF(StoresEvents_12, __uuidof(StoresEvents_12));
_COM_SMARTPTR_TYPEDEF(ExplorerEvents, __uuidof(ExplorerEvents));
_COM_SMARTPTR_TYPEDEF(ExplorerEvents_10, __uuidof(ExplorerEvents_10));
_COM_SMARTPTR_TYPEDEF(InspectorEvents, __uuidof(InspectorEvents));
_COM_SMARTPTR_TYPEDEF(InspectorEvents_10, __uuidof(InspectorEvents_10));
_COM_SMARTPTR_TYPEDEF(_OlkTimeZoneControl, __uuidof(_OlkTimeZoneControl));
_COM_SMARTPTR_TYPEDEF(OlkTimeZoneControlEvents, __uuidof(OlkTimeZoneControlEvents));
_COM_SMARTPTR_TYPEDEF(ApplicationEvents, __uuidof(ApplicationEvents));
_COM_SMARTPTR_TYPEDEF(ExplorersEvents, __uuidof(ExplorersEvents));
_COM_SMARTPTR_TYPEDEF(FoldersEvents, __uuidof(FoldersEvents));
_COM_SMARTPTR_TYPEDEF(InspectorsEvents, __uuidof(InspectorsEvents));
_COM_SMARTPTR_TYPEDEF(ItemsEvents, __uuidof(ItemsEvents));
_COM_SMARTPTR_TYPEDEF(NameSpaceEvents, __uuidof(NameSpaceEvents));
_COM_SMARTPTR_TYPEDEF(OutlookBarGroupsEvents, __uuidof(OutlookBarGroupsEvents));
_COM_SMARTPTR_TYPEDEF(OutlookBarPaneEvents, __uuidof(OutlookBarPaneEvents));
_COM_SMARTPTR_TYPEDEF(OutlookBarShortcutsEvents, __uuidof(OutlookBarShortcutsEvents));
_COM_SMARTPTR_TYPEDEF(PropertyPage, __uuidof(PropertyPage));
_COM_SMARTPTR_TYPEDEF(ApplicationEvents_10, __uuidof(ApplicationEvents_10));
_COM_SMARTPTR_TYPEDEF(ApplicationEvents_11, __uuidof(ApplicationEvents_11));
_COM_SMARTPTR_TYPEDEF(MAPIFolderEvents_12, __uuidof(MAPIFolderEvents_12));
_COM_SMARTPTR_TYPEDEF(ResultsEvents, __uuidof(ResultsEvents));
_COM_SMARTPTR_TYPEDEF(_ViewsEvents, __uuidof(_ViewsEvents));
_COM_SMARTPTR_TYPEDEF(ReminderCollectionEvents, __uuidof(ReminderCollectionEvents));
_COM_SMARTPTR_TYPEDEF(FormRegionEvents, __uuidof(FormRegionEvents));
_COM_SMARTPTR_TYPEDEF(NavigationPaneEvents_12, __uuidof(NavigationPaneEvents_12));
_COM_SMARTPTR_TYPEDEF(NavigationGroupsEvents_12, __uuidof(NavigationGroupsEvents_12));
_COM_SMARTPTR_TYPEDEF(_FormRegionStartup, __uuidof(_FormRegionStartup));
_COM_SMARTPTR_TYPEDEF(_TimeZone, __uuidof(_TimeZone));
_COM_SMARTPTR_TYPEDEF(_Application, __uuidof(_Application));
_COM_SMARTPTR_TYPEDEF(_NameSpace, __uuidof(_NameSpace));
_COM_SMARTPTR_TYPEDEF(Action, __uuidof(Action));
_COM_SMARTPTR_TYPEDEF(Actions, __uuidof(Actions));
_COM_SMARTPTR_TYPEDEF(Attachment, __uuidof(Attachment));
_COM_SMARTPTR_TYPEDEF(Attachments, __uuidof(Attachments));
_COM_SMARTPTR_TYPEDEF(_PropertyAccessor, __uuidof(_PropertyAccessor));
_COM_SMARTPTR_TYPEDEF(FormDescription, __uuidof(FormDescription));
_COM_SMARTPTR_TYPEDEF(_Inspector, __uuidof(_Inspector));
_COM_SMARTPTR_TYPEDEF(UserProperty, __uuidof(UserProperty));
_COM_SMARTPTR_TYPEDEF(UserProperties, __uuidof(UserProperties));
_COM_SMARTPTR_TYPEDEF(_Items, __uuidof(_Items));
_COM_SMARTPTR_TYPEDEF(Panes, __uuidof(Panes));
_COM_SMARTPTR_TYPEDEF(Selection, __uuidof(Selection));
_COM_SMARTPTR_TYPEDEF(_NavigationPane, __uuidof(_NavigationPane));
_COM_SMARTPTR_TYPEDEF(_NavigationModule, __uuidof(_NavigationModule));
_COM_SMARTPTR_TYPEDEF(_NavigationModules, __uuidof(_NavigationModules));
_COM_SMARTPTR_TYPEDEF(View, __uuidof(View));
_COM_SMARTPTR_TYPEDEF(_Views, __uuidof(_Views));
_COM_SMARTPTR_TYPEDEF(_Rule, __uuidof(_Rule));
_COM_SMARTPTR_TYPEDEF(_Rules, __uuidof(_Rules));
_COM_SMARTPTR_TYPEDEF(_RuleAction, __uuidof(_RuleAction));
_COM_SMARTPTR_TYPEDEF(_RuleActions, __uuidof(_RuleActions));
_COM_SMARTPTR_TYPEDEF(_AssignToCategoryRuleAction, __uuidof(_AssignToCategoryRuleAction));
_COM_SMARTPTR_TYPEDEF(_PlaySoundRuleAction, __uuidof(_PlaySoundRuleAction));
_COM_SMARTPTR_TYPEDEF(_MarkAsTaskRuleAction, __uuidof(_MarkAsTaskRuleAction));
_COM_SMARTPTR_TYPEDEF(_NewItemAlertRuleAction, __uuidof(_NewItemAlertRuleAction));
_COM_SMARTPTR_TYPEDEF(_RuleCondition, __uuidof(_RuleCondition));
_COM_SMARTPTR_TYPEDEF(_RuleConditions, __uuidof(_RuleConditions));
_COM_SMARTPTR_TYPEDEF(_ImportanceRuleCondition, __uuidof(_ImportanceRuleCondition));
_COM_SMARTPTR_TYPEDEF(_AccountRuleCondition, __uuidof(_AccountRuleCondition));
_COM_SMARTPTR_TYPEDEF(_Account, __uuidof(_Account));
_COM_SMARTPTR_TYPEDEF(_TextRuleCondition, __uuidof(_TextRuleCondition));
_COM_SMARTPTR_TYPEDEF(_CategoryRuleCondition, __uuidof(_CategoryRuleCondition));
_COM_SMARTPTR_TYPEDEF(_FormNameRuleCondition, __uuidof(_FormNameRuleCondition));
_COM_SMARTPTR_TYPEDEF(_AddressRuleCondition, __uuidof(_AddressRuleCondition));
_COM_SMARTPTR_TYPEDEF(_FromRssFeedRuleCondition, __uuidof(_FromRssFeedRuleCondition));
_COM_SMARTPTR_TYPEDEF(_StorageItem, __uuidof(_StorageItem));
_COM_SMARTPTR_TYPEDEF(_Table, __uuidof(_Table));
_COM_SMARTPTR_TYPEDEF(_Row, __uuidof(_Row));
_COM_SMARTPTR_TYPEDEF(_Column, __uuidof(_Column));
_COM_SMARTPTR_TYPEDEF(_Columns, __uuidof(_Columns));
_COM_SMARTPTR_TYPEDEF(Link, __uuidof(Link));
_COM_SMARTPTR_TYPEDEF(Links, __uuidof(Links));
_COM_SMARTPTR_TYPEDEF(ItemProperty, __uuidof(ItemProperty));
_COM_SMARTPTR_TYPEDEF(ItemProperties, __uuidof(ItemProperties));
_COM_SMARTPTR_TYPEDEF(Conflict, __uuidof(Conflict));
_COM_SMARTPTR_TYPEDEF(Conflicts, __uuidof(Conflicts));
_COM_SMARTPTR_TYPEDEF(_UserDefinedProperty, __uuidof(_UserDefinedProperty));
_COM_SMARTPTR_TYPEDEF(_UserDefinedProperties, __uuidof(_UserDefinedProperties));
_COM_SMARTPTR_TYPEDEF(_SyncObject, __uuidof(_SyncObject));
_COM_SMARTPTR_TYPEDEF(SyncObjects, __uuidof(SyncObjects));
_COM_SMARTPTR_TYPEDEF(_Accounts, __uuidof(_Accounts));
_COM_SMARTPTR_TYPEDEF(_Category, __uuidof(_Category));
_COM_SMARTPTR_TYPEDEF(_Categories, __uuidof(_Categories));
_COM_SMARTPTR_TYPEDEF(_Inspectors, __uuidof(_Inspectors));
_COM_SMARTPTR_TYPEDEF(_Results, __uuidof(_Results));
_COM_SMARTPTR_TYPEDEF(_Reminder, __uuidof(_Reminder));
_COM_SMARTPTR_TYPEDEF(_Reminders, __uuidof(_Reminders));
_COM_SMARTPTR_TYPEDEF(_TimeZones, __uuidof(_TimeZones));
_COM_SMARTPTR_TYPEDEF(PropertyPages, __uuidof(PropertyPages));
_COM_SMARTPTR_TYPEDEF(Exception, __uuidof(Exception));
_COM_SMARTPTR_TYPEDEF(Exceptions, __uuidof(Exceptions));
_COM_SMARTPTR_TYPEDEF(RecurrencePattern, __uuidof(RecurrencePattern));
_COM_SMARTPTR_TYPEDEF(OutlookBarShortcut, __uuidof(OutlookBarShortcut));
_COM_SMARTPTR_TYPEDEF(_OutlookBarShortcuts, __uuidof(_OutlookBarShortcuts));
_COM_SMARTPTR_TYPEDEF(OutlookBarGroup, __uuidof(OutlookBarGroup));
_COM_SMARTPTR_TYPEDEF(_OutlookBarGroups, __uuidof(_OutlookBarGroups));
_COM_SMARTPTR_TYPEDEF(OutlookBarStorage, __uuidof(OutlookBarStorage));
_COM_SMARTPTR_TYPEDEF(_OutlookBarPane, __uuidof(_OutlookBarPane));
_COM_SMARTPTR_TYPEDEF(PropertyPageSite, __uuidof(PropertyPageSite));
_COM_SMARTPTR_TYPEDEF(Pages, __uuidof(Pages));
_COM_SMARTPTR_TYPEDEF(_AttachmentSelection, __uuidof(_AttachmentSelection));
_COM_SMARTPTR_TYPEDEF(_FormRegion, __uuidof(_FormRegion));
_COM_SMARTPTR_TYPEDEF(_TableView, __uuidof(_TableView));
_COM_SMARTPTR_TYPEDEF(_ViewField, __uuidof(_ViewField));
_COM_SMARTPTR_TYPEDEF(_ViewFields, __uuidof(_ViewFields));
_COM_SMARTPTR_TYPEDEF(_ColumnFormat, __uuidof(_ColumnFormat));
_COM_SMARTPTR_TYPEDEF(_OrderField, __uuidof(_OrderField));
_COM_SMARTPTR_TYPEDEF(_OrderFields, __uuidof(_OrderFields));
_COM_SMARTPTR_TYPEDEF(_ViewFont, __uuidof(_ViewFont));
_COM_SMARTPTR_TYPEDEF(_AutoFormatRules, __uuidof(_AutoFormatRules));
_COM_SMARTPTR_TYPEDEF(_AutoFormatRule, __uuidof(_AutoFormatRule));
_COM_SMARTPTR_TYPEDEF(_IconView, __uuidof(_IconView));
_COM_SMARTPTR_TYPEDEF(_CardView, __uuidof(_CardView));
_COM_SMARTPTR_TYPEDEF(_CalendarView, __uuidof(_CalendarView));
_COM_SMARTPTR_TYPEDEF(_TimelineView, __uuidof(_TimelineView));
_COM_SMARTPTR_TYPEDEF(_NavigationGroup, __uuidof(_NavigationGroup));
_COM_SMARTPTR_TYPEDEF(_NavigationGroups, __uuidof(_NavigationGroups));
_COM_SMARTPTR_TYPEDEF(_MailModule, __uuidof(_MailModule));
_COM_SMARTPTR_TYPEDEF(_CalendarModule, __uuidof(_CalendarModule));
_COM_SMARTPTR_TYPEDEF(_ContactsModule, __uuidof(_ContactsModule));
_COM_SMARTPTR_TYPEDEF(_TasksModule, __uuidof(_TasksModule));
_COM_SMARTPTR_TYPEDEF(_JournalModule, __uuidof(_JournalModule));
_COM_SMARTPTR_TYPEDEF(_NotesModule, __uuidof(_NotesModule));
_COM_SMARTPTR_TYPEDEF(_BusinessCardView, __uuidof(_BusinessCardView));
_COM_SMARTPTR_TYPEDEF(Recipient, __uuidof(Recipient));
_COM_SMARTPTR_TYPEDEF(Recipients, __uuidof(Recipients));
_COM_SMARTPTR_TYPEDEF(_SendRuleAction, __uuidof(_SendRuleAction));
_COM_SMARTPTR_TYPEDEF(_ToOrFromRuleCondition, __uuidof(_ToOrFromRuleCondition));
_COM_SMARTPTR_TYPEDEF(AddressEntry, __uuidof(AddressEntry));
_COM_SMARTPTR_TYPEDEF(AddressEntries, __uuidof(AddressEntries));
_COM_SMARTPTR_TYPEDEF(_ContactItem, __uuidof(_ContactItem));
_COM_SMARTPTR_TYPEDEF(_ExchangeUser, __uuidof(_ExchangeUser));
_COM_SMARTPTR_TYPEDEF(_ExchangeDistributionList, __uuidof(_ExchangeDistributionList));
_COM_SMARTPTR_TYPEDEF(MAPIFolder, __uuidof(MAPIFolder));
_COM_SMARTPTR_TYPEDEF(_Folders, __uuidof(_Folders));
_COM_SMARTPTR_TYPEDEF(_Explorer, __uuidof(_Explorer));
_COM_SMARTPTR_TYPEDEF(_Store, __uuidof(_Store));
_COM_SMARTPTR_TYPEDEF(_MoveOrCopyRuleAction, __uuidof(_MoveOrCopyRuleAction));
_COM_SMARTPTR_TYPEDEF(AddressList, __uuidof(AddressList));
_COM_SMARTPTR_TYPEDEF(_SenderInAddressListRuleCondition, __uuidof(_SenderInAddressListRuleCondition));
_COM_SMARTPTR_TYPEDEF(_CalendarSharing, __uuidof(_CalendarSharing));
_COM_SMARTPTR_TYPEDEF(_MailItem, __uuidof(_MailItem));
_COM_SMARTPTR_TYPEDEF(AddressLists, __uuidof(AddressLists));
_COM_SMARTPTR_TYPEDEF(_Stores, __uuidof(_Stores));
_COM_SMARTPTR_TYPEDEF(_SelectNamesDialog, __uuidof(_SelectNamesDialog));
_COM_SMARTPTR_TYPEDEF(_SharingItem, __uuidof(_SharingItem));
_COM_SMARTPTR_TYPEDEF(_Explorers, __uuidof(_Explorers));
_COM_SMARTPTR_TYPEDEF(Search, __uuidof(Search));
_COM_SMARTPTR_TYPEDEF(_AppointmentItem, __uuidof(_AppointmentItem));
_COM_SMARTPTR_TYPEDEF(_MeetingItem, __uuidof(_MeetingItem));
_COM_SMARTPTR_TYPEDEF(_DistListItem, __uuidof(_DistListItem));
_COM_SMARTPTR_TYPEDEF(_DocumentItem, __uuidof(_DocumentItem));
_COM_SMARTPTR_TYPEDEF(_JournalItem, __uuidof(_JournalItem));
_COM_SMARTPTR_TYPEDEF(_NoteItem, __uuidof(_NoteItem));
_COM_SMARTPTR_TYPEDEF(_PostItem, __uuidof(_PostItem));
_COM_SMARTPTR_TYPEDEF(_RemoteItem, __uuidof(_RemoteItem));
_COM_SMARTPTR_TYPEDEF(_ReportItem, __uuidof(_ReportItem));
_COM_SMARTPTR_TYPEDEF(_TaskItem, __uuidof(_TaskItem));
_COM_SMARTPTR_TYPEDEF(_TaskRequestAcceptItem, __uuidof(_TaskRequestAcceptItem));
_COM_SMARTPTR_TYPEDEF(_TaskRequestDeclineItem, __uuidof(_TaskRequestDeclineItem));
_COM_SMARTPTR_TYPEDEF(_TaskRequestItem, __uuidof(_TaskRequestItem));
_COM_SMARTPTR_TYPEDEF(_TaskRequestUpdateItem, __uuidof(_TaskRequestUpdateItem));
_COM_SMARTPTR_TYPEDEF(_NavigationFolder, __uuidof(_NavigationFolder));
_COM_SMARTPTR_TYPEDEF(_NavigationFolders, __uuidof(_NavigationFolders));

//
// Type library items
//

struct __declspec(uuid("d87e7e17-6897-11ce-a6c0-00aa00608faa"))
_DRecipientControlEvents : IDispatch
{};

struct __declspec(uuid("0006f023-0000-0000-c000-000000000046"))
_RecipientControl;
    // [ default ] dispinterface _DRecipientControl
    // [ default, source ] dispinterface _DRecipientControlEvents

struct __declspec(uuid("43507dd0-811d-11ce-b565-00aa00608faa"))
_IDocSiteControl : IDispatch
{
    //
    // Property data
    //

    __declspec(property(get=GetSuppressAttachments,put=PutSuppressAttachments))
    char SuppressAttachments;
    __declspec(property(get=GetReadOnly,put=PutReadOnly))
    char ReadOnly;

    //
    // Wrapper methods for error-handling
    //

    char GetReadOnly ( );
    void PutReadOnly (
        char ReadOnly );
    char GetSuppressAttachments ( );
    void PutSuppressAttachments (
        char SuppressAttachments );

    //
    // Raw methods provided by interface
    //

      virtual HRESULT __stdcall get_ReadOnly (
        /*[out,retval]*/ char * ReadOnly ) = 0;
      virtual HRESULT __stdcall put_ReadOnly (
        /*[in]*/ char ReadOnly ) = 0;
      virtual HRESULT __stdcall get_SuppressAttachments (
        /*[out,retval]*/ char * SuppressAttachments ) = 0;
      virtual HRESULT __stdcall put_SuppressAttachments (
        /*[in]*/ char SuppressAttachments ) = 0;
};

struct __declspec(uuid("0006f026-0000-0000-c000-000000000046"))
_DDocSiteControl : IDispatch
{
    //
    // Property data
    //

    __declspec(property(get=GetSuppressAttachments,put=PutSuppressAttachments))
    char SuppressAttachments;
    __declspec(property(get=GetReadOnly,put=PutReadOnly))
    char ReadOnly;

    //
    // Wrapper methods for error-handling
    //

    // Methods:
    char GetReadOnly ( );
    void PutReadOnly (
        char _arg1 );
    char GetSuppressAttachments ( );
    void PutSuppressAttachments (
        char _arg1 );
};

struct __declspec(uuid("50bb9b50-811d-11ce-b565-00aa00608faa"))
_DDocSiteControlEvents : IDispatch
{};

struct __declspec(uuid("0006f024-0000-0000-c000-000000000046"))
_DocSiteControl;
    // [ default ] dispinterface _DDocSiteControl
    // [ default, source ] dispinterface _DDocSiteControlEvents

enum __declspec(uuid("1ba5fcb6-05e9-4721-979d-3ce2c9084479"))
OlMousePointer
{
    olMousePointerDefault = 0,
    olMousePointerArrow = 1,
    olMousePointerCross = 2,
    olMousePointerIBeam = 3,
    olMousePointerSizeNESW = 6,
    olMousePointerSizeNS = 7,
    olMousePointerSizeNWSE = 8,
    olMousePointerSizeWE = 9,
    olMousePointerUpArrow = 10,
    olMousePointerHourGlass = 11,
    olMousePointerNoDrop = 12,
    olMousePointerAppStarting = 13,
    olMousePointerHelp = 14,
    olMousePointerSizeAll = 15,
    olMousePointerCustom = 99
};

enum __declspec(uuid("d1788312-edee-4673-ae33-b3c3bc0753ea"))
OlScrollBars
{
    olScrollBarsNone = 0,
    olScrollBarsHorizontal = 1,
    olScrollBarsVertical = 2,
    olScrollBarsBoth = 3
};

enum __declspec(uuid("aa3e840f-7079-4aa4-91a9-6f3546da6a95"))
OlBackStyle
{
    olBackStyleTransparent = 0,
    olBackStyleOpaque = 1
};

enum __declspec(uuid("0b17239e-c724-444b-acb1-579893197a3c"))
OlBorderStyle
{
    olBorderStyleNone = 0,
    olBorderStyleSingle = 1
};

enum __declspec(uuid("7e29fd73-540b-4f03-a890-53c6b0ae7dd1"))
OlEnterFieldBehavior
{
    olEnterFieldBehaviorSelectAll = 0,
    olEnterFieldBehaviorRecallSelection = 1
};

enum __declspec(uuid("25b06f72-02c5-4af8-8366-28c2c65cb035"))
OlDragBehavior
{
    olDragBehaviorDisabled = 0,
    olDragBehaviorEnabled = 1
};

enum __declspec(uuid("382f8459-84ad-4ceb-8705-a8f8e2dc15e1"))
OlComboBoxStyle
{
    olComboBoxStyleCombo = 0,
    olComboBoxStyleList = 2
};

enum __declspec(uuid("35a805a1-009f-4307-a6d9-3654104862b5"))
OlAlignment
{
    olAlignmentLeft = 0,
    olAlignmentRight = 1
};

enum __declspec(uuid("5a0fb768-aaf4-4e8c-9c57-89aca8b6249f"))
OlMultiSelect
{
    olMultiSelectSingle = 0,
    olMultiSelectMulti = 1,
    olMultiSelectExtended = 2
};

enum __declspec(uuid("03fadfe8-2527-46c3-9ccd-dbbbcd05156b"))
OlTextAlign
{
    olTextAlignLeft = 1,
    olTextAlignCenter = 2,
    olTextAlignRight = 3
};

enum __declspec(uuid("73628d00-b812-419f-8212-3d62079e22db"))
OlMatchEntry
{
    olMatchEntryFirstLetter = 0,
    olMatchEntryComplete = 1,
    olMatchEntryNone = 2
};

enum __declspec(uuid("35d15973-23ed-4504-866b-c0b5c937a058"))
OlPageType
{
    olPageTypePlanner = 0,
    olPageTypeTracker = 1
};

enum __declspec(uuid("4fd8b708-e730-49b5-bdd3-b807f48e5b83"))
OlTimeStyle
{
    olTimeStyleTimeOnly = 0,
    olTimeStyleTimeDuration = 1,
    olTimeStyleShortDuration = 4
};

enum __declspec(uuid("b791ac59-1e79-4007-a6a1-4a4fe62f8d03"))
OlShiftState
{
    olShiftStateShiftMask = 1,
    olShiftStateCtrlMask = 2,
    olShiftStateAltMask = 4
};

enum __declspec(uuid("0dcb2f52-1065-4fd4-bc45-1c11e6d1b279"))
OlMouseButton
{
    olMouseButtonLeft = 1,
    olMouseButtonRight = 2,
    olMouseButtonMiddle = 4
};

enum __declspec(uuid("0beab7d8-3ba8-4960-899b-096fce2ee60f"))
OlPictureAlignment
{
    olPictureAlignmentLeft = 0,
    olPictureAlignmentTop = 1
};

enum __declspec(uuid("ba5537f4-8941-4e26-871e-0d53d647b9fc"))
OlAppointmentTimeField
{
    olAppointmentTimeFieldNone = 1,
    olAppointmentTimeFieldStart = 2,
    olAppointmentTimeFieldEnd = 3
};

enum __declspec(uuid("634ee3c4-6bcb-4bd6-8997-30c9db02e223"))
OlHorizontalLayout
{
    olHorizontalLayoutAlignLeft = 0,
    olHorizontalLayoutAlignCenter = 1,
    olHorizontalLayoutAlignRight = 2,
    olHorizontalLayoutGrow = 3
};

enum __declspec(uuid("ea33f29d-6159-4e76-8a14-bceaa808fa91"))
OlVerticalLayout
{
    olVerticalLayoutAlignTop = 0,
    olVerticalLayoutAlignMiddle = 1,
    olVerticalLayoutAlignBottom = 2,
    olVerticalLayoutGrow = 3
};

struct __declspec(uuid("00067366-0000-0000-c000-000000000046"))
OlkControl : IDispatch
{
    //
    // Property data
    //

    __declspec(property(get=GetItemProperty,put=PutItemProperty))
    _bstr_t ItemProperty;
    __declspec(property(get=GetFormat,put=PutFormat))
    long Format;
    __declspec(property(get=GetControlProperty,put=PutControlProperty))
    _bstr_t ControlProperty;
    __declspec(property(get=GetPossibleValues,put=PutPossibleValues))
    _bstr_t PossibleValues;
    __declspec(property(get=GetEnableAutoLayout,put=PutEnableAutoLayout))
    VARIANT_BOOL EnableAutoLayout;
    __declspec(property(get=GetMinimumWidth,put=PutMinimumWidth))
    long MinimumWidth;
    __declspec(property(get=GetMinimumHeight,put=PutMinimumHeight))
    long MinimumHeight;
    __declspec(property(get=GetHorizontalLayout,put=PutHorizontalLayout))
    enum OlHorizontalLayout HorizontalLayout;
    __declspec(property(get=GetVerticalLayout,put=PutVerticalLayout))
    enum OlVerticalLayout VerticalLayout;

    //
    // Wrapper methods for error-handling
    //

    _bstr_t GetItemProperty ( );
    void PutItemProperty (
        _bstr_t ItemProperty );
    _bstr_t GetControlProperty ( );
    void PutControlProperty (
        _bstr_t ControlProperty );
    _bstr_t GetPossibleValues ( );
    void PutPossibleValues (
        _bstr_t PossibleValues );
    long GetFormat ( );
    void PutFormat (
        long Format );
    VARIANT_BOOL GetEnableAutoLayout ( );
    void PutEnableAutoLayout (
        VARIANT_BOOL EnableAutoLayout );
    long GetMinimumWidth ( );
    void PutMinimumWidth (
        long MinimumWidth );
    long GetMinimumHeight ( );
    void PutMinimumHeight (
        long MinimumHeight );
    enum OlHorizontalLayout GetHorizontalLayout ( );
    void PutHorizontalLayout (
        enum OlHorizontalLayout HorizontalLayout );
    enum OlVerticalLayout GetVerticalLayout ( );
    void PutVerticalLayout (
        enum OlVerticalLayout VerticalLayout );

    //
    // Raw methods provided by interface
    //

      virtual HRESULT __stdcall get_ItemProperty (
        /*[out,retval]*/ BSTR * ItemProperty ) = 0;
      virtual HRESULT __stdcall put_ItemProperty (
        /*[in]*/ BSTR ItemProperty ) = 0;
      virtual HRESULT __stdcall get_ControlProperty (
        /*[out,retval]*/ BSTR * ControlProperty ) = 0;
      virtual HRESULT __stdcall put_ControlProperty (
        /*[in]*/ BSTR ControlProperty ) = 0;
      virtual HRESULT __stdcall get_PossibleValues (
        /*[out,retval]*/ BSTR * PossibleValues ) = 0;
      virtual HRESULT __stdcall put_PossibleValues (
        /*[in]*/ BSTR PossibleValues ) = 0;
      virtual HRESULT __stdcall get_Format (
        /*[out,retval]*/ long * Format ) = 0;
      virtual HRESULT __stdcall put_Format (
        /*[in]*/ long Format ) = 0;
      virtual HRESULT __stdcall get_EnableAutoLayout (
        /*[out,retval]*/ VARIANT_BOOL * EnableAutoLayout ) = 0;
      virtual HRESULT __stdcall put_EnableAutoLayout (
        /*[in]*/ VARIANT_BOOL EnableAutoLayout ) = 0;
      virtual HRESULT __stdcall get_MinimumWidth (
        /*[out,retval]*/ long * MinimumWidth ) = 0;
      virtual HRESULT __stdcall put_MinimumWidth (
        /*[in]*/ long MinimumWidth ) = 0;
      virtual HRESULT __stdcall get_MinimumHeight (
        /*[out,retval]*/ long * MinimumHeight ) = 0;
      virtual HRESULT __stdcall put_MinimumHeight (
        /*[in]*/ long MinimumHeight ) = 0;
      virtual HRESULT __stdcall get_HorizontalLayout (
        /*[out,retval]*/ enum OlHorizontalLayout * HorizontalLayout ) = 0;
      virtual HRESULT __stdcall put_HorizontalLayout (
        /*[in]*/ enum OlHorizontalLayout HorizontalLayout ) = 0;
      virtual HRESULT __stdcall get_VerticalLayout (
        /*[out,retval]*/ enum OlVerticalLayout * VerticalLayout ) = 0;
      virtual HRESULT __stdcall put_VerticalLayout (
        /*[in]*/ enum OlVerticalLayout VerticalLayout ) = 0;
};

struct __declspec(uuid("000672da-0000-0000-c000-000000000046"))
_OlkTextBox : IDispatch
{
    //
    // Property data
    //

    __declspec(property(get=GetValue,put=PutValue))
    _variant_t Value;
    __declspec(property(get=GetIntegralHeight,put=PutIntegralHeight))
    VARIANT_BOOL IntegralHeight;
    __declspec(property(get=GetSelLength,put=PutSelLength))
    long SelLength;
    __declspec(property(get=GetSelStart,put=PutSelStart))
    long SelStart;
    __declspec(property(get=GetLocked,put=PutLocked))
    VARIANT_BOOL Locked;
    __declspec(property(get=GetTabKeyBehavior,put=PutTabKeyBehavior))
    VARIANT_BOOL TabKeyBehavior;
    __declspec(property(get=GetEnterKeyBehavior,put=PutEnterKeyBehavior))
    VARIANT_BOOL EnterKeyBehavior;
    __declspec(property(get=GetSelText))
    _bstr_t SelText;
    __declspec(property(get=GetMultiLine,put=PutMultiLine))
    VARIANT_BOOL MultiLine;
    __declspec(property(get=GetWordWrap,put=PutWordWrap))
    VARIANT_BOOL WordWrap;
    __declspec(property(get=GetScrollbars,put=PutScrollbars))
    enum OlScrollBars Scrollbars;
    __declspec(property(get=GetPasswordChar,put=PutPasswordChar))
    _bstr_t PasswordChar;
    __declspec(property(get=GetMaxLength,put=PutMaxLength))
    long MaxLength;
    __declspec(property(get=GetEnableRichText,put=PutEnableRichText))
    VARIANT_BOOL EnableRichText;
    __declspec(property(get=GetHideSelection,put=PutHideSelection))
    VARIANT_BOOL HideSelection;
    __declspec(property(get=GetMouseIcon,put=PutMouseIcon))
    PicturePtr MouseIcon;
    __declspec(property(get=GetMousePointer,put=PutMousePointer))
    enum OlMousePointer MousePointer;
    __declspec(property(get=GetAutoTab,put=PutAutoTab))
    VARIANT_BOOL AutoTab;
    __declspec(property(get=GetAutoWordSelect,put=PutAutoWordSelect))
    VARIANT_BOOL AutoWordSelect;
    __declspec(property(get=GetText,put=PutText))
    _bstr_t Text;
    __declspec(property(get=GetSelectionMargin,put=PutSelectionMargin))
    VARIANT_BOOL SelectionMargin;
    __declspec(property(get=GetEnabled,put=PutEnabled))
    VARIANT_BOOL Enabled;
    __declspec(property(get=GetForeColor,put=PutForeColor))
    OLE_COLOR ForeColor;
    __declspec(property(get=GetEnterFieldBehavior,put=PutEnterFieldBehavior))
    enum OlEnterFieldBehavior EnterFieldBehavior;
    __declspec(property(get=GetDragBehavior,put=PutDragBehavior))
    enum OlDragBehavior DragBehavior;
    __declspec(property(get=GetTextAlign,put=PutTextAlign))
    enum OlTextAlign TextAlign;
    __declspec(property(get=GetFont))
    FontPtr Font;
    __declspec(property(get=GetBorderStyle,put=PutBorderStyle))
    enum OlBorderStyle BorderStyle;
    __declspec(property(get=GetBackColor,put=PutBackColor))
    OLE_COLOR BackColor;
    __declspec(property(get=GetAutoSize,put=PutAutoSize))
    VARIANT_BOOL AutoSize;

    //
    // Wrapper methods for error-handling
    //

    VARIANT_BOOL GetAutoSize ( );
    void PutAutoSize (
        VARIANT_BOOL AutoSize );
    VARIANT_BOOL GetAutoTab ( );
    void PutAutoTab (
        VARIANT_BOOL AutoTab );
    VARIANT_BOOL GetAutoWordSelect ( );
    void PutAutoWordSelect (
        VARIANT_BOOL AutoWordSelect );
    OLE_COLOR GetBackColor ( );
    void PutBackColor (
        OLE_COLOR BackColor );
    enum OlBorderStyle GetBorderStyle ( );
    void PutBorderStyle (
        enum OlBorderStyle BorderStyle );
    enum OlDragBehavior GetDragBehavior ( );
    void PutDragBehavior (
        enum OlDragBehavior DragBehavior );
    VARIANT_BOOL GetEnabled ( );
    void PutEnabled (
        VARIANT_BOOL Enabled );
    enum OlEnterFieldBehavior GetEnterFieldBehavior ( );
    void PutEnterFieldBehavior (
        enum OlEnterFieldBehavior EnterFieldBehavior );
    VARIANT_BOOL GetEnterKeyBehavior ( );
    void PutEnterKeyBehavior (
        VARIANT_BOOL EnterKeyBehavior );
    FontPtr GetFont ( );
    OLE_COLOR GetForeColor ( );
    void PutForeColor (
        OLE_COLOR ForeColor );
    VARIANT_BOOL GetHideSelection ( );
    void PutHideSelection (
        VARIANT_BOOL HideSelection );
    VARIANT_BOOL GetIntegralHeight ( );
    void PutIntegralHeight (
        VARIANT_BOOL IntegralHeight );
    VARIANT_BOOL GetLocked ( );
    void PutLocked (
        VARIANT_BOOL Locked );
    long GetMaxLength ( );
    void PutMaxLength (
        long MaxLength );
    PicturePtr GetMouseIcon ( );
    void PutMouseIcon (
        struct Picture * MouseIcon );
    enum OlMousePointer GetMousePointer ( );
    void PutMousePointer (
        enum OlMousePointer MousePointer );
    VARIANT_BOOL GetMultiLine ( );
    void PutMultiLine (
        VARIANT_BOOL MultiLine );
    _bstr_t GetPasswordChar ( );
    void PutPasswordChar (
        _bstr_t PasswordChar );
    enum OlScrollBars GetScrollbars ( );
    void PutScrollbars (
        enum OlScrollBars Scrollbars );
    VARIANT_BOOL GetSelectionMargin ( );
    void PutSelectionMargin (
        VARIANT_BOOL SelectionMargin );
    VARIANT_BOOL GetTabKeyBehavior ( );
    void PutTabKeyBehavior (
        VARIANT_BOOL TabKeyBehavior );
    _bstr_t GetText ( );
    void PutText (
        _bstr_t Text );
    enum OlTextAlign GetTextAlign ( );
    void PutTextAlign (
        enum OlTextAlign TextAlign );
    _variant_t GetValue ( );
    void PutValue (
        const _variant_t & Value );
    VARIANT_BOOL GetWordWrap ( );
    void PutWordWrap (
        VARIANT_BOOL WordWrap );
    long GetSelStart ( );
    void PutSelStart (
        long SelStart );
    long GetSelLength ( );
    void PutSelLength (
        long SelLength );
    _bstr_t GetSelText ( );
    HRESULT Cut ( );
    HRESULT Copy ( );
    HRESULT Paste ( );
    HRESULT Clear ( );
    VARIANT_BOOL GetEnableRichText ( );
    void PutEnableRichText (
        VARIANT_BOOL EnableRichText );

    //
    // Raw methods provided by interface
    //

      virtual HRESULT __stdcall get_AutoSize (
        /*[out,retval]*/ VARIANT_BOOL * AutoSize ) = 0;
      virtual HRESULT __stdcall put_AutoSize (
        /*[in]*/ VARIANT_BOOL AutoSize ) = 0;
      virtual HRESULT __stdcall get_AutoTab (
        /*[out,retval]*/ VARIANT_BOOL * AutoTab ) = 0;
      virtual HRESULT __stdcall put_AutoTab (
        /*[in]*/ VARIANT_BOOL AutoTab ) = 0;
      virtual HRESULT __stdcall get_AutoWordSelect (
        /*[out,retval]*/ VARIANT_BOOL * AutoWordSelect ) = 0;
      virtual HRESULT __stdcall put_AutoWordSelect (
        /*[in]*/ VARIANT_BOOL AutoWordSelect ) = 0;
      virtual HRESULT __stdcall get_BackColor (
        /*[out,retval]*/ OLE_COLOR * BackColor ) = 0;
      virtual HRESULT __stdcall put_BackColor (
        /*[in]*/ OLE_COLOR BackColor ) = 0;
      virtual HRESULT __stdcall get_BorderStyle (
        /*[out,retval]*/ enum OlBorderStyle * BorderStyle ) = 0;
      virtual HRESULT __stdcall put_BorderStyle (
        /*[in]*/ enum OlBorderStyle BorderStyle ) = 0;
      virtual HRESULT __stdcall get_DragBehavior (
        /*[out,retval]*/ enum OlDragBehavior * DragBehavior ) = 0;
      virtual HRESULT __stdcall put_DragBehavior (
        /*[in]*/ enum OlDragBehavior DragBehavior ) = 0;
      virtual HRESULT __stdcall get_Enabled (
        /*[out,retval]*/ VARIANT_BOOL * Enabled ) = 0;
      virtual HRESULT __stdcall put_Enabled (
        /*[in]*/ VARIANT_BOOL Enabled ) = 0;
      virtual HRESULT __stdcall get_EnterFieldBehavior (
        /*[out,retval]*/ enum OlEnterFieldBehavior * EnterFieldBehavior ) = 0;
      virtual HRESULT __stdcall put_EnterFieldBehavior (
        /*[in]*/ enum OlEnterFieldBehavior EnterFieldBehavior ) = 0;
      virtual HRESULT __stdcall get_EnterKeyBehavior (
        /*[out,retval]*/ VARIANT_BOOL * EnterKeyBehavior ) = 0;
      virtual HRESULT __stdcall put_EnterKeyBehavior (
        /*[in]*/ VARIANT_BOOL EnterKeyBehavior ) = 0;
      virtual HRESULT __stdcall get_Font (
        /*[out,retval]*/ struct Font * * Font ) = 0;
      virtual HRESULT __stdcall get_ForeColor (
        /*[out,retval]*/ OLE_COLOR * ForeColor ) = 0;
      virtual HRESULT __stdcall put_ForeColor (
        /*[in]*/ OLE_COLOR ForeColor ) = 0;
      virtual HRESULT __stdcall get_HideSelection (
        /*[out,retval]*/ VARIANT_BOOL * HideSelection ) = 0;
      virtual HRESULT __stdcall put_HideSelection (
        /*[in]*/ VARIANT_BOOL HideSelection ) = 0;
      virtual HRESULT __stdcall get_IntegralHeight (
        /*[out,retval]*/ VARIANT_BOOL * IntegralHeight ) = 0;
      virtual HRESULT __stdcall put_IntegralHeight (
        /*[in]*/ VARIANT_BOOL IntegralHeight ) = 0;
      virtual HRESULT __stdcall get_Locked (
        /*[out,retval]*/ VARIANT_BOOL * Locked ) = 0;
      virtual HRESULT __stdcall put_Locked (
        /*[in]*/ VARIANT_BOOL Locked ) = 0;
      virtual HRESULT __stdcall get_MaxLength (
        /*[out,retval]*/ long * MaxLength ) = 0;
      virtual HRESULT __stdcall put_MaxLength (
        /*[in]*/ long MaxLength ) = 0;
      virtual HRESULT __stdcall get_MouseIcon (
        /*[out,retval]*/ struct Picture * * MouseIcon ) = 0;
      virtual HRESULT __stdcall put_MouseIcon (
        /*[in]*/ struct Picture * MouseIcon ) = 0;
      virtual HRESULT __stdcall get_MousePointer (
        /*[out,retval]*/ enum OlMousePointer * MousePointer ) = 0;
      virtual HRESULT __stdcall put_MousePointer (
        /*[in]*/ enum OlMousePointer MousePointer ) = 0;
      virtual HRESULT __stdcall get_MultiLine (
        /*[out,retval]*/ VARIANT_BOOL * MultiLine ) = 0;
      virtual HRESULT __stdcall put_MultiLine (
        /*[in]*/ VARIANT_BOOL MultiLine ) = 0;
      virtual HRESULT __stdcall get_PasswordChar (
        /*[out,retval]*/ BSTR * PasswordChar ) = 0;
      virtual HRESULT __stdcall put_PasswordChar (
        /*[in]*/ BSTR PasswordChar ) = 0;
      virtual HRESULT __stdcall get_Scrollbars (
        /*[out,retval]*/ enum OlScrollBars * Scrollbars ) = 0;
      virtual HRESULT __stdcall put_Scrollbars (
        /*[in]*/ enum OlScrollBars Scrollbars ) = 0;
      virtual HRESULT __stdcall get_SelectionMargin (
        /*[out,retval]*/ VARIANT_BOOL * SelectionMargin ) = 0;
      virtual HRESULT __stdcall put_SelectionMargin (
        /*[in]*/ VARIANT_BOOL SelectionMargin ) = 0;
      virtual HRESULT __stdcall get_TabKeyBehavior (
        /*[out,retval]*/ VARIANT_BOOL * TabKeyBehavior ) = 0;
      virtual HRESULT __stdcall put_TabKeyBehavior (
        /*[in]*/ VARIANT_BOOL TabKeyBehavior ) = 0;
      virtual HRESULT __stdcall get_Text (
        /*[out,retval]*/ BSTR * Text ) = 0;
      virtual HRESULT __stdcall put_Text (
        /*[in]*/ BSTR Text ) = 0;
      virtual HRESULT __stdcall get_TextAlign (
        /*[out,retval]*/ enum OlTextAlign * TextAlign ) = 0;
      virtual HRESULT __stdcall put_TextAlign (
        /*[in]*/ enum OlTextAlign TextAlign ) = 0;
      virtual HRESULT __stdcall get_Value (
        /*[out,retval]*/ VARIANT * Value ) = 0;
      virtual HRESULT __stdcall put_Value (
        /*[in]*/ VARIANT Value ) = 0;
      virtual HRESULT __stdcall get_WordWrap (
        /*[out,retval]*/ VARIANT_BOOL * WordWrap ) = 0;
      virtual HRESULT __stdcall put_WordWrap (
        /*[in]*/ VARIANT_BOOL WordWrap ) = 0;
      virtual HRESULT __stdcall get_SelStart (
        /*[out,retval]*/ long * SelStart ) = 0;
      virtual HRESULT __stdcall put_SelStart (
        /*[in]*/ long SelStart ) = 0;
      virtual HRESULT __stdcall get_SelLength (
        /*[out,retval]*/ long * SelLength ) = 0;
      virtual HRESULT __stdcall put_SelLength (
        /*[in]*/ long SelLength ) = 0;
      virtual HRESULT __stdcall get_SelText (
        /*[out,retval]*/ BSTR * SelText ) = 0;
      virtual HRESULT __stdcall raw_Cut ( ) = 0;
      virtual HRESULT __stdcall raw_Copy ( ) = 0;
      virtual HRESULT __stdcall raw_Paste ( ) = 0;
      virtual HRESULT __stdcall raw_Clear ( ) = 0;
      virtual HRESULT __stdcall get_EnableRichText (
        /*[out,retval]*/ VARIANT_BOOL * EnableRichText ) = 0;
      virtual HRESULT __stdcall put_EnableRichText (
        /*[in]*/ VARIANT_BOOL EnableRichText ) = 0;
};

struct __declspec(uuid("000672e6-0000-0000-c000-000000000046"))
OlkTextBoxEvents : IDispatch
{
    //
    // Wrapper methods for error-handling
    //

    // Methods:
    HRESULT Click ( );
    HRESULT DoubleClick ( );
    HRESULT MouseDown (
        enum OlMouseButton Button,
        enum OlShiftState Shift,
        OLE_XPOS_CONTAINER X,
        OLE_YPOS_CONTAINER Y );
    HRESULT MouseMove (
        enum OlMouseButton Button,
        enum OlShiftState Shift,
        OLE_XPOS_CONTAINER X,
        OLE_YPOS_CONTAINER Y );
    HRESULT MouseUp (
        enum OlMouseButton Button,
        enum OlShiftState Shift,
        OLE_XPOS_CONTAINER X,
        OLE_YPOS_CONTAINER Y );
    HRESULT Enter ( );
    HRESULT Exit (
        VARIANT_BOOL * Cancel );
    HRESULT KeyDown (
        long * KeyCode,
        enum OlShiftState Shift );
    HRESULT KeyPress (
        long * KeyAscii );
    HRESULT KeyUp (
        long * KeyCode,
        enum OlShiftState Shift );
    HRESULT Change ( );
    HRESULT AfterUpdate ( );
    HRESULT BeforeUpdate (
        VARIANT_BOOL * Cancel );
};

struct __declspec(uuid("0006f068-0000-0000-c000-000000000046"))
OlkTextBox;
    // [ default ] interface _OlkTextBox
    // [ default, source ] dispinterface OlkTextBoxEvents

struct __declspec(uuid("000672d9-0000-0000-c000-000000000046"))
_OlkLabel : IDispatch
{
    //
    // Property data
    //

    __declspec(property(get=GetFont))
    FontPtr Font;
    __declspec(property(get=GetAccelerator,put=PutAccelerator))
    _bstr_t Accelerator;
    __declspec(property(get=GetValue,put=PutValue))
    _variant_t Value;
    __declspec(property(get=GetBorderStyle,put=PutBorderStyle))
    enum OlBorderStyle BorderStyle;
    __declspec(property(get=GetWordWrap,put=PutWordWrap))
    VARIANT_BOOL WordWrap;
    __declspec(property(get=GetBackStyle,put=PutBackStyle))
    enum OlBackStyle BackStyle;
    __declspec(property(get=GetBackColor,put=PutBackColor))
    OLE_COLOR BackColor;
    __declspec(property(get=GetAutoSize,put=PutAutoSize))
    VARIANT_BOOL AutoSize;
    __declspec(property(get=GetTextAlign,put=PutTextAlign))
    enum OlTextAlign TextAlign;
    __declspec(property(get=GetMouseIcon,put=PutMouseIcon))
    PicturePtr MouseIcon;
    __declspec(property(get=GetMousePointer,put=PutMousePointer))
    enum OlMousePointer MousePointer;
    __declspec(property(get=GetUseHeaderColor,put=PutUseHeaderColor))
    VARIANT_BOOL UseHeaderColor;
    __declspec(property(get=GetCaption,put=PutCaption))
    _bstr_t Caption;
    __declspec(property(get=GetEnabled,put=PutEnabled))
    VARIANT_BOOL Enabled;
    __declspec(property(get=GetForeColor,put=PutForeColor))
    OLE_COLOR ForeColor;

    //
    // Wrapper methods for error-handling
    //

    _bstr_t GetAccelerator ( );
    void PutAccelerator (
        _bstr_t AcceleratorChar );
    VARIANT_BOOL GetAutoSize ( );
    void PutAutoSize (
        VARIANT_BOOL AutoSize );
    OLE_COLOR GetBackColor ( );
    void PutBackColor (
        OLE_COLOR BackColor );
    enum OlBackStyle GetBackStyle ( );
    void PutBackStyle (
        enum OlBackStyle BackStyle );
    enum OlBorderStyle GetBorderStyle ( );
    void PutBorderStyle (
        enum OlBorderStyle BorderStyle );
    _bstr_t GetCaption ( );
    void PutCaption (
        _bstr_t Caption );
    VARIANT_BOOL GetEnabled ( );
    void PutEnabled (
        VARIANT_BOOL Enabled );
    FontPtr GetFont ( );
    OLE_COLOR GetForeColor ( );
    void PutForeColor (
        OLE_COLOR ForeColor );
    PicturePtr GetMouseIcon ( );
    void PutMouseIcon (
        struct Picture * MouseIcon );
    enum OlMousePointer GetMousePointer ( );
    void PutMousePointer (
        enum OlMousePointer MousePointer );
    enum OlTextAlign GetTextAlign ( );
    void PutTextAlign (
        enum OlTextAlign TextAlign );
    VARIANT_BOOL GetWordWrap ( );
    void PutWordWrap (
        VARIANT_BOOL WordWrap );
    _variant_t GetValue ( );
    void PutValue (
        const _variant_t & Value );
    VARIANT_BOOL GetUseHeaderColor ( );
    void PutUseHeaderColor (
        VARIANT_BOOL UseHeaderColor );

    //
    // Raw methods provided by interface
    //

      virtual HRESULT __stdcall get_Accelerator (
        /*[out,retval]*/ BSTR * AcceleratorChar ) = 0;
      virtual HRESULT __stdcall put_Accelerator (
        /*[in]*/ BSTR AcceleratorChar ) = 0;
      virtual HRESULT __stdcall get_AutoSize (
        /*[out,retval]*/ VARIANT_BOOL * AutoSize ) = 0;
      virtual HRESULT __stdcall put_AutoSize (
        /*[in]*/ VARIANT_BOOL AutoSize ) = 0;
      virtual HRESULT __stdcall get_BackColor (
        /*[out,retval]*/ OLE_COLOR * BackColor ) = 0;
      virtual HRESULT __stdcall put_BackColor (
        /*[in]*/ OLE_COLOR BackColor ) = 0;
      virtual HRESULT __stdcall get_BackStyle (
        /*[out,retval]*/ enum OlBackStyle * BackStyle ) = 0;
      virtual HRESULT __stdcall put_BackStyle (
        /*[in]*/ enum OlBackStyle BackStyle ) = 0;
      virtual HRESULT __stdcall get_BorderStyle (
        /*[out,retval]*/ enum OlBorderStyle * BorderStyle ) = 0;
      virtual HRESULT __stdcall put_BorderStyle (
        /*[in]*/ enum OlBorderStyle BorderStyle ) = 0;
      virtual HRESULT __stdcall get_Caption (
        /*[out,retval]*/ BSTR * Caption ) = 0;
      virtual HRESULT __stdcall put_Caption (
        /*[in]*/ BSTR Caption ) = 0;
      virtual HRESULT __stdcall get_Enabled (
        /*[out,retval]*/ VARIANT_BOOL * Enabled ) = 0;
      virtual HRESULT __stdcall put_Enabled (
        /*[in]*/ VARIANT_BOOL Enabled ) = 0;
      virtual HRESULT __stdcall get_Font (
        /*[out,retval]*/ struct Font * * Font ) = 0;
      virtual HRESULT __stdcall get_ForeColor (
        /*[out,retval]*/ OLE_COLOR * ForeColor ) = 0;
      virtual HRESULT __stdcall put_ForeColor (
        /*[in]*/ OLE_COLOR ForeColor ) = 0;
      virtual HRESULT __stdcall get_MouseIcon (
        /*[out,retval]*/ struct Picture * * MouseIcon ) = 0;
      virtual HRESULT __stdcall put_MouseIcon (
        /*[in]*/ struct Picture * MouseIcon ) = 0;
      virtual HRESULT __stdcall get_MousePointer (
        /*[out,retval]*/ enum OlMousePointer * MousePointer ) = 0;
      virtual HRESULT __stdcall put_MousePointer (
        /*[in]*/ enum OlMousePointer MousePointer ) = 0;
      virtual HRESULT __stdcall get_TextAlign (
        /*[out,retval]*/ enum OlTextAlign * TextAlign ) = 0;
      virtual HRESULT __stdcall put_TextAlign (
        /*[in]*/ enum OlTextAlign TextAlign ) = 0;
      virtual HRESULT __stdcall get_WordWrap (
        /*[out,retval]*/ VARIANT_BOOL * WordWrap ) = 0;
      virtual HRESULT __stdcall put_WordWrap (
        /*[in]*/ VARIANT_BOOL WordWrap ) = 0;
      virtual HRESULT __stdcall get_Value (
        /*[out,retval]*/ VARIANT * Value ) = 0;
      virtual HRESULT __stdcall put_Value (
        /*[in]*/ VARIANT Value ) = 0;
      virtual HRESULT __stdcall get_UseHeaderColor (
        /*[out,retval]*/ VARIANT_BOOL * UseHeaderColor ) = 0;
      virtual HRESULT __stdcall put_UseHeaderColor (
        /*[in]*/ VARIANT_BOOL UseHeaderColor ) = 0;
};

struct __declspec(uuid("000672e5-0000-0000-c000-000000000046"))
OlkLabelEvents : IDispatch
{
    //
    // Wrapper methods for error-handling
    //

    // Methods:
    HRESULT Click ( );
    HRESULT DoubleClick ( );
    HRESULT MouseDown (
        enum OlMouseButton Button,
        enum OlShiftState Shift,
        OLE_XPOS_CONTAINER X,
        OLE_YPOS_CONTAINER Y );
    HRESULT MouseMove (
        enum OlMouseButton Button,
        enum OlShiftState Shift,
        OLE_XPOS_CONTAINER X,
        OLE_YPOS_CONTAINER Y );
    HRESULT MouseUp (
        enum OlMouseButton Button,
        enum OlShiftState Shift,
        OLE_XPOS_CONTAINER X,
        OLE_YPOS_CONTAINER Y );
};

struct __declspec(uuid("0006f067-0000-0000-c000-000000000046"))
OlkLabel;
    // [ default ] interface _OlkLabel
    // [ default, source ] dispinterface OlkLabelEvents

struct __declspec(uuid("000672db-0000-0000-c000-000000000046"))
_OlkCommandButton : IDispatch
{
    //
    // Property data
    //

    __declspec(property(get=GetFont))
    FontPtr Font;
    __declspec(property(get=GetAccelerator,put=PutAccelerator))
    _bstr_t Accelerator;
    __declspec(property(get=GetDisplayDropArrow,put=PutDisplayDropArrow))
    VARIANT_BOOL DisplayDropArrow;
    __declspec(property(get=GetWordWrap,put=PutWordWrap))
    VARIANT_BOOL WordWrap;
    __declspec(property(get=GetAutoSize,put=PutAutoSize))
    VARIANT_BOOL AutoSize;
    __declspec(property(get=GetTextAlign,put=PutTextAlign))
    enum OlTextAlign TextAlign;
    __declspec(property(get=GetPicture,put=PutPicture))
    PicturePtr Picture;
    __declspec(property(get=GetMouseIcon,put=PutMouseIcon))
    PicturePtr MouseIcon;
    __declspec(property(get=GetMousePointer,put=PutMousePointer))
    enum OlMousePointer MousePointer;
    __declspec(property(get=GetCaption,put=PutCaption))
    _bstr_t Caption;
    __declspec(property(get=GetPictureAlignment,put=PutPictureAlignment))
    enum OlPictureAlignment PictureAlignment;
    __declspec(property(get=GetEnabled,put=PutEnabled))
    VARIANT_BOOL Enabled;

    //
    // Wrapper methods for error-handling
    //

    _bstr_t GetAccelerator ( );
    void PutAccelerator (
        _bstr_t AcceleratorChar );
    VARIANT_BOOL GetAutoSize ( );
    void PutAutoSize (
        VARIANT_BOOL AutoSize );
    _bstr_t GetCaption ( );
    void PutCaption (
        _bstr_t Caption );
    VARIANT_BOOL GetEnabled ( );
    void PutEnabled (
        VARIANT_BOOL Enabled );
    FontPtr GetFont ( );
    PicturePtr GetMouseIcon ( );
    void PutMouseIcon (
        struct Picture * MouseIcon );
    enum OlMousePointer GetMousePointer ( );
    void PutMousePointer (
        enum OlMousePointer MousePointer );
    VARIANT_BOOL GetWordWrap ( );
    void PutWordWrap (
        VARIANT_BOOL WordWrap );
    enum OlTextAlign GetTextAlign ( );
    void PutTextAlign (
        enum OlTextAlign TextAlign );
    PicturePtr GetPicture ( );
    void PutPicture (
        struct Picture * Picture );
    enum OlPictureAlignment GetPictureAlignment ( );
    void PutPictureAlignment (
        enum OlPictureAlignment PictureAlignment );
    VARIANT_BOOL GetDisplayDropArrow ( );
    void PutDisplayDropArrow (
        VARIANT_BOOL DisplayDropArrow );

    //
    // Raw methods provided by interface
    //

      virtual HRESULT __stdcall get_Accelerator (
        /*[out,retval]*/ BSTR * AcceleratorChar ) = 0;
      virtual HRESULT __stdcall put_Accelerator (
        /*[in]*/ BSTR AcceleratorChar ) = 0;
      virtual HRESULT __stdcall get_AutoSize (
        /*[out,retval]*/ VARIANT_BOOL * AutoSize ) = 0;
      virtual HRESULT __stdcall put_AutoSize (
        /*[in]*/ VARIANT_BOOL AutoSize ) = 0;
      virtual HRESULT __stdcall get_Caption (
        /*[out,retval]*/ BSTR * Caption ) = 0;
      virtual HRESULT __stdcall put_Caption (
        /*[in]*/ BSTR Caption ) = 0;
      virtual HRESULT __stdcall get_Enabled (
        /*[out,retval]*/ VARIANT_BOOL * Enabled ) = 0;
      virtual HRESULT __stdcall put_Enabled (
        /*[in]*/ VARIANT_BOOL Enabled ) = 0;
      virtual HRESULT __stdcall get_Font (
        /*[out,retval]*/ struct Font * * Font ) = 0;
      virtual HRESULT __stdcall get_MouseIcon (
        /*[out,retval]*/ struct Picture * * MouseIcon ) = 0;
      virtual HRESULT __stdcall put_MouseIcon (
        /*[in]*/ struct Picture * MouseIcon ) = 0;
      virtual HRESULT __stdcall get_MousePointer (
        /*[out,retval]*/ enum OlMousePointer * MousePointer ) = 0;
      virtual HRESULT __stdcall put_MousePointer (
        /*[in]*/ enum OlMousePointer MousePointer ) = 0;
      virtual HRESULT __stdcall get_WordWrap (
        /*[out,retval]*/ VARIANT_BOOL * WordWrap ) = 0;
      virtual HRESULT __stdcall put_WordWrap (
        /*[in]*/ VARIANT_BOOL WordWrap ) = 0;
      virtual HRESULT __stdcall get_TextAlign (
        /*[out,retval]*/ enum OlTextAlign * TextAlign ) = 0;
      virtual HRESULT __stdcall put_TextAlign (
        /*[in]*/ enum OlTextAlign TextAlign ) = 0;
      virtual HRESULT __stdcall get_Picture (
        /*[out,retval]*/ struct Picture * * Picture ) = 0;
      virtual HRESULT __stdcall put_Picture (
        /*[in]*/ struct Picture * Picture ) = 0;
      virtual HRESULT __stdcall get_PictureAlignment (
        /*[out,retval]*/ enum OlPictureAlignment * PictureAlignment ) = 0;
      virtual HRESULT __stdcall put_PictureAlignment (
        /*[in]*/ enum OlPictureAlignment PictureAlignment ) = 0;
      virtual HRESULT __stdcall get_DisplayDropArrow (
        /*[out,retval]*/ VARIANT_BOOL * DisplayDropArrow ) = 0;
      virtual HRESULT __stdcall put_DisplayDropArrow (
        /*[in]*/ VARIANT_BOOL DisplayDropArrow ) = 0;
};

struct __declspec(uuid("000672e0-0000-0000-c000-000000000046"))
OlkCommandButtonEvents : IDispatch
{
    //
    // Wrapper methods for error-handling
    //

    // Methods:
    HRESULT Click ( );
    HRESULT DoubleClick ( );
    HRESULT MouseDown (
        enum OlMouseButton Button,
        enum OlShiftState Shift,
        OLE_XPOS_CONTAINER X,
        OLE_YPOS_CONTAINER Y );
    HRESULT MouseMove (
        enum OlMouseButton Button,
        enum OlShiftState Shift,
        OLE_XPOS_CONTAINER X,
        OLE_YPOS_CONTAINER Y );
    HRESULT MouseUp (
        enum OlMouseButton Button,
        enum OlShiftState Shift,
        OLE_XPOS_CONTAINER X,
        OLE_YPOS_CONTAINER Y );
    HRESULT Enter ( );
    HRESULT Exit (
        VARIANT_BOOL * Cancel );
    HRESULT KeyDown (
        long * KeyCode,
        enum OlShiftState Shift );
    HRESULT KeyPress (
        long * KeyAscii );
    HRESULT KeyUp (
        long * KeyCode,
        enum OlShiftState Shift );
    HRESULT AfterUpdate ( );
    HRESULT BeforeUpdate (
        VARIANT_BOOL * Cancel );
};

struct __declspec(uuid("0006f04a-0000-0000-c000-000000000046"))
OlkCommandButton;
    // [ default ] interface _OlkCommandButton
    // [ default, source ] dispinterface OlkCommandButtonEvents

struct __declspec(uuid("000672dd-0000-0000-c000-000000000046"))
_OlkCheckBox : IDispatch
{
    //
    // Property data
    //

    __declspec(property(get=GetFont))
    FontPtr Font;
    __declspec(property(get=GetAccelerator,put=PutAccelerator))
    _bstr_t Accelerator;
    __declspec(property(get=GetValue,put=PutValue))
    _variant_t Value;
    __declspec(property(get=GetAlignment,put=PutAlignment))
    enum OlAlignment Alignment;
    __declspec(property(get=GetWordWrap,put=PutWordWrap))
    VARIANT_BOOL WordWrap;
    __declspec(property(get=GetBackStyle,put=PutBackStyle))
    enum OlBackStyle BackStyle;
    __declspec(property(get=GetBackColor,put=PutBackColor))
    OLE_COLOR BackColor;
    __declspec(property(get=GetMouseIcon,put=PutMouseIcon))
    PicturePtr MouseIcon;
    __declspec(property(get=GetMousePointer,put=PutMousePointer))
    enum OlMousePointer MousePointer;
    __declspec(property(get=GetCaption,put=PutCaption))
    _bstr_t Caption;
    __declspec(property(get=GetTripleState,put=PutTripleState))
    VARIANT_BOOL TripleState;
    __declspec(property(get=GetEnabled,put=PutEnabled))
    VARIANT_BOOL Enabled;
    __declspec(property(get=GetForeColor,put=PutForeColor))
    OLE_COLOR ForeColor;

    //
    // Wrapper methods for error-handling
    //

    _bstr_t GetAccelerator ( );
    void PutAccelerator (
        _bstr_t AcceleratorChar );
    enum OlAlignment GetAlignment ( );
    void PutAlignment (
        enum OlAlignment Alignment );
    OLE_COLOR GetBackColor ( );
    void PutBackColor (
        OLE_COLOR BackColor );
    enum OlBackStyle GetBackStyle ( );
    void PutBackStyle (
        enum OlBackStyle BackStyle );
    _bstr_t GetCaption ( );
    void PutCaption (
        _bstr_t Caption );
    VARIANT_BOOL GetEnabled ( );
    void PutEnabled (
        VARIANT_BOOL Enabled );
    FontPtr GetFont ( );
    OLE_COLOR GetForeColor ( );
    void PutForeColor (
        OLE_COLOR ForeColor );
    PicturePtr GetMouseIcon ( );
    void PutMouseIcon (
        struct Picture * MouseIcon );
    enum OlMousePointer GetMousePointer ( );
    void PutMousePointer (
        enum OlMousePointer MousePointer );
    VARIANT_BOOL GetTripleState ( );
    void PutTripleState (
        VARIANT_BOOL TripleState );
    _variant_t GetValue ( );
    void PutValue (
        const _variant_t & Value );
    VARIANT_BOOL GetWordWrap ( );
    void PutWordWrap (
        VARIANT_BOOL WordWrap );

    //
    // Raw methods provided by interface
    //

      virtual HRESULT __stdcall get_Accelerator (
        /*[out,retval]*/ BSTR * AcceleratorChar ) = 0;
      virtual HRESULT __stdcall put_Accelerator (
        /*[in]*/ BSTR AcceleratorChar ) = 0;
      virtual HRESULT __stdcall get_Alignment (
        /*[out,retval]*/ enum OlAlignment * Alignment ) = 0;
      virtual HRESULT __stdcall put_Alignment (
        /*[in]*/ enum OlAlignment Alignment ) = 0;
      virtual HRESULT __stdcall get_BackColor (
        /*[out,retval]*/ OLE_COLOR * BackColor ) = 0;
      virtual HRESULT __stdcall put_BackColor (
        /*[in]*/ OLE_COLOR BackColor ) = 0;
      virtual HRESULT __stdcall get_BackStyle (
        /*[out,retval]*/ enum OlBackStyle * BackStyle ) = 0;
      virtual HRESULT __stdcall put_BackStyle (
        /*[in]*/ enum OlBackStyle BackStyle ) = 0;
      virtual HRESULT __stdcall get_Caption (
        /*[out,retval]*/ BSTR * Caption ) = 0;
      virtual HRESULT __stdcall put_Caption (
        /*[in]*/ BSTR Caption ) = 0;
      virtual HRESULT __stdcall get_Enabled (
        /*[out,retval]*/ VARIANT_BOOL * Enabled ) = 0;
      virtual HRESULT __stdcall put_Enabled (
        /*[in]*/ VARIANT_BOOL Enabled ) = 0;
      virtual HRESULT __stdcall get_Font (
        /*[out,retval]*/ struct Font * * Font ) = 0;
      virtual HRESULT __stdcall get_ForeColor (
        /*[out,retval]*/ OLE_COLOR * ForeColor ) = 0;
      virtual HRESULT __stdcall put_ForeColor (
        /*[in]*/ OLE_COLOR ForeColor ) = 0;
      virtual HRESULT __stdcall get_MouseIcon (
        /*[out,retval]*/ struct Picture * * MouseIcon ) = 0;
      virtual HRESULT __stdcall put_MouseIcon (
        /*[in]*/ struct Picture * MouseIcon ) = 0;
      virtual HRESULT __stdcall get_MousePointer (
        /*[out,retval]*/ enum OlMousePointer * MousePointer ) = 0;
      virtual HRESULT __stdcall put_MousePointer (
        /*[in]*/ enum OlMousePointer MousePointer ) = 0;
      virtual HRESULT __stdcall get_TripleState (
        /*[out,retval]*/ VARIANT_BOOL * TripleState ) = 0;
      virtual HRESULT __stdcall put_TripleState (
        /*[in]*/ VARIANT_BOOL TripleState ) = 0;
      virtual HRESULT __stdcall get_Value (
        /*[out,retval]*/ VARIANT * Value ) = 0;
      virtual HRESULT __stdcall put_Value (
        /*[in]*/ VARIANT Value ) = 0;
      virtual HRESULT __stdcall get_WordWrap (
        /*[out,retval]*/ VARIANT_BOOL * WordWrap ) = 0;
      virtual HRESULT __stdcall put_WordWrap (
        /*[in]*/ VARIANT_BOOL WordWrap ) = 0;
};

struct __declspec(uuid("000672e2-0000-0000-c000-000000000046"))
OlkCheckBoxEvents : IDispatch
{
    //
    // Wrapper methods for error-handling
    //

    // Methods:
    HRESULT Click ( );
    HRESULT DoubleClick ( );
    HRESULT MouseDown (
        enum OlMouseButton Button,
        enum OlShiftState Shift,
        OLE_XPOS_CONTAINER X,
        OLE_YPOS_CONTAINER Y );
    HRESULT MouseMove (
        enum OlMouseButton Button,
        enum OlShiftState Shift,
        OLE_XPOS_CONTAINER X,
        OLE_YPOS_CONTAINER Y );
    HRESULT MouseUp (
        enum OlMouseButton Button,
        enum OlShiftState Shift,
        OLE_XPOS_CONTAINER X,
        OLE_YPOS_CONTAINER Y );
    HRESULT Enter ( );
    HRESULT Exit (
        VARIANT_BOOL * Cancel );
    HRESULT KeyDown (
        long * KeyCode,
        enum OlShiftState Shift );
    HRESULT KeyPress (
        long * KeyAscii );
    HRESULT KeyUp (
        long * KeyCode,
        enum OlShiftState Shift );
    HRESULT Change ( );
    HRESULT AfterUpdate ( );
    HRESULT BeforeUpdate (
        VARIANT_BOOL * Cancel );
};

struct __declspec(uuid("0006f04c-0000-0000-c000-000000000046"))
OlkCheckBox;
    // [ default ] interface _OlkCheckBox
    // [ default, source ] dispinterface OlkCheckBoxEvents

struct __declspec(uuid("000672dc-0000-0000-c000-000000000046"))
_OlkOptionButton : IDispatch
{
    //
    // Property data
    //

    __declspec(property(get=GetFont))
    FontPtr Font;
    __declspec(property(get=GetAccelerator,put=PutAccelerator))
    _bstr_t Accelerator;
    __declspec(property(get=GetValue,put=PutValue))
    _variant_t Value;
    __declspec(property(get=GetGroupName,put=PutGroupName))
    _bstr_t GroupName;
    __declspec(property(get=GetAlignment,put=PutAlignment))
    enum OlAlignment Alignment;
    __declspec(property(get=GetWordWrap,put=PutWordWrap))
    VARIANT_BOOL WordWrap;
    __declspec(property(get=GetBackStyle,put=PutBackStyle))
    enum OlBackStyle BackStyle;
    __declspec(property(get=GetBackColor,put=PutBackColor))
    OLE_COLOR BackColor;
    __declspec(property(get=GetMouseIcon,put=PutMouseIcon))
    PicturePtr MouseIcon;
    __declspec(property(get=GetMousePointer,put=PutMousePointer))
    enum OlMousePointer MousePointer;
    __declspec(property(get=GetCaption,put=PutCaption))
    _bstr_t Caption;
    __declspec(property(get=GetEnabled,put=PutEnabled))
    VARIANT_BOOL Enabled;
    __declspec(property(get=GetForeColor,put=PutForeColor))
    OLE_COLOR ForeColor;

    //
    // Wrapper methods for error-handling
    //

    _bstr_t GetAccelerator ( );
    void PutAccelerator (
        _bstr_t AcceleratorChar );
    enum OlAlignment GetAlignment ( );
    void PutAlignment (
        enum OlAlignment Alignment );
    OLE_COLOR GetBackColor ( );
    void PutBackColor (
        OLE_COLOR BackColor );
    enum OlBackStyle GetBackStyle ( );
    void PutBackStyle (
        enum OlBackStyle BackStyle );
    _bstr_t GetCaption ( );
    void PutCaption (
        _bstr_t Caption );
    VARIANT_BOOL GetEnabled ( );
    void PutEnabled (
        VARIANT_BOOL Enabled );
    FontPtr GetFont ( );
    OLE_COLOR GetForeColor ( );
    void PutForeColor (
        OLE_COLOR ForeColor );
    _bstr_t GetGroupName ( );
    void PutGroupName (
        _bstr_t GroupName );
    PicturePtr GetMouseIcon ( );
    void PutMouseIcon (
        struct Picture * MouseIcon );
    enum OlMousePointer GetMousePointer ( );
    void PutMousePointer (
        enum OlMousePointer MousePointer );
    _variant_t GetValue ( );
    void PutValue (
        const _variant_t & Value );
    VARIANT_BOOL GetWordWrap ( );
    void PutWordWrap (
        VARIANT_BOOL WordWrap );

    //
    // Raw methods provided by interface
    //

      virtual HRESULT __stdcall get_Accelerator (
        /*[out,retval]*/ BSTR * AcceleratorChar ) = 0;
      virtual HRESULT __stdcall put_Accelerator (
        /*[in]*/ BSTR AcceleratorChar ) = 0;
      virtual HRESULT __stdcall get_Alignment (
        /*[out,retval]*/ enum OlAlignment * Alignment ) = 0;
      virtual HRESULT __stdcall put_Alignment (
        /*[in]*/ enum OlAlignment Alignment ) = 0;
      virtual HRESULT __stdcall get_BackColor (
        /*[out,retval]*/ OLE_COLOR * BackColor ) = 0;
      virtual HRESULT __stdcall put_BackColor (
        /*[in]*/ OLE_COLOR BackColor ) = 0;
      virtual HRESULT __stdcall get_BackStyle (
        /*[out,retval]*/ enum OlBackStyle * BackStyle ) = 0;
      virtual HRESULT __stdcall put_BackStyle (
        /*[in]*/ enum OlBackStyle BackStyle ) = 0;
      virtual HRESULT __stdcall get_Caption (
        /*[out,retval]*/ BSTR * Caption ) = 0;
      virtual HRESULT __stdcall put_Caption (
        /*[in]*/ BSTR Caption ) = 0;
      virtual HRESULT __stdcall get_Enabled (
        /*[out,retval]*/ VARIANT_BOOL * Enabled ) = 0;
      virtual HRESULT __stdcall put_Enabled (
        /*[in]*/ VARIANT_BOOL Enabled ) = 0;
      virtual HRESULT __stdcall get_Font (
        /*[out,retval]*/ struct Font * * Font ) = 0;
      virtual HRESULT __stdcall get_ForeColor (
        /*[out,retval]*/ OLE_COLOR * ForeColor ) = 0;
      virtual HRESULT __stdcall put_ForeColor (
        /*[in]*/ OLE_COLOR ForeColor ) = 0;
      virtual HRESULT __stdcall get_GroupName (
        /*[out,retval]*/ BSTR * GroupName ) = 0;
      virtual HRESULT __stdcall put_GroupName (
        /*[in]*/ BSTR GroupName ) = 0;
      virtual HRESULT __stdcall get_MouseIcon (
        /*[out,retval]*/ struct Picture * * MouseIcon ) = 0;
      virtual HRESULT __stdcall put_MouseIcon (
        /*[in]*/ struct Picture * MouseIcon ) = 0;
      virtual HRESULT __stdcall get_MousePointer (
        /*[out,retval]*/ enum OlMousePointer * MousePointer ) = 0;
      virtual HRESULT __stdcall put_MousePointer (
        /*[in]*/ enum OlMousePointer MousePointer ) = 0;
      virtual HRESULT __stdcall get_Value (
        /*[out,retval]*/ VARIANT * Value ) = 0;
      virtual HRESULT __stdcall put_Value (
        /*[in]*/ VARIANT Value ) = 0;
      virtual HRESULT __stdcall get_WordWrap (
        /*[out,retval]*/ VARIANT_BOOL * WordWrap ) = 0;
      virtual HRESULT __stdcall put_WordWrap (
        /*[in]*/ VARIANT_BOOL WordWrap ) = 0;
};

struct __declspec(uuid("000672e1-0000-0000-c000-000000000046"))
OlkOptionButtonEvents : IDispatch
{
    //
    // Wrapper methods for error-handling
    //

    // Methods:
    HRESULT Click ( );
    HRESULT DoubleClick ( );
    HRESULT MouseDown (
        enum OlMouseButton Button,
        enum OlShiftState Shift,
        OLE_XPOS_CONTAINER X,
        OLE_YPOS_CONTAINER Y );
    HRESULT MouseMove (
        enum OlMouseButton Button,
        enum OlShiftState Shift,
        OLE_XPOS_CONTAINER X,
        OLE_YPOS_CONTAINER Y );
    HRESULT MouseUp (
        enum OlMouseButton Button,
        enum OlShiftState Shift,
        OLE_XPOS_CONTAINER X,
        OLE_YPOS_CONTAINER Y );
    HRESULT Enter ( );
    HRESULT Exit (
        VARIANT_BOOL * Cancel );
    HRESULT KeyDown (
        long * KeyCode,
        enum OlShiftState Shift );
    HRESULT KeyPress (
        long * KeyAscii );
    HRESULT KeyUp (
        long * KeyCode,
        enum OlShiftState Shift );
    HRESULT Change ( );
    HRESULT AfterUpdate ( );
    HRESULT BeforeUpdate (
        VARIANT_BOOL * Cancel );
};

struct __declspec(uuid("0006f04b-0000-0000-c000-000000000046"))
OlkOptionButton;
    // [ default ] interface _OlkOptionButton
    // [ default, source ] dispinterface OlkOptionButtonEvents

struct __declspec(uuid("000672de-0000-0000-c000-000000000046"))
_OlkComboBox : IDispatch
{
    //
    // Property data
    //

    __declspec(property(get=GetValue,put=PutValue))
    _variant_t Value;
    __declspec(property(get=GetBorderStyle,put=PutBorderStyle))
    enum OlBorderStyle BorderStyle;
    __declspec(property(get=GetStyle,put=PutStyle))
    enum OlComboBoxStyle Style;
    __declspec(property(get=GetBackColor,put=PutBackColor))
    OLE_COLOR BackColor;
    __declspec(property(get=GetEnterFieldBehavior,put=PutEnterFieldBehavior))
    enum OlEnterFieldBehavior EnterFieldBehavior;
    __declspec(property(get=GetDragBehavior,put=PutDragBehavior))
    enum OlDragBehavior DragBehavior;
    __declspec(property(get=GetAutoSize,put=PutAutoSize))
    VARIANT_BOOL AutoSize;
    __declspec(property(get=GetSelectionMargin,put=PutSelectionMargin))
    VARIANT_BOOL SelectionMargin;
    __declspec(property(get=GetSelStart,put=PutSelStart))
    long SelStart;
    __declspec(property(get=GetSelLength,put=PutSelLength))
    long SelLength;
    __declspec(property(get=GetLocked,put=PutLocked))
    VARIANT_BOOL Locked;
    __declspec(property(get=GetSelText))
    _bstr_t SelText;
    __declspec(property(get=GetMaxLength,put=PutMaxLength))
    long MaxLength;
    __declspec(property(get=GetTextAlign,put=PutTextAlign))
    enum OlTextAlign TextAlign;
    __declspec(property(get=GetListCount))
    long ListCount;
    __declspec(property(get=GetListIndex,put=PutListIndex))
    long ListIndex;
    __declspec(property(get=GetMouseIcon,put=PutMouseIcon))
    PicturePtr MouseIcon;
    __declspec(property(get=GetMousePointer,put=PutMousePointer))
    enum OlMousePointer MousePointer;
    __declspec(property(get=GetHideSelection,put=PutHideSelection))
    VARIANT_BOOL HideSelection;
    __declspec(property(get=GetText,put=PutText))
    _bstr_t Text;
    __declspec(property(get=GetEnabled,put=PutEnabled))
    VARIANT_BOOL Enabled;
    __declspec(property(get=GetForeColor,put=PutForeColor))
    OLE_COLOR ForeColor;
    __declspec(property(get=GetFont))
    FontPtr Font;
    __declspec(property(get=GetTopIndex,put=PutTopIndex))
    long TopIndex;
    __declspec(property(get=GetAutoTab,put=PutAutoTab))
    VARIANT_BOOL AutoTab;
    __declspec(property(get=GetAutoWordSelect,put=PutAutoWordSelect))
    VARIANT_BOOL AutoWordSelect;

    //
    // Wrapper methods for error-handling
    //

    VARIANT_BOOL GetAutoSize ( );
    void PutAutoSize (
        VARIANT_BOOL AutoSize );
    VARIANT_BOOL GetAutoTab ( );
    void PutAutoTab (
        VARIANT_BOOL AutoTab );
    VARIANT_BOOL GetAutoWordSelect ( );
    void PutAutoWordSelect (
        VARIANT_BOOL AutoWordSelect );
    OLE_COLOR GetBackColor ( );
    void PutBackColor (
        OLE_COLOR BackColor );
    enum OlBorderStyle GetBorderStyle ( );
    void PutBorderStyle (
        enum OlBorderStyle BorderStyle );
    enum OlDragBehavior GetDragBehavior ( );
    void PutDragBehavior (
        enum OlDragBehavior DragBehavior );
    VARIANT_BOOL GetEnabled ( );
    void PutEnabled (
        VARIANT_BOOL Enabled );
    enum OlEnterFieldBehavior GetEnterFieldBehavior ( );
    void PutEnterFieldBehavior (
        enum OlEnterFieldBehavior EnterFieldBehavior );
    FontPtr GetFont ( );
    OLE_COLOR GetForeColor ( );
    void PutForeColor (
        OLE_COLOR ForeColor );
    VARIANT_BOOL GetHideSelection ( );
    void PutHideSelection (
        VARIANT_BOOL HideSelection );
    VARIANT_BOOL GetLocked ( );
    void PutLocked (
        VARIANT_BOOL Locked );
    long GetMaxLength ( );
    void PutMaxLength (
        long MaxLength );
    PicturePtr GetMouseIcon ( );
    void PutMouseIcon (
        struct Picture * MouseIcon );
    enum OlMousePointer GetMousePointer ( );
    void PutMousePointer (
        enum OlMousePointer MousePointer );
    VARIANT_BOOL GetSelectionMargin ( );
    void PutSelectionMargin (
        VARIANT_BOOL SelectionMargin );
    enum OlComboBoxStyle GetStyle ( );
    void PutStyle (
        enum OlComboBoxStyle Style );
    _bstr_t GetText ( );
    void PutText (
        _bstr_t Text );
    enum OlTextAlign GetTextAlign ( );
    void PutTextAlign (
        enum OlTextAlign TextAlign );
    long GetTopIndex ( );
    void PutTopIndex (
        long TopIndex );
    _variant_t GetValue ( );
    void PutValue (
        const _variant_t & Value );
    long GetListIndex ( );
    void PutListIndex (
        long ListIndex );
    long GetListCount ( );
    long GetSelStart ( );
    void PutSelStart (
        long SelStart );
    long GetSelLength ( );
    void PutSelLength (
        long SelLength );
    _bstr_t GetSelText ( );
    _bstr_t GetItem (
        long Index );
    HRESULT SetItem (
        long Index,
        _bstr_t Item );
    HRESULT Cut ( );
    HRESULT Copy ( );
    HRESULT Paste ( );
    HRESULT Clear ( );
    HRESULT AddItem (
        _bstr_t ItemText,
        const _variant_t & Index = vtMissing );
    HRESULT RemoveItem (
        long Index );
    HRESULT DropDown ( );

    //
    // Raw methods provided by interface
    //

      virtual HRESULT __stdcall get_AutoSize (
        /*[out,retval]*/ VARIANT_BOOL * AutoSize ) = 0;
      virtual HRESULT __stdcall put_AutoSize (
        /*[in]*/ VARIANT_BOOL AutoSize ) = 0;
      virtual HRESULT __stdcall get_AutoTab (
        /*[out,retval]*/ VARIANT_BOOL * AutoTab ) = 0;
      virtual HRESULT __stdcall put_AutoTab (
        /*[in]*/ VARIANT_BOOL AutoTab ) = 0;
      virtual HRESULT __stdcall get_AutoWordSelect (
        /*[out,retval]*/ VARIANT_BOOL * AutoWordSelect ) = 0;
      virtual HRESULT __stdcall put_AutoWordSelect (
        /*[in]*/ VARIANT_BOOL AutoWordSelect ) = 0;
      virtual HRESULT __stdcall get_BackColor (
        /*[out,retval]*/ OLE_COLOR * BackColor ) = 0;
      virtual HRESULT __stdcall put_BackColor (
        /*[in]*/ OLE_COLOR BackColor ) = 0;
      virtual HRESULT __stdcall get_BorderStyle (
        /*[out,retval]*/ enum OlBorderStyle * BorderStyle ) = 0;
      virtual HRESULT __stdcall put_BorderStyle (
        /*[in]*/ enum OlBorderStyle BorderStyle ) = 0;
      virtual HRESULT __stdcall get_DragBehavior (
        /*[out,retval]*/ enum OlDragBehavior * DragBehavior ) = 0;
      virtual HRESULT __stdcall put_DragBehavior (
        /*[in]*/ enum OlDragBehavior DragBehavior ) = 0;
      virtual HRESULT __stdcall get_Enabled (
        /*[out,retval]*/ VARIANT_BOOL * Enabled ) = 0;
      virtual HRESULT __stdcall put_Enabled (
        /*[in]*/ VARIANT_BOOL Enabled ) = 0;
      virtual HRESULT __stdcall get_EnterFieldBehavior (
        /*[out,retval]*/ enum OlEnterFieldBehavior * EnterFieldBehavior ) = 0;
      virtual HRESULT __stdcall put_EnterFieldBehavior (
        /*[in]*/ enum OlEnterFieldBehavior EnterFieldBehavior ) = 0;
      virtual HRESULT __stdcall get_Font (
        /*[out,retval]*/ struct Font * * Font ) = 0;
      virtual HRESULT __stdcall get_ForeColor (
        /*[out,retval]*/ OLE_COLOR * ForeColor ) = 0;
      virtual HRESULT __stdcall put_ForeColor (
        /*[in]*/ OLE_COLOR ForeColor ) = 0;
      virtual HRESULT __stdcall get_HideSelection (
        /*[out,retval]*/ VARIANT_BOOL * HideSelection ) = 0;
      virtual HRESULT __stdcall put_HideSelection (
        /*[in]*/ VARIANT_BOOL HideSelection ) = 0;
      virtual HRESULT __stdcall get_Locked (
        /*[out,retval]*/ VARIANT_BOOL * Locked ) = 0;
      virtual HRESULT __stdcall put_Locked (
        /*[in]*/ VARIANT_BOOL Locked ) = 0;
      virtual HRESULT __stdcall get_MaxLength (
        /*[out,retval]*/ long * MaxLength ) = 0;
      virtual HRESULT __stdcall put_MaxLength (
        /*[in]*/ long MaxLength ) = 0;
      virtual HRESULT __stdcall get_MouseIcon (
        /*[out,retval]*/ struct Picture * * MouseIcon ) = 0;
      virtual HRESULT __stdcall put_MouseIcon (
        /*[in]*/ struct Picture * MouseIcon ) = 0;
      virtual HRESULT __stdcall get_MousePointer (
        /*[out,retval]*/ enum OlMousePointer * MousePointer ) = 0;
      virtual HRESULT __stdcall put_MousePointer (
        /*[in]*/ enum OlMousePointer MousePointer ) = 0;
      virtual HRESULT __stdcall get_SelectionMargin (
        /*[out,retval]*/ VARIANT_BOOL * SelectionMargin ) = 0;
      virtual HRESULT __stdcall put_SelectionMargin (
        /*[in]*/ VARIANT_BOOL SelectionMargin ) = 0;
      virtual HRESULT __stdcall get_Style (
        /*[out,retval]*/ enum OlComboBoxStyle * Style ) = 0;
      virtual HRESULT __stdcall put_Style (
        /*[in]*/ enum OlComboBoxStyle Style ) = 0;
      virtual HRESULT __stdcall get_Text (
        /*[out,retval]*/ BSTR * Text ) = 0;
      virtual HRESULT __stdcall put_Text (
        /*[in]*/ BSTR Text ) = 0;
      virtual HRESULT __stdcall get_TextAlign (
        /*[out,retval]*/ enum OlTextAlign * TextAlign ) = 0;
      virtual HRESULT __stdcall put_TextAlign (
        /*[in]*/ enum OlTextAlign TextAlign ) = 0;
      virtual HRESULT __stdcall get_TopIndex (
        /*[out,retval]*/ long * TopIndex ) = 0;
      virtual HRESULT __stdcall put_TopIndex (
        /*[in]*/ long TopIndex ) = 0;
      virtual HRESULT __stdcall get_Value (
        /*[out,retval]*/ VARIANT * Value ) = 0;
      virtual HRESULT __stdcall put_Value (
        /*[in]*/ VARIANT Value ) = 0;
      virtual HRESULT __stdcall get_ListIndex (
        /*[out,retval]*/ long * ListIndex ) = 0;
      virtual HRESULT __stdcall put_ListIndex (
        /*[in]*/ long ListIndex ) = 0;
      virtual HRESULT __stdcall get_ListCount (
        /*[out,retval]*/ long * ListCount ) = 0;
      virtual HRESULT __stdcall get_SelStart (
        /*[out,retval]*/ long * SelStart ) = 0;
      virtual HRESULT __stdcall put_SelStart (
        /*[in]*/ long SelStart ) = 0;
      virtual HRESULT __stdcall get_SelLength (
        /*[out,retval]*/ long * SelLength ) = 0;
      virtual HRESULT __stdcall put_SelLength (
        /*[in]*/ long SelLength ) = 0;
      virtual HRESULT __stdcall get_SelText (
        /*[out,retval]*/ BSTR * SelText ) = 0;
      virtual HRESULT __stdcall raw_GetItem (
        /*[in]*/ long Index,
        /*[out,retval]*/ BSTR * Item ) = 0;
      virtual HRESULT __stdcall raw_SetItem (
        /*[in]*/ long Index,
        /*[in]*/ BSTR Item ) = 0;
      virtual HRESULT __stdcall raw_Cut ( ) = 0;
      virtual HRESULT __stdcall raw_Copy ( ) = 0;
      virtual HRESULT __stdcall raw_Paste ( ) = 0;
      virtual HRESULT __stdcall raw_Clear ( ) = 0;
      virtual HRESULT __stdcall raw_AddItem (
        /*[in]*/ BSTR ItemText,
        /*[in]*/ VARIANT Index = vtMissing ) = 0;
      virtual HRESULT __stdcall raw_RemoveItem (
        /*[in]*/ long Index ) = 0;
      virtual HRESULT __stdcall raw_DropDown ( ) = 0;
};

struct __declspec(uuid("000672e3-0000-0000-c000-000000000046"))
OlkComboBoxEvents : IDispatch
{
    //
    // Wrapper methods for error-handling
    //

    // Methods:
    HRESULT Click ( );
    HRESULT DoubleClick ( );
    HRESULT MouseDown (
        enum OlMouseButton Button,
        enum OlShiftState Shift,
        OLE_XPOS_CONTAINER X,
        OLE_YPOS_CONTAINER Y );
    HRESULT MouseMove (
        enum OlMouseButton Button,
        enum OlShiftState Shift,
        OLE_XPOS_CONTAINER X,
        OLE_YPOS_CONTAINER Y );
    HRESULT MouseUp (
        enum OlMouseButton Button,
        enum OlShiftState Shift,
        OLE_XPOS_CONTAINER X,
        OLE_YPOS_CONTAINER Y );
    HRESULT Enter ( );
    HRESULT Exit (
        VARIANT_BOOL * Cancel );
    HRESULT KeyDown (
        long * KeyCode,
        enum OlShiftState Shift );
    HRESULT KeyPress (
        long * KeyAscii );
    HRESULT KeyUp (
        long * KeyCode,
        enum OlShiftState Shift );
    HRESULT Change ( );
    HRESULT DropButtonClick ( );
    HRESULT AfterUpdate ( );
    HRESULT BeforeUpdate (
        VARIANT_BOOL * Cancel );
};

struct __declspec(uuid("0006f04d-0000-0000-c000-000000000046"))
OlkComboBox;
    // [ default ] interface _OlkComboBox
    // [ default, source ] dispinterface OlkComboBoxEvents

struct __declspec(uuid("000672df-0000-0000-c000-000000000046"))
_OlkListBox : IDispatch
{
    //
    // Property data
    //

    __declspec(property(get=GetFont))
    FontPtr Font;
    __declspec(property(get=GetValue,put=PutValue))
    _variant_t Value;
    __declspec(property(get=GetTopIndex,put=PutTopIndex))
    long TopIndex;
    __declspec(property(get=GetBorderStyle,put=PutBorderStyle))
    enum OlBorderStyle BorderStyle;
    __declspec(property(get=GetLocked,put=PutLocked))
    VARIANT_BOOL Locked;
    __declspec(property(get=GetBackColor,put=PutBackColor))
    OLE_COLOR BackColor;
    __declspec(property(get=GetMultiSelect,put=PutMultiSelect))
    enum OlMultiSelect MultiSelect;
    __declspec(property(get=GetListCount))
    long ListCount;
    __declspec(property(get=GetListIndex,put=PutListIndex))
    long ListIndex;
    __declspec(property(get=GetTextAlign,put=PutTextAlign))
    enum OlTextAlign TextAlign;
    __declspec(property(get=GetMouseIcon,put=PutMouseIcon))
    PicturePtr MouseIcon;
    __declspec(property(get=GetMousePointer,put=PutMousePointer))
    enum OlMousePointer MousePointer;
    __declspec(property(get=GetMatchEntry,put=PutMatchEntry))
    enum OlMatchEntry MatchEntry;
    __declspec(property(get=GetText,put=PutText))
    _bstr_t Text;
    __declspec(property(get=GetEnabled,put=PutEnabled))
    VARIANT_BOOL Enabled;
    __declspec(property(get=GetForeColor,put=PutForeColor))
    OLE_COLOR ForeColor;

    //
    // Wrapper methods for error-handling
    //

    enum OlBorderStyle GetBorderStyle ( );
    void PutBorderStyle (
        enum OlBorderStyle BorderStyle );
    OLE_COLOR GetBackColor ( );
    void PutBackColor (
        OLE_COLOR BackColor );
    VARIANT_BOOL GetEnabled ( );
    void PutEnabled (
        VARIANT_BOOL Enabled );
    FontPtr GetFont ( );
    OLE_COLOR GetForeColor ( );
    void PutForeColor (
        OLE_COLOR ForeColor );
    VARIANT_BOOL GetLocked ( );
    void PutLocked (
        VARIANT_BOOL Locked );
    enum OlMatchEntry GetMatchEntry ( );
    void PutMatchEntry (
        enum OlMatchEntry MatchEntry );
    PicturePtr GetMouseIcon ( );
    void PutMouseIcon (
        struct Picture * MouseIcon );
    enum OlMousePointer GetMousePointer ( );
    void PutMousePointer (
        enum OlMousePointer MousePointer );
    enum OlMultiSelect GetMultiSelect ( );
    void PutMultiSelect (
        enum OlMultiSelect MultiSelect );
    _bstr_t GetText ( );
    void PutText (
        _bstr_t Text );
    enum OlTextAlign GetTextAlign ( );
    void PutTextAlign (
        enum OlTextAlign TextAlign );
    long GetTopIndex ( );
    void PutTopIndex (
        long TopIndex );
    _variant_t GetValue ( );
    void PutValue (
        const _variant_t & Value );
    long GetListIndex ( );
    void PutListIndex (
        long ListIndex );
    long GetListCount ( );
    _bstr_t GetItem (
        long Index );
    HRESULT SetItem (
        long Index,
        _bstr_t Item );
    VARIANT_BOOL GetSelected (
        long Index );
    HRESULT SetSelected (
        long Index,
        VARIANT_BOOL Selected );
    HRESULT Copy ( );
    HRESULT Clear ( );
    HRESULT AddItem (
        _bstr_t ItemText,
        const _variant_t & Index = vtMissing );
    HRESULT RemoveItem (
        long Index );

    //
    // Raw methods provided by interface
    //

      virtual HRESULT __stdcall get_BorderStyle (
        /*[out,retval]*/ enum OlBorderStyle * BorderStyle ) = 0;
      virtual HRESULT __stdcall put_BorderStyle (
        /*[in]*/ enum OlBorderStyle BorderStyle ) = 0;
      virtual HRESULT __stdcall get_BackColor (
        /*[out,retval]*/ OLE_COLOR * BackColor ) = 0;
      virtual HRESULT __stdcall put_BackColor (
        /*[in]*/ OLE_COLOR BackColor ) = 0;
      virtual HRESULT __stdcall get_Enabled (
        /*[out,retval]*/ VARIANT_BOOL * Enabled ) = 0;
      virtual HRESULT __stdcall put_Enabled (
        /*[in]*/ VARIANT_BOOL Enabled ) = 0;
      virtual HRESULT __stdcall get_Font (
        /*[out,retval]*/ struct Font * * Font ) = 0;
      virtual HRESULT __stdcall get_ForeColor (
        /*[out,retval]*/ OLE_COLOR * ForeColor ) = 0;
      virtual HRESULT __stdcall put_ForeColor (
        /*[in]*/ OLE_COLOR ForeColor ) = 0;
      virtual HRESULT __stdcall get_Locked (
        /*[out,retval]*/ VARIANT_BOOL * Locked ) = 0;
      virtual HRESULT __stdcall put_Locked (
        /*[in]*/ VARIANT_BOOL Locked ) = 0;
      virtual HRESULT __stdcall get_MatchEntry (
        /*[out,retval]*/ enum OlMatchEntry * MatchEntry ) = 0;
      virtual HRESULT __stdcall put_MatchEntry (
        /*[in]*/ enum OlMatchEntry MatchEntry ) = 0;
      virtual HRESULT __stdcall get_MouseIcon (
        /*[out,retval]*/ struct Picture * * MouseIcon ) = 0;
      virtual HRESULT __stdcall put_MouseIcon (
        /*[in]*/ struct Picture * MouseIcon ) = 0;
      virtual HRESULT __stdcall get_MousePointer (
        /*[out,retval]*/ enum OlMousePointer * MousePointer ) = 0;
      virtual HRESULT __stdcall put_MousePointer (
        /*[in]*/ enum OlMousePointer MousePointer ) = 0;
      virtual HRESULT __stdcall get_MultiSelect (
        /*[out,retval]*/ enum OlMultiSelect * MultiSelect ) = 0;
      virtual HRESULT __stdcall put_MultiSelect (
        /*[in]*/ enum OlMultiSelect MultiSelect ) = 0;
      virtual HRESULT __stdcall get_Text (
        /*[out,retval]*/ BSTR * Text ) = 0;
      virtual HRESULT __stdcall put_Text (
        /*[in]*/ BSTR Text ) = 0;
      virtual HRESULT __stdcall get_TextAlign (
        /*[out,retval]*/ enum OlTextAlign * TextAlign ) = 0;
      virtual HRESULT __stdcall put_TextAlign (
        /*[in]*/ enum OlTextAlign TextAlign ) = 0;
      virtual HRESULT __stdcall get_TopIndex (
        /*[out,retval]*/ long * TopIndex ) = 0;
      virtual HRESULT __stdcall put_TopIndex (
        /*[in]*/ long TopIndex ) = 0;
      virtual HRESULT __stdcall get_Value (
        /*[out,retval]*/ VARIANT * Value ) = 0;
      virtual HRESULT __stdcall put_Value (
        /*[in]*/ VARIANT Value ) = 0;
      virtual HRESULT __stdcall get_ListIndex (
        /*[out,retval]*/ long * ListIndex ) = 0;
      virtual HRESULT __stdcall put_ListIndex (
        /*[in]*/ long ListIndex ) = 0;
      virtual HRESULT __stdcall get_ListCount (
        /*[out,retval]*/ long * ListCount ) = 0;
      virtual HRESULT __stdcall raw_GetItem (
        /*[in]*/ long Index,
        /*[out,retval]*/ BSTR * Item ) = 0;
      virtual HRESULT __stdcall raw_SetItem (
        /*[in]*/ long Index,
        /*[in]*/ BSTR Item ) = 0;
      virtual HRESULT __stdcall raw_GetSelected (
        /*[in]*/ long Index,
        /*[out,retval]*/ VARIANT_BOOL * Selected ) = 0;
      virtual HRESULT __stdcall raw_SetSelected (
        /*[in]*/ long Index,
        /*[in]*/ VARIANT_BOOL Selected ) = 0;
      virtual HRESULT __stdcall raw_Copy ( ) = 0;
      virtual HRESULT __stdcall raw_Clear ( ) = 0;
      virtual HRESULT __stdcall raw_AddItem (
        /*[in]*/ BSTR ItemText,
        /*[in]*/ VARIANT Index = vtMissing ) = 0;
      virtual HRESULT __stdcall raw_RemoveItem (
        /*[in]*/ long Index ) = 0;
};

struct __declspec(uuid("000672e4-0000-0000-c000-000000000046"))
OlkListBoxEvents : IDispatch
{
    //
    // Wrapper methods for error-handling
    //

    // Methods:
    HRESULT Click ( );
    HRESULT DoubleClick ( );
    HRESULT MouseDown (
        enum OlMouseButton Button,
        enum OlShiftState Shift,
        OLE_XPOS_CONTAINER X,
        OLE_YPOS_CONTAINER Y );
    HRESULT MouseMove (
        enum OlMouseButton Button,
        enum OlShiftState Shift,
        OLE_XPOS_CONTAINER X,
        OLE_YPOS_CONTAINER Y );
    HRESULT MouseUp (
        enum OlMouseButton Button,
        enum OlShiftState Shift,
        OLE_XPOS_CONTAINER X,
        OLE_YPOS_CONTAINER Y );
    HRESULT Enter ( );
    HRESULT Exit (
        VARIANT_BOOL * Cancel );
    HRESULT KeyDown (
        long * KeyCode,
        enum OlShiftState Shift );
    HRESULT KeyPress (
        long * KeyAscii );
    HRESULT KeyUp (
        long * KeyCode,
        enum OlShiftState Shift );
    HRESULT Change ( );
    HRESULT AfterUpdate ( );
    HRESULT BeforeUpdate (
        VARIANT_BOOL * Cancel );
};

struct __declspec(uuid("0006f04e-0000-0000-c000-000000000046"))
OlkListBox;
    // [ default ] interface _OlkListBox
    // [ default, source ] dispinterface OlkListBoxEvents

struct __declspec(uuid("000672f6-0000-0000-c000-000000000046"))
_OlkInfoBar : IDispatch
{
    //
    // Property data
    //

    __declspec(property(get=GetMouseIcon,put=PutMouseIcon))
    PicturePtr MouseIcon;
    __declspec(property(get=GetMousePointer,put=PutMousePointer))
    enum OlMousePointer MousePointer;

    //
    // Wrapper methods for error-handling
    //

    PicturePtr GetMouseIcon ( );
    void PutMouseIcon (
        struct Picture * MouseIcon );
    enum OlMousePointer GetMousePointer ( );
    void PutMousePointer (
        enum OlMousePointer MousePointer );

    //
    // Raw methods provided by interface
    //

      virtual HRESULT __stdcall get_MouseIcon (
        /*[out,retval]*/ struct Picture * * MouseIcon ) = 0;
      virtual HRESULT __stdcall put_MouseIcon (
        /*[in]*/ struct Picture * MouseIcon ) = 0;
      virtual HRESULT __stdcall get_MousePointer (
        /*[out,retval]*/ enum OlMousePointer * MousePointer ) = 0;
      virtual HRESULT __stdcall put_MousePointer (
        /*[in]*/ enum OlMousePointer MousePointer ) = 0;
};

struct __declspec(uuid("000672f7-0000-0000-c000-000000000046"))
OlkInfoBarEvents : IDispatch
{
    //
    // Wrapper methods for error-handling
    //

    // Methods:
    HRESULT Click ( );
    HRESULT DoubleClick ( );
    HRESULT MouseDown (
        enum OlMouseButton Button,
        enum OlShiftState Shift,
        OLE_XPOS_CONTAINER X,
        OLE_YPOS_CONTAINER Y );
    HRESULT MouseMove (
        enum OlMouseButton Button,
        enum OlShiftState Shift,
        OLE_XPOS_CONTAINER X,
        OLE_YPOS_CONTAINER Y );
    HRESULT MouseUp (
        enum OlMouseButton Button,
        enum OlShiftState Shift,
        OLE_XPOS_CONTAINER X,
        OLE_YPOS_CONTAINER Y );
};

struct __declspec(uuid("0006f054-0000-0000-c000-000000000046"))
OlkInfoBar;
    // [ default ] interface _OlkInfoBar
    // [ default, source ] dispinterface OlkInfoBarEvents

struct __declspec(uuid("000672eb-0000-0000-c000-000000000046"))
_OlkContactPhoto : IDispatch
{
    //
    // Property data
    //

    __declspec(property(get=GetMouseIcon,put=PutMouseIcon))
    PicturePtr MouseIcon;
    __declspec(property(get=GetMousePointer,put=PutMousePointer))
    enum OlMousePointer MousePointer;
    __declspec(property(get=GetEnabled,put=PutEnabled))
    VARIANT_BOOL Enabled;

    //
    // Wrapper methods for error-handling
    //

    VARIANT_BOOL GetEnabled ( );
    void PutEnabled (
        VARIANT_BOOL Enabled );
    PicturePtr GetMouseIcon ( );
    void PutMouseIcon (
        struct Picture * MouseIcon );
    enum OlMousePointer GetMousePointer ( );
    void PutMousePointer (
        enum OlMousePointer MousePointer );

    //
    // Raw methods provided by interface
    //

      virtual HRESULT __stdcall get_Enabled (
        /*[out,retval]*/ VARIANT_BOOL * Enabled ) = 0;
      virtual HRESULT __stdcall put_Enabled (
        /*[in]*/ VARIANT_BOOL Enabled ) = 0;
      virtual HRESULT __stdcall get_MouseIcon (
        /*[out,retval]*/ struct Picture * * MouseIcon ) = 0;
      virtual HRESULT __stdcall put_MouseIcon (
        /*[in]*/ struct Picture * MouseIcon ) = 0;
      virtual HRESULT __stdcall get_MousePointer (
        /*[out,retval]*/ enum OlMousePointer * MousePointer ) = 0;
      virtual HRESULT __stdcall put_MousePointer (
        /*[in]*/ enum OlMousePointer MousePointer ) = 0;
};

struct __declspec(uuid("000672ec-0000-0000-c000-000000000046"))
OlkContactPhotoEvents : IDispatch
{
    //
    // Wrapper methods for error-handling
    //

    // Methods:
    HRESULT Click ( );
    HRESULT DoubleClick ( );
    HRESULT MouseDown (
        enum OlMouseButton Button,
        enum OlShiftState Shift,
        OLE_XPOS_CONTAINER X,
        OLE_YPOS_CONTAINER Y );
    HRESULT MouseMove (
        enum OlMouseButton Button,
        enum OlShiftState Shift,
        OLE_XPOS_CONTAINER X,
        OLE_YPOS_CONTAINER Y );
    HRESULT MouseUp (
        enum OlMouseButton Button,
        enum OlShiftState Shift,
        OLE_XPOS_CONTAINER X,
        OLE_YPOS_CONTAINER Y );
    HRESULT Enter ( );
    HRESULT Exit (
        VARIANT_BOOL * Cancel );
    HRESULT KeyDown (
        long * KeyCode,
        enum OlShiftState Shift );
    HRESULT KeyPress (
        long * KeyAscii );
    HRESULT KeyUp (
        long * KeyCode,
        enum OlShiftState Shift );
    HRESULT Change ( );
};

struct __declspec(uuid("0006f04f-0000-0000-c000-000000000046"))
OlkContactPhoto;
    // [ default ] interface _OlkContactPhoto
    // [ default, source ] dispinterface OlkContactPhotoEvents

struct __declspec(uuid("000672ed-0000-0000-c000-000000000046"))
_OlkBusinessCardControl : IDispatch
{
    //
    // Property data
    //

    __declspec(property(get=GetMouseIcon,put=PutMouseIcon))
    PicturePtr MouseIcon;
    __declspec(property(get=GetMousePointer,put=PutMousePointer))
    enum OlMousePointer MousePointer;

    //
    // Wrapper methods for error-handling
    //

    PicturePtr GetMouseIcon ( );
    void PutMouseIcon (
        struct Picture * MouseIcon );
    enum OlMousePointer GetMousePointer ( );
    void PutMousePointer (
        enum OlMousePointer MousePointer );

    //
    // Raw methods provided by interface
    //

      virtual HRESULT __stdcall get_MouseIcon (
        /*[out,retval]*/ struct Picture * * MouseIcon ) = 0;
      virtual HRESULT __stdcall put_MouseIcon (
        /*[in]*/ struct Picture * MouseIcon ) = 0;
      virtual HRESULT __stdcall get_MousePointer (
        /*[out,retval]*/ enum OlMousePointer * MousePointer ) = 0;
      virtual HRESULT __stdcall put_MousePointer (
        /*[in]*/ enum OlMousePointer MousePointer ) = 0;
};

struct __declspec(uuid("000672ee-0000-0000-c000-000000000046"))
OlkBusinessCardControlEvents : IDispatch
{
    //
    // Wrapper methods for error-handling
    //

    // Methods:
    HRESULT Click ( );
    HRESULT DoubleClick ( );
    HRESULT MouseDown (
        enum OlMouseButton Button,
        enum OlShiftState Shift,
        OLE_XPOS_CONTAINER X,
        OLE_YPOS_CONTAINER Y );
    HRESULT MouseMove (
        enum OlMouseButton Button,
        enum OlShiftState Shift,
        OLE_XPOS_CONTAINER X,
        OLE_YPOS_CONTAINER Y );
    HRESULT MouseUp (
        enum OlMouseButton Button,
        enum OlShiftState Shift,
        OLE_XPOS_CONTAINER X,
        OLE_YPOS_CONTAINER Y );
};

struct __declspec(uuid("0006f050-0000-0000-c000-000000000046"))
OlkBusinessCardControl;
    // [ default ] interface _OlkBusinessCardControl
    // [ default, source ] dispinterface OlkBusinessCardControlEvents

struct __declspec(uuid("000672f8-0000-0000-c000-000000000046"))
_OlkPageControl : IDispatch
{
    //
    // Property data
    //

    __declspec(property(get=GetPage,put=PutPage))
    enum OlPageType Page;

    //
    // Wrapper methods for error-handling
    //

    enum OlPageType GetPage ( );
    void PutPage (
        enum OlPageType PageID );

    //
    // Raw methods provided by interface
    //

      virtual HRESULT __stdcall get_Page (
        /*[out,retval]*/ enum OlPageType * PageID ) = 0;
      virtual HRESULT __stdcall put_Page (
        /*[in]*/ enum OlPageType PageID ) = 0;
};

struct __declspec(uuid("000672f9-0000-0000-c000-000000000046"))
OlkPageControlEvents : IDispatch
{};

struct __declspec(uuid("0006f055-0000-0000-c000-000000000046"))
OlkPageControl;
    // [ default ] interface _OlkPageControl
    // [ default, source ] dispinterface OlkPageControlEvents

struct __declspec(uuid("000672fa-0000-0000-c000-000000000046"))
_OlkDateControl : IDispatch
{
    //
    // Property data
    //

    __declspec(property(get=GetEnterFieldBehavior,put=PutEnterFieldBehavior))
    enum OlEnterFieldBehavior EnterFieldBehavior;
    __declspec(property(get=GetFont))
    FontPtr Font;
    __declspec(property(get=GetValue,put=PutValue))
    _variant_t Value;
    __declspec(property(get=GetBackStyle,put=PutBackStyle))
    enum OlBackStyle BackStyle;
    __declspec(property(get=GetBackColor,put=PutBackColor))
    OLE_COLOR BackColor;
    __declspec(property(get=GetAutoSize,put=PutAutoSize))
    VARIANT_BOOL AutoSize;
    __declspec(property(get=GetLocked,put=PutLocked))
    VARIANT_BOOL Locked;
    __declspec(property(get=GetHideSelection,put=PutHideSelection))
    VARIANT_BOOL HideSelection;
    __declspec(property(get=GetDate,put=PutDate))
    DATE Date;
    __declspec(property(get=GetShowNoneButton,put=PutShowNoneButton))
    VARIANT_BOOL ShowNoneButton;
    __declspec(property(get=GetTextAlign,put=PutTextAlign))
    enum OlTextAlign TextAlign;
    __declspec(property(get=GetMouseIcon,put=PutMouseIcon))
    PicturePtr MouseIcon;
    __declspec(property(get=GetMousePointer,put=PutMousePointer))
    enum OlMousePointer MousePointer;
    __declspec(property(get=GetAutoWordSelect,put=PutAutoWordSelect))
    VARIANT_BOOL AutoWordSelect;
    __declspec(property(get=GetText,put=PutText))
    _bstr_t Text;
    __declspec(property(get=GetEnabled,put=PutEnabled))
    VARIANT_BOOL Enabled;
    __declspec(property(get=GetForeColor,put=PutForeColor))
    OLE_COLOR ForeColor;

    //
    // Wrapper methods for error-handling
    //

    VARIANT_BOOL GetAutoSize ( );
    void PutAutoSize (
        VARIANT_BOOL AutoSize );
    VARIANT_BOOL GetAutoWordSelect ( );
    void PutAutoWordSelect (
        VARIANT_BOOL AutoWordSelect );
    OLE_COLOR GetBackColor ( );
    void PutBackColor (
        OLE_COLOR BackColor );
    enum OlBackStyle GetBackStyle ( );
    void PutBackStyle (
        enum OlBackStyle BackStyle );
    DATE GetDate ( );
    void PutDate (
        DATE Date );
    VARIANT_BOOL GetEnabled ( );
    void PutEnabled (
        VARIANT_BOOL Enabled );
    enum OlEnterFieldBehavior GetEnterFieldBehavior ( );
    void PutEnterFieldBehavior (
        enum OlEnterFieldBehavior EnterFieldBehavior );
    FontPtr GetFont ( );
    OLE_COLOR GetForeColor ( );
    void PutForeColor (
        OLE_COLOR ForeColor );
    VARIANT_BOOL GetHideSelection ( );
    void PutHideSelection (
        VARIANT_BOOL HideSelection );
    VARIANT_BOOL GetLocked ( );
    void PutLocked (
        VARIANT_BOOL Locked );
    PicturePtr GetMouseIcon ( );
    void PutMouseIcon (
        struct Picture * MouseIcon );
    enum OlMousePointer GetMousePointer ( );
    void PutMousePointer (
        enum OlMousePointer MousePointer );
    VARIANT_BOOL GetShowNoneButton ( );
    void PutShowNoneButton (
        VARIANT_BOOL ShowNoneButton );
    _bstr_t GetText ( );
    void PutText (
        _bstr_t Text );
    enum OlTextAlign GetTextAlign ( );
    void PutTextAlign (
        enum OlTextAlign TextAlign );
    _variant_t GetValue ( );
    void PutValue (
        const _variant_t & Value );
    HRESULT DropDown ( );

    //
    // Raw methods provided by interface
    //

      virtual HRESULT __stdcall get_AutoSize (
        /*[out,retval]*/ VARIANT_BOOL * AutoSize ) = 0;
      virtual HRESULT __stdcall put_AutoSize (
        /*[in]*/ VARIANT_BOOL AutoSize ) = 0;
      virtual HRESULT __stdcall get_AutoWordSelect (
        /*[out,retval]*/ VARIANT_BOOL * AutoWordSelect ) = 0;
      virtual HRESULT __stdcall put_AutoWordSelect (
        /*[in]*/ VARIANT_BOOL AutoWordSelect ) = 0;
      virtual HRESULT __stdcall get_BackColor (
        /*[out,retval]*/ OLE_COLOR * BackColor ) = 0;
      virtual HRESULT __stdcall put_BackColor (
        /*[in]*/ OLE_COLOR BackColor ) = 0;
      virtual HRESULT __stdcall get_BackStyle (
        /*[out,retval]*/ enum OlBackStyle * BackStyle ) = 0;
      virtual HRESULT __stdcall put_BackStyle (
        /*[in]*/ enum OlBackStyle BackStyle ) = 0;
      virtual HRESULT __stdcall get_Date (
        /*[out,retval]*/ DATE * Date ) = 0;
      virtual HRESULT __stdcall put_Date (
        /*[in]*/ DATE Date ) = 0;
      virtual HRESULT __stdcall get_Enabled (
        /*[out,retval]*/ VARIANT_BOOL * Enabled ) = 0;
      virtual HRESULT __stdcall put_Enabled (
        /*[in]*/ VARIANT_BOOL Enabled ) = 0;
      virtual HRESULT __stdcall get_EnterFieldBehavior (
        /*[out,retval]*/ enum OlEnterFieldBehavior * EnterFieldBehavior ) = 0;
      virtual HRESULT __stdcall put_EnterFieldBehavior (
        /*[in]*/ enum OlEnterFieldBehavior EnterFieldBehavior ) = 0;
      virtual HRESULT __stdcall get_Font (
        /*[out,retval]*/ struct Font * * Font ) = 0;
      virtual HRESULT __stdcall get_ForeColor (
        /*[out,retval]*/ OLE_COLOR * ForeColor ) = 0;
      virtual HRESULT __stdcall put_ForeColor (
        /*[in]*/ OLE_COLOR ForeColor ) = 0;
      virtual HRESULT __stdcall get_HideSelection (
        /*[out,retval]*/ VARIANT_BOOL * HideSelection ) = 0;
      virtual HRESULT __stdcall put_HideSelection (
        /*[in]*/ VARIANT_BOOL HideSelection ) = 0;
      virtual HRESULT __stdcall get_Locked (
        /*[out,retval]*/ VARIANT_BOOL * Locked ) = 0;
      virtual HRESULT __stdcall put_Locked (
        /*[in]*/ VARIANT_BOOL Locked ) = 0;
      virtual HRESULT __stdcall get_MouseIcon (
        /*[out,retval]*/ struct Picture * * MouseIcon ) = 0;
      virtual HRESULT __stdcall put_MouseIcon (
        /*[in]*/ struct Picture * MouseIcon ) = 0;
      virtual HRESULT __stdcall get_MousePointer (
        /*[out,retval]*/ enum OlMousePointer * MousePointer ) = 0;
      virtual HRESULT __stdcall put_MousePointer (
        /*[in]*/ enum OlMousePointer MousePointer ) = 0;
      virtual HRESULT __stdcall get_ShowNoneButton (
        /*[out,retval]*/ VARIANT_BOOL * ShowNoneButton ) = 0;
      virtual HRESULT __stdcall put_ShowNoneButton (
        /*[in]*/ VARIANT_BOOL ShowNoneButton ) = 0;
      virtual HRESULT __stdcall get_Text (
        /*[out,retval]*/ BSTR * Text ) = 0;
      virtual HRESULT __stdcall put_Text (
        /*[in]*/ BSTR Text ) = 0;
      virtual HRESULT __stdcall get_TextAlign (
        /*[out,retval]*/ enum OlTextAlign * TextAlign ) = 0;
      virtual HRESULT __stdcall put_TextAlign (
        /*[in]*/ enum OlTextAlign TextAlign ) = 0;
      virtual HRESULT __stdcall get_Value (
        /*[out,retval]*/ VARIANT * Value ) = 0;
      virtual HRESULT __stdcall put_Value (
        /*[in]*/ VARIANT Value ) = 0;
      virtual HRESULT __stdcall raw_DropDown ( ) = 0;
};

struct __declspec(uuid("000672fb-0000-0000-c000-000000000046"))
OlkDateControlEvents : IDispatch
{
    //
    // Wrapper methods for error-handling
    //

    // Methods:
    HRESULT Click ( );
    HRESULT DoubleClick ( );
    HRESULT MouseDown (
        enum OlMouseButton Button,
        enum OlShiftState Shift,
        OLE_XPOS_CONTAINER X,
        OLE_YPOS_CONTAINER Y );
    HRESULT MouseMove (
        enum OlMouseButton Button,
        enum OlShiftState Shift,
        OLE_XPOS_CONTAINER X,
        OLE_YPOS_CONTAINER Y );
    HRESULT MouseUp (
        enum OlMouseButton Button,
        enum OlShiftState Shift,
        OLE_XPOS_CONTAINER X,
        OLE_YPOS_CONTAINER Y );
    HRESULT Enter ( );
    HRESULT Exit (
        VARIANT_BOOL * Cancel );
    HRESULT KeyDown (
        long * KeyCode,
        enum OlShiftState Shift );
    HRESULT KeyPress (
        long * KeyAscii );
    HRESULT KeyUp (
        long * KeyCode,
        enum OlShiftState Shift );
    HRESULT Change ( );
    HRESULT DropButtonClick ( );
    HRESULT AfterUpdate ( );
    HRESULT BeforeUpdate (
        VARIANT_BOOL * Cancel );
};

struct __declspec(uuid("0006f056-0000-0000-c000-000000000046"))
OlkDateControl;
    // [ default ] interface _OlkDateControl
    // [ default, source ] dispinterface OlkDateControlEvents

struct __declspec(uuid("000672ef-0000-0000-c000-000000000046"))
_OlkTimeControl : IDispatch
{
    //
    // Property data
    //

    __declspec(property(get=GetEnterFieldBehavior,put=PutEnterFieldBehavior))
    enum OlEnterFieldBehavior EnterFieldBehavior;
    __declspec(property(get=GetFont))
    FontPtr Font;
    __declspec(property(get=GetValue,put=PutValue))
    _variant_t Value;
    __declspec(property(get=GetBackStyle,put=PutBackStyle))
    enum OlBackStyle BackStyle;
    __declspec(property(get=GetBackColor,put=PutBackColor))
    OLE_COLOR BackColor;
    __declspec(property(get=GetAutoSize,put=PutAutoSize))
    VARIANT_BOOL AutoSize;
    __declspec(property(get=GetLocked,put=PutLocked))
    VARIANT_BOOL Locked;
    __declspec(property(get=GetHideSelection,put=PutHideSelection))
    VARIANT_BOOL HideSelection;
    __declspec(property(get=GetTime,put=PutTime))
    DATE Time;
    __declspec(property(get=GetReferenceTime,put=PutReferenceTime))
    DATE ReferenceTime;
    __declspec(property(get=GetStyle,put=PutStyle))
    enum OlTimeStyle Style;
    __declspec(property(get=GetMouseIcon,put=PutMouseIcon))
    PicturePtr MouseIcon;
    __declspec(property(get=GetMousePointer,put=PutMousePointer))
    enum OlMousePointer MousePointer;
    __declspec(property(get=GetTextAlign,put=PutTextAlign))
    enum OlTextAlign TextAlign;
    __declspec(property(get=GetAutoWordSelect,put=PutAutoWordSelect))
    VARIANT_BOOL AutoWordSelect;
    __declspec(property(get=GetText,put=PutText))
    _bstr_t Text;
    __declspec(property(get=GetIntervalTime,put=PutIntervalTime))
    DATE IntervalTime;
    __declspec(property(get=GetEnabled,put=PutEnabled))
    VARIANT_BOOL Enabled;
    __declspec(property(get=GetForeColor,put=PutForeColor))
    OLE_COLOR ForeColor;

    //
    // Wrapper methods for error-handling
    //

    VARIANT_BOOL GetAutoSize ( );
    void PutAutoSize (
        VARIANT_BOOL AutoSize );
    VARIANT_BOOL GetAutoWordSelect ( );
    void PutAutoWordSelect (
        VARIANT_BOOL AutoWordSelect );
    OLE_COLOR GetBackColor ( );
    void PutBackColor (
        OLE_COLOR BackColor );
    enum OlBackStyle GetBackStyle ( );
    void PutBackStyle (
        enum OlBackStyle BackStyle );
    VARIANT_BOOL GetEnabled ( );
    void PutEnabled (
        VARIANT_BOOL Enabled );
    enum OlEnterFieldBehavior GetEnterFieldBehavior ( );
    void PutEnterFieldBehavior (
        enum OlEnterFieldBehavior EnterFieldBehavior );
    FontPtr GetFont ( );
    OLE_COLOR GetForeColor ( );
    void PutForeColor (
        OLE_COLOR ForeColor );
    VARIANT_BOOL GetHideSelection ( );
    void PutHideSelection (
        VARIANT_BOOL HideSelection );
    VARIANT_BOOL GetLocked ( );
    void PutLocked (
        VARIANT_BOOL Locked );
    PicturePtr GetMouseIcon ( );
    void PutMouseIcon (
        struct Picture * MouseIcon );
    enum OlMousePointer GetMousePointer ( );
    void PutMousePointer (
        enum OlMousePointer MousePointer );
    DATE GetReferenceTime ( );
    void PutReferenceTime (
        DATE ReferenceTime );
    enum OlTimeStyle GetStyle ( );
    void PutStyle (
        enum OlTimeStyle TimeStyle );
    DATE GetTime ( );
    void PutTime (
        DATE Time );
    _bstr_t GetText ( );
    void PutText (
        _bstr_t Text );
    enum OlTextAlign GetTextAlign ( );
    void PutTextAlign (
        enum OlTextAlign TextAlign );
    _variant_t GetValue ( );
    void PutValue (
        const _variant_t & Value );
    DATE GetIntervalTime ( );
    void PutIntervalTime (
        DATE IntervalTime );
    HRESULT DropDown ( );

    //
    // Raw methods provided by interface
    //

      virtual HRESULT __stdcall get_AutoSize (
        /*[out,retval]*/ VARIANT_BOOL * AutoSize ) = 0;
      virtual HRESULT __stdcall put_AutoSize (
        /*[in]*/ VARIANT_BOOL AutoSize ) = 0;
      virtual HRESULT __stdcall get_AutoWordSelect (
        /*[out,retval]*/ VARIANT_BOOL * AutoWordSelect ) = 0;
      virtual HRESULT __stdcall put_AutoWordSelect (
        /*[in]*/ VARIANT_BOOL AutoWordSelect ) = 0;
      virtual HRESULT __stdcall get_BackColor (
        /*[out,retval]*/ OLE_COLOR * BackColor ) = 0;
      virtual HRESULT __stdcall put_BackColor (
        /*[in]*/ OLE_COLOR BackColor ) = 0;
      virtual HRESULT __stdcall get_BackStyle (
        /*[out,retval]*/ enum OlBackStyle * BackStyle ) = 0;
      virtual HRESULT __stdcall put_BackStyle (
        /*[in]*/ enum OlBackStyle BackStyle ) = 0;
      virtual HRESULT __stdcall get_Enabled (
        /*[out,retval]*/ VARIANT_BOOL * Enabled ) = 0;
      virtual HRESULT __stdcall put_Enabled (
        /*[in]*/ VARIANT_BOOL Enabled ) = 0;
      virtual HRESULT __stdcall get_EnterFieldBehavior (
        /*[out,retval]*/ enum OlEnterFieldBehavior * EnterFieldBehavior ) = 0;
      virtual HRESULT __stdcall put_EnterFieldBehavior (
        /*[in]*/ enum OlEnterFieldBehavior EnterFieldBehavior ) = 0;
      virtual HRESULT __stdcall get_Font (
        /*[out,retval]*/ struct Font * * Font ) = 0;
      virtual HRESULT __stdcall get_ForeColor (
        /*[out,retval]*/ OLE_COLOR * ForeColor ) = 0;
      virtual HRESULT __stdcall put_ForeColor (
        /*[in]*/ OLE_COLOR ForeColor ) = 0;
      virtual HRESULT __stdcall get_HideSelection (
        /*[out,retval]*/ VARIANT_BOOL * HideSelection ) = 0;
      virtual HRESULT __stdcall put_HideSelection (
        /*[in]*/ VARIANT_BOOL HideSelection ) = 0;
      virtual HRESULT __stdcall get_Locked (
        /*[out,retval]*/ VARIANT_BOOL * Locked ) = 0;
      virtual HRESULT __stdcall put_Locked (
        /*[in]*/ VARIANT_BOOL Locked ) = 0;
      virtual HRESULT __stdcall get_MouseIcon (
        /*[out,retval]*/ struct Picture * * MouseIcon ) = 0;
      virtual HRESULT __stdcall put_MouseIcon (
        /*[in]*/ struct Picture * MouseIcon ) = 0;
      virtual HRESULT __stdcall get_MousePointer (
        /*[out,retval]*/ enum OlMousePointer * MousePointer ) = 0;
      virtual HRESULT __stdcall put_MousePointer (
        /*[in]*/ enum OlMousePointer MousePointer ) = 0;
      virtual HRESULT __stdcall get_ReferenceTime (
        /*[out,retval]*/ DATE * ReferenceTime ) = 0;
      virtual HRESULT __stdcall put_ReferenceTime (
        /*[in]*/ DATE ReferenceTime ) = 0;
      virtual HRESULT __stdcall get_Style (
        /*[out,retval]*/ enum OlTimeStyle * TimeStyle ) = 0;
      virtual HRESULT __stdcall put_Style (
        /*[in]*/ enum OlTimeStyle TimeStyle ) = 0;
      virtual HRESULT __stdcall get_Time (
        /*[out,retval]*/ DATE * Time ) = 0;
      virtual HRESULT __stdcall put_Time (
        /*[in]*/ DATE Time ) = 0;
      virtual HRESULT __stdcall get_Text (
        /*[out,retval]*/ BSTR * Text ) = 0;
      virtual HRESULT __stdcall put_Text (
        /*[in]*/ BSTR Text ) = 0;
      virtual HRESULT __stdcall get_TextAlign (
        /*[out,retval]*/ enum OlTextAlign * TextAlign ) = 0;
      virtual HRESULT __stdcall put_TextAlign (
        /*[in]*/ enum OlTextAlign TextAlign ) = 0;
      virtual HRESULT __stdcall get_Value (
        /*[out,retval]*/ VARIANT * Value ) = 0;
      virtual HRESULT __stdcall put_Value (
        /*[in]*/ VARIANT Value ) = 0;
      virtual HRESULT __stdcall get_IntervalTime (
        /*[out,retval]*/ DATE * IntervalTime ) = 0;
      virtual HRESULT __stdcall put_IntervalTime (
        /*[in]*/ DATE IntervalTime ) = 0;
      virtual HRESULT __stdcall raw_DropDown ( ) = 0;
};

struct __declspec(uuid("000672f0-0000-0000-c000-000000000046"))
OlkTimeControlEvents : IDispatch
{
    //
    // Wrapper methods for error-handling
    //

    // Methods:
    HRESULT Click ( );
    HRESULT DoubleClick ( );
    HRESULT MouseDown (
        enum OlMouseButton Button,
        enum OlShiftState Shift,
        OLE_XPOS_CONTAINER X,
        OLE_YPOS_CONTAINER Y );
    HRESULT MouseMove (
        enum OlMouseButton Button,
        enum OlShiftState Shift,
        OLE_XPOS_CONTAINER X,
        OLE_YPOS_CONTAINER Y );
    HRESULT MouseUp (
        enum OlMouseButton Button,
        enum OlShiftState Shift,
        OLE_XPOS_CONTAINER X,
        OLE_YPOS_CONTAINER Y );
    HRESULT Enter ( );
    HRESULT Exit (
        VARIANT_BOOL * Cancel );
    HRESULT KeyDown (
        long * KeyCode,
        enum OlShiftState Shift );
    HRESULT KeyPress (
        long * KeyAscii );
    HRESULT KeyUp (
        long * KeyCode,
        enum OlShiftState Shift );
    HRESULT Change ( );
    HRESULT DropButtonClick ( );
    HRESULT AfterUpdate ( );
    HRESULT BeforeUpdate (
        VARIANT_BOOL * Cancel );
};

struct __declspec(uuid("0006f051-0000-0000-c000-000000000046"))
OlkTimeControl;
    // [ default ] interface _OlkTimeControl
    // [ default, source ] dispinterface OlkTimeControlEvents

struct __declspec(uuid("000672f4-0000-0000-c000-000000000046"))
_OlkCategory : IDispatch
{
    //
    // Property data
    //

    __declspec(property(get=GetBackStyle,put=PutBackStyle))
    enum OlBackStyle BackStyle;
    __declspec(property(get=GetBackColor,put=PutBackColor))
    OLE_COLOR BackColor;
    __declspec(property(get=GetAutoSize,put=PutAutoSize))
    VARIANT_BOOL AutoSize;
    __declspec(property(get=GetMouseIcon,put=PutMouseIcon))
    PicturePtr MouseIcon;
    __declspec(property(get=GetMousePointer,put=PutMousePointer))
    enum OlMousePointer MousePointer;
    __declspec(property(get=GetEnabled,put=PutEnabled))
    VARIANT_BOOL Enabled;
    __declspec(property(get=GetForeColor,put=PutForeColor))
    OLE_COLOR ForeColor;

    //
    // Wrapper methods for error-handling
    //

    VARIANT_BOOL GetAutoSize ( );
    void PutAutoSize (
        VARIANT_BOOL AutoSize );
    OLE_COLOR GetBackColor ( );
    void PutBackColor (
        OLE_COLOR BackColor );
    enum OlBackStyle GetBackStyle ( );
    void PutBackStyle (
        enum OlBackStyle BackStyle );
    VARIANT_BOOL GetEnabled ( );
    void PutEnabled (
        VARIANT_BOOL Enabled );
    OLE_COLOR GetForeColor ( );
    void PutForeColor (
        OLE_COLOR ForeColor );
    PicturePtr GetMouseIcon ( );
    void PutMouseIcon (
        struct Picture * MouseIcon );
    enum OlMousePointer GetMousePointer ( );
    void PutMousePointer (
        enum OlMousePointer MousePointer );

    //
    // Raw methods provided by interface
    //

      virtual HRESULT __stdcall get_AutoSize (
        /*[out,retval]*/ VARIANT_BOOL * AutoSize ) = 0;
      virtual HRESULT __stdcall put_AutoSize (
        /*[in]*/ VARIANT_BOOL AutoSize ) = 0;
      virtual HRESULT __stdcall get_BackColor (
        /*[out,retval]*/ OLE_COLOR * BackColor ) = 0;
      virtual HRESULT __stdcall put_BackColor (
        /*[in]*/ OLE_COLOR BackColor ) = 0;
      virtual HRESULT __stdcall get_BackStyle (
        /*[out,retval]*/ enum OlBackStyle * BackStyle ) = 0;
      virtual HRESULT __stdcall put_BackStyle (
        /*[in]*/ enum OlBackStyle BackStyle ) = 0;
      virtual HRESULT __stdcall get_Enabled (
        /*[out,retval]*/ VARIANT_BOOL * Enabled ) = 0;
      virtual HRESULT __stdcall put_Enabled (
        /*[in]*/ VARIANT_BOOL Enabled ) = 0;
      virtual HRESULT __stdcall get_ForeColor (
        /*[out,retval]*/ OLE_COLOR * ForeColor ) = 0;
      virtual HRESULT __stdcall put_ForeColor (
        /*[in]*/ OLE_COLOR ForeColor ) = 0;
      virtual HRESULT __stdcall get_MouseIcon (
        /*[out,retval]*/ struct Picture * * MouseIcon ) = 0;
      virtual HRESULT __stdcall put_MouseIcon (
        /*[in]*/ struct Picture * MouseIcon ) = 0;
      virtual HRESULT __stdcall get_MousePointer (
        /*[out,retval]*/ enum OlMousePointer * MousePointer ) = 0;
      virtual HRESULT __stdcall put_MousePointer (
        /*[in]*/ enum OlMousePointer MousePointer ) = 0;
};

struct __declspec(uuid("000672f5-0000-0000-c000-000000000046"))
OlkCategoryEvents : IDispatch
{
    //
    // Wrapper methods for error-handling
    //

    // Methods:
    HRESULT Click ( );
    HRESULT DoubleClick ( );
    HRESULT MouseDown (
        enum OlMouseButton Button,
        enum OlShiftState Shift,
        OLE_XPOS_CONTAINER X,
        OLE_YPOS_CONTAINER Y );
    HRESULT MouseMove (
        enum OlMouseButton Button,
        enum OlShiftState Shift,
        OLE_XPOS_CONTAINER X,
        OLE_YPOS_CONTAINER Y );
    HRESULT MouseUp (
        enum OlMouseButton Button,
        enum OlShiftState Shift,
        OLE_XPOS_CONTAINER X,
        OLE_YPOS_CONTAINER Y );
    HRESULT Enter ( );
    HRESULT Exit (
        VARIANT_BOOL * Cancel );
    HRESULT KeyDown (
        long * KeyCode,
        enum OlShiftState Shift );
    HRESULT KeyPress (
        long * KeyAscii );
    HRESULT KeyUp (
        long * KeyCode,
        enum OlShiftState Shift );
    HRESULT Change ( );
};

struct __declspec(uuid("0006f053-0000-0000-c000-000000000046"))
OlkCategory;
    // [ default ] interface _OlkCategory
    // [ default, source ] dispinterface OlkCategoryEvents

struct __declspec(uuid("00067352-0000-0000-c000-000000000046"))
_OlkFrameHeader : IDispatch
{
    //
    // Property data
    //

    __declspec(property(get=GetFont))
    FontPtr Font;
    __declspec(property(get=GetAlignment,put=PutAlignment))
    enum OlAlignment Alignment;
    __declspec(property(get=GetMouseIcon,put=PutMouseIcon))
    PicturePtr MouseIcon;
    __declspec(property(get=GetMousePointer,put=PutMousePointer))
    enum OlMousePointer MousePointer;
    __declspec(property(get=GetCaption,put=PutCaption))
    _bstr_t Caption;
    __declspec(property(get=GetEnabled,put=PutEnabled))
    VARIANT_BOOL Enabled;
    __declspec(property(get=GetForeColor,put=PutForeColor))
    OLE_COLOR ForeColor;

    //
    // Wrapper methods for error-handling
    //

    enum OlAlignment GetAlignment ( );
    void PutAlignment (
        enum OlAlignment Alignment );
    _bstr_t GetCaption ( );
    void PutCaption (
        _bstr_t Caption );
    FontPtr GetFont ( );
    OLE_COLOR GetForeColor ( );
    void PutForeColor (
        OLE_COLOR ForeColor );
    VARIANT_BOOL GetEnabled ( );
    void PutEnabled (
        VARIANT_BOOL Enabled );
    PicturePtr GetMouseIcon ( );
    void PutMouseIcon (
        struct Picture * MouseIcon );
    enum OlMousePointer GetMousePointer ( );
    void PutMousePointer (
        enum OlMousePointer MousePointer );

    //
    // Raw methods provided by interface
    //

      virtual HRESULT __stdcall get_Alignment (
        /*[out,retval]*/ enum OlAlignment * Alignment ) = 0;
      virtual HRESULT __stdcall put_Alignment (
        /*[in]*/ enum OlAlignment Alignment ) = 0;
      virtual HRESULT __stdcall get_Caption (
        /*[out,retval]*/ BSTR * Caption ) = 0;
      virtual HRESULT __stdcall put_Caption (
        /*[in]*/ BSTR Caption ) = 0;
      virtual HRESULT __stdcall get_Font (
        /*[out,retval]*/ struct Font * * Font ) = 0;
      virtual HRESULT __stdcall get_ForeColor (
        /*[out,retval]*/ OLE_COLOR * ForeColor ) = 0;
      virtual HRESULT __stdcall put_ForeColor (
        /*[in]*/ OLE_COLOR ForeColor ) = 0;
      virtual HRESULT __stdcall get_Enabled (
        /*[out,retval]*/ VARIANT_BOOL * Enabled ) = 0;
      virtual HRESULT __stdcall put_Enabled (
        /*[in]*/ VARIANT_BOOL Enabled ) = 0;
      virtual HRESULT __stdcall get_MouseIcon (
        /*[out,retval]*/ struct Picture * * MouseIcon ) = 0;
      virtual HRESULT __stdcall put_MouseIcon (
        /*[in]*/ struct Picture * MouseIcon ) = 0;
      virtual HRESULT __stdcall get_MousePointer (
        /*[out,retval]*/ enum OlMousePointer * MousePointer ) = 0;
      virtual HRESULT __stdcall put_MousePointer (
        /*[in]*/ enum OlMousePointer MousePointer ) = 0;
};

struct __declspec(uuid("00067353-0000-0000-c000-000000000046"))
OlkFrameHeaderEvents : IDispatch
{};

struct __declspec(uuid("0006f057-0000-0000-c000-000000000046"))
OlkFrameHeader;
    // [ default ] interface _OlkFrameHeader
    // [ default, source ] dispinterface OlkFrameHeaderEvents

struct __declspec(uuid("00067355-0000-0000-c000-000000000046"))
_OlkSenderPhoto : IDispatch
{
    //
    // Property data
    //

    __declspec(property(get=GetPreferredWidth))
    long PreferredWidth;
    __declspec(property(get=GetPreferredHeight))
    long PreferredHeight;
    __declspec(property(get=GetMouseIcon,put=PutMouseIcon))
    PicturePtr MouseIcon;
    __declspec(property(get=GetMousePointer,put=PutMousePointer))
    enum OlMousePointer MousePointer;
    __declspec(property(get=GetEnabled,put=PutEnabled))
    VARIANT_BOOL Enabled;

    //
    // Wrapper methods for error-handling
    //

    VARIANT_BOOL GetEnabled ( );
    void PutEnabled (
        VARIANT_BOOL Enabled );
    PicturePtr GetMouseIcon ( );
    void PutMouseIcon (
        struct Picture * MouseIcon );
    enum OlMousePointer GetMousePointer ( );
    void PutMousePointer (
        enum OlMousePointer MousePointer );
    long GetPreferredWidth ( );
    long GetPreferredHeight ( );

    //
    // Raw methods provided by interface
    //

      virtual HRESULT __stdcall get_Enabled (
        /*[out,retval]*/ VARIANT_BOOL * Enabled ) = 0;
      virtual HRESULT __stdcall put_Enabled (
        /*[in]*/ VARIANT_BOOL Enabled ) = 0;
      virtual HRESULT __stdcall get_MouseIcon (
        /*[out,retval]*/ struct Picture * * MouseIcon ) = 0;
      virtual HRESULT __stdcall put_MouseIcon (
        /*[in]*/ struct Picture * MouseIcon ) = 0;
      virtual HRESULT __stdcall get_MousePointer (
        /*[out,retval]*/ enum OlMousePointer * MousePointer ) = 0;
      virtual HRESULT __stdcall put_MousePointer (
        /*[in]*/ enum OlMousePointer MousePointer ) = 0;
      virtual HRESULT __stdcall get_PreferredWidth (
        /*[out,retval]*/ long * PreferredWidth ) = 0;
      virtual HRESULT __stdcall get_PreferredHeight (
        /*[out,retval]*/ long * PreferredHeight ) = 0;
};

struct __declspec(uuid("00067356-0000-0000-c000-000000000046"))
OlkSenderPhotoEvents : IDispatch
{
    //
    // Wrapper methods for error-handling
    //

    // Methods:
    HRESULT Click ( );
    HRESULT DoubleClick ( );
    HRESULT MouseDown (
        enum OlMouseButton Button,
        enum OlShiftState Shift,
        OLE_XPOS_CONTAINER X,
        OLE_YPOS_CONTAINER Y );
    HRESULT MouseMove (
        enum OlMouseButton Button,
        enum OlShiftState Shift,
        OLE_XPOS_CONTAINER X,
        OLE_YPOS_CONTAINER Y );
    HRESULT MouseUp (
        enum OlMouseButton Button,
        enum OlShiftState Shift,
        OLE_XPOS_CONTAINER X,
        OLE_YPOS_CONTAINER Y );
    HRESULT Change ( );
};

struct __declspec(uuid("0006f058-0000-0000-c000-000000000046"))
OlkSenderPhoto;
    // [ default ] interface _OlkSenderPhoto
    // [ default, source ] dispinterface OlkSenderPhotoEvents

enum OlObjectClass
{
    olApplication = 0,
    olNamespace = 1,
    olFolder = 2,
    olRecipient = 4,
    olAttachment = 5,
    olAddressList = 7,
    olAddressEntry = 8,
    olFolders = 15,
    olItems = 16,
    olRecipients = 17,
    olAttachments = 18,
    olAddressLists = 20,
    olAddressEntries = 21,
    olAppointment = 26,
    olMeetingRequest = 53,
    olMeetingCancellation = 54,
    olMeetingResponseNegative = 55,
    olMeetingResponsePositive = 56,
    olMeetingResponseTentative = 57,
    olRecurrencePattern = 28,
    olExceptions = 29,
    olException = 30,
    olAction = 32,
    olActions = 33,
    olExplorer = 34,
    olInspector = 35,
    olPages = 36,
    olFormDescription = 37,
    olUserProperties = 38,
    olUserProperty = 39,
    olContact = 40,
    olDocument = 41,
    olJournal = 42,
    olMail = 43,
    olNote = 44,
    olPost = 45,
    olReport = 46,
    olRemote = 47,
    olTask = 48,
    olTaskRequest = 49,
    olTaskRequestUpdate = 50,
    olTaskRequestAccept = 51,
    olTaskRequestDecline = 52,
    olExplorers = 60,
    olInspectors = 61,
    olPanes = 62,
    olOutlookBarPane = 63,
    olOutlookBarStorage = 64,
    olOutlookBarGroups = 65,
    olOutlookBarGroup = 66,
    olOutlookBarShortcuts = 67,
    olOutlookBarShortcut = 68,
    olDistributionList = 69,
    olPropertyPageSite = 70,
    olPropertyPages = 71,
    olSyncObject = 72,
    olSyncObjects = 73,
    olSelection = 74,
    olLink = 75,
    olLinks = 76,
    olSearch = 77,
    olResults = 78,
    olViews = 79,
    olView = 80,
    olItemProperties = 98,
    olItemProperty = 99,
    olReminders = 100,
    olReminder = 101,
    olConflict = 102,
    olConflicts = 103,
    olSharing = 104,
    olAccount = 105,
    olAccounts = 106,
    olStore = 107,
    olStores = 108,
    olSelectNamesDialog = 109,
    olExchangeUser = 110,
    olExchangeDistributionList = 111,
    olPropertyAccessor = 112,
    olStorageItem = 113,
    olRules = 114,
    olRule = 115,
    olRuleActions = 116,
    olRuleAction = 117,
    olMoveOrCopyRuleAction = 118,
    olSendRuleAction = 119,
    olTable = 120,
    olRow = 121,
    olAssignToCategoryRuleAction = 122,
    olPlaySoundRuleAction = 123,
    olMarkAsTaskRuleAction = 124,
    olNewItemAlertRuleAction = 125,
    olRuleConditions = 126,
    olRuleCondition = 127,
    olImportanceRuleCondition = 128,
    olFormRegion = 129,
    olCategoryRuleCondition = 130,
    olFormNameRuleCondition = 131,
    olFromRuleCondition = 132,
    olSenderInAddressListRuleCondition = 133,
    olTextRuleCondition = 134,
    olAccountRuleCondition = 135,
    olClassTableView = 136,
    olClassIconView = 137,
    olClassCardView = 138,
    olClassCalendarView = 139,
    olClassTimeLineView = 140,
    olViewFields = 141,
    olViewField = 142,
    olOrderField = 144,
    olOrderFields = 145,
    olViewFont = 146,
    olAutoFormatRule = 147,
    olAutoFormatRules = 148,
    olColumnFormat = 149,
    olColumns = 150,
    olCalendarSharing = 151,
    olCategory = 152,
    olCategories = 153,
    olColumn = 154,
    olClassNavigationPane = 155,
    olNavigationModules = 156,
    olNavigationModule = 157,
    olMailModule = 158,
    olCalendarModule = 159,
    olContactsModule = 160,
    olTasksModule = 161,
    olJournalModule = 162,
    olNotesModule = 163,
    olNavigationGroups = 164,
    olNavigationGroup = 165,
    olNavigationFolders = 166,
    olNavigationFolder = 167,
    olClassBusinessCardView = 168,
    olAttachmentSelection = 169,
    olAddressRuleCondition = 170,
    olUserDefinedProperty = 171,
    olUserDefinedProperties = 172,
    olFromRssFeedRuleCondition = 173,
    olClassTimeZone = 174,
    olClassTimeZones = 175
};

enum OlDisplayType
{
    olUser = 0,
    olDistList = 1,
    olForum = 2,
    olAgent = 3,
    olOrganization = 4,
    olPrivateDistList = 5,
    olRemoteUser = 6
};

enum OlActionCopyLike
{
    olReply = 0,
    olReplyAll = 1,
    olForward = 2,
    olReplyFolder = 3,
    olRespond = 4
};

enum OlActionReplyStyle
{
    olOmitOriginalText = 0,
    olEmbedOriginalItem = 1,
    olIncludeOriginalText = 2,
    olIndentOriginalText = 3,
    olLinkOriginalItem = 4,
    olUserPreference = 5,
    olReplyTickOriginalText = 1000
};

enum OlActionResponseStyle
{
    olOpen = 0,
    olSend = 1,
    olPrompt = 2
};

enum OlActionShowOn
{
    olDontShow = 0,
    olMenu = 1,
    olMenuAndToolbar = 2
};

enum OlAttachmentType
{
    olByValue = 1,
    olByReference = 4,
    olEmbeddeditem = 5,
    olOLE = 6
};

struct __declspec(uuid("0006102d-0000-0000-c000-000000000046"))
PropertyAccessor;
    // [ default ] interface _PropertyAccessor

enum OlAttachmentBlockLevel
{
    olAttachmentBlockLevelNone = 0,
    olAttachmentBlockLevelOpen = 1
};

enum OlFormRegistry
{
    olDefaultRegistry = 0,
    olPersonalRegistry = 2,
    olFolderRegistry = 3,
    olOrganizationRegistry = 4
};

enum OlEditorType
{
    olEditorText = 1,
    olEditorHTML = 2,
    olEditorRTF = 3,
    olEditorWord = 4
};

enum OlInspectorClose
{
    olSave = 0,
    olDiscard = 1,
    olPromptForSave = 2
};

enum OlWindowState
{
    olMaximized = 0,
    olMinimized = 1,
    olNormalWindow = 2
};

enum OlImportance
{
    olImportanceLow = 0,
    olImportanceNormal = 1,
    olImportanceHigh = 2
};

enum OlSensitivity
{
    olNormal = 0,
    olPersonal = 1,
    olPrivate = 2,
    olConfidential = 3
};

enum OlUserPropertyType
{
    olOutlookInternal = 0,
    olText = 1,
    olNumber = 3,
    olDateTime = 5,
    olYesNo = 6,
    olDuration = 7,
    olKeywords = 11,
    olPercent = 12,
    olCurrency = 14,
    olFormula = 18,
    olCombination = 19,
    olInteger = 20,
    olEnumeration = 21,
    olSmartFrom = 22
};

enum OlItemType
{
    olMailItem = 0,
    olAppointmentItem = 1,
    olContactItem = 2,
    olTaskItem = 3,
    olJournalItem = 4,
    olNoteItem = 5,
    olPostItem = 6,
    olDistributionListItem = 7
};

enum OlPane
{
    olOutlookBar = 1,
    olFolderList = 2,
    olPreview = 3,
    olNavigationPane = 4,
    olToDoBar = 5
};

struct __declspec(uuid("000610e8-0000-0000-c000-000000000046"))
NavigationModule;
    // [ default ] interface _NavigationModule

enum OlNavigationModuleType
{
    olModuleMail = 0,
    olModuleCalendar = 1,
    olModuleContacts = 2,
    olModuleTasks = 3,
    olModuleJournal = 4,
    olModuleNotes = 5,
    olModuleFolderList = 6,
    olModuleShortcuts = 7
};

struct __declspec(uuid("000610e7-0000-0000-c000-000000000046"))
NavigationModules;
    // [ default ] interface _NavigationModules

enum OlSearchScope
{
    olSearchScopeCurrentFolder = 0,
    olSearchScopeAllFolders = 1
};

enum OlViewSaveOption
{
    olViewSaveOptionThisFolderEveryone = 0,
    olViewSaveOptionThisFolderOnlyMe = 1,
    olViewSaveOptionAllFoldersOfType = 2
};

enum OlViewType
{
    olTableView = 0,
    olCardView = 1,
    olCalendarView = 2,
    olIconView = 3,
    olTimelineView = 4,
    olBusinessCardView = 5,
    olDailyTaskListView = 6
};

enum OlShowItemCount
{
    olNoItemCount = 0,
    olShowUnreadItemCount = 1,
    olShowTotalItemCount = 2
};

struct __declspec(uuid("000610c7-0000-0000-c000-000000000046"))
Store;
    // [ default ] interface _Store

enum OlExchangeStoreType
{
    olPrimaryExchangeMailbox = 0,
    olExchangeMailbox = 1,
    olExchangePublicFolder = 2,
    olNotExchange = 3
};

struct __declspec(uuid("000610cc-0000-0000-c000-000000000046"))
Rules;
    // [ default ] interface _Rules

enum OlRuleType
{
    olRuleReceive = 0,
    olRuleSend = 1
};

struct __declspec(uuid("000610ce-0000-0000-c000-000000000046"))
RuleActions;
    // [ default ] interface _RuleActions

enum OlRuleActionType
{
    olRuleActionUnknown = 0,
    olRuleActionMoveToFolder = 1,
    olRuleActionAssignToCategory = 2,
    olRuleActionDelete = 3,
    olRuleActionDeletePermanently = 4,
    olRuleActionCopyToFolder = 5,
    olRuleActionForward = 6,
    olRuleActionForwardAsAttachment = 7,
    olRuleActionRedirect = 8,
    olRuleActionServerReply = 9,
    olRuleActionTemplate = 10,
    olRuleActionFlagForActionInDays = 11,
    olRuleActionFlagColor = 12,
    olRuleActionFlagClear = 13,
    olRuleActionImportance = 14,
    olRuleActionSensitivity = 15,
    olRuleActionPrint = 16,
    olRuleActionPlaySound = 17,
    olRuleActionStartApplication = 18,
    olRuleActionMarkRead = 19,
    olRuleActionRunScript = 20,
    olRuleActionStop = 21,
    olRuleActionCustomAction = 22,
    olRuleActionNewItemAlert = 23,
    olRuleActionDesktopAlert = 24,
    olRuleActionNotifyRead = 25,
    olRuleActionNotifyDelivery = 26,
    olRuleActionCcMessage = 27,
    olRuleActionDefer = 28,
    olRuleActionMarkAsTask = 29,
    olRuleActionClearCategories = 30
};

struct __declspec(uuid("000610d0-0000-0000-c000-000000000046"))
MoveOrCopyRuleAction;
    // [ default ] interface _MoveOrCopyRuleAction

struct __declspec(uuid("000610cf-0000-0000-c000-000000000046"))
RuleAction;
    // [ default ] interface _RuleAction

struct __declspec(uuid("000610d1-0000-0000-c000-000000000046"))
SendRuleAction;
    // [ default ] interface _SendRuleAction

struct __declspec(uuid("000610d4-0000-0000-c000-000000000046"))
AssignToCategoryRuleAction;
    // [ default ] interface _AssignToCategoryRuleAction

struct __declspec(uuid("000610d5-0000-0000-c000-000000000046"))
PlaySoundRuleAction;
    // [ default ] interface _PlaySoundRuleAction

struct __declspec(uuid("000610d6-0000-0000-c000-000000000046"))
MarkAsTaskRuleAction;
    // [ default ] interface _MarkAsTaskRuleAction

enum OlMarkInterval
{
    olMarkToday = 0,
    olMarkTomorrow = 1,
    olMarkThisWeek = 2,
    olMarkNextWeek = 3,
    olMarkNoDate = 4
};

struct __declspec(uuid("000610d7-0000-0000-c000-000000000046"))
NewItemAlertRuleAction;
    // [ default ] interface _NewItemAlertRuleAction

struct __declspec(uuid("000610d8-0000-0000-c000-000000000046"))
RuleConditions;
    // [ default ] interface _RuleConditions

enum OlRuleConditionType
{
    olConditionUnknown = 0,
    olConditionFrom = 1,
    olConditionSubject = 2,
    olConditionAccount = 3,
    olConditionOnlyToMe = 4,
    olConditionTo = 5,
    olConditionImportance = 6,
    olConditionSensitivity = 7,
    olConditionFlaggedForAction = 8,
    olConditionCc = 9,
    olConditionToOrCc = 10,
    olConditionNotTo = 11,
    olConditionSentTo = 12,
    olConditionBody = 13,
    olConditionBodyOrSubject = 14,
    olConditionMessageHeader = 15,
    olConditionRecipientAddress = 16,
    olConditionSenderAddress = 17,
    olConditionCategory = 18,
    olConditionOOF = 19,
    olConditionHasAttachment = 20,
    olConditionSizeRange = 21,
    olConditionDateRange = 22,
    olConditionFormName = 23,
    olConditionProperty = 24,
    olConditionSenderInAddressBook = 25,
    olConditionMeetingInviteOrUpdate = 26,
    olConditionLocalMachineOnly = 27,
    olConditionOtherMachine = 28,
    olConditionAnyCategory = 29,
    olConditionFromRssFeed = 30,
    olConditionFromAnyRssFeed = 31
};

struct __declspec(uuid("000610d9-0000-0000-c000-000000000046"))
RuleCondition;
    // [ default ] interface _RuleCondition

struct __declspec(uuid("000610da-0000-0000-c000-000000000046"))
ImportanceRuleCondition;
    // [ default ] interface _ImportanceRuleCondition

struct __declspec(uuid("000610db-0000-0000-c000-000000000046"))
AccountRuleCondition;
    // [ default ] interface _AccountRuleCondition

struct __declspec(uuid("000610c5-0000-0000-c000-000000000046"))
Account;
    // [ default ] interface _Account

enum OlAccountType
{
    olExchange = 0,
    olImap = 1,
    olPop3 = 2,
    olHttp = 3,
    olOtherAccount = 5
};

struct __declspec(uuid("000610e0-0000-0000-c000-000000000046"))
TextRuleCondition;
    // [ default ] interface _TextRuleCondition

struct __declspec(uuid("000610dc-0000-0000-c000-000000000046"))
CategoryRuleCondition;
    // [ default ] interface _CategoryRuleCondition

struct __declspec(uuid("000610dd-0000-0000-c000-000000000046"))
FormNameRuleCondition;
    // [ default ] interface _FormNameRuleCondition

struct __declspec(uuid("000610de-0000-0000-c000-000000000046"))
ToOrFromRuleCondition;
    // [ default ] interface _ToOrFromRuleCondition

struct __declspec(uuid("000610fa-0000-0000-c000-000000000046"))
AddressRuleCondition;
    // [ default ] interface _AddressRuleCondition

struct __declspec(uuid("000610df-0000-0000-c000-000000000046"))
SenderInAddressListRuleCondition;
    // [ default ] interface _SenderInAddressListRuleCondition

enum OlAddressListType
{
    olExchangeGlobalAddressList = 0,
    olExchangeContainer = 1,
    olOutlookAddressList = 2,
    olOutlookLdapAddressList = 3,
    olCustomAddressList = 4
};

struct __declspec(uuid("000610fb-0000-0000-c000-000000000046"))
FromRssFeedRuleCondition;
    // [ default ] interface _FromRssFeedRuleCondition

struct __declspec(uuid("000610cd-0000-0000-c000-000000000046"))
Rule;
    // [ default ] interface _Rule

enum OlSpecialFolders
{
    olSpecialFolderAllTasks = 0,
    olSpecialFolderReminders = 1
};

enum OlStorageIdentifierType
{
    olIdentifyBySubject = 0,
    olIdentifyByEntryID = 1,
    olIdentifyByMessageClass = 2
};

struct __declspec(uuid("000610d2-0000-0000-c000-000000000046"))
Table;
    // [ default ] interface _Table

struct __declspec(uuid("000610d3-0000-0000-c000-000000000046"))
Row;
    // [ default ] interface _Row

struct __declspec(uuid("000610e1-0000-0000-c000-000000000046"))
Columns;
    // [ default ] interface _Columns

struct __declspec(uuid("000610e5-0000-0000-c000-000000000046"))
Column;
    // [ default ] interface _Column

struct __declspec(uuid("000610e2-0000-0000-c000-000000000046"))
CalendarSharing;
    // [ default ] interface _CalendarSharing

enum OlCalendarMailFormat
{
    olCalendarMailFormatDailySchedule = 0,
    olCalendarMailFormatEventList = 1
};

struct __declspec(uuid("00061033-0000-0000-c000-000000000046"))
MailItem;
    // [ default ] interface _MailItem
    // [ source ] dispinterface ItemEvents
    // [ default, source ] dispinterface ItemEvents_10

enum OlFlagStatus
{
    olNoFlag = 0,
    olFlagComplete = 1,
    olFlagMarked = 2
};

enum OlRemoteStatus
{
    olRemoteStatusNone = 0,
    olUnMarked = 1,
    olMarkedForDownload = 2,
    olMarkedForCopy = 3,
    olMarkedForDelete = 4
};

enum OlBodyFormat
{
    olFormatUnspecified = 0,
    olFormatPlain = 1,
    olFormatHTML = 2,
    olFormatRichText = 3
};

enum OlDownloadState
{
    olHeaderOnly = 0,
    olFullItem = 1
};

enum OlFlagIcon
{
    olNoFlagIcon = 0,
    olPurpleFlagIcon = 1,
    olOrangeFlagIcon = 2,
    olGreenFlagIcon = 3,
    olYellowFlagIcon = 4,
    olBlueFlagIcon = 5,
    olRedFlagIcon = 6
};

enum OlPermission
{
    olUnrestricted = 0,
    olDoNotForward = 1,
    olPermissionTemplate = 2
};

enum OlPermissionService
{
    olUnknown = 0,
    olWindows = 1,
    olPassport = 2
};

struct __declspec(uuid("00061031-0000-0000-c000-000000000046"))
ContactItem;
    // [ default ] interface _ContactItem
    // [ source ] dispinterface ItemEvents
    // [ default, source ] dispinterface ItemEvents_10

struct __declspec(uuid("0006303a-0000-0000-c000-000000000046"))
ItemEvents : IDispatch
{
    //
    // Wrapper methods for error-handling
    //

    // Methods:
    HRESULT Open (
        VARIANT_BOOL * Cancel );
    HRESULT CustomAction (
        IDispatch * Action,
        IDispatch * Response,
        VARIANT_BOOL * Cancel );
    HRESULT CustomPropertyChange (
        _bstr_t Name );
    HRESULT Forward (
        IDispatch * Forward,
        VARIANT_BOOL * Cancel );
    HRESULT Close (
        VARIANT_BOOL * Cancel );
    HRESULT PropertyChange (
        _bstr_t Name );
    HRESULT Read ( );
    HRESULT Reply (
        IDispatch * Response,
        VARIANT_BOOL * Cancel );
    HRESULT ReplyAll (
        IDispatch * Response,
        VARIANT_BOOL * Cancel );
    HRESULT Send (
        VARIANT_BOOL * Cancel );
    HRESULT Write (
        VARIANT_BOOL * Cancel );
    HRESULT BeforeCheckNames (
        VARIANT_BOOL * Cancel );
    HRESULT AttachmentAdd (
        struct Attachment * Attachment );
    HRESULT AttachmentRead (
        struct Attachment * Attachment );
    HRESULT BeforeAttachmentSave (
        struct Attachment * Attachment,
        VARIANT_BOOL * Cancel );
};

struct __declspec(uuid("0006302b-0000-0000-c000-000000000046"))
ItemEvents_10 : IDispatch
{
    //
    // Wrapper methods for error-handling
    //

    // Methods:
    HRESULT Open (
        VARIANT_BOOL * Cancel );
    HRESULT CustomAction (
        IDispatch * Action,
        IDispatch * Response,
        VARIANT_BOOL * Cancel );
    HRESULT CustomPropertyChange (
        _bstr_t Name );
    HRESULT Forward (
        IDispatch * Forward,
        VARIANT_BOOL * Cancel );
    HRESULT Close (
        VARIANT_BOOL * Cancel );
    HRESULT PropertyChange (
        _bstr_t Name );
    HRESULT Read ( );
    HRESULT Reply (
        IDispatch * Response,
        VARIANT_BOOL * Cancel );
    HRESULT ReplyAll (
        IDispatch * Response,
        VARIANT_BOOL * Cancel );
    HRESULT Send (
        VARIANT_BOOL * Cancel );
    HRESULT Write (
        VARIANT_BOOL * Cancel );
    HRESULT BeforeCheckNames (
        VARIANT_BOOL * Cancel );
    HRESULT AttachmentAdd (
        struct Attachment * Attachment );
    HRESULT AttachmentRead (
        struct Attachment * Attachment );
    HRESULT BeforeAttachmentSave (
        struct Attachment * Attachment,
        VARIANT_BOOL * Cancel );
    HRESULT BeforeDelete (
        IDispatch * Item,
        VARIANT_BOOL * Cancel );
    HRESULT AttachmentRemove (
        struct Attachment * Attachment );
    HRESULT BeforeAttachmentAdd (
        struct Attachment * Attachment,
        VARIANT_BOOL * Cancel );
    HRESULT BeforeAttachmentPreview (
        struct Attachment * Attachment,
        VARIANT_BOOL * Cancel );
    HRESULT BeforeAttachmentRead (
        struct Attachment * Attachment,
        VARIANT_BOOL * Cancel );
    HRESULT BeforeAttachmentWriteToTempFile (
        struct Attachment * Attachment,
        VARIANT_BOOL * Cancel );
    HRESULT Unload ( );
    HRESULT BeforeAutoSave (
        VARIANT_BOOL * Cancel );
};

enum OlCalendarDetail
{
    olFreeBusyOnly = 0,
    olFreeBusyAndSubject = 1,
    olFullDetails = 2
};

struct __declspec(uuid("00061047-0000-0000-c000-000000000046"))
UserDefinedProperties;
    // [ default ] interface _UserDefinedProperties

struct __declspec(uuid("0006105c-0000-0000-c000-000000000046"))
UserDefinedProperty;
    // [ default ] interface _UserDefinedProperty

enum OlGender
{
    olUnspecified = 0,
    olFemale = 1,
    olMale = 2
};

enum OlMailingAddress
{
    olNone = 0,
    olHome = 1,
    olBusiness = 2,
    olOther = 3
};

enum OlContactPhoneNumber
{
    olContactPhoneAssistant = 0,
    olContactPhoneBusiness = 1,
    olContactPhoneBusiness2 = 2,
    olContactPhoneBusinessFax = 3,
    olContactPhoneCallback = 4,
    olContactPhoneCar = 5,
    olContactPhoneCompany = 6,
    olContactPhoneHome = 7,
    olContactPhoneHome2 = 8,
    olContactPhoneHomeFax = 9,
    olContactPhoneISDN = 10,
    olContactPhoneMobile = 11,
    olContactPhoneOther = 12,
    olContactPhoneOtherFax = 13,
    olContactPhonePager = 14,
    olContactPhonePrimary = 15,
    olContactPhoneRadio = 16,
    olContactPhoneTelex = 17,
    olContactPhoneTTYTTD = 18
};

enum OlBusinessCardType
{
    olBusinessCardTypeOutlook = 0,
    olBusinessCardTypeInterConnect = 1
};

struct __declspec(uuid("000610c9-0000-0000-c000-000000000046"))
ExchangeUser;
    // [ default ] interface _ExchangeUser

enum OlAddressEntryUserType
{
    olExchangeUserAddressEntry = 0,
    olExchangeDistributionListAddressEntry = 1,
    olExchangePublicFolderAddressEntry = 2,
    olExchangeAgentAddressEntry = 3,
    olExchangeOrganizationAddressEntry = 4,
    olExchangeRemoteUserAddressEntry = 5,
    olOutlookContactAddressEntry = 10,
    olOutlookDistributionListAddressEntry = 11,
    olLdapAddressEntry = 20,
    olSmtpAddressEntry = 30,
    olOtherAddressEntry = 40
};

struct __declspec(uuid("000610ca-0000-0000-c000-000000000046"))
ExchangeDistributionList;
    // [ default ] interface _ExchangeDistributionList

enum OlResponseStatus
{
    olResponseNone = 0,
    olResponseOrganized = 1,
    olResponseTentative = 2,
    olResponseAccepted = 3,
    olResponseDeclined = 4,
    olResponseNotResponded = 5
};

enum OlTrackingStatus
{
    olTrackingNone = 0,
    olTrackingDelivered = 1,
    olTrackingNotDelivered = 2,
    olTrackingNotRead = 3,
    olTrackingRecallFailure = 4,
    olTrackingRecallSuccess = 5,
    olTrackingRead = 6,
    olTrackingReplied = 7
};

enum OlDefaultFolders
{
    olFolderDeletedItems = 3,
    olFolderOutbox = 4,
    olFolderSentMail = 5,
    olFolderInbox = 6,
    olFolderCalendar = 9,
    olFolderContacts = 10,
    olFolderJournal = 11,
    olFolderNotes = 12,
    olFolderTasks = 13,
    olFolderDrafts = 16,
    olPublicFoldersAllPublicFolders = 18,
    olFolderConflicts = 19,
    olFolderSyncIssues = 20,
    olFolderLocalFailures = 21,
    olFolderServerFailures = 22,
    olFolderJunk = 23,
    olFolderRssFeeds = 25,
    olFolderToDo = 28,
    olFolderManagedEmail = 29
};

struct __declspec(uuid("00063084-0000-0000-c000-000000000046"))
SyncObject;
    // [ default ] interface _SyncObject
    // [ default, source ] dispinterface SyncObjectEvents

struct __declspec(uuid("00063085-0000-0000-c000-000000000046"))
SyncObjectEvents : IDispatch
{
    //
    // Wrapper methods for error-handling
    //

    // Methods:
    HRESULT SyncStart ( );
    HRESULT Progress (
        enum OlSyncState State,
        _bstr_t Description,
        long Value,
        long Max );
    HRESULT OnError (
        long Code,
        _bstr_t Description );
    HRESULT SyncEnd ( );
};

enum OlSyncState
{
    olSyncStopped = 0,
    olSyncStarted = 1
};

enum OlExchangeConnectionMode
{
    olNoExchange = 0,
    olOffline = 100,
    olCachedOffline = 200,
    olDisconnected = 300,
    olCachedDisconnected = 400,
    olCachedConnectedHeaders = 500,
    olCachedConnectedDrizzle = 600,
    olCachedConnectedFull = 700,
    olOnline = 800
};

enum OlStoreType
{
    olStoreDefault = 1,
    olStoreUnicode = 2,
    olStoreANSI = 3
};

struct __declspec(uuid("000610c4-0000-0000-c000-000000000046"))
Accounts;
    // [ default ] interface _Accounts

struct __declspec(uuid("000610c6-0000-0000-c000-000000000046"))
Stores;
    // [ default ] interface _Stores
    // [ default, source ] dispinterface StoresEvents_12

struct __declspec(uuid("000630f8-0000-0000-c000-000000000046"))
StoresEvents_12 : IDispatch
{
    //
    // Wrapper methods for error-handling
    //

    // Methods:
    HRESULT BeforeStoreRemove (
        struct _Store * Store,
        VARIANT_BOOL * Cancel );
    HRESULT StoreAdd (
        struct _Store * Store );
};

struct __declspec(uuid("000610c8-0000-0000-c000-000000000046"))
SelectNamesDialog;
    // [ default ] interface _SelectNamesDialog

enum OlRecipientSelectors
{
    olShowNone = 0,
    olShowTo = 1,
    olShowToCc = 2,
    olShowToCcBcc = 3
};

enum OlDefaultSelectNamesDisplayMode
{
    olDefaultMail = 1,
    olDefaultMeeting = 2,
    olDefaultSharingRequest = 4,
    olDefaultTask = 3,
    olDefaultMembers = 5,
    olDefaultDelegates = 6,
    olDefaultSingleName = 7,
    olDefaultPickRooms = 8
};

struct __declspec(uuid("000610e4-0000-0000-c000-000000000046"))
Categories;
    // [ default ] interface _Categories

enum OlCategoryColor
{
    olCategoryColorNone = 0,
    olCategoryColorRed = 1,
    olCategoryColorOrange = 2,
    olCategoryColorPeach = 3,
    olCategoryColorYellow = 4,
    olCategoryColorGreen = 5,
    olCategoryColorTeal = 6,
    olCategoryColorOlive = 7,
    olCategoryColorBlue = 8,
    olCategoryColorPurple = 9,
    olCategoryColorMaroon = 10,
    olCategoryColorSteel = 11,
    olCategoryColorDarkSteel = 12,
    olCategoryColorGray = 13,
    olCategoryColorDarkGray = 14,
    olCategoryColorBlack = 15,
    olCategoryColorDarkRed = 16,
    olCategoryColorDarkOrange = 17,
    olCategoryColorDarkPeach = 18,
    olCategoryColorDarkYellow = 19,
    olCategoryColorDarkGreen = 20,
    olCategoryColorDarkTeal = 21,
    olCategoryColorDarkOlive = 22,
    olCategoryColorDarkBlue = 23,
    olCategoryColorDarkPurple = 24,
    olCategoryColorDarkMaroon = 25
};

enum OlCategoryShortcutKey
{
    olCategoryShortcutKeyNone = 0,
    olCategoryShortcutKeyCtrlF2 = 1,
    olCategoryShortcutKeyCtrlF3 = 2,
    olCategoryShortcutKeyCtrlF4 = 3,
    olCategoryShortcutKeyCtrlF5 = 4,
    olCategoryShortcutKeyCtrlF6 = 5,
    olCategoryShortcutKeyCtrlF7 = 6,
    olCategoryShortcutKeyCtrlF8 = 7,
    olCategoryShortcutKeyCtrlF9 = 8,
    olCategoryShortcutKeyCtrlF10 = 9,
    olCategoryShortcutKeyCtrlF11 = 10,
    olCategoryShortcutKeyCtrlF12 = 11
};

struct __declspec(uuid("000610e3-0000-0000-c000-000000000046"))
Category;
    // [ default ] interface _Category

struct __declspec(uuid("00061067-0000-0000-c000-000000000046"))
SharingItem;
    // [ default ] interface _SharingItem
    // [ default, source ] dispinterface ItemEvents_10
    // [ source ] dispinterface ItemEvents

enum OlSharingProvider
{
    olProviderUnknown = 0,
    olProviderExchange = 1,
    olProviderWebCal = 2,
    olProviderPubCal = 3,
    olProviderICal = 4,
    olProviderSharePoint = 5,
    olProviderRSS = 6
};

enum OlSharingMsgType
{
    olSharingMsgTypeUnknown = 0,
    olSharingMsgTypeRequest = 1,
    olSharingMsgTypeInvite = 2,
    olSharingMsgTypeInviteAndRequest = 3,
    olSharingMsgTypeResponseAllow = 4,
    olSharingMsgTypeResponseDeny = 5
};

enum OlAutoDiscoverConnectionMode
{
    olAutoDiscoverConnectionUnknown = 0,
    olAutoDiscoverConnectionExternal = 1,
    olAutoDiscoverConnectionInternal = 2,
    olAutoDiscoverConnectionInternalDomain = 3
};

struct __declspec(uuid("00063050-0000-0000-c000-000000000046"))
Explorer;
    // [ default ] interface _Explorer
    // [ source ] dispinterface ExplorerEvents
    // [ default, source ] dispinterface ExplorerEvents_10

struct __declspec(uuid("0006304f-0000-0000-c000-000000000046"))
ExplorerEvents : IDispatch
{
    //
    // Wrapper methods for error-handling
    //

    // Methods:
    HRESULT Activate ( );
    HRESULT FolderSwitch ( );
    HRESULT BeforeFolderSwitch (
        IDispatch * NewFolder,
        VARIANT_BOOL * Cancel );
    HRESULT ViewSwitch ( );
    HRESULT BeforeViewSwitch (
        const _variant_t & NewView,
        VARIANT_BOOL * Cancel );
    HRESULT Deactivate ( );
    HRESULT SelectionChange ( );
    HRESULT Close ( );
};

struct __declspec(uuid("0006300f-0000-0000-c000-000000000046"))
ExplorerEvents_10 : IDispatch
{
    //
    // Wrapper methods for error-handling
    //

    // Methods:
    HRESULT Activate ( );
    HRESULT FolderSwitch ( );
    HRESULT BeforeFolderSwitch (
        IDispatch * NewFolder,
        VARIANT_BOOL * Cancel );
    HRESULT ViewSwitch ( );
    HRESULT BeforeViewSwitch (
        const _variant_t & NewView,
        VARIANT_BOOL * Cancel );
    HRESULT Deactivate ( );
    HRESULT SelectionChange ( );
    HRESULT Close ( );
    HRESULT BeforeMaximize (
        VARIANT_BOOL * Cancel );
    HRESULT BeforeMinimize (
        VARIANT_BOOL * Cancel );
    HRESULT BeforeMove (
        VARIANT_BOOL * Cancel );
    HRESULT BeforeSize (
        VARIANT_BOOL * Cancel );
    HRESULT BeforeItemCopy (
        VARIANT_BOOL * Cancel );
    HRESULT BeforeItemCut (
        VARIANT_BOOL * Cancel );
    HRESULT BeforeItemPaste (
        VARIANT * ClipboardContent,
        struct MAPIFolder * Target,
        VARIANT_BOOL * Cancel );
};

enum OlFolderDisplayMode
{
    olFolderDisplayNormal = 0,
    olFolderDisplayFolderOnly = 1,
    olFolderDisplayNoNavigation = 2
};

struct __declspec(uuid("00063058-0000-0000-c000-000000000046"))
Inspector;
    // [ default ] interface _Inspector
    // [ source ] dispinterface InspectorEvents
    // [ default, source ] dispinterface InspectorEvents_10

struct __declspec(uuid("0006307d-0000-0000-c000-000000000046"))
InspectorEvents : IDispatch
{
    //
    // Wrapper methods for error-handling
    //

    // Methods:
    HRESULT Activate ( );
    HRESULT Deactivate ( );
    HRESULT Close ( );
};

struct __declspec(uuid("0006302a-0000-0000-c000-000000000046"))
InspectorEvents_10 : IDispatch
{
    //
    // Wrapper methods for error-handling
    //

    // Methods:
    HRESULT Activate ( );
    HRESULT Deactivate ( );
    HRESULT Close ( );
    HRESULT BeforeMaximize (
        VARIANT_BOOL * Cancel );
    HRESULT BeforeMinimize (
        VARIANT_BOOL * Cancel );
    HRESULT BeforeMove (
        VARIANT_BOOL * Cancel );
    HRESULT BeforeSize (
        VARIANT_BOOL * Cancel );
    HRESULT PageChange (
        BSTR * ActivePageName );
};

enum OlReferenceType
{
    olWeak = 0,
    olStrong = 1
};

struct __declspec(uuid("000610fc-0000-0000-c000-000000000046"))
TimeZones;
    // [ default ] interface _TimeZones

struct __declspec(uuid("00067367-0000-0000-c000-000000000046"))
_OlkTimeZoneControl : IDispatch
{
    //
    // Property data
    //

    __declspec(property(get=GetValue,put=PutValue))
    _variant_t Value;
    __declspec(property(get=GetBorderStyle,put=PutBorderStyle))
    enum OlBorderStyle BorderStyle;
    __declspec(property(get=GetLocked,put=PutLocked))
    VARIANT_BOOL Locked;
    __declspec(property(get=GetAppointmentTimeField,put=PutAppointmentTimeField))
    enum OlAppointmentTimeField AppointmentTimeField;
    __declspec(property(get=GetSelectedTimeZoneIndex,put=PutSelectedTimeZoneIndex))
    long SelectedTimeZoneIndex;
    __declspec(property(get=GetMouseIcon,put=PutMouseIcon))
    PicturePtr MouseIcon;
    __declspec(property(get=GetMousePointer,put=PutMousePointer))
    enum OlMousePointer MousePointer;
    __declspec(property(get=GetEnabled,put=PutEnabled))
    VARIANT_BOOL Enabled;

    //
    // Wrapper methods for error-handling
    //

    enum OlAppointmentTimeField GetAppointmentTimeField ( );
    void PutAppointmentTimeField (
        enum OlAppointmentTimeField AppointmentTimeField );
    enum OlBorderStyle GetBorderStyle ( );
    void PutBorderStyle (
        enum OlBorderStyle BorderStyle );
    VARIANT_BOOL GetEnabled ( );
    void PutEnabled (
        VARIANT_BOOL Enabled );
    VARIANT_BOOL GetLocked ( );
    void PutLocked (
        VARIANT_BOOL Locked );
    PicturePtr GetMouseIcon ( );
    void PutMouseIcon (
        struct Picture * MouseIcon );
    enum OlMousePointer GetMousePointer ( );
    void PutMousePointer (
        enum OlMousePointer MousePointer );
    long GetSelectedTimeZoneIndex ( );
    void PutSelectedTimeZoneIndex (
        long SelectedTimeZoneIndex );
    _variant_t GetValue ( );
    void PutValue (
        const _variant_t & Value );
    HRESULT DropDown ( );

    //
    // Raw methods provided by interface
    //

      virtual HRESULT __stdcall get_AppointmentTimeField (
        /*[out,retval]*/ enum OlAppointmentTimeField * AppointmentTimeField ) = 0;
      virtual HRESULT __stdcall put_AppointmentTimeField (
        /*[in]*/ enum OlAppointmentTimeField AppointmentTimeField ) = 0;
      virtual HRESULT __stdcall get_BorderStyle (
        /*[out,retval]*/ enum OlBorderStyle * BorderStyle ) = 0;
      virtual HRESULT __stdcall put_BorderStyle (
        /*[in]*/ enum OlBorderStyle BorderStyle ) = 0;
      virtual HRESULT __stdcall get_Enabled (
        /*[out,retval]*/ VARIANT_BOOL * Enabled ) = 0;
      virtual HRESULT __stdcall put_Enabled (
        /*[in]*/ VARIANT_BOOL Enabled ) = 0;
      virtual HRESULT __stdcall get_Locked (
        /*[out,retval]*/ VARIANT_BOOL * Locked ) = 0;
      virtual HRESULT __stdcall put_Locked (
        /*[in]*/ VARIANT_BOOL Locked ) = 0;
      virtual HRESULT __stdcall get_MouseIcon (
        /*[out,retval]*/ struct Picture * * MouseIcon ) = 0;
      virtual HRESULT __stdcall put_MouseIcon (
        /*[in]*/ struct Picture * MouseIcon ) = 0;
      virtual HRESULT __stdcall get_MousePointer (
        /*[out,retval]*/ enum OlMousePointer * MousePointer ) = 0;
      virtual HRESULT __stdcall put_MousePointer (
        /*[in]*/ enum OlMousePointer MousePointer ) = 0;
      virtual HRESULT __stdcall get_SelectedTimeZoneIndex (
        /*[out,retval]*/ long * SelectedTimeZoneIndex ) = 0;
      virtual HRESULT __stdcall put_SelectedTimeZoneIndex (
        /*[in]*/ long SelectedTimeZoneIndex ) = 0;
      virtual HRESULT __stdcall get_Value (
        /*[out,retval]*/ VARIANT * Value ) = 0;
      virtual HRESULT __stdcall put_Value (
        /*[in]*/ VARIANT Value ) = 0;
      virtual HRESULT __stdcall raw_DropDown ( ) = 0;
};

struct __declspec(uuid("00067368-0000-0000-c000-000000000046"))
OlkTimeZoneControlEvents : IDispatch
{
    //
    // Wrapper methods for error-handling
    //

    // Methods:
    HRESULT Click ( );
    HRESULT DoubleClick ( );
    HRESULT MouseDown (
        enum OlMouseButton Button,
        enum OlShiftState Shift,
        OLE_XPOS_CONTAINER X,
        OLE_YPOS_CONTAINER Y );
    HRESULT MouseMove (
        enum OlMouseButton Button,
        enum OlShiftState Shift,
        OLE_XPOS_CONTAINER X,
        OLE_YPOS_CONTAINER Y );
    HRESULT MouseUp (
        enum OlMouseButton Button,
        enum OlShiftState Shift,
        OLE_XPOS_CONTAINER X,
        OLE_YPOS_CONTAINER Y );
    HRESULT Enter ( );
    HRESULT Exit (
        VARIANT_BOOL * Cancel );
    HRESULT KeyDown (
        long * KeyCode,
        enum OlShiftState Shift );
    HRESULT KeyPress (
        long * KeyAscii );
    HRESULT KeyUp (
        long * KeyCode,
        enum OlShiftState Shift );
    HRESULT Change ( );
    HRESULT DropButtonClick ( );
    HRESULT AfterUpdate ( );
    HRESULT BeforeUpdate (
        VARIANT_BOOL * Cancel );
};

struct __declspec(uuid("0006f059-0000-0000-c000-000000000046"))
OlkTimeZoneControl;
    // [ default ] interface _OlkTimeZoneControl
    // [ default, source ] dispinterface OlkTimeZoneControlEvents

enum OlBusyStatus
{
    olFree = 0,
    olTentative = 1,
    olBusy = 2,
    olOutOfOffice = 3
};

enum OlDaysOfWeek
{
    olSunday = 1,
    olMonday = 2,
    olTuesday = 4,
    olWednesday = 8,
    olThursday = 16,
    olFriday = 32,
    olSaturday = 64
};

enum OlJournalRecipientType
{
    olAssociatedContact = 1
};

enum OlMailRecipientType
{
    olOriginator = 0,
    olTo = 1,
    olCC = 2,
    olBCC = 3
};

enum OlMeetingRecipientType
{
    olOrganizer = 0,
    olRequired = 1,
    olOptional = 2,
    olResource = 3
};

enum OlMeetingResponse
{
    olMeetingTentative = 2,
    olMeetingAccepted = 3,
    olMeetingDeclined = 4
};

enum OlMeetingStatus
{
    olNonMeeting = 0,
    olMeeting = 1,
    olMeetingReceived = 3,
    olMeetingCanceled = 5,
    olMeetingReceivedAndCanceled = 7
};

enum OlNetMeetingType
{
    olNetMeeting = 0,
    olNetShow = 1,
    olExchangeConferencing = 2
};

enum OlNoteColor
{
    olBlue = 0,
    olGreen = 1,
    olPink = 2,
    olYellow = 3,
    olWhite = 4
};

enum OlOutlookBarViewType
{
    olLargeIcon = 0,
    olSmallIcon = 1
};

enum OlRecurrenceState
{
    olApptNotRecurring = 0,
    olApptMaster = 1,
    olApptOccurrence = 2,
    olApptException = 3
};

enum OlRecurrenceType
{
    olRecursDaily = 0,
    olRecursWeekly = 1,
    olRecursMonthly = 2,
    olRecursMonthNth = 3,
    olRecursYearly = 5,
    olRecursYearNth = 6
};

enum OlSaveAsType
{
    olTXT = 0,
    olRTF = 1,
    olTemplate = 2,
    olMSG = 3,
    olDoc = 4,
    olHTML = 5,
    olVCard = 6,
    olVCal = 7,
    olICal = 8,
    olMSGUnicode = 9,
    olMHTML = 10
};

enum OlSortOrder
{
    olSortNone = 0,
    olAscending = 1,
    olDescending = 2
};

enum OlTaskDelegationState
{
    olTaskNotDelegated = 0,
    olTaskDelegationUnknown = 1,
    olTaskDelegationAccepted = 2,
    olTaskDelegationDeclined = 3
};

enum OlTaskOwnership
{
    olNewTask = 0,
    olDelegatedTask = 1,
    olOwnTask = 2
};

enum OlTaskRecipientType
{
    olUpdate = 2,
    olFinalStatus = 3
};

enum OlTaskResponse
{
    olTaskSimple = 0,
    olTaskAssign = 1,
    olTaskAccept = 2,
    olTaskDecline = 3
};

enum OlTaskStatus
{
    olTaskNotStarted = 0,
    olTaskInProgress = 1,
    olTaskComplete = 2,
    olTaskWaiting = 3,
    olTaskDeferred = 4
};

enum OlOfficeDocItemsType
{
    olExcelWorkSheetItem = 8,
    olWordDocumentItem = 9,
    olPowerPointShowItem = 10
};

enum OlFormRegionMode
{
    olFormRegionRead = 0,
    olFormRegionCompose = 1,
    olFormRegionPreview = 2
};

enum OlFormRegionSize
{
    olFormRegionTypeSeparate = 0,
    olFormRegionTypeAdjoining = 1
};

enum OlRuleExecuteOption
{
    olRuleExecuteAllMessages = 0,
    olRuleExecuteReadMessages = 1,
    olRuleExecuteUnreadMessages = 2
};

enum OlDefaultExpandCollapseSetting
{
    olAllExpanded = 0,
    olAllCollapsed = 1,
    olLastViewed = 2
};

enum OlMultiLine
{
    olWidthMultiLine = 0,
    olAlwaysSingleLine = 1,
    olAlwaysMultiLine = 2
};

enum OlGridLineStyle
{
    olGridLineNone = 0,
    olGridLineSmallDots = 1,
    olGridLineLargeDots = 2,
    olGridLineDashes = 3,
    olGridLineSolid = 4
};

enum OlIconViewType
{
    olIconViewLarge = 0,
    olIconViewSmall = 1,
    olIconViewList = 2
};

enum OlIconViewPlacement
{
    olIconDoNotArrange = 0,
    olIconLineUp = 1,
    olIconAutoArrange = 2,
    olIconSortAndAutoArrange = 3
};

enum OlCalendarViewMode
{
    olCalendarViewDay = 0,
    olCalendarViewWeek = 1,
    olCalendarViewMonth = 2,
    olCalendarViewMultiDay = 3,
    olCalendarView5DayWeek = 4
};

enum OlDayWeekTimeScale
{
    olTimeScale5Minutes = 0,
    olTimeScale6Minutes = 1,
    olTimeScale10Minutes = 2,
    olTimeScale15Minutes = 3,
    olTimeScale30Minutes = 4,
    olTimeScale60Minutes = 5
};

enum OlTimelineViewMode
{
    olTimelineViewDay = 0,
    olTimelineViewWeek = 1,
    olTimelineViewMonth = 2
};

enum OlAutoPreview
{
    olAutoPreviewAll = 0,
    olAutoPreviewUnread = 1,
    olAutoPreviewNone = 2
};

enum OlColor
{
    olAutoColor = 0,
    olColorBlack = 1,
    olColorMaroon = 2,
    olColorGreen = 3,
    olColorOlive = 4,
    olColorNavy = 5,
    olColorPurple = 6,
    olColorTeal = 7,
    olColorGray = 8,
    olColorSilver = 9,
    olColorRed = 10,
    olColorLime = 11,
    olColorYellow = 12,
    olColorBlue = 13,
    olColorFuchsia = 14,
    olColorAqua = 15,
    olColorWhite = 16
};

enum OlAlign
{
    olAlignLeft = 0,
    olAlignCenter = 1,
    olAlignRight = 2
};

enum OlFormatCurrency
{
    olFormatCurrencyDecimal = 1,
    olFormatCurrencyNonDecimal = 2
};

enum OlFormatDateTime
{
    olFormatDateTimeLongDayDateTime = 1,
    olFormatDateTimeShortDateTime = 2,
    olFormatDateTimeShortDayDateTime = 3,
    olFormatDateTimeShortDayMonthDateTime = 4,
    OlFormatDateTimeLongDayDate = 5,
    olFormatDateTimeLongDate = 6,
    olFormatDateTimeLongDateReversed = 7,
    olFormatDateTimeShortDate = 8,
    olFormatDateTimeShortDateNumOnly = 9,
    olFormatDateTimeShortDayMonth = 10,
    olFormatDateTimeShortMonthYear = 11,
    olFormatDateTimeShortMonthYearNumOnly = 12,
    olFormatDateTimeShortDayDate = 13,
    olFormatDateTimeLongTime = 15,
    olFormatDateTimeShortTime = 16,
    olFormatDateTimeBestFit = 17
};

enum OlFormatDuration
{
    olFormatDurationShort = 1,
    olFormatDurationLong = 2,
    olFormatDurationShortBusiness = 3,
    olFormatDurationLongBusiness = 4
};

enum OlFormatInteger
{
    olFormatIntegerPlain = 1,
    olFormatIntegerComputer1 = 2,
    olFormatIntegerComputer2 = 3,
    olFormatIntegerComputer3 = 4
};

enum OlFormatKeywords
{
    olFormatKeywordsText = 1
};

enum OlFormatNumber
{
    olFormatNumberAllDigits = 1,
    olFormatNumberTruncated = 2,
    olFormatNumber1Decimal = 3,
    olFormatNumber2Decimal = 4,
    olFormatNumberScientific = 5,
    olFormatNumberComputer1 = 6,
    olFormatNumberComputer2 = 7,
    olFormatNumberComputer3 = 8,
    olFormatNumberRaw = 9
};

enum OlFormatPercent
{
    olFormatPercentRounded = 1,
    olFormatPercent1Decimal = 2,
    olFormatPercent2Decimal = 3,
    olFormatPercentAllDigits = 4
};

enum OlFormatYesNo
{
    olFormatYesNoYesNo = 1,
    olFormatYesNoOnOff = 2,
    olFormatYesNoTrueFalse = 3,
    olFormatYesNoIcon = 4
};

enum OlFormatEnumeration
{
    olFormatEnumBitmap = 1,
    olFormatEnumText = 2
};

enum OlFormatSmartFrom
{
    olFormatSmartFromFromTo = 1,
    olFormatSmartFromFromOnly = 2
};

enum OlContextMenu
{
    olItemContextMenu = 0,
    olViewContextMenu = 1,
    olFolderContextMenu = 2,
    olAttachmentContextMenu = 3,
    olStoreContextMenu = 4,
    olShortcutContextMenu = 5
};

enum OlFormatText
{
    olFormatTextText = 1
};

enum OlGroupType
{
    olCustomFoldersGroup = 0,
    olMyFoldersGroup = 1,
    olPeopleFoldersGroup = 2,
    olOtherFoldersGroup = 3,
    olFavoriteFoldersGroup = 4
};

enum OlTableContents
{
    olUserItems = 0,
    olHiddenItems = 1
};

enum OlFormRegionIcon
{
    olFormRegionIconDefault = 1,
    olFormRegionIconUnread = 2,
    olFormRegionIconRead = 3,
    olFormRegionIconReplied = 4,
    olFormRegionIconForwarded = 5,
    olFormRegionIconUnsent = 6,
    olFormRegionIconSubmitted = 7,
    olFormRegionIconSigned = 8,
    olFormRegionIconEncrypted = 9,
    olFormRegionIconWindow = 10,
    olFormRegionIconPage = 11,
    olFormRegionIconRecurring = 12
};

struct __declspec(uuid("0006304e-0000-0000-c000-000000000046"))
ApplicationEvents : IDispatch
{
    //
    // Wrapper methods for error-handling
    //

    // Methods:
    HRESULT ItemSend (
        IDispatch * Item,
        VARIANT_BOOL * Cancel );
    HRESULT NewMail ( );
    HRESULT Reminder (
        IDispatch * Item );
    HRESULT OptionsPagesAdd (
        struct PropertyPages * Pages );
    HRESULT Startup ( );
    HRESULT Quit ( );
};

struct __declspec(uuid("00061030-0000-0000-c000-000000000046"))
AppointmentItem;
    // [ default ] interface _AppointmentItem
    // [ source ] dispinterface ItemEvents
    // [ default, source ] dispinterface ItemEvents_10

struct __declspec(uuid("00061036-0000-0000-c000-000000000046"))
MeetingItem;
    // [ default ] interface _MeetingItem
    // [ source ] dispinterface ItemEvents
    // [ default, source ] dispinterface ItemEvents_10

struct __declspec(uuid("00063078-0000-0000-c000-000000000046"))
ExplorersEvents : IDispatch
{
    //
    // Wrapper methods for error-handling
    //

    // Methods:
    HRESULT NewExplorer (
        struct _Explorer * Explorer );
};

struct __declspec(uuid("00063076-0000-0000-c000-000000000046"))
FoldersEvents : IDispatch
{
    //
    // Wrapper methods for error-handling
    //

    // Methods:
    HRESULT FolderAdd (
        struct MAPIFolder * Folder );
    HRESULT FolderChange (
        struct MAPIFolder * Folder );
    HRESULT FolderRemove ( );
};

struct __declspec(uuid("00063079-0000-0000-c000-000000000046"))
InspectorsEvents : IDispatch
{
    //
    // Wrapper methods for error-handling
    //

    // Methods:
    HRESULT NewInspector (
        struct _Inspector * Inspector );
};

struct __declspec(uuid("00063077-0000-0000-c000-000000000046"))
ItemsEvents : IDispatch
{
    //
    // Wrapper methods for error-handling
    //

    // Methods:
    HRESULT ItemAdd (
        IDispatch * Item );
    HRESULT ItemChange (
        IDispatch * Item );
    HRESULT ItemRemove ( );
};

struct __declspec(uuid("0006308c-0000-0000-c000-000000000046"))
NameSpaceEvents : IDispatch
{
    //
    // Wrapper methods for error-handling
    //

    // Methods:
    HRESULT OptionsPagesAdd (
        struct PropertyPages * Pages,
        struct MAPIFolder * Folder );
    HRESULT AutoDiscoverComplete ( );
};

struct __declspec(uuid("0006307b-0000-0000-c000-000000000046"))
OutlookBarGroupsEvents : IDispatch
{
    //
    // Wrapper methods for error-handling
    //

    // Methods:
    HRESULT GroupAdd (
        struct OutlookBarGroup * NewGroup );
    HRESULT BeforeGroupAdd (
        VARIANT_BOOL * Cancel );
    HRESULT BeforeGroupRemove (
        struct OutlookBarGroup * Group,
        VARIANT_BOOL * Cancel );
};

struct __declspec(uuid("0006307a-0000-0000-c000-000000000046"))
OutlookBarPaneEvents : IDispatch
{
    //
    // Wrapper methods for error-handling
    //

    // Methods:
    HRESULT BeforeNavigate (
        struct OutlookBarShortcut * Shortcut,
        VARIANT_BOOL * Cancel );
    HRESULT BeforeGroupSwitch (
        struct OutlookBarGroup * ToGroup,
        VARIANT_BOOL * Cancel );
};

struct __declspec(uuid("0006307c-0000-0000-c000-000000000046"))
OutlookBarShortcutsEvents : IDispatch
{
    //
    // Wrapper methods for error-handling
    //

    // Methods:
    HRESULT ShortcutAdd (
        struct OutlookBarShortcut * NewShortcut );
    HRESULT BeforeShortcutAdd (
        VARIANT_BOOL * Cancel );
    HRESULT BeforeShortcutRemove (
        struct OutlookBarShortcut * Shortcut,
        VARIANT_BOOL * Cancel );
};

struct __declspec(uuid("0006307e-0000-0000-c000-000000000046"))
PropertyPage : IDispatch
{
    //
    // Property data
    //

    __declspec(property(get=GetDirty))
    VARIANT_BOOL Dirty;

    //
    // Wrapper methods for error-handling
    //

    HRESULT GetPageInfo (
        BSTR * HelpFile,
        long * HelpContext );
    VARIANT_BOOL GetDirty ( );
    HRESULT Apply ( );

    //
    // Raw methods provided by interface
    //

      virtual HRESULT __stdcall raw_GetPageInfo (
        /*[in,out]*/ BSTR * HelpFile,
        /*[in,out]*/ long * HelpContext ) = 0;
      virtual HRESULT __stdcall get_Dirty (
        /*[out,retval]*/ VARIANT_BOOL * Dirty ) = 0;
      virtual HRESULT __stdcall raw_Apply ( ) = 0;
};

struct __declspec(uuid("0006300e-0000-0000-c000-000000000046"))
ApplicationEvents_10 : IDispatch
{
    //
    // Wrapper methods for error-handling
    //

    // Methods:
    HRESULT ItemSend (
        IDispatch * Item,
        VARIANT_BOOL * Cancel );
    HRESULT NewMail ( );
    HRESULT Reminder (
        IDispatch * Item );
    HRESULT OptionsPagesAdd (
        struct PropertyPages * Pages );
    HRESULT Startup ( );
    HRESULT Quit ( );
    HRESULT AdvancedSearchComplete (
        struct Search * SearchObject );
    HRESULT AdvancedSearchStopped (
        struct Search * SearchObject );
    HRESULT MAPILogonComplete ( );
};

struct __declspec(uuid("0006302c-0000-0000-c000-000000000046"))
ApplicationEvents_11 : IDispatch
{
    //
    // Wrapper methods for error-handling
    //

    // Methods:
    HRESULT ItemSend (
        IDispatch * Item,
        VARIANT_BOOL * Cancel );
    HRESULT NewMail ( );
    HRESULT Reminder (
        IDispatch * Item );
    HRESULT OptionsPagesAdd (
        struct PropertyPages * Pages );
    HRESULT Startup ( );
    HRESULT Quit ( );
    HRESULT AdvancedSearchComplete (
        struct Search * SearchObject );
    HRESULT AdvancedSearchStopped (
        struct Search * SearchObject );
    HRESULT MAPILogonComplete ( );
    HRESULT NewMailEx (
        _bstr_t EntryIDCollection );
    HRESULT AttachmentContextMenuDisplay (
        struct Office::CommandBar * CommandBar,
        struct _AttachmentSelection * Attachments );
    HRESULT FolderContextMenuDisplay (
        struct Office::CommandBar * CommandBar,
        struct MAPIFolder * Folder );
    HRESULT StoreContextMenuDisplay (
        struct Office::CommandBar * CommandBar,
        struct _Store * Store );
    HRESULT ShortcutContextMenuDisplay (
        struct Office::CommandBar * CommandBar,
        struct OutlookBarShortcut * Shortcut );
    HRESULT ViewContextMenuDisplay (
        struct Office::CommandBar * CommandBar,
        struct View * View );
    HRESULT ItemContextMenuDisplay (
        struct Office::CommandBar * CommandBar,
        struct Selection * Selection );
    HRESULT ContextMenuClose (
        enum OlContextMenu ContextMenu );
    HRESULT ItemLoad (
        IDispatch * Item );
    HRESULT BeforeFolderSharingDialog (
        struct MAPIFolder * FolderToShare,
        VARIANT_BOOL * Cancel );
};

struct __declspec(uuid("000610f9-0000-0000-c000-000000000046"))
AttachmentSelection;
    // [ default ] interface _AttachmentSelection

struct __declspec(uuid("000610f7-0000-0000-c000-000000000046"))
Folder;
    // [ default, source ] dispinterface MAPIFolderEvents_12
    // [ default ] interface MAPIFolder

struct __declspec(uuid("000630f7-0000-0000-c000-000000000046"))
MAPIFolderEvents_12 : IDispatch
{
    //
    // Wrapper methods for error-handling
    //

    // Methods:
    HRESULT BeforeFolderMove (
        struct MAPIFolder * MoveTo,
        VARIANT_BOOL * Cancel );
    HRESULT BeforeItemMove (
        IDispatch * Item,
        struct MAPIFolder * MoveTo,
        VARIANT_BOOL * Cancel );
};

struct __declspec(uuid("0006300d-0000-0000-c000-000000000046"))
ResultsEvents : IDispatch
{
    //
    // Wrapper methods for error-handling
    //

    // Methods:
    HRESULT ItemAdd (
        IDispatch * Item );
    HRESULT ItemChange (
        IDispatch * Item );
    HRESULT ItemRemove ( );
};

struct __declspec(uuid("000630a5-0000-0000-c000-000000000046"))
_ViewsEvents : IDispatch
{
    //
    // Wrapper methods for error-handling
    //

    // Methods:
    HRESULT ViewAdd (
        struct View * View );
    HRESULT ViewRemove (
        struct View * View );
};

struct __declspec(uuid("000630b2-0000-0000-c000-000000000046"))
ReminderCollectionEvents : IDispatch
{
    //
    // Wrapper methods for error-handling
    //

    // Methods:
    HRESULT BeforeReminderShow (
        VARIANT_BOOL * Cancel );
    HRESULT ReminderAdd (
        struct _Reminder * ReminderObject );
    HRESULT ReminderChange (
        struct _Reminder * ReminderObject );
    HRESULT ReminderFire (
        struct _Reminder * ReminderObject );
    HRESULT ReminderRemove ( );
    HRESULT Snooze (
        struct _Reminder * ReminderObject );
};

struct __declspec(uuid("00061032-0000-0000-c000-000000000046"))
TaskItem;
    // [ default ] interface _TaskItem
    // [ source ] dispinterface ItemEvents
    // [ default, source ] dispinterface ItemEvents_10

struct __declspec(uuid("0006305b-0000-0000-c000-000000000046"))
FormRegionEvents : IDispatch
{
    //
    // Wrapper methods for error-handling
    //

    // Methods:
    HRESULT Expanded (
        VARIANT_BOOL Expand );
    HRESULT Close ( );
};

struct __declspec(uuid("000610a1-0000-0000-c000-000000000046"))
ViewFields;
    // [ default ] interface _ViewFields

struct __declspec(uuid("0006109e-0000-0000-c000-000000000046"))
ColumnFormat;
    // [ default ] interface _ColumnFormat

struct __declspec(uuid("0006f09f-0000-0000-c000-000000000046"))
ViewField;
    // [ default ] interface _ViewField

struct __declspec(uuid("0006109a-0000-0000-c000-000000000046"))
OrderFields;
    // [ default ] interface _OrderFields

struct __declspec(uuid("0006109b-0000-0000-c000-000000000046"))
OrderField;
    // [ default ] interface _OrderField

struct __declspec(uuid("0006109d-0000-0000-c000-000000000046"))
ViewFont;
    // [ default ] interface _ViewFont

struct __declspec(uuid("0006f0a2-0000-0000-c000-000000000046"))
AutoFormatRules;
    // [ default ] interface _AutoFormatRules

struct __declspec(uuid("0006f0a1-0000-0000-c000-000000000046"))
AutoFormatRule;
    // [ default ] interface _AutoFormatRule

struct __declspec(uuid("000610f1-0000-0000-c000-000000000046"))
NavigationFolders;
    // [ default ] interface _NavigationFolders

struct __declspec(uuid("000610f2-0000-0000-c000-000000000046"))
NavigationFolder;
    // [ default ] interface _NavigationFolder

struct __declspec(uuid("000610f0-0000-0000-c000-000000000046"))
NavigationGroup;
    // [ default ] interface _NavigationGroup

struct __declspec(uuid("000630f3-0000-0000-c000-000000000046"))
NavigationPaneEvents_12 : IDispatch
{
    //
    // Wrapper methods for error-handling
    //

    // Methods:
    HRESULT ModuleSwitch (
        struct _NavigationModule * CurrentModule );
};

struct __declspec(uuid("000630f4-0000-0000-c000-000000000046"))
NavigationGroupsEvents_12 : IDispatch
{
    //
    // Wrapper methods for error-handling
    //

    // Methods:
    HRESULT SelectedChange (
        struct _NavigationFolder * NavigationFolder );
    HRESULT NavigationFolderAdd (
        struct _NavigationFolder * NavigationFolder );
    HRESULT NavigationFolderRemove ( );
};

struct __declspec(uuid("0006315a-0000-0000-c000-000000000046"))
FormRegion;
    // [ default ] interface _FormRegion
    // [ default, source ] dispinterface FormRegionEvents

struct __declspec(uuid("00063059-0000-0000-c000-000000000046"))
_FormRegionStartup : IDispatch
{
    //
    // Wrapper methods for error-handling
    //

    _variant_t GetFormRegionStorage (
        _bstr_t FormRegionName,
        IDispatch * Item,
        long LCID,
        enum OlFormRegionMode FormRegionMode,
        enum OlFormRegionSize FormRegionSize );
    HRESULT BeforeFormRegionShow (
        struct _FormRegion * FormRegion );
    _variant_t GetFormRegionManifest (
        _bstr_t FormRegionName,
        long LCID );
    _variant_t GetFormRegionIcon (
        _bstr_t FormRegionName,
        long LCID,
        enum OlFormRegionIcon Icon );

    //
    // Raw methods provided by interface
    //

      virtual HRESULT __stdcall raw_GetFormRegionStorage (
        /*[in]*/ BSTR FormRegionName,
        /*[in]*/ IDispatch * Item,
        /*[in]*/ long LCID,
        /*[in]*/ enum OlFormRegionMode FormRegionMode,
        /*[in]*/ enum OlFormRegionSize FormRegionSize,
        /*[out,retval]*/ VARIANT * Storage ) = 0;
      virtual HRESULT __stdcall raw_BeforeFormRegionShow (
        /*[in]*/ struct _FormRegion * FormRegion ) = 0;
      virtual HRESULT __stdcall raw_GetFormRegionManifest (
        /*[in]*/ BSTR FormRegionName,
        /*[in]*/ long LCID,
        /*[out,retval]*/ VARIANT * Manifest ) = 0;
      virtual HRESULT __stdcall raw_GetFormRegionIcon (
        /*[in]*/ BSTR FormRegionName,
        /*[in]*/ long LCID,
        /*[in]*/ enum OlFormRegionIcon Icon,
        /*[out,retval]*/ VARIANT * Result ) = 0;
};

struct __declspec(uuid("0006f03a-0000-0000-c000-000000000046"))
Application;
    // [ default ] interface _Application
    // [ source ] dispinterface ApplicationEvents
    // [ source ] dispinterface ApplicationEvents_10
    // [ default, source ] dispinterface ApplicationEvents_11

struct __declspec(uuid("0006103c-0000-0000-c000-000000000046"))
DistListItem;
    // [ default ] interface _DistListItem
    // [ source ] dispinterface ItemEvents
    // [ default, source ] dispinterface ItemEvents_10

struct __declspec(uuid("00061061-0000-0000-c000-000000000046"))
DocumentItem;
    // [ default ] interface _DocumentItem
    // [ source ] dispinterface ItemEvents
    // [ default, source ] dispinterface ItemEvents_10

struct __declspec(uuid("00063053-0000-0000-c000-000000000046"))
Explorers;
    // [ default ] interface _Explorers
    // [ default, source ] dispinterface ExplorersEvents

struct __declspec(uuid("00063054-0000-0000-c000-000000000046"))
Inspectors;
    // [ default ] interface _Inspectors
    // [ default, source ] dispinterface InspectorsEvents

struct __declspec(uuid("00063051-0000-0000-c000-000000000046"))
Folders;
    // [ default ] interface _Folders
    // [ default, source ] dispinterface FoldersEvents

struct __declspec(uuid("00063052-0000-0000-c000-000000000046"))
Items;
    // [ default ] interface _Items
    // [ default, source ] dispinterface ItemsEvents

struct __declspec(uuid("00061037-0000-0000-c000-000000000046"))
JournalItem;
    // [ default ] interface _JournalItem
    // [ source ] dispinterface ItemEvents
    // [ default, source ] dispinterface ItemEvents_10

struct __declspec(uuid("0006308b-0000-0000-c000-000000000046"))
NameSpace;
    // [ default ] interface _NameSpace
    // [ default, source ] dispinterface NameSpaceEvents

struct __declspec(uuid("00061034-0000-0000-c000-000000000046"))
NoteItem;
    // [ default ] interface _NoteItem

struct __declspec(uuid("00063056-0000-0000-c000-000000000046"))
OutlookBarGroups;
    // [ default ] interface _OutlookBarGroups
    // [ default, source ] dispinterface OutlookBarGroupsEvents

struct __declspec(uuid("00063055-0000-0000-c000-000000000046"))
OutlookBarPane;
    // [ default ] interface _OutlookBarPane
    // [ default, source ] dispinterface OutlookBarPaneEvents

struct __declspec(uuid("00063057-0000-0000-c000-000000000046"))
OutlookBarShortcuts;
    // [ default ] interface _OutlookBarShortcuts
    // [ default, source ] dispinterface OutlookBarShortcutsEvents

struct __declspec(uuid("0006103a-0000-0000-c000-000000000046"))
PostItem;
    // [ default ] interface _PostItem
    // [ source ] dispinterface ItemEvents
    // [ default, source ] dispinterface ItemEvents_10

struct __declspec(uuid("00061060-0000-0000-c000-000000000046"))
RemoteItem;
    // [ default ] interface _RemoteItem
    // [ source ] dispinterface ItemEvents
    // [ default, source ] dispinterface ItemEvents_10

struct __declspec(uuid("00061035-0000-0000-c000-000000000046"))
ReportItem;
    // [ default ] interface _ReportItem
    // [ source ] dispinterface ItemEvents
    // [ default, source ] dispinterface ItemEvents_10

struct __declspec(uuid("00061052-0000-0000-c000-000000000046"))
TaskRequestAcceptItem;
    // [ default ] interface _TaskRequestAcceptItem
    // [ source ] dispinterface ItemEvents
    // [ default, source ] dispinterface ItemEvents_10

struct __declspec(uuid("00061053-0000-0000-c000-000000000046"))
TaskRequestDeclineItem;
    // [ default ] interface _TaskRequestDeclineItem
    // [ source ] dispinterface ItemEvents
    // [ default, source ] dispinterface ItemEvents_10

struct __declspec(uuid("00061050-0000-0000-c000-000000000046"))
TaskRequestItem;
    // [ default ] interface _TaskRequestItem
    // [ source ] dispinterface ItemEvents
    // [ default, source ] dispinterface ItemEvents_10

struct __declspec(uuid("00061051-0000-0000-c000-000000000046"))
TaskRequestUpdateItem;
    // [ default ] interface _TaskRequestUpdateItem
    // [ source ] dispinterface ItemEvents
    // [ default, source ] dispinterface ItemEvents_10

struct __declspec(uuid("00061039-0000-0000-c000-000000000046"))
Results;
    // [ default ] interface _Results
    // [ default, source ] dispinterface ResultsEvents

struct __declspec(uuid("0006f027-0000-0000-c000-000000000046"))
Views;
    // [ default ] interface _Views
    // [ default, source ] dispinterface _ViewsEvents

struct __declspec(uuid("0006f028-0000-0000-c000-000000000046"))
Reminder;
    // [ default ] interface _Reminder

struct __declspec(uuid("0006f029-0000-0000-c000-000000000046"))
Reminders;
    // [ default ] interface _Reminders
    // [ default, source ] dispinterface ReminderCollectionEvents

struct __declspec(uuid("000610cb-0000-0000-c000-000000000046"))
StorageItem;
    // [ default ] interface _StorageItem

struct __declspec(uuid("000610f3-0000-0000-c000-000000000046"))
NavigationPane;
    // [ default ] interface _NavigationPane
    // [ default, source ] dispinterface NavigationPaneEvents_12

struct __declspec(uuid("000610f4-0000-0000-c000-000000000046"))
NavigationGroups;
    // [ default ] interface _NavigationGroups
    // [ default, source ] dispinterface NavigationGroupsEvents_12

struct __declspec(uuid("000610f8-0000-0000-c000-000000000046"))
DoNotUseMeFolder;
    // [ default ] interface MAPIFolder

struct __declspec(uuid("00062001-0000-0000-c000-000000000046"))
TimelineView;
    // [ default ] interface _TimelineView

struct __declspec(uuid("000610e9-0000-0000-c000-000000000046"))
MailModule;
    // [ default ] interface _MailModule

struct __declspec(uuid("000610ea-0000-0000-c000-000000000046"))
CalendarModule;
    // [ default ] interface _CalendarModule

struct __declspec(uuid("000610eb-0000-0000-c000-000000000046"))
ContactsModule;
    // [ default ] interface _ContactsModule

struct __declspec(uuid("000610ec-0000-0000-c000-000000000046"))
TasksModule;
    // [ default ] interface _TasksModule

struct __declspec(uuid("000610ed-0000-0000-c000-000000000046"))
JournalModule;
    // [ default ] interface _JournalModule

struct __declspec(uuid("000610ee-0000-0000-c000-000000000046"))
NotesModule;
    // [ default ] interface _NotesModule

struct __declspec(uuid("00062000-0000-0000-c000-000000000046"))
TableView;
    // [ default ] interface _TableView

struct __declspec(uuid("00062004-0000-0000-c000-000000000046"))
IconView;
    // [ default ] interface _IconView

struct __declspec(uuid("00062002-0000-0000-c000-000000000046"))
CardView;
    // [ default ] interface _CardView

struct __declspec(uuid("00062003-0000-0000-c000-000000000046"))
CalendarView;
    // [ default ] interface _CalendarView

struct __declspec(uuid("0006200b-0000-0000-c000-000000000046"))
BusinessCardView;
    // [ default ] interface _BusinessCardView

struct __declspec(uuid("00061059-0000-0000-c000-000000000046"))
FormRegionStartup;
    // [ default ] interface _FormRegionStartup

struct __declspec(uuid("000610fd-0000-0000-c000-000000000046"))
TimeZone;
    // [ default ] interface _TimeZone

struct __declspec(uuid("000630fd-0000-0000-c000-000000000046"))
_TimeZone : IDispatch
{
    //
    // Property data
    //

    __declspec(property(get=GetApplication))
    _ApplicationPtr Application;
    __declspec(property(get=GetParent))
    IDispatchPtr Parent;
    __declspec(property(get=GetName))
    _bstr_t Name;
    __declspec(property(get=GetBias))
    long Bias;
    __declspec(property(get=GetStandardBias))
    long StandardBias;
    __declspec(property(get=GetDaylightBias))
    long DaylightBias;
    __declspec(property(get=GetStandardDate))
    DATE StandardDate;
    __declspec(property(get=GetDaylightDate))
    DATE DaylightDate;
    __declspec(property(get=GetClass))
    enum OlObjectClass Class;
    __declspec(property(get=GetSession))
    _NameSpacePtr Session;
    __declspec(property(get=GetDaylightDesignation))
    _bstr_t DaylightDesignation;
    __declspec(property(get=GetStandardDesignation))
    _bstr_t StandardDesignation;
    __declspec(property(get=GetID))
    _bstr_t ID;

    //
    // Wrapper methods for error-handling
    //

    _ApplicationPtr GetApplication ( );
    enum OlObjectClass GetClass ( );
    _NameSpacePtr GetSession ( );
    IDispatchPtr GetParent ( );
    _bstr_t GetName ( );
    _bstr_t GetDaylightDesignation ( );
    _bstr_t GetStandardDesignation ( );
    long GetBias ( );
    long GetStandardBias ( );
    long GetDaylightBias ( );
    DATE GetStandardDate ( );
    DATE GetDaylightDate ( );
    _bstr_t GetID ( );

    //
    // Raw methods provided by interface
    //

      virtual HRESULT __stdcall get_Application (
        /*[out,retval]*/ struct _Application * * Application ) = 0;
      virtual HRESULT __stdcall get_Class (
        /*[out,retval]*/ enum OlObjectClass * Class ) = 0;
      virtual HRESULT __stdcall get_Session (
        /*[out,retval]*/ struct _NameSpace * * Session ) = 0;
      virtual HRESULT __stdcall get_Parent (
        /*[out,retval]*/ IDispatch * * Parent ) = 0;
      virtual HRESULT __stdcall get_Name (
        /*[out,retval]*/ BSTR * Name ) = 0;
      virtual HRESULT __stdcall get_DaylightDesignation (
        /*[out,retval]*/ BSTR * DaylightDesignation ) = 0;
      virtual HRESULT __stdcall get_StandardDesignation (
        /*[out,retval]*/ BSTR * StandardDesignation ) = 0;
      virtual HRESULT __stdcall get_Bias (
        /*[out,retval]*/ long * Bias ) = 0;
      virtual HRESULT __stdcall get_StandardBias (
        /*[out,retval]*/ long * StandardBias ) = 0;
      virtual HRESULT __stdcall get_DaylightBias (
        /*[out,retval]*/ long * DaylightBias ) = 0;
      virtual HRESULT __stdcall get_StandardDate (
        /*[out,retval]*/ DATE * StandardDate ) = 0;
      virtual HRESULT __stdcall get_DaylightDate (
        /*[out,retval]*/ DATE * DaylightDate ) = 0;
      virtual HRESULT __stdcall get_ID (
        /*[out,retval]*/ BSTR * ID ) = 0;
};

struct __declspec(uuid("00063001-0000-0000-c000-000000000046"))
_Application : IDispatch
{
    //
    // Property data
    //

    __declspec(property(get=GetApplication))
    _ApplicationPtr Application;
    __declspec(property(get=GetParent))
    IDispatchPtr Parent;
    __declspec(property(get=GetName))
    _bstr_t Name;
    __declspec(property(get=GetAssistance))
    Office::IAssistancePtr Assistance;
    __declspec(property(get=GetTimeZones))
    _TimeZonesPtr TimeZones;
    __declspec(property(get=GetClass))
    enum OlObjectClass Class;
    __declspec(property(get=GetSession))
    _NameSpacePtr Session;
    __declspec(property(get=GetIsTrusted))
    VARIANT_BOOL IsTrusted;
    __declspec(property(get=GetAssistant))
    Office::AssistantPtr Assistant;
    __declspec(property(get=GetVersion))
    _bstr_t Version;
    __declspec(property(get=GetDefaultProfileName))
    _bstr_t DefaultProfileName;
    __declspec(property(get=GetCOMAddIns))
    Office::COMAddInsPtr COMAddIns;
    __declspec(property(get=GetExplorers))
    _ExplorersPtr Explorers;
    __declspec(property(get=GetInspectors))
    _InspectorsPtr Inspectors;
    __declspec(property(get=GetLanguageSettings))
    Office::LanguageSettingsPtr LanguageSettings;
    __declspec(property(get=GetProductCode))
    _bstr_t ProductCode;
    __declspec(property(get=GetAnswerWizard))
    Office::AnswerWizardPtr AnswerWizard;
    __declspec(property(get=GetReminders))
    _RemindersPtr Reminders;

    //
    // Wrapper methods for error-handling
    //

    _ApplicationPtr GetApplication ( );
    enum OlObjectClass GetClass ( );
    _NameSpacePtr GetSession ( );
    IDispatchPtr GetParent ( );
    Office::AssistantPtr GetAssistant ( );
    _bstr_t GetName ( );
    _bstr_t GetVersion ( );
    _ExplorerPtr ActiveExplorer ( );
    _InspectorPtr ActiveInspector ( );
    IDispatchPtr CreateItem (
        enum OlItemType ItemType );
    IDispatchPtr CreateItemFromTemplate (
        _bstr_t TemplatePath,
        const _variant_t & InFolder = vtMissing );
    IDispatchPtr CreateObject (
        _bstr_t ObjectName );
    _NameSpacePtr GetNamespace (
        _bstr_t Type );
    HRESULT Quit ( );
    Office::COMAddInsPtr GetCOMAddIns ( );
    _ExplorersPtr GetExplorers ( );
    _InspectorsPtr GetInspectors ( );
    Office::LanguageSettingsPtr GetLanguageSettings ( );
    _bstr_t GetProductCode ( );
    Office::AnswerWizardPtr GetAnswerWizard ( );
    enum Office::MsoFeatureInstall GetFeatureInstall ( );
    void PutFeatureInstall (
        enum Office::MsoFeatureInstall FeatureInstall );
    IDispatchPtr ActiveWindow ( );
    IDispatchPtr CopyFile (
        _bstr_t FilePath,
        _bstr_t DestFolderPath );
    SearchPtr AdvancedSearch (
        _bstr_t Scope,
        const _variant_t & Filter = vtMissing,
        const _variant_t & SearchSubFolders = vtMissing,
        const _variant_t & Tag = vtMissing );
    VARIANT_BOOL IsSearchSynchronous (
        _bstr_t LookInFolders );
    HRESULT GetNewNickNames (
        VARIANT * pvar );
    _RemindersPtr GetReminders ( );
    _bstr_t GetDefaultProfileName ( );
    VARIANT_BOOL GetIsTrusted ( );
    IDispatchPtr GetObjectReference (
        IDispatch * Item,
        enum OlReferenceType ReferenceType );
    Office::IAssistancePtr GetAssistance ( );
    _TimeZonesPtr GetTimeZones ( );

    //
    // Raw methods provided by interface
    //

      virtual HRESULT __stdcall get_Application (
        /*[out,retval]*/ struct _Application * * Application ) = 0;
      virtual HRESULT __stdcall get_Class (
        /*[out,retval]*/ enum OlObjectClass * Class ) = 0;
      virtual HRESULT __stdcall get_Session (
        /*[out,retval]*/ struct _NameSpace * * Session ) = 0;
      virtual HRESULT __stdcall get_Parent (
        /*[out,retval]*/ IDispatch * * Parent ) = 0;
      virtual HRESULT __stdcall get_Assistant (
        /*[out,retval]*/ struct Office::Assistant * * Assistant ) = 0;
      virtual HRESULT __stdcall get_Name (
        /*[out,retval]*/ BSTR * Name ) = 0;
      virtual HRESULT __stdcall get_Version (
        /*[out,retval]*/ BSTR * Version ) = 0;
      virtual HRESULT __stdcall raw_ActiveExplorer (
        /*[out,retval]*/ struct _Explorer * * ActiveExplorer ) = 0;
      virtual HRESULT __stdcall raw_ActiveInspector (
        /*[out,retval]*/ struct _Inspector * * ActiveInspector ) = 0;
      virtual HRESULT __stdcall raw_CreateItem (
        /*[in]*/ enum OlItemType ItemType,
        /*[out,retval]*/ IDispatch * * Item ) = 0;
      virtual HRESULT __stdcall raw_CreateItemFromTemplate (
        /*[in]*/ BSTR TemplatePath,
        /*[in]*/ VARIANT InFolder,
        /*[out,retval]*/ IDispatch * * Item ) = 0;
      virtual HRESULT __stdcall raw_CreateObject (
        /*[in]*/ BSTR ObjectName,
        /*[out,retval]*/ IDispatch * * Object ) = 0;
      virtual HRESULT __stdcall raw_GetNamespace (
        /*[in]*/ BSTR Type,
        /*[out,retval]*/ struct _NameSpace * * NameSpace ) = 0;
      virtual HRESULT __stdcall raw_Quit ( ) = 0;
      virtual HRESULT __stdcall get_COMAddIns (
        /*[out,retval]*/ struct Office::COMAddIns * * COMAddIns ) = 0;
      virtual HRESULT __stdcall get_Explorers (
        /*[out,retval]*/ struct _Explorers * * Explorers ) = 0;
      virtual HRESULT __stdcall get_Inspectors (
        /*[out,retval]*/ struct _Inspectors * * Inspectors ) = 0;
      virtual HRESULT __stdcall get_LanguageSettings (
        /*[out,retval]*/ struct Office::LanguageSettings * * LanguageSettings ) = 0;
      virtual HRESULT __stdcall get_ProductCode (
        /*[out,retval]*/ BSTR * ProductCode ) = 0;
      virtual HRESULT __stdcall get_AnswerWizard (
        /*[out,retval]*/ struct Office::AnswerWizard * * AnswerWizard ) = 0;
      virtual HRESULT __stdcall get_FeatureInstall (
        /*[out,retval]*/ enum Office::MsoFeatureInstall * FeatureInstall ) = 0;
      virtual HRESULT __stdcall put_FeatureInstall (
        /*[in]*/ enum Office::MsoFeatureInstall FeatureInstall ) = 0;
      virtual HRESULT __stdcall raw_ActiveWindow (
        /*[out,retval]*/ IDispatch * * ActiveWindow ) = 0;
      virtual HRESULT __stdcall raw_CopyFile (
        /*[in]*/ BSTR FilePath,
        /*[in]*/ BSTR DestFolderPath,
        /*[out,retval]*/ IDispatch * * DocItem ) = 0;
      virtual HRESULT __stdcall raw_AdvancedSearch (
        /*[in]*/ BSTR Scope,
        /*[in]*/ VARIANT Filter,
        /*[in]*/ VARIANT SearchSubFolders,
        /*[in]*/ VARIANT Tag,
        /*[out,retval]*/ struct Search * * AdvancedSearch ) = 0;
      virtual HRESULT __stdcall raw_IsSearchSynchronous (
        /*[in]*/ BSTR LookInFolders,
        /*[out,retval]*/ VARIANT_BOOL * IsSearchSynchronous ) = 0;
      virtual HRESULT __stdcall raw_GetNewNickNames (
        /*[in]*/ VARIANT * pvar ) = 0;
      virtual HRESULT __stdcall get_Reminders (
        /*[out,retval]*/ struct _Reminders * * Reminders ) = 0;
      virtual HRESULT __stdcall get_DefaultProfileName (
        /*[out,retval]*/ BSTR * DefaultProfileName ) = 0;
      virtual HRESULT __stdcall get_IsTrusted (
        /*[out,retval]*/ VARIANT_BOOL * IsTrusted ) = 0;
      virtual HRESULT __stdcall raw_GetObjectReference (
        /*[in]*/ IDispatch * Item,
        /*[in]*/ enum OlReferenceType ReferenceType,
        /*[out,retval]*/ IDispatch * * NewObject ) = 0;
      virtual HRESULT __stdcall get_Assistance (
        /*[out,retval]*/ struct Office::IAssistance * * Assistance ) = 0;
      virtual HRESULT __stdcall get_TimeZones (
        /*[out,retval]*/ struct _TimeZones * * TimeZones ) = 0;
};

struct __declspec(uuid("00063002-0000-0000-c000-000000000046"))
_NameSpace : IDispatch
{
    //
    // Property data
    //

    __declspec(property(get=GetApplication))
    _ApplicationPtr Application;
    __declspec(property(get=GetParent))
    IDispatchPtr Parent;
    __declspec(property(get=GetCurrentUser))
    RecipientPtr CurrentUser;
    __declspec(property(get=GetFolders))
    _FoldersPtr Folders;
    __declspec(property(get=GetType))
    _bstr_t Type;
    __declspec(property(get=GetMAPIOBJECT))
    IUnknownPtr MAPIOBJECT;
    __declspec(property(get=GetExchangeConnectionMode))
    enum OlExchangeConnectionMode ExchangeConnectionMode;
    __declspec(property(get=GetCategories))
    _CategoriesPtr Categories;
    __declspec(property(get=GetExchangeMailboxServerName))
    _bstr_t ExchangeMailboxServerName;
    __declspec(property(get=GetExchangeMailboxServerVersion))
    _bstr_t ExchangeMailboxServerVersion;
    __declspec(property(get=GetClass))
    enum OlObjectClass Class;
    __declspec(property(get=GetSession))
    _NameSpacePtr Session;
    __declspec(property(get=GetOffline))
    VARIANT_BOOL Offline;
    __declspec(property(get=GetAddressLists))
    AddressListsPtr AddressLists;
    __declspec(property(get=GetDefaultStore))
    _StorePtr DefaultStore;
    __declspec(property(get=GetAutoDiscoverXml))
    _bstr_t AutoDiscoverXml;
    __declspec(property(get=GetAccounts))
    _AccountsPtr Accounts;
    __declspec(property(get=GetAutoDiscoverConnectionMode))
    enum OlAutoDiscoverConnectionMode AutoDiscoverConnectionMode;
    __declspec(property(get=GetCurrentProfileName))
    _bstr_t CurrentProfileName;
    __declspec(property(get=GetSyncObjects))
    SyncObjectsPtr SyncObjects;
    __declspec(property(get=GetStores))
    _StoresPtr Stores;

    //
    // Wrapper methods for error-handling
    //

    _ApplicationPtr GetApplication ( );
    enum OlObjectClass GetClass ( );
    _NameSpacePtr GetSession ( );
    IDispatchPtr GetParent ( );
    RecipientPtr GetCurrentUser ( );
    _FoldersPtr GetFolders ( );
    _bstr_t GetType ( );
    AddressListsPtr GetAddressLists ( );
    RecipientPtr CreateRecipient (
        _bstr_t RecipientName );
    MAPIFolderPtr GetDefaultFolder (
        enum OlDefaultFolders FolderType );
    MAPIFolderPtr GetFolderFromID (
        _bstr_t EntryIDFolder,
        const _variant_t & EntryIDStore = vtMissing );
    IDispatchPtr GetItemFromID (
        _bstr_t EntryIDItem,
        const _variant_t & EntryIDStore = vtMissing );
    RecipientPtr GetRecipientFromID (
        _bstr_t EntryID );
    MAPIFolderPtr GetSharedDefaultFolder (
        struct Recipient * Recipient,
        enum OlDefaultFolders FolderType );
    HRESULT Logoff ( );
    HRESULT Logon (
        const _variant_t & Profile = vtMissing,
        const _variant_t & Password = vtMissing,
        const _variant_t & ShowDialog = vtMissing,
        const _variant_t & NewSession = vtMissing );
    MAPIFolderPtr PickFolder ( );
    HRESULT RefreshRemoteHeaders ( );
    SyncObjectsPtr GetSyncObjects ( );
    HRESULT AddStore (
        const _variant_t & Store );
    HRESULT RemoveStore (
        struct MAPIFolder * Folder );
    VARIANT_BOOL GetOffline ( );
    HRESULT Dial (
        const _variant_t & ContactItem = vtMissing );
    IUnknownPtr GetMAPIOBJECT ( );
    enum OlExchangeConnectionMode GetExchangeConnectionMode ( );
    HRESULT AddStoreEx (
        const _variant_t & Store,
        enum OlStoreType Type );
    _AccountsPtr GetAccounts ( );
    _bstr_t GetCurrentProfileName ( );
    _StoresPtr GetStores ( );
    _SelectNamesDialogPtr GetSelectNamesDialog ( );
    HRESULT SendAndReceive (
        VARIANT_BOOL showProgressDialog );
    _StorePtr GetDefaultStore ( );
    AddressEntryPtr GetAddressEntryFromID (
        _bstr_t ID );
    AddressListPtr GetGlobalAddressList ( );
    _StorePtr GetStoreFromID (
        _bstr_t ID );
    _CategoriesPtr GetCategories ( );
    MAPIFolderPtr OpenSharedFolder (
        _bstr_t Path,
        const _variant_t & Name = vtMissing,
        const _variant_t & DownloadAttachments = vtMissing,
        const _variant_t & UseTTL = vtMissing );
    IDispatchPtr OpenSharedItem (
        _bstr_t Path );
    _SharingItemPtr CreateSharingItem (
        const _variant_t & Context,
        const _variant_t & Provider = vtMissing );
    _bstr_t GetExchangeMailboxServerName ( );
    _bstr_t GetExchangeMailboxServerVersion ( );
    VARIANT_BOOL CompareEntryIDs (
        _bstr_t FirstEntryID,
        _bstr_t SecondEntryID );
    _bstr_t GetAutoDiscoverXml ( );
    enum OlAutoDiscoverConnectionMode GetAutoDiscoverConnectionMode ( );

    //
    // Raw methods provided by interface
    //

      virtual HRESULT __stdcall get_Application (
        /*[out,retval]*/ struct _Application * * Application ) = 0;
      virtual HRESULT __stdcall get_Class (
        /*[out,retval]*/ enum OlObjectClass * Class ) = 0;
      virtual HRESULT __stdcall get_Session (
        /*[out,retval]*/ struct _NameSpace * * Session ) = 0;
      virtual HRESULT __stdcall get_Parent (
        /*[out,retval]*/ IDispatch * * Parent ) = 0;
      virtual HRESULT __stdcall get_CurrentUser (
        /*[out,retval]*/ struct Recipient * * CurrentUser ) = 0;
      virtual HRESULT __stdcall get_Folders (
        /*[out,retval]*/ struct _Folders * * Folders ) = 0;
      virtual HRESULT __stdcall get_Type (
        /*[out,retval]*/ BSTR * Type ) = 0;
      virtual HRESULT __stdcall get_AddressLists (
        /*[out,retval]*/ struct AddressLists * * AddressLists ) = 0;
      virtual HRESULT __stdcall raw_CreateRecipient (
        /*[in]*/ BSTR RecipientName,
        /*[out,retval]*/ struct Recipient * * Recipient ) = 0;
      virtual HRESULT __stdcall raw_GetDefaultFolder (
        /*[in]*/ enum OlDefaultFolders FolderType,
        /*[out,retval]*/ struct MAPIFolder * * Folder ) = 0;
      virtual HRESULT __stdcall raw_GetFolderFromID (
        /*[in]*/ BSTR EntryIDFolder,
        /*[in]*/ VARIANT EntryIDStore,
        /*[out,retval]*/ struct MAPIFolder * * Folder ) = 0;
      virtual HRESULT __stdcall raw_GetItemFromID (
        /*[in]*/ BSTR EntryIDItem,
        /*[in]*/ VARIANT EntryIDStore,
        /*[out,retval]*/ IDispatch * * Item ) = 0;
      virtual HRESULT __stdcall raw_GetRecipientFromID (
        /*[in]*/ BSTR EntryID,
        /*[out,retval]*/ struct Recipient * * Recipient ) = 0;
      virtual HRESULT __stdcall raw_GetSharedDefaultFolder (
        /*[in]*/ struct Recipient * Recipient,
        /*[in]*/ enum OlDefaultFolders FolderType,
        /*[out,retval]*/ struct MAPIFolder * * Folder ) = 0;
      virtual HRESULT __stdcall raw_Logoff ( ) = 0;
      virtual HRESULT __stdcall raw_Logon (
        /*[in]*/ VARIANT Profile = vtMissing,
        /*[in]*/ VARIANT Password = vtMissing,
        /*[in]*/ VARIANT ShowDialog = vtMissing,
        /*[in]*/ VARIANT NewSession = vtMissing ) = 0;
      virtual HRESULT __stdcall raw_PickFolder (
        /*[out,retval]*/ struct MAPIFolder * * Folder ) = 0;
      virtual HRESULT __stdcall raw_RefreshRemoteHeaders ( ) = 0;
      virtual HRESULT __stdcall get_SyncObjects (
        /*[out,retval]*/ struct SyncObjects * * SyncObjects ) = 0;
      virtual HRESULT __stdcall raw_AddStore (
        /*[in]*/ VARIANT Store ) = 0;
      virtual HRESULT __stdcall raw_RemoveStore (
        /*[in]*/ struct MAPIFolder * Folder ) = 0;
      virtual HRESULT __stdcall get_Offline (
        /*[out,retval]*/ VARIANT_BOOL * Offline ) = 0;
      virtual HRESULT __stdcall raw_Dial (
        /*[in]*/ VARIANT ContactItem = vtMissing ) = 0;
      virtual HRESULT __stdcall get_MAPIOBJECT (
        /*[out,retval]*/ IUnknown * * MAPIOBJECT ) = 0;
      virtual HRESULT __stdcall get_ExchangeConnectionMode (
        /*[out,retval]*/ enum OlExchangeConnectionMode * ExchangeConnectionMode ) = 0;
      virtual HRESULT __stdcall raw_AddStoreEx (
        /*[in]*/ VARIANT Store,
        /*[in]*/ enum OlStoreType Type ) = 0;
      virtual HRESULT __stdcall get_Accounts (
        /*[out,retval]*/ struct _Accounts * * Accounts ) = 0;
      virtual HRESULT __stdcall get_CurrentProfileName (
        /*[out,retval]*/ BSTR * CurrentProfileName ) = 0;
      virtual HRESULT __stdcall get_Stores (
        /*[out,retval]*/ struct _Stores * * Stores ) = 0;
      virtual HRESULT __stdcall raw_GetSelectNamesDialog (
        /*[out,retval]*/ struct _SelectNamesDialog * * SelectNamesDialog ) = 0;
      virtual HRESULT __stdcall raw_SendAndReceive (
        /*[in]*/ VARIANT_BOOL showProgressDialog ) = 0;
      virtual HRESULT __stdcall get_DefaultStore (
        /*[out,retval]*/ struct _Store * * DefaultStore ) = 0;
      virtual HRESULT __stdcall raw_GetAddressEntryFromID (
        /*[in]*/ BSTR ID,
        /*[out,retval]*/ struct AddressEntry * * AddressEntry ) = 0;
      virtual HRESULT __stdcall raw_GetGlobalAddressList (
        /*[out,retval]*/ struct AddressList * * globalAddressList ) = 0;
      virtual HRESULT __stdcall raw_GetStoreFromID (
        /*[in]*/ BSTR ID,
        /*[out,retval]*/ struct _Store * * Store ) = 0;
      virtual HRESULT __stdcall get_Categories (
        /*[out,retval]*/ struct _Categories * * Categories ) = 0;
      virtual HRESULT __stdcall raw_OpenSharedFolder (
        /*[in]*/ BSTR Path,
        /*[in]*/ VARIANT Name,
        /*[in]*/ VARIANT DownloadAttachments,
        /*[in]*/ VARIANT UseTTL,
        /*[out,retval]*/ struct MAPIFolder * * ret ) = 0;
      virtual HRESULT __stdcall raw_OpenSharedItem (
        /*[in]*/ BSTR Path,
        /*[out,retval]*/ IDispatch * * Item ) = 0;
      virtual HRESULT __stdcall raw_CreateSharingItem (
        /*[in]*/ VARIANT Context,
        /*[in]*/ VARIANT Provider,
        /*[out,retval]*/ struct _SharingItem * * Item ) = 0;
      virtual HRESULT __stdcall get_ExchangeMailboxServerName (
        /*[out,retval]*/ BSTR * ExchangeMailboxServerName ) = 0;
      virtual HRESULT __stdcall get_ExchangeMailboxServerVersion (
        /*[out,retval]*/ BSTR * ExchangeMailboxServerVersion ) = 0;
      virtual HRESULT __stdcall raw_CompareEntryIDs (
        /*[in]*/ BSTR FirstEntryID,
        /*[in]*/ BSTR SecondEntryID,
        /*[out,retval]*/ VARIANT_BOOL * Result ) = 0;
      virtual HRESULT __stdcall get_AutoDiscoverXml (
        /*[out,retval]*/ BSTR * AutoDiscoverXml ) = 0;
      virtual HRESULT __stdcall get_AutoDiscoverConnectionMode (
        /*[out,retval]*/ enum OlAutoDiscoverConnectionMode * AutoDiscoverConnectionMode ) = 0;
};

struct __declspec(uuid("00063043-0000-0000-c000-000000000046"))
Action : IDispatch
{
    //
    // Property data
    //

    __declspec(property(get=GetApplication))
    _ApplicationPtr Application;
    __declspec(property(get=GetParent))
    IDispatchPtr Parent;
    __declspec(property(get=GetName,put=PutName))
    _bstr_t Name;
    __declspec(property(get=GetCopyLike,put=PutCopyLike))
    enum OlActionCopyLike CopyLike;
    __declspec(property(get=GetReplyStyle,put=PutReplyStyle))
    enum OlActionReplyStyle ReplyStyle;
    __declspec(property(get=GetResponseStyle,put=PutResponseStyle))
    enum OlActionResponseStyle ResponseStyle;
    __declspec(property(get=GetEnabled,put=PutEnabled))
    VARIANT_BOOL Enabled;
    __declspec(property(get=GetShowOn,put=PutShowOn))
    enum OlActionShowOn ShowOn;
    __declspec(property(get=GetClass))
    enum OlObjectClass Class;
    __declspec(property(get=GetSession))
    _NameSpacePtr Session;
    __declspec(property(get=GetMessageClass,put=PutMessageClass))
    _bstr_t MessageClass;
    __declspec(property(get=GetPrefix,put=PutPrefix))
    _bstr_t Prefix;

    //
    // Wrapper methods for error-handling
    //

    _ApplicationPtr GetApplication ( );
    enum OlObjectClass GetClass ( );
    _NameSpacePtr GetSession ( );
    IDispatchPtr GetParent ( );
    enum OlActionCopyLike GetCopyLike ( );
    void PutCopyLike (
        enum OlActionCopyLike CopyLike );
    VARIANT_BOOL GetEnabled ( );
    void PutEnabled (
        VARIANT_BOOL Enabled );
    _bstr_t GetMessageClass ( );
    void PutMessageClass (
        _bstr_t MessageClass );
    _bstr_t GetName ( );
    void PutName (
        _bstr_t Name );
    _bstr_t GetPrefix ( );
    void PutPrefix (
        _bstr_t Prefix );
    enum OlActionReplyStyle GetReplyStyle ( );
    void PutReplyStyle (
        enum OlActionReplyStyle ReplyStyle );
    enum OlActionResponseStyle GetResponseStyle ( );
    void PutResponseStyle (
        enum OlActionResponseStyle ResponseStyle );
    enum OlActionShowOn GetShowOn ( );
    void PutShowOn (
        enum OlActionShowOn ShowOn );
    HRESULT Delete ( );
    IDispatchPtr Execute ( );

    //
    // Raw methods provided by interface
    //

      virtual HRESULT __stdcall get_Application (
        /*[out,retval]*/ struct _Application * * Application ) = 0;
      virtual HRESULT __stdcall get_Class (
        /*[out,retval]*/ enum OlObjectClass * Class ) = 0;
      virtual HRESULT __stdcall get_Session (
        /*[out,retval]*/ struct _NameSpace * * Session ) = 0;
      virtual HRESULT __stdcall get_Parent (
        /*[out,retval]*/ IDispatch * * Parent ) = 0;
      virtual HRESULT __stdcall get_CopyLike (
        /*[out,retval]*/ enum OlActionCopyLike * CopyLike ) = 0;
      virtual HRESULT __stdcall put_CopyLike (
        /*[in]*/ enum OlActionCopyLike CopyLike ) = 0;
      virtual HRESULT __stdcall get_Enabled (
        /*[out,retval]*/ VARIANT_BOOL * Enabled ) = 0;
      virtual HRESULT __stdcall put_Enabled (
        /*[in]*/ VARIANT_BOOL Enabled ) = 0;
      virtual HRESULT __stdcall get_MessageClass (
        /*[out,retval]*/ BSTR * MessageClass ) = 0;
      virtual HRESULT __stdcall put_MessageClass (
        /*[in]*/ BSTR MessageClass ) = 0;
      virtual HRESULT __stdcall get_Name (
        /*[out,retval]*/ BSTR * Name ) = 0;
      virtual HRESULT __stdcall put_Name (
        /*[in]*/ BSTR Name ) = 0;
      virtual HRESULT __stdcall get_Prefix (
        /*[out,retval]*/ BSTR * Prefix ) = 0;
      virtual HRESULT __stdcall put_Prefix (
        /*[in]*/ BSTR Prefix ) = 0;
      virtual HRESULT __stdcall get_ReplyStyle (
        /*[out,retval]*/ enum OlActionReplyStyle * ReplyStyle ) = 0;
      virtual HRESULT __stdcall put_ReplyStyle (
        /*[in]*/ enum OlActionReplyStyle ReplyStyle ) = 0;
      virtual HRESULT __stdcall get_ResponseStyle (
        /*[out,retval]*/ enum OlActionResponseStyle * ResponseStyle ) = 0;
      virtual HRESULT __stdcall put_ResponseStyle (
        /*[in]*/ enum OlActionResponseStyle ResponseStyle ) = 0;
      virtual HRESULT __stdcall get_ShowOn (
        /*[out,retval]*/ enum OlActionShowOn * ShowOn ) = 0;
      virtual HRESULT __stdcall put_ShowOn (
        /*[in]*/ enum OlActionShowOn ShowOn ) = 0;
      virtual HRESULT __stdcall raw_Delete ( ) = 0;
      virtual HRESULT __stdcall raw_Execute (
        /*[out,retval]*/ IDispatch * * Item ) = 0;
};

struct __declspec(uuid("0006303e-0000-0000-c000-000000000046"))
Actions : IDispatch
{
    //
    // Property data
    //

    __declspec(property(get=GetApplication))
    _ApplicationPtr Application;
    __declspec(property(get=GetParent))
    IDispatchPtr Parent;
    __declspec(property(get=GetClass))
    enum OlObjectClass Class;
    __declspec(property(get=GetSession))
    _NameSpacePtr Session;
    __declspec(property(get=GetCount))
    long Count;

    //
    // Wrapper methods for error-handling
    //

    _ApplicationPtr GetApplication ( );
    enum OlObjectClass GetClass ( );
    _NameSpacePtr GetSession ( );
    IDispatchPtr GetParent ( );
    long GetCount ( );
    ActionPtr Item (
        const _variant_t & Index );
    ActionPtr Add ( );
    HRESULT Remove (
        long Index );

    //
    // Raw methods provided by interface
    //

      virtual HRESULT __stdcall get_Application (
        /*[out,retval]*/ struct _Application * * Application ) = 0;
      virtual HRESULT __stdcall get_Class (
        /*[out,retval]*/ enum OlObjectClass * Class ) = 0;
      virtual HRESULT __stdcall get_Session (
        /*[out,retval]*/ struct _NameSpace * * Session ) = 0;
      virtual HRESULT __stdcall get_Parent (
        /*[out,retval]*/ IDispatch * * Parent ) = 0;
      virtual HRESULT __stdcall get_Count (
        /*[out,retval]*/ long * Count ) = 0;
      virtual HRESULT __stdcall raw_Item (
        /*[in]*/ VARIANT Index,
        /*[out,retval]*/ struct Action * * Item ) = 0;
      virtual HRESULT __stdcall raw_Add (
        /*[out,retval]*/ struct Action * * Action ) = 0;
      virtual HRESULT __stdcall raw_Remove (
        /*[in]*/ long Index ) = 0;
};

struct __declspec(uuid("00063007-0000-0000-c000-000000000046"))
Attachment : IDispatch
{
    //
    // Property data
    //

    __declspec(property(get=GetApplication))
    _ApplicationPtr Application;
    __declspec(property(get=GetDisplayName,put=PutDisplayName))
    _bstr_t DisplayName;
    __declspec(property(get=GetMAPIOBJECT))
    IUnknownPtr MAPIOBJECT;
    __declspec(property(get=GetFileName))
    _bstr_t FileName;
    __declspec(property(get=GetType))
    enum OlAttachmentType Type;
    __declspec(property(get=GetPathName))
    _bstr_t PathName;
    __declspec(property(get=GetSize))
    long Size;
    __declspec(property(get=GetClass))
    enum OlObjectClass Class;
    __declspec(property(get=GetSession))
    _NameSpacePtr Session;
    __declspec(property(get=GetParent))
    IDispatchPtr Parent;
    __declspec(property(get=GetPosition,put=PutPosition))
    long Position;
    __declspec(property(get=GetBlockLevel))
    enum OlAttachmentBlockLevel BlockLevel;
    __declspec(property(get=GetIndex))
    long Index;
    __declspec(property(get=GetPropertyAccessor))
    _PropertyAccessorPtr PropertyAccessor;

    //
    // Wrapper methods for error-handling
    //

    _ApplicationPtr GetApplication ( );
    enum OlObjectClass GetClass ( );
    _NameSpacePtr GetSession ( );
    IDispatchPtr GetParent ( );
    _bstr_t GetDisplayName ( );
    void PutDisplayName (
        _bstr_t DisplayName );
    _bstr_t GetFileName ( );
    long GetIndex ( );
    IUnknownPtr GetMAPIOBJECT ( );
    _bstr_t GetPathName ( );
    long GetPosition ( );
    void PutPosition (
        long Position );
    enum OlAttachmentType GetType ( );
    HRESULT Delete ( );
    HRESULT SaveAsFile (
        _bstr_t Path );
    _PropertyAccessorPtr GetPropertyAccessor ( );
    long GetSize ( );
    enum OlAttachmentBlockLevel GetBlockLevel ( );

    //
    // Raw methods provided by interface
    //

      virtual HRESULT __stdcall get_Application (
        /*[out,retval]*/ struct _Application * * Application ) = 0;
      virtual HRESULT __stdcall get_Class (
        /*[out,retval]*/ enum OlObjectClass * Class ) = 0;
      virtual HRESULT __stdcall get_Session (
        /*[out,retval]*/ struct _NameSpace * * Session ) = 0;
      virtual HRESULT __stdcall get_Parent (
        /*[out,retval]*/ IDispatch * * Parent ) = 0;
      virtual HRESULT __stdcall get_DisplayName (
        /*[out,retval]*/ BSTR * DisplayName ) = 0;
      virtual HRESULT __stdcall put_DisplayName (
        /*[in]*/ BSTR DisplayName ) = 0;
      virtual HRESULT __stdcall get_FileName (
        /*[out,retval]*/ BSTR * FileName ) = 0;
      virtual HRESULT __stdcall get_Index (
        /*[out,retval]*/ long * Index ) = 0;
      virtual HRESULT __stdcall get_MAPIOBJECT (
        /*[out,retval]*/ IUnknown * * MAPIOBJECT ) = 0;
      virtual HRESULT __stdcall get_PathName (
        /*[out,retval]*/ BSTR * PathName ) = 0;
      virtual HRESULT __stdcall get_Position (
        /*[out,retval]*/ long * Position ) = 0;
      virtual HRESULT __stdcall put_Position (
        /*[in]*/ long Position ) = 0;
      virtual HRESULT __stdcall get_Type (
        /*[out,retval]*/ enum OlAttachmentType * Type ) = 0;
      virtual HRESULT __stdcall raw_Delete ( ) = 0;
      virtual HRESULT __stdcall raw_SaveAsFile (
        /*[in]*/ BSTR Path ) = 0;
      virtual HRESULT __stdcall get_PropertyAccessor (
        /*[out,retval]*/ struct _PropertyAccessor * * PropertyAccessor ) = 0;
      virtual HRESULT __stdcall get_Size (
        /*[out,retval]*/ long * Size ) = 0;
      virtual HRESULT __stdcall get_BlockLevel (
        /*[out,retval]*/ enum OlAttachmentBlockLevel * BlockLevel ) = 0;
};

struct __declspec(uuid("0006303c-0000-0000-c000-000000000046"))
Attachments : IDispatch
{
    //
    // Property data
    //

    __declspec(property(get=GetApplication))
    _ApplicationPtr Application;
    __declspec(property(get=GetParent))
    IDispatchPtr Parent;
    __declspec(property(get=GetClass))
    enum OlObjectClass Class;
    __declspec(property(get=GetSession))
    _NameSpacePtr Session;
    __declspec(property(get=GetCount))
    long Count;

    //
    // Wrapper methods for error-handling
    //

    _ApplicationPtr GetApplication ( );
    enum OlObjectClass GetClass ( );
    _NameSpacePtr GetSession ( );
    IDispatchPtr GetParent ( );
    long GetCount ( );
    AttachmentPtr Item (
        const _variant_t & Index );
    AttachmentPtr Add (
        const _variant_t & Source,
        const _variant_t & Type = vtMissing,
        const _variant_t & Position = vtMissing,
        const _variant_t & DisplayName = vtMissing );
    HRESULT Remove (
        long Index );

    //
    // Raw methods provided by interface
    //

      virtual HRESULT __stdcall get_Application (
        /*[out,retval]*/ struct _Application * * Application ) = 0;
      virtual HRESULT __stdcall get_Class (
        /*[out,retval]*/ enum OlObjectClass * Class ) = 0;
      virtual HRESULT __stdcall get_Session (
        /*[out,retval]*/ struct _NameSpace * * Session ) = 0;
      virtual HRESULT __stdcall get_Parent (
        /*[out,retval]*/ IDispatch * * Parent ) = 0;
      virtual HRESULT __stdcall get_Count (
        /*[out,retval]*/ long * Count ) = 0;
      virtual HRESULT __stdcall raw_Item (
        /*[in]*/ VARIANT Index,
        /*[out,retval]*/ struct Attachment * * Item ) = 0;
      virtual HRESULT __stdcall raw_Add (
        /*[in]*/ VARIANT Source,
        /*[in]*/ VARIANT Type,
        /*[in]*/ VARIANT Position,
        /*[in]*/ VARIANT DisplayName,
        /*[out,retval]*/ struct Attachment * * Attachment ) = 0;
      virtual HRESULT __stdcall raw_Remove (
        /*[in]*/ long Index ) = 0;
};

struct __declspec(uuid("0006302d-0000-0000-c000-000000000046"))
_PropertyAccessor : IDispatch
{
    //
    // Property data
    //

    __declspec(property(get=GetApplication))
    _ApplicationPtr Application;
    __declspec(property(get=GetParent))
    IDispatchPtr Parent;
    __declspec(property(get=GetClass))
    enum OlObjectClass Class;
    __declspec(property(get=GetSession))
    _NameSpacePtr Session;

    //
    // Wrapper methods for error-handling
    //

    _ApplicationPtr GetApplication ( );
    enum OlObjectClass GetClass ( );
    _NameSpacePtr GetSession ( );
    IDispatchPtr GetParent ( );
    _variant_t GetProperty (
        _bstr_t SchemaName );
    HRESULT SetProperty (
        _bstr_t SchemaName,
        const _variant_t & Value );
    _variant_t GetProperties (
        const _variant_t & SchemaNames );
    _variant_t SetProperties (
        const _variant_t & SchemaNames,
        const _variant_t & Values );
    DATE UTCToLocalTime (
        DATE Value );
    DATE LocalTimeToUTC (
        DATE Value );
    _variant_t StringToBinary (
        _bstr_t Value );
    _bstr_t BinaryToString (
        const _variant_t & Value );
    HRESULT DeleteProperty (
        _bstr_t SchemaName );
    _variant_t DeleteProperties (
        VARIANT * SchemaNames );

    //
    // Raw methods provided by interface
    //

      virtual HRESULT __stdcall get_Application (
        /*[out,retval]*/ struct _Application * * Application ) = 0;
      virtual HRESULT __stdcall get_Class (
        /*[out,retval]*/ enum OlObjectClass * Class ) = 0;
      virtual HRESULT __stdcall get_Session (
        /*[out,retval]*/ struct _NameSpace * * Session ) = 0;
      virtual HRESULT __stdcall get_Parent (
        /*[out,retval]*/ IDispatch * * Parent ) = 0;
      virtual HRESULT __stdcall raw_GetProperty (
        /*[in]*/ BSTR SchemaName,
        /*[out,retval]*/ VARIANT * Value ) = 0;
      virtual HRESULT __stdcall raw_SetProperty (
        /*[in]*/ BSTR SchemaName,
        /*[in]*/ VARIANT Value ) = 0;
      virtual HRESULT __stdcall raw_GetProperties (
        /*[in]*/ VARIANT SchemaNames,
        /*[out,retval]*/ VARIANT * Values ) = 0;
      virtual HRESULT __stdcall raw_SetProperties (
        /*[in]*/ VARIANT SchemaNames,
        /*[in]*/ VARIANT Values,
        /*[out,retval]*/ VARIANT * ErrorResults ) = 0;
      virtual HRESULT __stdcall raw_UTCToLocalTime (
        /*[in]*/ DATE Value,
        /*[out,retval]*/ DATE * ReturnValue ) = 0;
      virtual HRESULT __stdcall raw_LocalTimeToUTC (
        /*[in]*/ DATE Value,
        /*[out,retval]*/ DATE * ReturnValue ) = 0;
      virtual HRESULT __stdcall raw_StringToBinary (
        /*[in]*/ BSTR Value,
        /*[out,retval]*/ VARIANT * ReturnValue ) = 0;
      virtual HRESULT __stdcall raw_BinaryToString (
        /*[in]*/ VARIANT Value,
        /*[out,retval]*/ BSTR * ReturnValue ) = 0;
      virtual HRESULT __stdcall raw_DeleteProperty (
        /*[in]*/ BSTR SchemaName ) = 0;
      virtual HRESULT __stdcall raw_DeleteProperties (
        /*[in]*/ VARIANT * SchemaNames,
        /*[out,retval]*/ VARIANT * ErrorResults ) = 0;
};

struct __declspec(uuid("00063046-0000-0000-c000-000000000046"))
FormDescription : IDispatch
{
    //
    // Property data
    //

    __declspec(property(get=GetMiniIcon,put=PutMiniIcon))
    _bstr_t MiniIcon;
    __declspec(property(get=GetIcon,put=PutIcon))
    _bstr_t Icon;
    __declspec(property(get=GetName,put=PutName))
    _bstr_t Name;
    __declspec(property(get=GetDisplayName,put=PutDisplayName))
    _bstr_t DisplayName;
    __declspec(property(get=GetLocked,put=PutLocked))
    VARIANT_BOOL Locked;
    __declspec(property(get=GetOneOff,put=PutOneOff))
    VARIANT_BOOL OneOff;
    __declspec(property(get=GetApplication))
    _ApplicationPtr Application;
    __declspec(property(get=GetParent))
    IDispatchPtr Parent;
    __declspec(property(get=GetComment,put=PutComment))
    _bstr_t Comment;
    __declspec(property(get=GetNumber,put=PutNumber))
    _bstr_t Number;
    __declspec(property(get=GetPassword,put=PutPassword))
    _bstr_t Password;
    __declspec(property(get=GetScriptText))
    _bstr_t ScriptText;
    __declspec(property(get=GetTemplate,put=PutTemplate))
    _bstr_t Template;
    __declspec(property(get=GetUseWordMail,put=PutUseWordMail))
    VARIANT_BOOL UseWordMail;
    __declspec(property(get=GetClass))
    enum OlObjectClass Class;
    __declspec(property(get=GetSession))
    _NameSpacePtr Session;
    __declspec(property(get=GetMessageClass))
    _bstr_t MessageClass;
    __declspec(property(get=GetVersion,put=PutVersion))
    _bstr_t Version;
    __declspec(property(get=GetContactName,put=PutContactName))
    _bstr_t ContactName;
    __declspec(property(get=GetCategory,put=PutCategory))
    _bstr_t Category;
    __declspec(property(get=GetCategorySub,put=PutCategorySub))
    _bstr_t CategorySub;
    __declspec(property(get=GetHidden,put=PutHidden))
    VARIANT_BOOL Hidden;

    //
    // Wrapper methods for error-handling
    //

    _ApplicationPtr GetApplication ( );
    enum OlObjectClass GetClass ( );
    _NameSpacePtr GetSession ( );
    IDispatchPtr GetParent ( );
    _bstr_t GetCategory ( );
    void PutCategory (
        _bstr_t Category );
    _bstr_t GetCategorySub ( );
    void PutCategorySub (
        _bstr_t CategorySub );
    _bstr_t GetComment ( );
    void PutComment (
        _bstr_t Comment );
    _bstr_t GetContactName ( );
    void PutContactName (
        _bstr_t ContactName );
    _bstr_t GetDisplayName ( );
    void PutDisplayName (
        _bstr_t DisplayName );
    VARIANT_BOOL GetHidden ( );
    void PutHidden (
        VARIANT_BOOL Hidden );
    _bstr_t GetIcon ( );
    void PutIcon (
        _bstr_t Icon );
    VARIANT_BOOL GetLocked ( );
    void PutLocked (
        VARIANT_BOOL Locked );
    _bstr_t GetMessageClass ( );
    _bstr_t GetMiniIcon ( );
    void PutMiniIcon (
        _bstr_t MiniIcon );
    _bstr_t GetName ( );
    void PutName (
        _bstr_t Name );
    _bstr_t GetNumber ( );
    void PutNumber (
        _bstr_t Number );
    VARIANT_BOOL GetOneOff ( );
    void PutOneOff (
        VARIANT_BOOL OneOff );
    _bstr_t GetPassword ( );
    void PutPassword (
        _bstr_t Password );
    _bstr_t GetScriptText ( );
    _bstr_t GetTemplate ( );
    void PutTemplate (
        _bstr_t Template );
    VARIANT_BOOL GetUseWordMail ( );
    void PutUseWordMail (
        VARIANT_BOOL UseWordMail );
    _bstr_t GetVersion ( );
    void PutVersion (
        _bstr_t Version );
    HRESULT PublishForm (
        enum OlFormRegistry Registry,
        const _variant_t & Folder = vtMissing );

    //
    // Raw methods provided by interface
    //

      virtual HRESULT __stdcall get_Application (
        /*[out,retval]*/ struct _Application * * Application ) = 0;
      virtual HRESULT __stdcall get_Class (
        /*[out,retval]*/ enum OlObjectClass * Class ) = 0;
      virtual HRESULT __stdcall get_Session (
        /*[out,retval]*/ struct _NameSpace * * Session ) = 0;
      virtual HRESULT __stdcall get_Parent (
        /*[out,retval]*/ IDispatch * * Parent ) = 0;
      virtual HRESULT __stdcall get_Category (
        /*[out,retval]*/ BSTR * Category ) = 0;
      virtual HRESULT __stdcall put_Category (
        /*[in]*/ BSTR Category ) = 0;
      virtual HRESULT __stdcall get_CategorySub (
        /*[out,retval]*/ BSTR * CategorySub ) = 0;
      virtual HRESULT __stdcall put_CategorySub (
        /*[in]*/ BSTR CategorySub ) = 0;
      virtual HRESULT __stdcall get_Comment (
        /*[out,retval]*/ BSTR * Comment ) = 0;
      virtual HRESULT __stdcall put_Comment (
        /*[in]*/ BSTR Comment ) = 0;
      virtual HRESULT __stdcall get_ContactName (
        /*[out,retval]*/ BSTR * ContactName ) = 0;
      virtual HRESULT __stdcall put_ContactName (
        /*[in]*/ BSTR ContactName ) = 0;
      virtual HRESULT __stdcall get_DisplayName (
        /*[out,retval]*/ BSTR * DisplayName ) = 0;
      virtual HRESULT __stdcall put_DisplayName (
        /*[in]*/ BSTR DisplayName ) = 0;
      virtual HRESULT __stdcall get_Hidden (
        /*[out,retval]*/ VARIANT_BOOL * Hidden ) = 0;
      virtual HRESULT __stdcall put_Hidden (
        /*[in]*/ VARIANT_BOOL Hidden ) = 0;
      virtual HRESULT __stdcall get_Icon (
        /*[out,retval]*/ BSTR * Icon ) = 0;
      virtual HRESULT __stdcall put_Icon (
        /*[in]*/ BSTR Icon ) = 0;
      virtual HRESULT __stdcall get_Locked (
        /*[out,retval]*/ VARIANT_BOOL * Locked ) = 0;
      virtual HRESULT __stdcall put_Locked (
        /*[in]*/ VARIANT_BOOL Locked ) = 0;
      virtual HRESULT __stdcall get_MessageClass (
        /*[out,retval]*/ BSTR * MessageClass ) = 0;
      virtual HRESULT __stdcall get_MiniIcon (
        /*[out,retval]*/ BSTR * MiniIcon ) = 0;
      virtual HRESULT __stdcall put_MiniIcon (
        /*[in]*/ BSTR MiniIcon ) = 0;
      virtual HRESULT __stdcall get_Name (
        /*[out,retval]*/ BSTR * Name ) = 0;
      virtual HRESULT __stdcall put_Name (
        /*[in]*/ BSTR Name ) = 0;
      virtual HRESULT __stdcall get_Number (
        /*[out,retval]*/ BSTR * Number ) = 0;
      virtual HRESULT __stdcall put_Number (
        /*[in]*/ BSTR Number ) = 0;
      virtual HRESULT __stdcall get_OneOff (
        /*[out,retval]*/ VARIANT_BOOL * OneOff ) = 0;
      virtual HRESULT __stdcall put_OneOff (
        /*[in]*/ VARIANT_BOOL OneOff ) = 0;
      virtual HRESULT __stdcall get_Password (
        /*[out,retval]*/ BSTR * Password ) = 0;
      virtual HRESULT __stdcall put_Password (
        /*[in]*/ BSTR Password ) = 0;
      virtual HRESULT __stdcall get_ScriptText (
        /*[out,retval]*/ BSTR * ScriptText ) = 0;
      virtual HRESULT __stdcall get_Template (
        /*[out,retval]*/ BSTR * Template ) = 0;
      virtual HRESULT __stdcall put_Template (
        /*[in]*/ BSTR Template ) = 0;
      virtual HRESULT __stdcall get_UseWordMail (
        /*[out,retval]*/ VARIANT_BOOL * UseWordMail ) = 0;
      virtual HRESULT __stdcall put_UseWordMail (
        /*[in]*/ VARIANT_BOOL UseWordMail ) = 0;
      virtual HRESULT __stdcall get_Version (
        /*[out,retval]*/ BSTR * Version ) = 0;
      virtual HRESULT __stdcall put_Version (
        /*[in]*/ BSTR Version ) = 0;
      virtual HRESULT __stdcall raw_PublishForm (
        /*[in]*/ enum OlFormRegistry Registry,
        /*[in]*/ VARIANT Folder = vtMissing ) = 0;
};

struct __declspec(uuid("00063005-0000-0000-c000-000000000046"))
_Inspector : IDispatch
{
    //
    // Property data
    //

    __declspec(property(get=GetApplication))
    _ApplicationPtr Application;
    __declspec(property(get=GetParent))
    IDispatchPtr Parent;
    __declspec(property(get=GetCommandBars))
    Office::_CommandBarsPtr CommandBars;
    __declspec(property(get=GetCurrentItem))
    IDispatchPtr CurrentItem;
    __declspec(property(get=GetModifiedFormPages))
    IDispatchPtr ModifiedFormPages;
    __declspec(property(get=GetClass))
    enum OlObjectClass Class;
    __declspec(property(get=GetSession))
    _NameSpacePtr Session;
    __declspec(property(get=GetHTMLEditor))
    IDispatchPtr HTMLEditor;
    __declspec(property(get=GetWordEditor))
    IDispatchPtr WordEditor;
    __declspec(property(get=GetEditorType))
    enum OlEditorType EditorType;
    __declspec(property(get=GetCaption))
    _bstr_t Caption;
    __declspec(property(get=GetWindowState,put=PutWindowState))
    enum OlWindowState WindowState;
    __declspec(property(get=GetHeight,put=PutHeight))
    long Height;
    __declspec(property(get=GetLeft,put=PutLeft))
    long Left;
    __declspec(property(get=GetTop,put=PutTop))
    long Top;
    __declspec(property(get=GetWidth,put=PutWidth))
    long Width;

    //
    // Wrapper methods for error-handling
    //

    _ApplicationPtr GetApplication ( );
    enum OlObjectClass GetClass ( );
    _NameSpacePtr GetSession ( );
    IDispatchPtr GetParent ( );
    Office::_CommandBarsPtr GetCommandBars ( );
    IDispatchPtr GetCurrentItem ( );
    enum OlEditorType GetEditorType ( );
    IDispatchPtr GetModifiedFormPages ( );
    HRESULT Close (
        enum OlInspectorClose SaveMode );
    HRESULT Display (
        const _variant_t & Modal = vtMissing );
    HRESULT HideFormPage (
        _bstr_t PageName );
    VARIANT_BOOL IsWordMail ( );
    HRESULT SetCurrentFormPage (
        _bstr_t PageName );
    HRESULT ShowFormPage (
        _bstr_t PageName );
    IDispatchPtr GetHTMLEditor ( );
    IDispatchPtr GetWordEditor ( );
    _bstr_t GetCaption ( );
    long GetHeight ( );
    void PutHeight (
        long Height );
    long GetLeft ( );
    void PutLeft (
        long Left );
    long GetTop ( );
    void PutTop (
        long Top );
    long GetWidth ( );
    void PutWidth (
        long Width );
    enum OlWindowState GetWindowState ( );
    void PutWindowState (
        enum OlWindowState WindowState );
    HRESULT Activate ( );
    HRESULT SetControlItemProperty (
        IDispatch * Control,
        _bstr_t PropertyName );
    IDispatchPtr NewFormRegion ( );
    IDispatchPtr OpenFormRegion (
        _bstr_t Path );
    HRESULT SaveFormRegion (
        IDispatch * Page,
        _bstr_t FileName );

    //
    // Raw methods provided by interface
    //

      virtual HRESULT __stdcall get_Application (
        /*[out,retval]*/ struct _Application * * Application ) = 0;
      virtual HRESULT __stdcall get_Class (
        /*[out,retval]*/ enum OlObjectClass * Class ) = 0;
      virtual HRESULT __stdcall get_Session (
        /*[out,retval]*/ struct _NameSpace * * Session ) = 0;
      virtual HRESULT __stdcall get_Parent (
        /*[out,retval]*/ IDispatch * * Parent ) = 0;
      virtual HRESULT __stdcall get_CommandBars (
        /*[out,retval]*/ struct Office::_CommandBars * * CommandBars ) = 0;
      virtual HRESULT __stdcall get_CurrentItem (
        /*[out,retval]*/ IDispatch * * CurrentItem ) = 0;
      virtual HRESULT __stdcall get_EditorType (
        /*[out,retval]*/ enum OlEditorType * EditorType ) = 0;
      virtual HRESULT __stdcall get_ModifiedFormPages (
        /*[out,retval]*/ IDispatch * * ModifiedFormPages ) = 0;
      virtual HRESULT __stdcall raw_Close (
        /*[in]*/ enum OlInspectorClose SaveMode ) = 0;
      virtual HRESULT __stdcall raw_Display (
        /*[in]*/ VARIANT Modal = vtMissing ) = 0;
      virtual HRESULT __stdcall raw_HideFormPage (
        /*[in]*/ BSTR PageName ) = 0;
      virtual HRESULT __stdcall raw_IsWordMail (
        /*[out,retval]*/ VARIANT_BOOL * IsWordMail ) = 0;
      virtual HRESULT __stdcall raw_SetCurrentFormPage (
        /*[in]*/ BSTR PageName ) = 0;
      virtual HRESULT __stdcall raw_ShowFormPage (
        /*[in]*/ BSTR PageName ) = 0;
      virtual HRESULT __stdcall get_HTMLEditor (
        /*[out,retval]*/ IDispatch * * HTMLEditor ) = 0;
      virtual HRESULT __stdcall get_WordEditor (
        /*[out,retval]*/ IDispatch * * WordEditor ) = 0;
      virtual HRESULT __stdcall get_Caption (
        /*[out,retval]*/ BSTR * Caption ) = 0;
      virtual HRESULT __stdcall get_Height (
        /*[out,retval]*/ long * Height ) = 0;
      virtual HRESULT __stdcall put_Height (
        /*[in]*/ long Height ) = 0;
      virtual HRESULT __stdcall get_Left (
        /*[out,retval]*/ long * Left ) = 0;
      virtual HRESULT __stdcall put_Left (
        /*[in]*/ long Left ) = 0;
      virtual HRESULT __stdcall get_Top (
        /*[out,retval]*/ long * Top ) = 0;
      virtual HRESULT __stdcall put_Top (
        /*[in]*/ long Top ) = 0;
      virtual HRESULT __stdcall get_Width (
        /*[out,retval]*/ long * Width ) = 0;
      virtual HRESULT __stdcall put_Width (
        /*[in]*/ long Width ) = 0;
      virtual HRESULT __stdcall get_WindowState (
        /*[out,retval]*/ enum OlWindowState * WindowState ) = 0;
      virtual HRESULT __stdcall put_WindowState (
        /*[in]*/ enum OlWindowState WindowState ) = 0;
      virtual HRESULT __stdcall raw_Activate ( ) = 0;
      virtual HRESULT __stdcall raw_SetControlItemProperty (
        /*[in]*/ IDispatch * Control,
        /*[in]*/ BSTR PropertyName ) = 0;
      virtual HRESULT __stdcall raw_NewFormRegion (
        /*[out,retval]*/ IDispatch * * Form ) = 0;
      virtual HRESULT __stdcall raw_OpenFormRegion (
        /*[in]*/ BSTR Path,
        /*[out,retval]*/ IDispatch * * Form ) = 0;
      virtual HRESULT __stdcall raw_SaveFormRegion (
        /*[in]*/ IDispatch * Page,
        /*[in]*/ BSTR FileName ) = 0;
};

struct __declspec(uuid("00063042-0000-0000-c000-000000000046"))
UserProperty : IDispatch
{
    //
    // Property data
    //

    __declspec(property(get=GetApplication))
    _ApplicationPtr Application;
    __declspec(property(get=GetParent))
    IDispatchPtr Parent;
    __declspec(property(get=GetValue,put=PutValue))
    _variant_t Value;
    __declspec(property(get=GetFormula,put=PutFormula))
    _bstr_t Formula;
    __declspec(property(get=GetValidationFormula,put=PutValidationFormula))
    _bstr_t ValidationFormula;
    __declspec(property(get=GetValidationText,put=PutValidationText))
    _bstr_t ValidationText;
    __declspec(property(get=GetClass))
    enum OlObjectClass Class;
    __declspec(property(get=GetSession))
    _NameSpacePtr Session;
    __declspec(property(get=GetIsUserProperty))
    VARIANT_BOOL IsUserProperty;
    __declspec(property(get=GetType))
    enum OlUserPropertyType Type;
    __declspec(property(get=GetName))
    _bstr_t Name;

    //
    // Wrapper methods for error-handling
    //

    _ApplicationPtr GetApplication ( );
    enum OlObjectClass GetClass ( );
    _NameSpacePtr GetSession ( );
    IDispatchPtr GetParent ( );
    _bstr_t GetFormula ( );
    void PutFormula (
        _bstr_t Formula );
    _bstr_t GetName ( );
    enum OlUserPropertyType GetType ( );
    _bstr_t GetValidationFormula ( );
    void PutValidationFormula (
        _bstr_t ValidationFormula );
    _bstr_t GetValidationText ( );
    void PutValidationText (
        _bstr_t ValidationText );
    _variant_t GetValue ( );
    void PutValue (
        const _variant_t & Value );
    HRESULT Delete ( );
    VARIANT_BOOL GetIsUserProperty ( );

    //
    // Raw methods provided by interface
    //

      virtual HRESULT __stdcall get_Application (
        /*[out,retval]*/ struct _Application * * Application ) = 0;
      virtual HRESULT __stdcall get_Class (
        /*[out,retval]*/ enum OlObjectClass * Class ) = 0;
      virtual HRESULT __stdcall get_Session (
        /*[out,retval]*/ struct _NameSpace * * Session ) = 0;
      virtual HRESULT __stdcall get_Parent (
        /*[out,retval]*/ IDispatch * * Parent ) = 0;
      virtual HRESULT __stdcall get_Formula (
        /*[out,retval]*/ BSTR * Formula ) = 0;
      virtual HRESULT __stdcall put_Formula (
        /*[in]*/ BSTR Formula ) = 0;
      virtual HRESULT __stdcall get_Name (
        /*[out,retval]*/ BSTR * Name ) = 0;
      virtual HRESULT __stdcall get_Type (
        /*[out,retval]*/ enum OlUserPropertyType * Type ) = 0;
      virtual HRESULT __stdcall get_ValidationFormula (
        /*[out,retval]*/ BSTR * ValidationFormula ) = 0;
      virtual HRESULT __stdcall put_ValidationFormula (
        /*[in]*/ BSTR ValidationFormula ) = 0;
      virtual HRESULT __stdcall get_ValidationText (
        /*[out,retval]*/ BSTR * ValidationText ) = 0;
      virtual HRESULT __stdcall put_ValidationText (
        /*[in]*/ BSTR ValidationText ) = 0;
      virtual HRESULT __stdcall get_Value (
        /*[out,retval]*/ VARIANT * Value ) = 0;
      virtual HRESULT __stdcall put_Value (
        /*[in]*/ VARIANT Value ) = 0;
      virtual HRESULT __stdcall raw_Delete ( ) = 0;
      virtual HRESULT __stdcall get_IsUserProperty (
        /*[out,retval]*/ VARIANT_BOOL * IsUserProperty ) = 0;
};

struct __declspec(uuid("0006303d-0000-0000-c000-000000000046"))
UserProperties : IDispatch
{
    //
    // Property data
    //

    __declspec(property(get=GetApplication))
    _ApplicationPtr Application;
    __declspec(property(get=GetParent))
    IDispatchPtr Parent;
    __declspec(property(get=GetClass))
    enum OlObjectClass Class;
    __declspec(property(get=GetSession))
    _NameSpacePtr Session;
    __declspec(property(get=GetCount))
    long Count;

    //
    // Wrapper methods for error-handling
    //

    _ApplicationPtr GetApplication ( );
    enum OlObjectClass GetClass ( );
    _NameSpacePtr GetSession ( );
    IDispatchPtr GetParent ( );
    long GetCount ( );
    UserPropertyPtr Item (
        const _variant_t & Index );
    UserPropertyPtr Add (
        _bstr_t Name,
        enum OlUserPropertyType Type,
        const _variant_t & AddToFolderFields = vtMissing,
        const _variant_t & DisplayFormat = vtMissing );
    UserPropertyPtr Find (
        _bstr_t Name,
        const _variant_t & Custom = vtMissing );
    HRESULT Remove (
        long Index );

    //
    // Raw methods provided by interface
    //

      virtual HRESULT __stdcall get_Application (
        /*[out,retval]*/ struct _Application * * Application ) = 0;
      virtual HRESULT __stdcall get_Class (
        /*[out,retval]*/ enum OlObjectClass * Class ) = 0;
      virtual HRESULT __stdcall get_Session (
        /*[out,retval]*/ struct _NameSpace * * Session ) = 0;
      virtual HRESULT __stdcall get_Parent (
        /*[out,retval]*/ IDispatch * * Parent ) = 0;
      virtual HRESULT __stdcall get_Count (
        /*[out,retval]*/ long * Count ) = 0;
      virtual HRESULT __stdcall raw_Item (
        /*[in]*/ VARIANT Index,
        /*[out,retval]*/ struct UserProperty * * Item ) = 0;
      virtual HRESULT __stdcall raw_Add (
        /*[in]*/ BSTR Name,
        /*[in]*/ enum OlUserPropertyType Type,
        /*[in]*/ VARIANT AddToFolderFields,
        /*[in]*/ VARIANT DisplayFormat,
        /*[out,retval]*/ struct UserProperty * * UserProperty ) = 0;
      virtual HRESULT __stdcall raw_Find (
        /*[in]*/ BSTR Name,
        /*[in]*/ VARIANT Custom,
        /*[out,retval]*/ struct UserProperty * * UserProperty ) = 0;
      virtual HRESULT __stdcall raw_Remove (
        /*[in]*/ long Index ) = 0;
};

struct __declspec(uuid("00063041-0000-0000-c000-000000000046"))
_Items : IDispatch
{
    //
    // Property data
    //

    __declspec(property(get=GetApplication))
    _ApplicationPtr Application;
    __declspec(property(get=GetParent))
    IDispatchPtr Parent;
    __declspec(property(get=GetClass))
    enum OlObjectClass Class;
    __declspec(property(get=GetSession))
    _NameSpacePtr Session;
    __declspec(property(get=GetIncludeRecurrences,put=PutIncludeRecurrences))
    VARIANT_BOOL IncludeRecurrences;
    __declspec(property(get=GetCount))
    long Count;
    __declspec(property(get=GetRawTable))
    IUnknownPtr RawTable;

    //
    // Wrapper methods for error-handling
    //

    _ApplicationPtr GetApplication ( );
    enum OlObjectClass GetClass ( );
    _NameSpacePtr GetSession ( );
    IDispatchPtr GetParent ( );
    long GetCount ( );
    IDispatchPtr Item (
        const _variant_t & Index );
    IUnknownPtr GetRawTable ( );
    VARIANT_BOOL GetIncludeRecurrences ( );
    void PutIncludeRecurrences (
        VARIANT_BOOL IncludeRecurrences );
    IDispatchPtr Add (
        const _variant_t & Type = vtMissing );
    IDispatchPtr Find (
        _bstr_t Filter );
    IDispatchPtr FindNext ( );
    IDispatchPtr GetFirst ( );
    IDispatchPtr GetLast ( );
    IDispatchPtr GetNext ( );
    IDispatchPtr GetPrevious ( );
    HRESULT Remove (
        long Index );
    HRESULT ResetColumns ( );
    _ItemsPtr Restrict (
        _bstr_t Filter );
    HRESULT SetColumns (
        _bstr_t Columns );
    HRESULT Sort (
        _bstr_t Property,
        const _variant_t & Descending = vtMissing );

    //
    // Raw methods provided by interface
    //

      virtual HRESULT __stdcall get_Application (
        /*[out,retval]*/ struct _Application * * Application ) = 0;
      virtual HRESULT __stdcall get_Class (
        /*[out,retval]*/ enum OlObjectClass * Class ) = 0;
      virtual HRESULT __stdcall get_Session (
        /*[out,retval]*/ struct _NameSpace * * Session ) = 0;
      virtual HRESULT __stdcall get_Parent (
        /*[out,retval]*/ IDispatch * * Parent ) = 0;
      virtual HRESULT __stdcall get_Count (
        /*[out,retval]*/ long * Count ) = 0;
      virtual HRESULT __stdcall raw_Item (
        /*[in]*/ VARIANT Index,
        /*[out,retval]*/ IDispatch * * Item ) = 0;
      virtual HRESULT __stdcall get_RawTable (
        /*[out,retval]*/ IUnknown * * RawTable ) = 0;
      virtual HRESULT __stdcall get_IncludeRecurrences (
        /*[out,retval]*/ VARIANT_BOOL * IncludeRecurrences ) = 0;
      virtual HRESULT __stdcall put_IncludeRecurrences (
        /*[in]*/ VARIANT_BOOL IncludeRecurrences ) = 0;
      virtual HRESULT __stdcall raw_Add (
        /*[in]*/ VARIANT Type,
        /*[out,retval]*/ IDispatch * * Item ) = 0;
      virtual HRESULT __stdcall raw_Find (
        /*[in]*/ BSTR Filter,
        /*[out,retval]*/ IDispatch * * Item ) = 0;
      virtual HRESULT __stdcall raw_FindNext (
        /*[out,retval]*/ IDispatch * * Item ) = 0;
      virtual HRESULT __stdcall raw_GetFirst (
        /*[out,retval]*/ IDispatch * * Item ) = 0;
      virtual HRESULT __stdcall raw_GetLast (
        /*[out,retval]*/ IDispatch * * Item ) = 0;
      virtual HRESULT __stdcall raw_GetNext (
        /*[out,retval]*/ IDispatch * * Item ) = 0;
      virtual HRESULT __stdcall raw_GetPrevious (
        /*[out,retval]*/ IDispatch * * Item ) = 0;
      virtual HRESULT __stdcall raw_Remove (
        /*[in]*/ long Index ) = 0;
      virtual HRESULT __stdcall raw_ResetColumns ( ) = 0;
      virtual HRESULT __stdcall raw_Restrict (
        /*[in]*/ BSTR Filter,
        /*[out,retval]*/ struct _Items * * Items ) = 0;
      virtual HRESULT __stdcall raw_SetColumns (
        /*[in]*/ BSTR Columns ) = 0;
      virtual HRESULT __stdcall raw_Sort (
        /*[in]*/ BSTR Property,
        /*[in]*/ VARIANT Descending = vtMissing ) = 0;
};

struct __declspec(uuid("00063009-0000-0000-c000-000000000046"))
Panes : IDispatch
{
    //
    // Property data
    //

    __declspec(property(get=GetApplication))
    _ApplicationPtr Application;
    __declspec(property(get=GetParent))
    IDispatchPtr Parent;
    __declspec(property(get=GetClass))
    enum OlObjectClass Class;
    __declspec(property(get=GetSession))
    _NameSpacePtr Session;
    __declspec(property(get=GetCount))
    long Count;

    //
    // Wrapper methods for error-handling
    //

    _ApplicationPtr GetApplication ( );
    enum OlObjectClass GetClass ( );
    _NameSpacePtr GetSession ( );
    IDispatchPtr GetParent ( );
    long GetCount ( );
    IDispatchPtr Item (
        const _variant_t & Index );

    //
    // Raw methods provided by interface
    //

      virtual HRESULT __stdcall get_Application (
        /*[out,retval]*/ struct _Application * * Application ) = 0;
      virtual HRESULT __stdcall get_Class (
        /*[out,retval]*/ enum OlObjectClass * Class ) = 0;
      virtual HRESULT __stdcall get_Session (
        /*[out,retval]*/ struct _NameSpace * * Session ) = 0;
      virtual HRESULT __stdcall get_Parent (
        /*[out,retval]*/ IDispatch * * Parent ) = 0;
      virtual HRESULT __stdcall get_Count (
        /*[out,retval]*/ long * Count ) = 0;
      virtual HRESULT __stdcall raw_Item (
        /*[in]*/ VARIANT Index,
        /*[out,retval]*/ IDispatch * * Item ) = 0;
};

struct __declspec(uuid("00063087-0000-0000-c000-000000000046"))
Selection : IDispatch
{
    //
    // Property data
    //

    __declspec(property(get=GetApplication))
    _ApplicationPtr Application;
    __declspec(property(get=GetParent))
    IDispatchPtr Parent;
    __declspec(property(get=GetClass))
    enum OlObjectClass Class;
    __declspec(property(get=GetSession))
    _NameSpacePtr Session;
    __declspec(property(get=GetCount))
    long Count;

    //
    // Wrapper methods for error-handling
    //

    _ApplicationPtr GetApplication ( );
    enum OlObjectClass GetClass ( );
    _NameSpacePtr GetSession ( );
    IDispatchPtr GetParent ( );
    long GetCount ( );
    IDispatchPtr Item (
        const _variant_t & Index );

    //
    // Raw methods provided by interface
    //

      virtual HRESULT __stdcall get_Application (
        /*[out,retval]*/ struct _Application * * Application ) = 0;
      virtual HRESULT __stdcall get_Class (
        /*[out,retval]*/ enum OlObjectClass * Class ) = 0;
      virtual HRESULT __stdcall get_Session (
        /*[out,retval]*/ struct _NameSpace * * Session ) = 0;
      virtual HRESULT __stdcall get_Parent (
        /*[out,retval]*/ IDispatch * * Parent ) = 0;
      virtual HRESULT __stdcall get_Count (
        /*[out,retval]*/ long * Count ) = 0;
      virtual HRESULT __stdcall raw_Item (
        /*[in]*/ VARIANT Index,
        /*[out,retval]*/ IDispatch * * Item ) = 0;
};

struct __declspec(uuid("000630e6-0000-0000-c000-000000000046"))
_NavigationPane : IDispatch
{
    //
    // Property data
    //

    __declspec(property(get=GetApplication))
    _ApplicationPtr Application;
    __declspec(property(get=GetParent))
    IDispatchPtr Parent;
    __declspec(property(get=GetClass))
    enum OlObjectClass Class;
    __declspec(property(get=GetSession))
    _NameSpacePtr Session;
    __declspec(property(get=GetIsCollapsed,put=PutIsCollapsed))
    VARIANT_BOOL IsCollapsed;
    __declspec(property(get=GetCurrentModule,put=PutRefCurrentModule))
    _NavigationModulePtr CurrentModule;
    __declspec(property(get=GetDisplayedModuleCount,put=PutDisplayedModuleCount))
    long DisplayedModuleCount;
    __declspec(property(get=GetModules))
    _NavigationModulesPtr Modules;

    //
    // Wrapper methods for error-handling
    //

    _ApplicationPtr GetApplication ( );
    enum OlObjectClass GetClass ( );
    _NameSpacePtr GetSession ( );
    IDispatchPtr GetParent ( );
    VARIANT_BOOL GetIsCollapsed ( );
    void PutIsCollapsed (
        VARIANT_BOOL IsCollapsed );
    _NavigationModulePtr GetCurrentModule ( );
    void PutRefCurrentModule (
        struct _NavigationModule * CurrentModule );
    long GetDisplayedModuleCount ( );
    void PutDisplayedModuleCount (
        long DisplayedModuleCount );
    _NavigationModulesPtr GetModules ( );

    //
    // Raw methods provided by interface
    //

      virtual HRESULT __stdcall get_Application (
        /*[out,retval]*/ struct _Application * * Application ) = 0;
      virtual HRESULT __stdcall get_Class (
        /*[out,retval]*/ enum OlObjectClass * Class ) = 0;
      virtual HRESULT __stdcall get_Session (
        /*[out,retval]*/ struct _NameSpace * * Session ) = 0;
      virtual HRESULT __stdcall get_Parent (
        /*[out,retval]*/ IDispatch * * Parent ) = 0;
      virtual HRESULT __stdcall get_IsCollapsed (
        /*[out,retval]*/ VARIANT_BOOL * IsCollapsed ) = 0;
      virtual HRESULT __stdcall put_IsCollapsed (
        /*[in]*/ VARIANT_BOOL IsCollapsed ) = 0;
      virtual HRESULT __stdcall get_CurrentModule (
        /*[out,retval]*/ struct _NavigationModule * * CurrentModule ) = 0;
      virtual HRESULT __stdcall putref_CurrentModule (
        /*[in]*/ struct _NavigationModule * CurrentModule ) = 0;
      virtual HRESULT __stdcall get_DisplayedModuleCount (
        /*[out,retval]*/ long * DisplayedModuleCount ) = 0;
      virtual HRESULT __stdcall put_DisplayedModuleCount (
        /*[in]*/ long DisplayedModuleCount ) = 0;
      virtual HRESULT __stdcall get_Modules (
        /*[out,retval]*/ struct _NavigationModules * * Modules ) = 0;
};

struct __declspec(uuid("000630e8-0000-0000-c000-000000000046"))
_NavigationModule : IDispatch
{
    //
    // Property data
    //

    __declspec(property(get=GetApplication))
    _ApplicationPtr Application;
    __declspec(property(get=GetParent))
    IDispatchPtr Parent;
    __declspec(property(get=GetName))
    _bstr_t Name;
    __declspec(property(get=GetClass))
    enum OlObjectClass Class;
    __declspec(property(get=GetSession))
    _NameSpacePtr Session;
    __declspec(property(get=GetNavigationModuleType))
    enum OlNavigationModuleType NavigationModuleType;
    __declspec(property(get=GetPosition,put=PutPosition))
    long Position;
    __declspec(property(get=GetVisible,put=PutVisible))
    VARIANT_BOOL Visible;

    //
    // Wrapper methods for error-handling
    //

    _ApplicationPtr GetApplication ( );
    enum OlObjectClass GetClass ( );
    _NameSpacePtr GetSession ( );
    IDispatchPtr GetParent ( );
    enum OlNavigationModuleType GetNavigationModuleType ( );
    _bstr_t GetName ( );
    long GetPosition ( );
    void PutPosition (
        long Position );
    VARIANT_BOOL GetVisible ( );
    void PutVisible (
        VARIANT_BOOL Visible );

    //
    // Raw methods provided by interface
    //

      virtual HRESULT __stdcall get_Application (
        /*[out,retval]*/ struct _Application * * Application ) = 0;
      virtual HRESULT __stdcall get_Class (
        /*[out,retval]*/ enum OlObjectClass * Class ) = 0;
      virtual HRESULT __stdcall get_Session (
        /*[out,retval]*/ struct _NameSpace * * Session ) = 0;
      virtual HRESULT __stdcall get_Parent (
        /*[out,retval]*/ IDispatch * * Parent ) = 0;
      virtual HRESULT __stdcall get_NavigationModuleType (
        /*[out,retval]*/ enum OlNavigationModuleType * NavigationModuleType ) = 0;
      virtual HRESULT __stdcall get_Name (
        /*[out,retval]*/ BSTR * Name ) = 0;
      virtual HRESULT __stdcall get_Position (
        /*[out,retval]*/ long * Position ) = 0;
      virtual HRESULT __stdcall put_Position (
        /*[in]*/ long Position ) = 0;
      virtual HRESULT __stdcall get_Visible (
        /*[out,retval]*/ VARIANT_BOOL * Visible ) = 0;
      virtual HRESULT __stdcall put_Visible (
        /*[in]*/ VARIANT_BOOL Visible ) = 0;
};

struct __declspec(uuid("000630e7-0000-0000-c000-000000000046"))
_NavigationModules : IDispatch
{
    //
    // Property data
    //

    __declspec(property(get=GetApplication))
    _ApplicationPtr Application;
    __declspec(property(get=GetParent))
    IDispatchPtr Parent;
    __declspec(property(get=GetClass))
    enum OlObjectClass Class;
    __declspec(property(get=GetSession))
    _NameSpacePtr Session;
    __declspec(property(get=GetCount))
    long Count;

    //
    // Wrapper methods for error-handling
    //

    _ApplicationPtr GetApplication ( );
    enum OlObjectClass GetClass ( );
    _NameSpacePtr GetSession ( );
    IDispatchPtr GetParent ( );
    long GetCount ( );
    _NavigationModulePtr Item (
        const _variant_t & Index );
    _NavigationModulePtr GetNavigationModule (
        enum OlNavigationModuleType ModuleType );

    //
    // Raw methods provided by interface
    //

      virtual HRESULT __stdcall get_Application (
        /*[out,retval]*/ struct _Application * * Application ) = 0;
      virtual HRESULT __stdcall get_Class (
        /*[out,retval]*/ enum OlObjectClass * Class ) = 0;
      virtual HRESULT __stdcall get_Session (
        /*[out,retval]*/ struct _NameSpace * * Session ) = 0;
      virtual HRESULT __stdcall get_Parent (
        /*[out,retval]*/ IDispatch * * Parent ) = 0;
      virtual HRESULT __stdcall get_Count (
        /*[out,retval]*/ long * Count ) = 0;
      virtual HRESULT __stdcall raw_Item (
        /*[in]*/ VARIANT Index,
        /*[out,retval]*/ struct _NavigationModule * * Item ) = 0;
      virtual HRESULT __stdcall raw_GetNavigationModule (
        /*[in]*/ enum OlNavigationModuleType ModuleType,
        /*[out,retval]*/ struct _NavigationModule * * NavigationModule ) = 0;
};

struct __declspec(uuid("00063095-0000-0000-c000-000000000046"))
View : IDispatch
{
    //
    // Property data
    //

    __declspec(property(get=GetApplication))
    _ApplicationPtr Application;
    __declspec(property(get=GetParent))
    IDispatchPtr Parent;
    __declspec(property(get=GetLanguage,put=PutLanguage))
    _bstr_t Language;
    __declspec(property(get=GetLockUserChanges,put=PutLockUserChanges))
    VARIANT_BOOL LockUserChanges;
    __declspec(property(get=GetName,put=PutName))
    _bstr_t Name;
    __declspec(property(get=GetClass))
    enum OlObjectClass Class;
    __declspec(property(get=GetSession))
    _NameSpacePtr Session;
    __declspec(property(get=GetViewType))
    enum OlViewType ViewType;
    __declspec(property(get=GetFilter,put=PutFilter))
    _bstr_t Filter;
    __declspec(property(get=GetXML,put=PutXML))
    _bstr_t XML;
    __declspec(property(get=GetStandard))
    VARIANT_BOOL Standard;
    __declspec(property(get=GetSaveOption))
    enum OlViewSaveOption SaveOption;

    //
    // Wrapper methods for error-handling
    //

    _ApplicationPtr GetApplication ( );
    enum OlObjectClass GetClass ( );
    _NameSpacePtr GetSession ( );
    IDispatchPtr GetParent ( );
    HRESULT Apply ( );
    ViewPtr Copy (
        _bstr_t Name,
        enum OlViewSaveOption SaveOption );
    HRESULT Delete ( );
    HRESULT Reset ( );
    HRESULT Save ( );
    _bstr_t GetLanguage ( );
    void PutLanguage (
        _bstr_t Language );
    VARIANT_BOOL GetLockUserChanges ( );
    void PutLockUserChanges (
        VARIANT_BOOL LockUserChanges );
    _bstr_t GetName ( );
    void PutName (
        _bstr_t Name );
    enum OlViewSaveOption GetSaveOption ( );
    VARIANT_BOOL GetStandard ( );
    enum OlViewType GetViewType ( );
    _bstr_t GetXML ( );
    void PutXML (
        _bstr_t XML );
    HRESULT GoToDate (
        DATE Date );
    _bstr_t GetFilter ( );
    void PutFilter (
        _bstr_t Filter );

    //
    // Raw methods provided by interface
    //

      virtual HRESULT __stdcall get_Application (
        /*[out,retval]*/ struct _Application * * Application ) = 0;
      virtual HRESULT __stdcall get_Class (
        /*[out,retval]*/ enum OlObjectClass * Class ) = 0;
      virtual HRESULT __stdcall get_Session (
        /*[out,retval]*/ struct _NameSpace * * Session ) = 0;
      virtual HRESULT __stdcall get_Parent (
        /*[out,retval]*/ IDispatch * * Parent ) = 0;
      virtual HRESULT __stdcall raw_Apply ( ) = 0;
      virtual HRESULT __stdcall raw_Copy (
        /*[in]*/ BSTR Name,
        /*[in]*/ enum OlViewSaveOption SaveOption,
        /*[out,retval]*/ struct View * * ppview ) = 0;
      virtual HRESULT __stdcall raw_Delete ( ) = 0;
      virtual HRESULT __stdcall raw_Reset ( ) = 0;
      virtual HRESULT __stdcall raw_Save ( ) = 0;
      virtual HRESULT __stdcall get_Language (
        /*[out,retval]*/ BSTR * Language ) = 0;
      virtual HRESULT __stdcall put_Language (
        /*[in]*/ BSTR Language ) = 0;
      virtual HRESULT __stdcall get_LockUserChanges (
        /*[out,retval]*/ VARIANT_BOOL * LockUserChanges ) = 0;
      virtual HRESULT __stdcall put_LockUserChanges (
        /*[in]*/ VARIANT_BOOL LockUserChanges ) = 0;
      virtual HRESULT __stdcall get_Name (
        /*[out,retval]*/ BSTR * Name ) = 0;
      virtual HRESULT __stdcall put_Name (
        /*[in]*/ BSTR Name ) = 0;
      virtual HRESULT __stdcall get_SaveOption (
        /*[out,retval]*/ enum OlViewSaveOption * SaveOption ) = 0;
      virtual HRESULT __stdcall get_Standard (
        /*[out,retval]*/ VARIANT_BOOL * Standard ) = 0;
      virtual HRESULT __stdcall get_ViewType (
        /*[out,retval]*/ enum OlViewType * ViewType ) = 0;
      virtual HRESULT __stdcall get_XML (
        /*[out,retval]*/ BSTR * XML ) = 0;
      virtual HRESULT __stdcall put_XML (
        /*[in]*/ BSTR XML ) = 0;
      virtual HRESULT __stdcall raw_GoToDate (
        /*[in]*/ DATE Date ) = 0;
      virtual HRESULT __stdcall get_Filter (
        /*[out,retval]*/ BSTR * Filter ) = 0;
      virtual HRESULT __stdcall put_Filter (
        /*[in]*/ BSTR Filter ) = 0;
};

struct __declspec(uuid("0006308d-0000-0000-c000-000000000046"))
_Views : IDispatch
{
    //
    // Property data
    //

    __declspec(property(get=GetApplication))
    _ApplicationPtr Application;
    __declspec(property(get=GetParent))
    IDispatchPtr Parent;
    __declspec(property(get=GetClass))
    enum OlObjectClass Class;
    __declspec(property(get=GetSession))
    _NameSpacePtr Session;
    __declspec(property(get=GetCount))
    long Count;

    //
    // Wrapper methods for error-handling
    //

    _ApplicationPtr GetApplication ( );
    enum OlObjectClass GetClass ( );
    _NameSpacePtr GetSession ( );
    IDispatchPtr GetParent ( );
    long GetCount ( );
    ViewPtr Item (
        const _variant_t & Index );
    ViewPtr Add (
        _bstr_t Name,
        enum OlViewType ViewType,
        enum OlViewSaveOption SaveOption );
    HRESULT Remove (
        const _variant_t & Index );
    IUnknownPtr _NewEnum ( );

    //
    // Raw methods provided by interface
    //

      virtual HRESULT __stdcall get_Application (
        /*[out,retval]*/ struct _Application * * Application ) = 0;
      virtual HRESULT __stdcall get_Class (
        /*[out,retval]*/ enum OlObjectClass * Class ) = 0;
      virtual HRESULT __stdcall get_Session (
        /*[out,retval]*/ struct _NameSpace * * Session ) = 0;
      virtual HRESULT __stdcall get_Parent (
        /*[out,retval]*/ IDispatch * * Parent ) = 0;
      virtual HRESULT __stdcall get_Count (
        /*[out,retval]*/ long * Count ) = 0;
      virtual HRESULT __stdcall raw_Item (
        /*[in]*/ VARIANT Index,
        /*[out,retval]*/ struct View * * Item ) = 0;
      virtual HRESULT __stdcall raw_Add (
        /*[in]*/ BSTR Name,
        /*[in]*/ enum OlViewType ViewType,
        /*[in]*/ enum OlViewSaveOption SaveOption,
        /*[out,retval]*/ struct View * * ppview ) = 0;
      virtual HRESULT __stdcall raw_Remove (
        /*[in]*/ VARIANT Index ) = 0;
      virtual HRESULT __stdcall raw__NewEnum (
        /*[out,retval]*/ IUnknown * * ppvObject ) = 0;
};

struct __declspec(uuid("000630cd-0000-0000-c000-000000000046"))
_Rule : IDispatch
{
    //
    // Property data
    //

    __declspec(property(get=GetApplication))
    _ApplicationPtr Application;
    __declspec(property(get=GetParent))
    IDispatchPtr Parent;
    __declspec(property(get=GetName,put=PutName))
    _bstr_t Name;
    __declspec(property(get=GetEnabled,put=PutEnabled))
    VARIANT_BOOL Enabled;
    __declspec(property(get=GetConditions))
    _RuleConditionsPtr Conditions;
    __declspec(property(get=GetClass))
    enum OlObjectClass Class;
    __declspec(property(get=GetSession))
    _NameSpacePtr Session;
    __declspec(property(get=GetExecutionOrder,put=PutExecutionOrder))
    long ExecutionOrder;
    __declspec(property(get=GetRuleType))
    enum OlRuleType RuleType;
    __declspec(property(get=GetIsLocalRule))
    VARIANT_BOOL IsLocalRule;
    __declspec(property(get=GetActions))
    _RuleActionsPtr Actions;
    __declspec(property(get=GetExceptions))
    _RuleConditionsPtr Exceptions;

    //
    // Wrapper methods for error-handling
    //

    _ApplicationPtr GetApplication ( );
    enum OlObjectClass GetClass ( );
    _NameSpacePtr GetSession ( );
    IDispatchPtr GetParent ( );
    _bstr_t GetName ( );
    void PutName (
        _bstr_t Name );
    long GetExecutionOrder ( );
    void PutExecutionOrder (
        long ExecutionOrder );
    enum OlRuleType GetRuleType ( );
    VARIANT_BOOL GetEnabled ( );
    void PutEnabled (
        VARIANT_BOOL Enabled );
    VARIANT_BOOL GetIsLocalRule ( );
    HRESULT Execute (
        const _variant_t & ShowProgress = vtMissing,
        const _variant_t & Folder = vtMissing,
        const _variant_t & IncludeSubfolders = vtMissing,
        const _variant_t & RuleExecuteOption = vtMissing );
    _RuleActionsPtr GetActions ( );
    _RuleConditionsPtr GetConditions ( );
    _RuleConditionsPtr GetExceptions ( );

    //
    // Raw methods provided by interface
    //

      virtual HRESULT __stdcall get_Application (
        /*[out,retval]*/ struct _Application * * Application ) = 0;
      virtual HRESULT __stdcall get_Class (
        /*[out,retval]*/ enum OlObjectClass * Class ) = 0;
      virtual HRESULT __stdcall get_Session (
        /*[out,retval]*/ struct _NameSpace * * Session ) = 0;
      virtual HRESULT __stdcall get_Parent (
        /*[out,retval]*/ IDispatch * * Parent ) = 0;
      virtual HRESULT __stdcall get_Name (
        /*[out,retval]*/ BSTR * Name ) = 0;
      virtual HRESULT __stdcall put_Name (
        /*[in]*/ BSTR Name ) = 0;
      virtual HRESULT __stdcall get_ExecutionOrder (
        /*[out,retval]*/ long * ExecutionOrder ) = 0;
      virtual HRESULT __stdcall put_ExecutionOrder (
        /*[in]*/ long ExecutionOrder ) = 0;
      virtual HRESULT __stdcall get_RuleType (
        /*[out,retval]*/ enum OlRuleType * RuleType ) = 0;
      virtual HRESULT __stdcall get_Enabled (
        /*[out,retval]*/ VARIANT_BOOL * Enabled ) = 0;
      virtual HRESULT __stdcall put_Enabled (
        /*[in]*/ VARIANT_BOOL Enabled ) = 0;
      virtual HRESULT __stdcall get_IsLocalRule (
        /*[out,retval]*/ VARIANT_BOOL * IsLocalRule ) = 0;
      virtual HRESULT __stdcall raw_Execute (
        /*[in]*/ VARIANT ShowProgress = vtMissing,
        /*[in]*/ VARIANT Folder = vtMissing,
        /*[in]*/ VARIANT IncludeSubfolders = vtMissing,
        /*[in]*/ VARIANT RuleExecuteOption = vtMissing ) = 0;
      virtual HRESULT __stdcall get_Actions (
        /*[out,retval]*/ struct _RuleActions * * Actions ) = 0;
      virtual HRESULT __stdcall get_Conditions (
        /*[out,retval]*/ struct _RuleConditions * * Conditions ) = 0;
      virtual HRESULT __stdcall get_Exceptions (
        /*[out,retval]*/ struct _RuleConditions * * Exceptions ) = 0;
};

struct __declspec(uuid("000630cc-0000-0000-c000-000000000046"))
_Rules : IDispatch
{
    //
    // Property data
    //

    __declspec(property(get=GetApplication))
    _ApplicationPtr Application;
    __declspec(property(get=GetParent))
    IDispatchPtr Parent;
    __declspec(property(get=GetClass))
    enum OlObjectClass Class;
    __declspec(property(get=GetSession))
    _NameSpacePtr Session;
    __declspec(property(get=GetCount))
    long Count;
    __declspec(property(get=GetIsRssRulesProcessingEnabled,put=PutIsRssRulesProcessingEnabled))
    VARIANT_BOOL IsRssRulesProcessingEnabled;

    //
    // Wrapper methods for error-handling
    //

    _ApplicationPtr GetApplication ( );
    enum OlObjectClass GetClass ( );
    _NameSpacePtr GetSession ( );
    IDispatchPtr GetParent ( );
    long GetCount ( );
    _RulePtr Item (
        const _variant_t & Index );
    _RulePtr Create (
        _bstr_t Name,
        enum OlRuleType RuleType );
    HRESULT Save (
        const _variant_t & ShowProgress = vtMissing );
    HRESULT Remove (
        const _variant_t & Index );
    VARIANT_BOOL GetIsRssRulesProcessingEnabled ( );
    void PutIsRssRulesProcessingEnabled (
        VARIANT_BOOL IsRssRulesProcessingEnabled );

    //
    // Raw methods provided by interface
    //

      virtual HRESULT __stdcall get_Application (
        /*[out,retval]*/ struct _Application * * Application ) = 0;
      virtual HRESULT __stdcall get_Class (
        /*[out,retval]*/ enum OlObjectClass * Class ) = 0;
      virtual HRESULT __stdcall get_Session (
        /*[out,retval]*/ struct _NameSpace * * Session ) = 0;
      virtual HRESULT __stdcall get_Parent (
        /*[out,retval]*/ IDispatch * * Parent ) = 0;
      virtual HRESULT __stdcall get_Count (
        /*[out,retval]*/ long * Count ) = 0;
      virtual HRESULT __stdcall raw_Item (
        /*[in]*/ VARIANT Index,
        /*[out,retval]*/ struct _Rule * * Item ) = 0;
      virtual HRESULT __stdcall raw_Create (
        /*[in]*/ BSTR Name,
        /*[in]*/ enum OlRuleType RuleType,
        /*[out,retval]*/ struct _Rule * * Rule ) = 0;
      virtual HRESULT __stdcall raw_Save (
        /*[in]*/ VARIANT ShowProgress = vtMissing ) = 0;
      virtual HRESULT __stdcall raw_Remove (
        /*[in]*/ VARIANT Index ) = 0;
      virtual HRESULT __stdcall get_IsRssRulesProcessingEnabled (
        /*[out,retval]*/ VARIANT_BOOL * IsRssRulesProcessingEnabled ) = 0;
      virtual HRESULT __stdcall put_IsRssRulesProcessingEnabled (
        /*[in]*/ VARIANT_BOOL IsRssRulesProcessingEnabled ) = 0;
};

struct __declspec(uuid("000630cf-0000-0000-c000-000000000046"))
_RuleAction : IDispatch
{
    //
    // Property data
    //

    __declspec(property(get=GetApplication))
    _ApplicationPtr Application;
    __declspec(property(get=GetParent))
    IDispatchPtr Parent;
    __declspec(property(get=GetEnabled,put=PutEnabled))
    VARIANT_BOOL Enabled;
    __declspec(property(get=GetClass))
    enum OlObjectClass Class;
    __declspec(property(get=GetSession))
    _NameSpacePtr Session;
    __declspec(property(get=GetActionType))
    enum OlRuleActionType ActionType;

    //
    // Wrapper methods for error-handling
    //

    _ApplicationPtr GetApplication ( );
    enum OlObjectClass GetClass ( );
    _NameSpacePtr GetSession ( );
    IDispatchPtr GetParent ( );
    VARIANT_BOOL GetEnabled ( );
    void PutEnabled (
        VARIANT_BOOL Enabled );
    enum OlRuleActionType GetActionType ( );

    //
    // Raw methods provided by interface
    //

      virtual HRESULT __stdcall get_Application (
        /*[out,retval]*/ struct _Application * * Application ) = 0;
      virtual HRESULT __stdcall get_Class (
        /*[out,retval]*/ enum OlObjectClass * Class ) = 0;
      virtual HRESULT __stdcall get_Session (
        /*[out,retval]*/ struct _NameSpace * * Session ) = 0;
      virtual HRESULT __stdcall get_Parent (
        /*[out,retval]*/ IDispatch * * Parent ) = 0;
      virtual HRESULT __stdcall get_Enabled (
        /*[out,retval]*/ VARIANT_BOOL * Enabled ) = 0;
      virtual HRESULT __stdcall put_Enabled (
        /*[in]*/ VARIANT_BOOL Enabled ) = 0;
      virtual HRESULT __stdcall get_ActionType (
        /*[out,retval]*/ enum OlRuleActionType * ActionType ) = 0;
};

struct __declspec(uuid("000630ce-0000-0000-c000-000000000046"))
_RuleActions : IDispatch
{
    //
    // Property data
    //

    __declspec(property(get=GetForward))
    _SendRuleActionPtr Forward;
    __declspec(property(get=GetForwardAsAttachment))
    _SendRuleActionPtr ForwardAsAttachment;
    __declspec(property(get=GetRedirect))
    _SendRuleActionPtr Redirect;
    __declspec(property(get=GetAssignToCategory))
    _AssignToCategoryRuleActionPtr AssignToCategory;
    __declspec(property(get=GetPlaySound))
    _PlaySoundRuleActionPtr PlaySound;
    __declspec(property(get=GetMarkAsTask))
    _MarkAsTaskRuleActionPtr MarkAsTask;
    __declspec(property(get=GetNewItemAlert))
    _NewItemAlertRuleActionPtr NewItemAlert;
    __declspec(property(get=GetApplication))
    _ApplicationPtr Application;
    __declspec(property(get=GetParent))
    IDispatchPtr Parent;
    __declspec(property(get=GetClass))
    enum OlObjectClass Class;
    __declspec(property(get=GetSession))
    _NameSpacePtr Session;
    __declspec(property(get=GetClearCategories))
    _RuleActionPtr ClearCategories;
    __declspec(property(get=GetCopyToFolder))
    _MoveOrCopyRuleActionPtr CopyToFolder;
    __declspec(property(get=GetDeletePermanently))
    _RuleActionPtr DeletePermanently;
    __declspec(property(get=GetCount))
    long Count;
    __declspec(property(get=GetStop))
    _RuleActionPtr Stop;
    __declspec(property(get=GetNotifyRead))
    _RuleActionPtr NotifyRead;
    __declspec(property(get=GetNotifyDelivery))
    _RuleActionPtr NotifyDelivery;
    __declspec(property(get=GetDesktopAlert))
    _RuleActionPtr DesktopAlert;
    __declspec(property(get=GetDelete))
    _RuleActionPtr Delete;
    __declspec(property(get=GetMoveToFolder))
    _MoveOrCopyRuleActionPtr MoveToFolder;
    __declspec(property(get=GetCC))
    _SendRuleActionPtr CC;

    //
    // Wrapper methods for error-handling
    //

    _ApplicationPtr GetApplication ( );
    enum OlObjectClass GetClass ( );
    _NameSpacePtr GetSession ( );
    IDispatchPtr GetParent ( );
    long GetCount ( );
    _RuleActionPtr Item (
        long Index );
    _MoveOrCopyRuleActionPtr GetCopyToFolder ( );
    _RuleActionPtr GetDeletePermanently ( );
    _RuleActionPtr GetDelete ( );
    _RuleActionPtr GetDesktopAlert ( );
    _RuleActionPtr GetNotifyDelivery ( );
    _RuleActionPtr GetNotifyRead ( );
    _RuleActionPtr GetStop ( );
    _MoveOrCopyRuleActionPtr GetMoveToFolder ( );
    _SendRuleActionPtr GetCC ( );
    _SendRuleActionPtr GetForward ( );
    _SendRuleActionPtr GetForwardAsAttachment ( );
    _SendRuleActionPtr GetRedirect ( );
    _AssignToCategoryRuleActionPtr GetAssignToCategory ( );
    _PlaySoundRuleActionPtr GetPlaySound ( );
    _MarkAsTaskRuleActionPtr GetMarkAsTask ( );
    _NewItemAlertRuleActionPtr GetNewItemAlert ( );
    _RuleActionPtr GetClearCategories ( );

    //
    // Raw methods provided by interface
    //

      virtual HRESULT __stdcall get_Application (
        /*[out,retval]*/ struct _Application * * Application ) = 0;
      virtual HRESULT __stdcall get_Class (
        /*[out,retval]*/ enum OlObjectClass * Class ) = 0;
      virtual HRESULT __stdcall get_Session (
        /*[out,retval]*/ struct _NameSpace * * Session ) = 0;
      virtual HRESULT __stdcall get_Parent (
        /*[out,retval]*/ IDispatch * * Parent ) = 0;
      virtual HRESULT __stdcall get_Count (
        /*[out,retval]*/ long * Count ) = 0;
      virtual HRESULT __stdcall raw_Item (
        /*[in]*/ long Index,
        /*[out,retval]*/ struct _RuleAction * * Item ) = 0;
      virtual HRESULT __stdcall get_CopyToFolder (
        /*[out,retval]*/ struct _MoveOrCopyRuleAction * * CopyToFolder ) = 0;
      virtual HRESULT __stdcall get_DeletePermanently (
        /*[out,retval]*/ struct _RuleAction * * DeletePermanently ) = 0;
      virtual HRESULT __stdcall get_Delete (
        /*[out,retval]*/ struct _RuleAction * * Delete ) = 0;
      virtual HRESULT __stdcall get_DesktopAlert (
        /*[out,retval]*/ struct _RuleAction * * DesktopAlert ) = 0;
      virtual HRESULT __stdcall get_NotifyDelivery (
        /*[out,retval]*/ struct _RuleAction * * NotifyDelivery ) = 0;
      virtual HRESULT __stdcall get_NotifyRead (
        /*[out,retval]*/ struct _RuleAction * * NotifyRead ) = 0;
      virtual HRESULT __stdcall get_Stop (
        /*[out,retval]*/ struct _RuleAction * * Stop ) = 0;
      virtual HRESULT __stdcall get_MoveToFolder (
        /*[out,retval]*/ struct _MoveOrCopyRuleAction * * MoveToFolder ) = 0;
      virtual HRESULT __stdcall get_CC (
        /*[out,retval]*/ struct _SendRuleAction * * CC ) = 0;
      virtual HRESULT __stdcall get_Forward (
        /*[out,retval]*/ struct _SendRuleAction * * Forward ) = 0;
      virtual HRESULT __stdcall get_ForwardAsAttachment (
        /*[out,retval]*/ struct _SendRuleAction * * ForwardAsAttachment ) = 0;
      virtual HRESULT __stdcall get_Redirect (
        /*[out,retval]*/ struct _SendRuleAction * * Redirect ) = 0;
      virtual HRESULT __stdcall get_AssignToCategory (
        /*[out,retval]*/ struct _AssignToCategoryRuleAction * * AssignToCategory ) = 0;
      virtual HRESULT __stdcall get_PlaySound (
        /*[out,retval]*/ struct _PlaySoundRuleAction * * PlaySound ) = 0;
      virtual HRESULT __stdcall get_MarkAsTask (
        /*[out,retval]*/ struct _MarkAsTaskRuleAction * * MarkAsTask ) = 0;
      virtual HRESULT __stdcall get_NewItemAlert (
        /*[out,retval]*/ struct _NewItemAlertRuleAction * * NewItemAlert ) = 0;
      virtual HRESULT __stdcall get_ClearCategories (
        /*[out,retval]*/ struct _RuleAction * * ClearCategories ) = 0;
};

struct __declspec(uuid("000630d4-0000-0000-c000-000000000046"))
_AssignToCategoryRuleAction : IDispatch
{
    //
    // Property data
    //

    __declspec(property(get=GetApplication))
    _ApplicationPtr Application;
    __declspec(property(get=GetParent))
    IDispatchPtr Parent;
    __declspec(property(get=GetCategories,put=PutCategories))
    _variant_t Categories;
    __declspec(property(get=GetEnabled,put=PutEnabled))
    VARIANT_BOOL Enabled;
    __declspec(property(get=GetClass))
    enum OlObjectClass Class;
    __declspec(property(get=GetSession))
    _NameSpacePtr Session;
    __declspec(property(get=GetActionType))
    enum OlRuleActionType ActionType;

    //
    // Wrapper methods for error-handling
    //

    _ApplicationPtr GetApplication ( );
    enum OlObjectClass GetClass ( );
    _NameSpacePtr GetSession ( );
    IDispatchPtr GetParent ( );
    VARIANT_BOOL GetEnabled ( );
    void PutEnabled (
        VARIANT_BOOL Enabled );
    enum OlRuleActionType GetActionType ( );
    _variant_t GetCategories ( );
    void PutCategories (
        const _variant_t & Categories );

    //
    // Raw methods provided by interface
    //

      virtual HRESULT __stdcall get_Application (
        /*[out,retval]*/ struct _Application * * Application ) = 0;
      virtual HRESULT __stdcall get_Class (
        /*[out,retval]*/ enum OlObjectClass * Class ) = 0;
      virtual HRESULT __stdcall get_Session (
        /*[out,retval]*/ struct _NameSpace * * Session ) = 0;
      virtual HRESULT __stdcall get_Parent (
        /*[out,retval]*/ IDispatch * * Parent ) = 0;
      virtual HRESULT __stdcall get_Enabled (
        /*[out,retval]*/ VARIANT_BOOL * Enabled ) = 0;
      virtual HRESULT __stdcall put_Enabled (
        /*[in]*/ VARIANT_BOOL Enabled ) = 0;
      virtual HRESULT __stdcall get_ActionType (
        /*[out,retval]*/ enum OlRuleActionType * ActionType ) = 0;
      virtual HRESULT __stdcall get_Categories (
        /*[out,retval]*/ VARIANT * Categories ) = 0;
      virtual HRESULT __stdcall put_Categories (
        /*[in]*/ VARIANT Categories ) = 0;
};

struct __declspec(uuid("000630d5-0000-0000-c000-000000000046"))
_PlaySoundRuleAction : IDispatch
{
    //
    // Property data
    //

    __declspec(property(get=GetApplication))
    _ApplicationPtr Application;
    __declspec(property(get=GetParent))
    IDispatchPtr Parent;
    __declspec(property(get=GetEnabled,put=PutEnabled))
    VARIANT_BOOL Enabled;
    __declspec(property(get=GetClass))
    enum OlObjectClass Class;
    __declspec(property(get=GetSession))
    _NameSpacePtr Session;
    __declspec(property(get=GetActionType))
    enum OlRuleActionType ActionType;
    __declspec(property(get=GetFilePath,put=PutFilePath))
    _bstr_t FilePath;

    //
    // Wrapper methods for error-handling
    //

    _ApplicationPtr GetApplication ( );
    enum OlObjectClass GetClass ( );
    _NameSpacePtr GetSession ( );
    IDispatchPtr GetParent ( );
    VARIANT_BOOL GetEnabled ( );
    void PutEnabled (
        VARIANT_BOOL Enabled );
    enum OlRuleActionType GetActionType ( );
    _bstr_t GetFilePath ( );
    void PutFilePath (
        _bstr_t FilePath );

    //
    // Raw methods provided by interface
    //

      virtual HRESULT __stdcall get_Application (
        /*[out,retval]*/ struct _Application * * Application ) = 0;
      virtual HRESULT __stdcall get_Class (
        /*[out,retval]*/ enum OlObjectClass * Class ) = 0;
      virtual HRESULT __stdcall get_Session (
        /*[out,retval]*/ struct _NameSpace * * Session ) = 0;
      virtual HRESULT __stdcall get_Parent (
        /*[out,retval]*/ IDispatch * * Parent ) = 0;
      virtual HRESULT __stdcall get_Enabled (
        /*[out,retval]*/ VARIANT_BOOL * Enabled ) = 0;
      virtual HRESULT __stdcall put_Enabled (
        /*[in]*/ VARIANT_BOOL Enabled ) = 0;
      virtual HRESULT __stdcall get_ActionType (
        /*[out,retval]*/ enum OlRuleActionType * ActionType ) = 0;
      virtual HRESULT __stdcall get_FilePath (
        /*[out,retval]*/ BSTR * FilePath ) = 0;
      virtual HRESULT __stdcall put_FilePath (
        /*[in]*/ BSTR FilePath ) = 0;
};

struct __declspec(uuid("000630d6-0000-0000-c000-000000000046"))
_MarkAsTaskRuleAction : IDispatch
{
    //
    // Property data
    //

    __declspec(property(get=GetApplication))
    _ApplicationPtr Application;
    __declspec(property(get=GetParent))
    IDispatchPtr Parent;
    __declspec(property(get=GetFlagTo,put=PutFlagTo))
    _bstr_t FlagTo;
    __declspec(property(get=GetMarkInterval,put=PutMarkInterval))
    enum OlMarkInterval MarkInterval;
    __declspec(property(get=GetEnabled,put=PutEnabled))
    VARIANT_BOOL Enabled;
    __declspec(property(get=GetClass))
    enum OlObjectClass Class;
    __declspec(property(get=GetSession))
    _NameSpacePtr Session;
    __declspec(property(get=GetActionType))
    enum OlRuleActionType ActionType;

    //
    // Wrapper methods for error-handling
    //

    _ApplicationPtr GetApplication ( );
    enum OlObjectClass GetClass ( );
    _NameSpacePtr GetSession ( );
    IDispatchPtr GetParent ( );
    VARIANT_BOOL GetEnabled ( );
    void PutEnabled (
        VARIANT_BOOL Enabled );
    enum OlRuleActionType GetActionType ( );
    _bstr_t GetFlagTo ( );
    void PutFlagTo (
        _bstr_t FlagTo );
    enum OlMarkInterval GetMarkInterval ( );
    void PutMarkInterval (
        enum OlMarkInterval MarkInterval );

    //
    // Raw methods provided by interface
    //

      virtual HRESULT __stdcall get_Application (
        /*[out,retval]*/ struct _Application * * Application ) = 0;
      virtual HRESULT __stdcall get_Class (
        /*[out,retval]*/ enum OlObjectClass * Class ) = 0;
      virtual HRESULT __stdcall get_Session (
        /*[out,retval]*/ struct _NameSpace * * Session ) = 0;
      virtual HRESULT __stdcall get_Parent (
        /*[out,retval]*/ IDispatch * * Parent ) = 0;
      virtual HRESULT __stdcall get_Enabled (
        /*[out,retval]*/ VARIANT_BOOL * Enabled ) = 0;
      virtual HRESULT __stdcall put_Enabled (
        /*[in]*/ VARIANT_BOOL Enabled ) = 0;
      virtual HRESULT __stdcall get_ActionType (
        /*[out,retval]*/ enum OlRuleActionType * ActionType ) = 0;
      virtual HRESULT __stdcall get_FlagTo (
        /*[out,retval]*/ BSTR * FlagTo ) = 0;
      virtual HRESULT __stdcall put_FlagTo (
        /*[in]*/ BSTR FlagTo ) = 0;
      virtual HRESULT __stdcall get_MarkInterval (
        /*[out,retval]*/ enum OlMarkInterval * MarkInterval ) = 0;
      virtual HRESULT __stdcall put_MarkInterval (
        /*[in]*/ enum OlMarkInterval MarkInterval ) = 0;
};

struct __declspec(uuid("000630d7-0000-0000-c000-000000000046"))
_NewItemAlertRuleAction : IDispatch
{
    //
    // Property data
    //

    __declspec(property(get=GetApplication))
    _ApplicationPtr Application;
    __declspec(property(get=GetParent))
    IDispatchPtr Parent;
    __declspec(property(get=GetEnabled,put=PutEnabled))
    VARIANT_BOOL Enabled;
    __declspec(property(get=GetText,put=PutText))
    _bstr_t Text;
    __declspec(property(get=GetClass))
    enum OlObjectClass Class;
    __declspec(property(get=GetSession))
    _NameSpacePtr Session;
    __declspec(property(get=GetActionType))
    enum OlRuleActionType ActionType;

    //
    // Wrapper methods for error-handling
    //

    _ApplicationPtr GetApplication ( );
    enum OlObjectClass GetClass ( );
    _NameSpacePtr GetSession ( );
    IDispatchPtr GetParent ( );
    VARIANT_BOOL GetEnabled ( );
    void PutEnabled (
        VARIANT_BOOL Enabled );
    enum OlRuleActionType GetActionType ( );
    _bstr_t GetText ( );
    void PutText (
        _bstr_t Text );

    //
    // Raw methods provided by interface
    //

      virtual HRESULT __stdcall get_Application (
        /*[out,retval]*/ struct _Application * * Application ) = 0;
      virtual HRESULT __stdcall get_Class (
        /*[out,retval]*/ enum OlObjectClass * Class ) = 0;
      virtual HRESULT __stdcall get_Session (
        /*[out,retval]*/ struct _NameSpace * * Session ) = 0;
      virtual HRESULT __stdcall get_Parent (
        /*[out,retval]*/ IDispatch * * Parent ) = 0;
      virtual HRESULT __stdcall get_Enabled (
        /*[out,retval]*/ VARIANT_BOOL * Enabled ) = 0;
      virtual HRESULT __stdcall put_Enabled (
        /*[in]*/ VARIANT_BOOL Enabled ) = 0;
      virtual HRESULT __stdcall get_ActionType (
        /*[out,retval]*/ enum OlRuleActionType * ActionType ) = 0;
      virtual HRESULT __stdcall get_Text (
        /*[out,retval]*/ BSTR * Text ) = 0;
      virtual HRESULT __stdcall put_Text (
        /*[in]*/ BSTR Text ) = 0;
};

struct __declspec(uuid("000630d9-0000-0000-c000-000000000046"))
_RuleCondition : IDispatch
{
    //
    // Property data
    //

    __declspec(property(get=GetApplication))
    _ApplicationPtr Application;
    __declspec(property(get=GetParent))
    IDispatchPtr Parent;
    __declspec(property(get=GetEnabled,put=PutEnabled))
    VARIANT_BOOL Enabled;
    __declspec(property(get=GetClass))
    enum OlObjectClass Class;
    __declspec(property(get=GetSession))
    _NameSpacePtr Session;
    __declspec(property(get=GetConditionType))
    enum OlRuleConditionType ConditionType;

    //
    // Wrapper methods for error-handling
    //

    _ApplicationPtr GetApplication ( );
    enum OlObjectClass GetClass ( );
    _NameSpacePtr GetSession ( );
    IDispatchPtr GetParent ( );
    VARIANT_BOOL GetEnabled ( );
    void PutEnabled (
        VARIANT_BOOL Enabled );
    enum OlRuleConditionType GetConditionType ( );

    //
    // Raw methods provided by interface
    //

      virtual HRESULT __stdcall get_Application (
        /*[out,retval]*/ struct _Application * * Application ) = 0;
      virtual HRESULT __stdcall get_Class (
        /*[out,retval]*/ enum OlObjectClass * Class ) = 0;
      virtual HRESULT __stdcall get_Session (
        /*[out,retval]*/ struct _NameSpace * * Session ) = 0;
      virtual HRESULT __stdcall get_Parent (
        /*[out,retval]*/ IDispatch * * Parent ) = 0;
      virtual HRESULT __stdcall get_Enabled (
        /*[out,retval]*/ VARIANT_BOOL * Enabled ) = 0;
      virtual HRESULT __stdcall put_Enabled (
        /*[in]*/ VARIANT_BOOL Enabled ) = 0;
      virtual HRESULT __stdcall get_ConditionType (
        /*[out,retval]*/ enum OlRuleConditionType * ConditionType ) = 0;
};

struct __declspec(uuid("000630d8-0000-0000-c000-000000000046"))
_RuleConditions : IDispatch
{
    //
    // Property data
    //

    __declspec(property(get=GetApplication))
    _ApplicationPtr Application;
    __declspec(property(get=GetParent))
    IDispatchPtr Parent;
    __declspec(property(get=GetBody))
    _TextRuleConditionPtr Body;
    __declspec(property(get=GetBodyOrSubject))
    _TextRuleConditionPtr BodyOrSubject;
    __declspec(property(get=GetCategory))
    _CategoryRuleConditionPtr Category;
    __declspec(property(get=GetFormName))
    _FormNameRuleConditionPtr FormName;
    __declspec(property(get=GetFrom))
    _ToOrFromRuleConditionPtr From;
    __declspec(property(get=GetAccount))
    _AccountRuleConditionPtr Account;
    __declspec(property(get=GetMessageHeader))
    _TextRuleConditionPtr MessageHeader;
    __declspec(property(get=GetSenderAddress))
    _AddressRuleConditionPtr SenderAddress;
    __declspec(property(get=GetSenderInAddressList))
    _SenderInAddressListRuleConditionPtr SenderInAddressList;
    __declspec(property(get=GetSubject))
    _TextRuleConditionPtr Subject;
    __declspec(property(get=GetRecipientAddress))
    _AddressRuleConditionPtr RecipientAddress;
    __declspec(property(get=GetSentTo))
    _ToOrFromRuleConditionPtr SentTo;
    __declspec(property(get=GetOnLocalMachine))
    _RuleConditionPtr OnLocalMachine;
    __declspec(property(get=GetClass))
    enum OlObjectClass Class;
    __declspec(property(get=GetSession))
    _NameSpacePtr Session;
    __declspec(property(get=GetCount))
    long Count;
    __declspec(property(get=GetAnyCategory))
    _RuleConditionPtr AnyCategory;
    __declspec(property(get=GetOnOtherMachine))
    _RuleConditionPtr OnOtherMachine;
    __declspec(property(get=GetFromAnyRSSFeed))
    _RuleConditionPtr FromAnyRSSFeed;
    __declspec(property(get=GetFromRssFeed))
    _FromRssFeedRuleConditionPtr FromRssFeed;
    __declspec(property(get=GetImportance))
    _ImportanceRuleConditionPtr Importance;
    __declspec(property(get=GetCC))
    _RuleConditionPtr CC;
    __declspec(property(get=GetHasAttachment))
    _RuleConditionPtr HasAttachment;
    __declspec(property(get=GetMeetingInviteOrUpdate))
    _RuleConditionPtr MeetingInviteOrUpdate;
    __declspec(property(get=GetNotTo))
    _RuleConditionPtr NotTo;
    __declspec(property(get=GetOnlyToMe))
    _RuleConditionPtr OnlyToMe;
    __declspec(property(get=GetToMe))
    _RuleConditionPtr ToMe;
    __declspec(property(get=GetToOrCc))
    _RuleConditionPtr ToOrCc;

    //
    // Wrapper methods for error-handling
    //

    _ApplicationPtr GetApplication ( );
    enum OlObjectClass GetClass ( );
    _NameSpacePtr GetSession ( );
    IDispatchPtr GetParent ( );
    long GetCount ( );
    _RuleConditionPtr Item (
        long Index );
    _RuleConditionPtr GetCC ( );
    _RuleConditionPtr GetHasAttachment ( );
    _ImportanceRuleConditionPtr GetImportance ( );
    _RuleConditionPtr GetMeetingInviteOrUpdate ( );
    _RuleConditionPtr GetNotTo ( );
    _RuleConditionPtr GetOnlyToMe ( );
    _RuleConditionPtr GetToMe ( );
    _RuleConditionPtr GetToOrCc ( );
    _AccountRuleConditionPtr GetAccount ( );
    _TextRuleConditionPtr GetBody ( );
    _TextRuleConditionPtr GetBodyOrSubject ( );
    _CategoryRuleConditionPtr GetCategory ( );
    _FormNameRuleConditionPtr GetFormName ( );
    _ToOrFromRuleConditionPtr GetFrom ( );
    _TextRuleConditionPtr GetMessageHeader ( );
    _AddressRuleConditionPtr GetRecipientAddress ( );
    _AddressRuleConditionPtr GetSenderAddress ( );
    _SenderInAddressListRuleConditionPtr GetSenderInAddressList ( );
    _TextRuleConditionPtr GetSubject ( );
    _ToOrFromRuleConditionPtr GetSentTo ( );
    _RuleConditionPtr GetOnLocalMachine ( );
    _RuleConditionPtr GetOnOtherMachine ( );
    _RuleConditionPtr GetAnyCategory ( );
    _RuleConditionPtr GetFromAnyRSSFeed ( );
    _FromRssFeedRuleConditionPtr GetFromRssFeed ( );

    //
    // Raw methods provided by interface
    //

      virtual HRESULT __stdcall get_Application (
        /*[out,retval]*/ struct _Application * * Application ) = 0;
      virtual HRESULT __stdcall get_Class (
        /*[out,retval]*/ enum OlObjectClass * Class ) = 0;
      virtual HRESULT __stdcall get_Session (
        /*[out,retval]*/ struct _NameSpace * * Session ) = 0;
      virtual HRESULT __stdcall get_Parent (
        /*[out,retval]*/ IDispatch * * Parent ) = 0;
      virtual HRESULT __stdcall get_Count (
        /*[out,retval]*/ long * Count ) = 0;
      virtual HRESULT __stdcall raw_Item (
        /*[in]*/ long Index,
        /*[out,retval]*/ struct _RuleCondition * * Item ) = 0;
      virtual HRESULT __stdcall get_CC (
        /*[out,retval]*/ struct _RuleCondition * * CC ) = 0;
      virtual HRESULT __stdcall get_HasAttachment (
        /*[out,retval]*/ struct _RuleCondition * * HasAttachment ) = 0;
      virtual HRESULT __stdcall get_Importance (
        /*[out,retval]*/ struct _ImportanceRuleCondition * * Importance ) = 0;
      virtual HRESULT __stdcall get_MeetingInviteOrUpdate (
        /*[out,retval]*/ struct _RuleCondition * * MeetingInviteOrUpdate ) = 0;
      virtual HRESULT __stdcall get_NotTo (
        /*[out,retval]*/ struct _RuleCondition * * NotTo ) = 0;
      virtual HRESULT __stdcall get_OnlyToMe (
        /*[out,retval]*/ struct _RuleCondition * * OnlyToMe ) = 0;
      virtual HRESULT __stdcall get_ToMe (
        /*[out,retval]*/ struct _RuleCondition * * ToMe ) = 0;
      virtual HRESULT __stdcall get_ToOrCc (
        /*[out,retval]*/ struct _RuleCondition * * ToOrCc ) = 0;
      virtual HRESULT __stdcall get_Account (
        /*[out,retval]*/ struct _AccountRuleCondition * * Account ) = 0;
      virtual HRESULT __stdcall get_Body (
        /*[out,retval]*/ struct _TextRuleCondition * * Body ) = 0;
      virtual HRESULT __stdcall get_BodyOrSubject (
        /*[out,retval]*/ struct _TextRuleCondition * * BodyOrSubject ) = 0;
      virtual HRESULT __stdcall get_Category (
        /*[out,retval]*/ struct _CategoryRuleCondition * * Category ) = 0;
      virtual HRESULT __stdcall get_FormName (
        /*[out,retval]*/ struct _FormNameRuleCondition * * FormName ) = 0;
      virtual HRESULT __stdcall get_From (
        /*[out,retval]*/ struct _ToOrFromRuleCondition * * From ) = 0;
      virtual HRESULT __stdcall get_MessageHeader (
        /*[out,retval]*/ struct _TextRuleCondition * * MessageHeader ) = 0;
      virtual HRESULT __stdcall get_RecipientAddress (
        /*[out,retval]*/ struct _AddressRuleCondition * * RecipientAddress ) = 0;
      virtual HRESULT __stdcall get_SenderAddress (
        /*[out,retval]*/ struct _AddressRuleCondition * * SenderAddress ) = 0;
      virtual HRESULT __stdcall get_SenderInAddressList (
        /*[out,retval]*/ struct _SenderInAddressListRuleCondition * * SenderInAddressList ) = 0;
      virtual HRESULT __stdcall get_Subject (
        /*[out,retval]*/ struct _TextRuleCondition * * Subject ) = 0;
      virtual HRESULT __stdcall get_SentTo (
        /*[out,retval]*/ struct _ToOrFromRuleCondition * * SentTo ) = 0;
      virtual HRESULT __stdcall get_OnLocalMachine (
        /*[out,retval]*/ struct _RuleCondition * * OnLocalMachine ) = 0;
      virtual HRESULT __stdcall get_OnOtherMachine (
        /*[out,retval]*/ struct _RuleCondition * * OnOtherMachine ) = 0;
      virtual HRESULT __stdcall get_AnyCategory (
        /*[out,retval]*/ struct _RuleCondition * * AnyCategory ) = 0;
      virtual HRESULT __stdcall get_FromAnyRSSFeed (
        /*[out,retval]*/ struct _RuleCondition * * FromAnyRSSFeed ) = 0;
      virtual HRESULT __stdcall get_FromRssFeed (
        /*[out,retval]*/ struct _FromRssFeedRuleCondition * * FromRssFeed ) = 0;
};

struct __declspec(uuid("000630da-0000-0000-c000-000000000046"))
_ImportanceRuleCondition : IDispatch
{
    //
    // Property data
    //

    __declspec(property(get=GetApplication))
    _ApplicationPtr Application;
    __declspec(property(get=GetParent))
    IDispatchPtr Parent;
    __declspec(property(get=GetEnabled,put=PutEnabled))
    VARIANT_BOOL Enabled;
    __declspec(property(get=GetClass))
    enum OlObjectClass Class;
    __declspec(property(get=GetSession))
    _NameSpacePtr Session;
    __declspec(property(get=GetConditionType))
    enum OlRuleConditionType ConditionType;
    __declspec(property(get=GetImportance,put=PutImportance))
    enum OlImportance Importance;

    //
    // Wrapper methods for error-handling
    //

    _ApplicationPtr GetApplication ( );
    enum OlObjectClass GetClass ( );
    _NameSpacePtr GetSession ( );
    IDispatchPtr GetParent ( );
    VARIANT_BOOL GetEnabled ( );
    void PutEnabled (
        VARIANT_BOOL Enabled );
    enum OlRuleConditionType GetConditionType ( );
    enum OlImportance GetImportance ( );
    void PutImportance (
        enum OlImportance Importance );

    //
    // Raw methods provided by interface
    //

      virtual HRESULT __stdcall get_Application (
        /*[out,retval]*/ struct _Application * * Application ) = 0;
      virtual HRESULT __stdcall get_Class (
        /*[out,retval]*/ enum OlObjectClass * Class ) = 0;
      virtual HRESULT __stdcall get_Session (
        /*[out,retval]*/ struct _NameSpace * * Session ) = 0;
      virtual HRESULT __stdcall get_Parent (
        /*[out,retval]*/ IDispatch * * Parent ) = 0;
      virtual HRESULT __stdcall get_Enabled (
        /*[out,retval]*/ VARIANT_BOOL * Enabled ) = 0;
      virtual HRESULT __stdcall put_Enabled (
        /*[in]*/ VARIANT_BOOL Enabled ) = 0;
      virtual HRESULT __stdcall get_ConditionType (
        /*[out,retval]*/ enum OlRuleConditionType * ConditionType ) = 0;
      virtual HRESULT __stdcall get_Importance (
        /*[out,retval]*/ enum OlImportance * Importance ) = 0;
      virtual HRESULT __stdcall put_Importance (
        /*[in]*/ enum OlImportance Importance ) = 0;
};

struct __declspec(uuid("000630db-0000-0000-c000-000000000046"))
_AccountRuleCondition : IDispatch
{
    //
    // Property data
    //

    __declspec(property(get=GetApplication))
    _ApplicationPtr Application;
    __declspec(property(get=GetParent))
    IDispatchPtr Parent;
    __declspec(property(get=GetEnabled,put=PutEnabled))
    VARIANT_BOOL Enabled;
    __declspec(property(get=GetClass))
    enum OlObjectClass Class;
    __declspec(property(get=GetSession))
    _NameSpacePtr Session;
    __declspec(property(get=GetConditionType))
    enum OlRuleConditionType ConditionType;
    __declspec(property(get=GetAccount,put=PutAccount))
    _AccountPtr Account;

    //
    // Wrapper methods for error-handling
    //

    _ApplicationPtr GetApplication ( );
    enum OlObjectClass GetClass ( );
    _NameSpacePtr GetSession ( );
    IDispatchPtr GetParent ( );
    VARIANT_BOOL GetEnabled ( );
    void PutEnabled (
        VARIANT_BOOL Enabled );
    enum OlRuleConditionType GetConditionType ( );
    _AccountPtr GetAccount ( );
    void PutAccount (
        struct _Account * Account );

    //
    // Raw methods provided by interface
    //

      virtual HRESULT __stdcall get_Application (
        /*[out,retval]*/ struct _Application * * Application ) = 0;
      virtual HRESULT __stdcall get_Class (
        /*[out,retval]*/ enum OlObjectClass * Class ) = 0;
      virtual HRESULT __stdcall get_Session (
        /*[out,retval]*/ struct _NameSpace * * Session ) = 0;
      virtual HRESULT __stdcall get_Parent (
        /*[out,retval]*/ IDispatch * * Parent ) = 0;
      virtual HRESULT __stdcall get_Enabled (
        /*[out,retval]*/ VARIANT_BOOL * Enabled ) = 0;
      virtual HRESULT __stdcall put_Enabled (
        /*[in]*/ VARIANT_BOOL Enabled ) = 0;
      virtual HRESULT __stdcall get_ConditionType (
        /*[out,retval]*/ enum OlRuleConditionType * ConditionType ) = 0;
      virtual HRESULT __stdcall get_Account (
        /*[out,retval]*/ struct _Account * * Account ) = 0;
      virtual HRESULT __stdcall put_Account (
        /*[in]*/ struct _Account * Account ) = 0;
};

struct __declspec(uuid("000630c5-0000-0000-c000-000000000046"))
_Account : IDispatch
{
    //
    // Property data
    //

    __declspec(property(get=GetApplication))
    _ApplicationPtr Application;
    __declspec(property(get=GetParent))
    IDispatchPtr Parent;
    __declspec(property(get=GetDisplayName))
    _bstr_t DisplayName;
    __declspec(property(get=GetClass))
    enum OlObjectClass Class;
    __declspec(property(get=GetSession))
    _NameSpacePtr Session;
    __declspec(property(get=GetAccountType))
    enum OlAccountType AccountType;
    __declspec(property(get=GetUserName))
    _bstr_t UserName;
    __declspec(property(get=GetSmtpAddress))
    _bstr_t SmtpAddress;

    //
    // Wrapper methods for error-handling
    //

    _ApplicationPtr GetApplication ( );
    enum OlObjectClass GetClass ( );
    _NameSpacePtr GetSession ( );
    IDispatchPtr GetParent ( );
    enum OlAccountType GetAccountType ( );
    _bstr_t GetDisplayName ( );
    _bstr_t GetUserName ( );
    _bstr_t GetSmtpAddress ( );

    //
    // Raw methods provided by interface
    //

      virtual HRESULT __stdcall get_Application (
        /*[out,retval]*/ struct _Application * * Application ) = 0;
      virtual HRESULT __stdcall get_Class (
        /*[out,retval]*/ enum OlObjectClass * Class ) = 0;
      virtual HRESULT __stdcall get_Session (
        /*[out,retval]*/ struct _NameSpace * * Session ) = 0;
      virtual HRESULT __stdcall get_Parent (
        /*[out,retval]*/ IDispatch * * Parent ) = 0;
      virtual HRESULT __stdcall get_AccountType (
        /*[out,retval]*/ enum OlAccountType * AccountType ) = 0;
      virtual HRESULT __stdcall get_DisplayName (
        /*[out,retval]*/ BSTR * DisplayName ) = 0;
      virtual HRESULT __stdcall get_UserName (
        /*[out,retval]*/ BSTR * UserName ) = 0;
      virtual HRESULT __stdcall get_SmtpAddress (
        /*[out,retval]*/ BSTR * SmtpAddress ) = 0;
};

struct __declspec(uuid("000630e0-0000-0000-c000-000000000046"))
_TextRuleCondition : IDispatch
{
    //
    // Property data
    //

    __declspec(property(get=GetApplication))
    _ApplicationPtr Application;
    __declspec(property(get=GetParent))
    IDispatchPtr Parent;
    __declspec(property(get=GetEnabled,put=PutEnabled))
    VARIANT_BOOL Enabled;
    __declspec(property(get=GetText,put=PutText))
    _variant_t Text;
    __declspec(property(get=GetClass))
    enum OlObjectClass Class;
    __declspec(property(get=GetSession))
    _NameSpacePtr Session;
    __declspec(property(get=GetConditionType))
    enum OlRuleConditionType ConditionType;

    //
    // Wrapper methods for error-handling
    //

    _ApplicationPtr GetApplication ( );
    enum OlObjectClass GetClass ( );
    _NameSpacePtr GetSession ( );
    IDispatchPtr GetParent ( );
    VARIANT_BOOL GetEnabled ( );
    void PutEnabled (
        VARIANT_BOOL Enabled );
    enum OlRuleConditionType GetConditionType ( );
    _variant_t GetText ( );
    void PutText (
        const _variant_t & Text );

    //
    // Raw methods provided by interface
    //

      virtual HRESULT __stdcall get_Application (
        /*[out,retval]*/ struct _Application * * Application ) = 0;
      virtual HRESULT __stdcall get_Class (
        /*[out,retval]*/ enum OlObjectClass * Class ) = 0;
      virtual HRESULT __stdcall get_Session (
        /*[out,retval]*/ struct _NameSpace * * Session ) = 0;
      virtual HRESULT __stdcall get_Parent (
        /*[out,retval]*/ IDispatch * * Parent ) = 0;
      virtual HRESULT __stdcall get_Enabled (
        /*[out,retval]*/ VARIANT_BOOL * Enabled ) = 0;
      virtual HRESULT __stdcall put_Enabled (
        /*[in]*/ VARIANT_BOOL Enabled ) = 0;
      virtual HRESULT __stdcall get_ConditionType (
        /*[out,retval]*/ enum OlRuleConditionType * ConditionType ) = 0;
      virtual HRESULT __stdcall get_Text (
        /*[out,retval]*/ VARIANT * Text ) = 0;
      virtual HRESULT __stdcall put_Text (
        /*[in]*/ VARIANT Text ) = 0;
};

struct __declspec(uuid("000630dc-0000-0000-c000-000000000046"))
_CategoryRuleCondition : IDispatch
{
    //
    // Property data
    //

    __declspec(property(get=GetApplication))
    _ApplicationPtr Application;
    __declspec(property(get=GetParent))
    IDispatchPtr Parent;
    __declspec(property(get=GetCategories,put=PutCategories))
    _variant_t Categories;
    __declspec(property(get=GetEnabled,put=PutEnabled))
    VARIANT_BOOL Enabled;
    __declspec(property(get=GetClass))
    enum OlObjectClass Class;
    __declspec(property(get=GetSession))
    _NameSpacePtr Session;
    __declspec(property(get=GetConditionType))
    enum OlRuleConditionType ConditionType;

    //
    // Wrapper methods for error-handling
    //

    _ApplicationPtr GetApplication ( );
    enum OlObjectClass GetClass ( );
    _NameSpacePtr GetSession ( );
    IDispatchPtr GetParent ( );
    VARIANT_BOOL GetEnabled ( );
    void PutEnabled (
        VARIANT_BOOL Enabled );
    enum OlRuleConditionType GetConditionType ( );
    _variant_t GetCategories ( );
    void PutCategories (
        const _variant_t & Categories );

    //
    // Raw methods provided by interface
    //

      virtual HRESULT __stdcall get_Application (
        /*[out,retval]*/ struct _Application * * Application ) = 0;
      virtual HRESULT __stdcall get_Class (
        /*[out,retval]*/ enum OlObjectClass * Class ) = 0;
      virtual HRESULT __stdcall get_Session (
        /*[out,retval]*/ struct _NameSpace * * Session ) = 0;
      virtual HRESULT __stdcall get_Parent (
        /*[out,retval]*/ IDispatch * * Parent ) = 0;
      virtual HRESULT __stdcall get_Enabled (
        /*[out,retval]*/ VARIANT_BOOL * Enabled ) = 0;
      virtual HRESULT __stdcall put_Enabled (
        /*[in]*/ VARIANT_BOOL Enabled ) = 0;
      virtual HRESULT __stdcall get_ConditionType (
        /*[out,retval]*/ enum OlRuleConditionType * ConditionType ) = 0;
      virtual HRESULT __stdcall get_Categories (
        /*[out,retval]*/ VARIANT * Categories ) = 0;
      virtual HRESULT __stdcall put_Categories (
        /*[in]*/ VARIANT Categories ) = 0;
};

struct __declspec(uuid("000630dd-0000-0000-c000-000000000046"))
_FormNameRuleCondition : IDispatch
{
    //
    // Property data
    //

    __declspec(property(get=GetApplication))
    _ApplicationPtr Application;
    __declspec(property(get=GetParent))
    IDispatchPtr Parent;
    __declspec(property(get=GetFormName,put=PutFormName))
    _variant_t FormName;
    __declspec(property(get=GetEnabled,put=PutEnabled))
    VARIANT_BOOL Enabled;
    __declspec(property(get=GetClass))
    enum OlObjectClass Class;
    __declspec(property(get=GetSession))
    _NameSpacePtr Session;
    __declspec(property(get=GetConditionType))
    enum OlRuleConditionType ConditionType;

    //
    // Wrapper methods for error-handling
    //

    _ApplicationPtr GetApplication ( );
    enum OlObjectClass GetClass ( );
    _NameSpacePtr GetSession ( );
    IDispatchPtr GetParent ( );
    VARIANT_BOOL GetEnabled ( );
    void PutEnabled (
        VARIANT_BOOL Enabled );
    enum OlRuleConditionType GetConditionType ( );
    _variant_t GetFormName ( );
    void PutFormName (
        const _variant_t & FormName );

    //
    // Raw methods provided by interface
    //

      virtual HRESULT __stdcall get_Application (
        /*[out,retval]*/ struct _Application * * Application ) = 0;
      virtual HRESULT __stdcall get_Class (
        /*[out,retval]*/ enum OlObjectClass * Class ) = 0;
      virtual HRESULT __stdcall get_Session (
        /*[out,retval]*/ struct _NameSpace * * Session ) = 0;
      virtual HRESULT __stdcall get_Parent (
        /*[out,retval]*/ IDispatch * * Parent ) = 0;
      virtual HRESULT __stdcall get_Enabled (
        /*[out,retval]*/ VARIANT_BOOL * Enabled ) = 0;
      virtual HRESULT __stdcall put_Enabled (
        /*[in]*/ VARIANT_BOOL Enabled ) = 0;
      virtual HRESULT __stdcall get_ConditionType (
        /*[out,retval]*/ enum OlRuleConditionType * ConditionType ) = 0;
      virtual HRESULT __stdcall get_FormName (
        /*[out,retval]*/ VARIANT * FormName ) = 0;
      virtual HRESULT __stdcall put_FormName (
        /*[in]*/ VARIANT FormName ) = 0;
};

struct __declspec(uuid("000630fa-0000-0000-c000-000000000046"))
_AddressRuleCondition : IDispatch
{
    //
    // Property data
    //

    __declspec(property(get=GetApplication))
    _ApplicationPtr Application;
    __declspec(property(get=GetParent))
    IDispatchPtr Parent;
    __declspec(property(get=GetEnabled,put=PutEnabled))
    VARIANT_BOOL Enabled;
    __declspec(property(get=GetAddress,put=PutAddress))
    _variant_t Address;
    __declspec(property(get=GetClass))
    enum OlObjectClass Class;
    __declspec(property(get=GetSession))
    _NameSpacePtr Session;
    __declspec(property(get=GetConditionType))
    enum OlRuleConditionType ConditionType;

    //
    // Wrapper methods for error-handling
    //

    _ApplicationPtr GetApplication ( );
    enum OlObjectClass GetClass ( );
    _NameSpacePtr GetSession ( );
    IDispatchPtr GetParent ( );
    VARIANT_BOOL GetEnabled ( );
    void PutEnabled (
        VARIANT_BOOL Enabled );
    enum OlRuleConditionType GetConditionType ( );
    _variant_t GetAddress ( );
    void PutAddress (
        const _variant_t & Address );

    //
    // Raw methods provided by interface
    //

      virtual HRESULT __stdcall get_Application (
        /*[out,retval]*/ struct _Application * * Application ) = 0;
      virtual HRESULT __stdcall get_Class (
        /*[out,retval]*/ enum OlObjectClass * Class ) = 0;
      virtual HRESULT __stdcall get_Session (
        /*[out,retval]*/ struct _NameSpace * * Session ) = 0;
      virtual HRESULT __stdcall get_Parent (
        /*[out,retval]*/ IDispatch * * Parent ) = 0;
      virtual HRESULT __stdcall get_Enabled (
        /*[out,retval]*/ VARIANT_BOOL * Enabled ) = 0;
      virtual HRESULT __stdcall put_Enabled (
        /*[in]*/ VARIANT_BOOL Enabled ) = 0;
      virtual HRESULT __stdcall get_ConditionType (
        /*[out,retval]*/ enum OlRuleConditionType * ConditionType ) = 0;
      virtual HRESULT __stdcall get_Address (
        /*[out,retval]*/ VARIANT * Address ) = 0;
      virtual HRESULT __stdcall put_Address (
        /*[in]*/ VARIANT Address ) = 0;
};

struct __declspec(uuid("000630fb-0000-0000-c000-000000000046"))
_FromRssFeedRuleCondition : IDispatch
{
    //
    // Property data
    //

    __declspec(property(get=GetApplication))
    _ApplicationPtr Application;
    __declspec(property(get=GetParent))
    IDispatchPtr Parent;
    __declspec(property(get=GetEnabled,put=PutEnabled))
    VARIANT_BOOL Enabled;
    __declspec(property(get=GetFromRssFeed,put=PutFromRssFeed))
    _variant_t FromRssFeed;
    __declspec(property(get=GetClass))
    enum OlObjectClass Class;
    __declspec(property(get=GetSession))
    _NameSpacePtr Session;
    __declspec(property(get=GetConditionType))
    enum OlRuleConditionType ConditionType;

    //
    // Wrapper methods for error-handling
    //

    _ApplicationPtr GetApplication ( );
    enum OlObjectClass GetClass ( );
    _NameSpacePtr GetSession ( );
    IDispatchPtr GetParent ( );
    VARIANT_BOOL GetEnabled ( );
    void PutEnabled (
        VARIANT_BOOL Enabled );
    enum OlRuleConditionType GetConditionType ( );
    _variant_t GetFromRssFeed ( );
    void PutFromRssFeed (
        const _variant_t & FromRssFeed );

    //
    // Raw methods provided by interface
    //

      virtual HRESULT __stdcall get_Application (
        /*[out,retval]*/ struct _Application * * Application ) = 0;
      virtual HRESULT __stdcall get_Class (
        /*[out,retval]*/ enum OlObjectClass * Class ) = 0;
      virtual HRESULT __stdcall get_Session (
        /*[out,retval]*/ struct _NameSpace * * Session ) = 0;
      virtual HRESULT __stdcall get_Parent (
        /*[out,retval]*/ IDispatch * * Parent ) = 0;
      virtual HRESULT __stdcall get_Enabled (
        /*[out,retval]*/ VARIANT_BOOL * Enabled ) = 0;
      virtual HRESULT __stdcall put_Enabled (
        /*[in]*/ VARIANT_BOOL Enabled ) = 0;
      virtual HRESULT __stdcall get_ConditionType (
        /*[out,retval]*/ enum OlRuleConditionType * ConditionType ) = 0;
      virtual HRESULT __stdcall get_FromRssFeed (
        /*[out,retval]*/ VARIANT * FromRssFeed ) = 0;
      virtual HRESULT __stdcall put_FromRssFeed (
        /*[in]*/ VARIANT FromRssFeed ) = 0;
};

struct __declspec(uuid("000630cb-0000-0000-c000-000000000046"))
_StorageItem : IDispatch
{
    //
    // Property data
    //

    __declspec(property(get=GetApplication))
    _ApplicationPtr Application;
    __declspec(property(get=GetParent))
    IDispatchPtr Parent;
    __declspec(property(get=GetBody,put=PutBody))
    _bstr_t Body;
    __declspec(property(get=GetCreationTime))
    DATE CreationTime;
    __declspec(property(get=GetLastModificationTime))
    DATE LastModificationTime;
    __declspec(property(get=GetSize))
    long Size;
    __declspec(property(get=GetClass))
    enum OlObjectClass Class;
    __declspec(property(get=GetSession))
    _NameSpacePtr Session;
    __declspec(property(get=GetAttachments))
    AttachmentsPtr Attachments;
    __declspec(property(get=GetUserProperties))
    UserPropertiesPtr UserProperties;
    __declspec(property(get=GetSubject,put=PutSubject))
    _bstr_t Subject;
    __declspec(property(get=GetCreator,put=PutCreator))
    _bstr_t Creator;
    __declspec(property(get=GetPropertyAccessor))
    _PropertyAccessorPtr PropertyAccessor;
    __declspec(property(get=GetEntryID))
    _bstr_t EntryID;

    //
    // Wrapper methods for error-handling
    //

    _ApplicationPtr GetApplication ( );
    enum OlObjectClass GetClass ( );
    _NameSpacePtr GetSession ( );
    IDispatchPtr GetParent ( );
    DATE GetCreationTime ( );
    DATE GetLastModificationTime ( );
    _bstr_t GetEntryID ( );
    HRESULT Save ( );
    HRESULT Delete ( );
    _bstr_t GetBody ( );
    void PutBody (
        _bstr_t Body );
    AttachmentsPtr GetAttachments ( );
    long GetSize ( );
    UserPropertiesPtr GetUserProperties ( );
    _PropertyAccessorPtr GetPropertyAccessor ( );
    _bstr_t GetSubject ( );
    void PutSubject (
        _bstr_t Subject );
    _bstr_t GetCreator ( );
    void PutCreator (
        _bstr_t Creator );

    //
    // Raw methods provided by interface
    //

      virtual HRESULT __stdcall get_Application (
        /*[out,retval]*/ struct _Application * * Application ) = 0;
      virtual HRESULT __stdcall get_Class (
        /*[out,retval]*/ enum OlObjectClass * Class ) = 0;
      virtual HRESULT __stdcall get_Session (
        /*[out,retval]*/ struct _NameSpace * * Session ) = 0;
      virtual HRESULT __stdcall get_Parent (
        /*[out,retval]*/ IDispatch * * Parent ) = 0;
      virtual HRESULT __stdcall get_CreationTime (
        /*[out,retval]*/ DATE * CreationTime ) = 0;
      virtual HRESULT __stdcall get_LastModificationTime (
        /*[out,retval]*/ DATE * LastModificationTime ) = 0;
      virtual HRESULT __stdcall get_EntryID (
        /*[out,retval]*/ BSTR * EntryID ) = 0;
      virtual HRESULT __stdcall raw_Save ( ) = 0;
      virtual HRESULT __stdcall raw_Delete ( ) = 0;
      virtual HRESULT __stdcall get_Body (
        /*[out,retval]*/ BSTR * Body ) = 0;
      virtual HRESULT __stdcall put_Body (
        /*[in]*/ BSTR Body ) = 0;
      virtual HRESULT __stdcall get_Attachments (
        /*[out,retval]*/ struct Attachments * * Attachments ) = 0;
      virtual HRESULT __stdcall get_Size (
        /*[out,retval]*/ long * Size ) = 0;
      virtual HRESULT __stdcall get_UserProperties (
        /*[out,retval]*/ struct UserProperties * * UserProperties ) = 0;
      virtual HRESULT __stdcall get_PropertyAccessor (
        /*[out,retval]*/ struct _PropertyAccessor * * PropertyAccessor ) = 0;
      virtual HRESULT __stdcall get_Subject (
        /*[out,retval]*/ BSTR * Subject ) = 0;
      virtual HRESULT __stdcall put_Subject (
        /*[in]*/ BSTR Subject ) = 0;
      virtual HRESULT __stdcall get_Creator (
        /*[out,retval]*/ BSTR * Creator ) = 0;
      virtual HRESULT __stdcall put_Creator (
        /*[in]*/ BSTR Creator ) = 0;
};

struct __declspec(uuid("000630d2-0000-0000-c000-000000000046"))
_Table : IDispatch
{
    //
    // Property data
    //

    __declspec(property(get=GetApplication))
    _ApplicationPtr Application;
    __declspec(property(get=GetParent))
    IDispatchPtr Parent;
    __declspec(property(get=GetClass))
    enum OlObjectClass Class;
    __declspec(property(get=GetSession))
    _NameSpacePtr Session;
    __declspec(property(get=GetColumns))
    _ColumnsPtr Columns;
    __declspec(property(get=GetEndOfTable))
    VARIANT_BOOL EndOfTable;

    //
    // Wrapper methods for error-handling
    //

    _ApplicationPtr GetApplication ( );
    enum OlObjectClass GetClass ( );
    _NameSpacePtr GetSession ( );
    IDispatchPtr GetParent ( );
    _RowPtr FindRow (
        _bstr_t Filter );
    _RowPtr FindNextRow ( );
    _variant_t GetArray (
        long MaxRows );
    _RowPtr GetNextRow ( );
    long GetRowCount ( );
    HRESULT MoveToStart ( );
    _TablePtr Restrict (
        _bstr_t Filter );
    HRESULT Sort (
        _bstr_t SortProperty,
        const _variant_t & Descending = vtMissing );
    _ColumnsPtr GetColumns ( );
    VARIANT_BOOL GetEndOfTable ( );

    //
    // Raw methods provided by interface
    //

      virtual HRESULT __stdcall get_Application (
        /*[out,retval]*/ struct _Application * * Application ) = 0;
      virtual HRESULT __stdcall get_Class (
        /*[out,retval]*/ enum OlObjectClass * Class ) = 0;
      virtual HRESULT __stdcall get_Session (
        /*[out,retval]*/ struct _NameSpace * * Session ) = 0;
      virtual HRESULT __stdcall get_Parent (
        /*[out,retval]*/ IDispatch * * Parent ) = 0;
      virtual HRESULT __stdcall raw_FindRow (
        /*[in]*/ BSTR Filter,
        /*[out,retval]*/ struct _Row * * Row ) = 0;
      virtual HRESULT __stdcall raw_FindNextRow (
        /*[out,retval]*/ struct _Row * * Row ) = 0;
      virtual HRESULT __stdcall raw_GetArray (
        /*[in]*/ long MaxRows,
        /*[out,retval]*/ VARIANT * Rows ) = 0;
      virtual HRESULT __stdcall raw_GetNextRow (
        /*[out,retval]*/ struct _Row * * NextRow ) = 0;
      virtual HRESULT __stdcall raw_GetRowCount (
        /*[out,retval]*/ long * Count ) = 0;
      virtual HRESULT __stdcall raw_MoveToStart ( ) = 0;
      virtual HRESULT __stdcall raw_Restrict (
        /*[in]*/ BSTR Filter,
        /*[out,retval]*/ struct _Table * * Table ) = 0;
      virtual HRESULT __stdcall raw_Sort (
        /*[in]*/ BSTR SortProperty,
        /*[in]*/ VARIANT Descending = vtMissing ) = 0;
      virtual HRESULT __stdcall get_Columns (
        /*[out,retval]*/ struct _Columns * * Columns ) = 0;
      virtual HRESULT __stdcall get_EndOfTable (
        /*[out,retval]*/ VARIANT_BOOL * EndOfTable ) = 0;
};

struct __declspec(uuid("000630d3-0000-0000-c000-000000000046"))
_Row : IDispatch
{
    //
    // Property data
    //

    __declspec(property(get=GetApplication))
    _ApplicationPtr Application;
    __declspec(property(get=GetParent))
    IDispatchPtr Parent;
    __declspec(property(get=GetClass))
    enum OlObjectClass Class;
    __declspec(property(get=GetSession))
    _NameSpacePtr Session;

    //
    // Wrapper methods for error-handling
    //

    _ApplicationPtr GetApplication ( );
    enum OlObjectClass GetClass ( );
    _NameSpacePtr GetSession ( );
    IDispatchPtr GetParent ( );
    _bstr_t BinaryToString (
        const _variant_t & Index );
    _variant_t GetValues ( );
    _variant_t Item (
        const _variant_t & Index );
    DATE LocalTimeToUTC (
        const _variant_t & Index );
    DATE UTCToLocalTime (
        const _variant_t & Index );

    //
    // Raw methods provided by interface
    //

      virtual HRESULT __stdcall get_Application (
        /*[out,retval]*/ struct _Application * * Application ) = 0;
      virtual HRESULT __stdcall get_Class (
        /*[out,retval]*/ enum OlObjectClass * Class ) = 0;
      virtual HRESULT __stdcall get_Session (
        /*[out,retval]*/ struct _NameSpace * * Session ) = 0;
      virtual HRESULT __stdcall get_Parent (
        /*[out,retval]*/ IDispatch * * Parent ) = 0;
      virtual HRESULT __stdcall raw_BinaryToString (
        /*[in]*/ VARIANT Index,
        /*[out,retval]*/ BSTR * Value ) = 0;
      virtual HRESULT __stdcall raw_GetValues (
        /*[out,retval]*/ VARIANT * Values ) = 0;
      virtual HRESULT __stdcall raw_Item (
        /*[in]*/ VARIANT Index,
        /*[out,retval]*/ VARIANT * Value ) = 0;
      virtual HRESULT __stdcall raw_LocalTimeToUTC (
        /*[in]*/ VARIANT Index,
        /*[out,retval]*/ DATE * Value ) = 0;
      virtual HRESULT __stdcall raw_UTCToLocalTime (
        /*[in]*/ VARIANT Index,
        /*[out,retval]*/ DATE * Value ) = 0;
};

struct __declspec(uuid("000630e5-0000-0000-c000-000000000046"))
_Column : IDispatch
{
    //
    // Property data
    //

    __declspec(property(get=GetApplication))
    _ApplicationPtr Application;
    __declspec(property(get=GetParent))
    IDispatchPtr Parent;
    __declspec(property(get=GetName))
    _bstr_t Name;
    __declspec(property(get=GetClass))
    enum OlObjectClass Class;
    __declspec(property(get=GetSession))
    _NameSpacePtr Session;

    //
    // Wrapper methods for error-handling
    //

    _ApplicationPtr GetApplication ( );
    enum OlObjectClass GetClass ( );
    _NameSpacePtr GetSession ( );
    IDispatchPtr GetParent ( );
    _bstr_t GetName ( );

    //
    // Raw methods provided by interface
    //

      virtual HRESULT __stdcall get_Application (
        /*[out,retval]*/ struct _Application * * Application ) = 0;
      virtual HRESULT __stdcall get_Class (
        /*[out,retval]*/ enum OlObjectClass * Class ) = 0;
      virtual HRESULT __stdcall get_Session (
        /*[out,retval]*/ struct _NameSpace * * Session ) = 0;
      virtual HRESULT __stdcall get_Parent (
        /*[out,retval]*/ IDispatch * * Parent ) = 0;
      virtual HRESULT __stdcall get_Name (
        /*[out,retval]*/ BSTR * Name ) = 0;
};

struct __declspec(uuid("000630e1-0000-0000-c000-000000000046"))
_Columns : IDispatch
{
    //
    // Property data
    //

    __declspec(property(get=GetApplication))
    _ApplicationPtr Application;
    __declspec(property(get=GetParent))
    IDispatchPtr Parent;
    __declspec(property(get=GetClass))
    enum OlObjectClass Class;
    __declspec(property(get=GetSession))
    _NameSpacePtr Session;
    __declspec(property(get=GetCount))
    long Count;

    //
    // Wrapper methods for error-handling
    //

    _ApplicationPtr GetApplication ( );
    enum OlObjectClass GetClass ( );
    _NameSpacePtr GetSession ( );
    IDispatchPtr GetParent ( );
    long GetCount ( );
    _ColumnPtr Item (
        const _variant_t & Index );
    _ColumnPtr Add (
        _bstr_t Name );
    HRESULT Remove (
        const _variant_t & Index );
    HRESULT RemoveAll ( );

    //
    // Raw methods provided by interface
    //

      virtual HRESULT __stdcall get_Application (
        /*[out,retval]*/ struct _Application * * Application ) = 0;
      virtual HRESULT __stdcall get_Class (
        /*[out,retval]*/ enum OlObjectClass * Class ) = 0;
      virtual HRESULT __stdcall get_Session (
        /*[out,retval]*/ struct _NameSpace * * Session ) = 0;
      virtual HRESULT __stdcall get_Parent (
        /*[out,retval]*/ IDispatch * * Parent ) = 0;
      virtual HRESULT __stdcall get_Count (
        /*[out,retval]*/ long * Count ) = 0;
      virtual HRESULT __stdcall raw_Item (
        /*[in]*/ VARIANT Index,
        /*[out,retval]*/ struct _Column * * Item ) = 0;
      virtual HRESULT __stdcall raw_Add (
        /*[in]*/ BSTR Name,
        /*[out,retval]*/ struct _Column * * Column ) = 0;
      virtual HRESULT __stdcall raw_Remove (
        /*[in]*/ VARIANT Index ) = 0;
      virtual HRESULT __stdcall raw_RemoveAll ( ) = 0;
};

struct __declspec(uuid("00063089-0000-0000-c000-000000000046"))
Link : IDispatch
{
    //
    // Property data
    //

    __declspec(property(get=GetApplication))
    _ApplicationPtr Application;
    __declspec(property(get=GetName))
    _bstr_t Name;
    __declspec(property(get=GetType))
    enum OlObjectClass Type;
    __declspec(property(get=GetItem))
    IDispatchPtr Item;
    __declspec(property(get=GetClass))
    enum OlObjectClass Class;
    __declspec(property(get=GetSession))
    _NameSpacePtr Session;
    __declspec(property(get=GetParent))
    IDispatchPtr Parent;

    //
    // Wrapper methods for error-handling
    //

    _ApplicationPtr GetApplication ( );
    enum OlObjectClass GetClass ( );
    _NameSpacePtr GetSession ( );
    IDispatchPtr GetParent ( );
    _bstr_t GetName ( );
    enum OlObjectClass GetType ( );
    IDispatchPtr GetItem ( );

    //
    // Raw methods provided by interface
    //

      virtual HRESULT __stdcall get_Application (
        /*[out,retval]*/ struct _Application * * Application ) = 0;
      virtual HRESULT __stdcall get_Class (
        /*[out,retval]*/ enum OlObjectClass * Class ) = 0;
      virtual HRESULT __stdcall get_Session (
        /*[out,retval]*/ struct _NameSpace * * Session ) = 0;
      virtual HRESULT __stdcall get_Parent (
        /*[out,retval]*/ IDispatch * * Parent ) = 0;
      virtual HRESULT __stdcall get_Name (
        /*[out,retval]*/ BSTR * Name ) = 0;
      virtual HRESULT __stdcall get_Type (
        /*[out,retval]*/ enum OlObjectClass * Type ) = 0;
      virtual HRESULT __stdcall get_Item (
        /*[out,retval]*/ IDispatch * * Item ) = 0;
};

struct __declspec(uuid("0006308a-0000-0000-c000-000000000046"))
Links : IDispatch
{
    //
    // Property data
    //

    __declspec(property(get=GetApplication))
    _ApplicationPtr Application;
    __declspec(property(get=GetParent))
    IDispatchPtr Parent;
    __declspec(property(get=GetClass))
    enum OlObjectClass Class;
    __declspec(property(get=GetSession))
    _NameSpacePtr Session;
    __declspec(property(get=GetCount))
    long Count;

    //
    // Wrapper methods for error-handling
    //

    _ApplicationPtr GetApplication ( );
    enum OlObjectClass GetClass ( );
    _NameSpacePtr GetSession ( );
    IDispatchPtr GetParent ( );
    long GetCount ( );
    LinkPtr Item (
        const _variant_t & Index );
    LinkPtr Add (
        IDispatch * Item );
    HRESULT Remove (
        const _variant_t & Index );

    //
    // Raw methods provided by interface
    //

      virtual HRESULT __stdcall get_Application (
        /*[out,retval]*/ struct _Application * * Application ) = 0;
      virtual HRESULT __stdcall get_Class (
        /*[out,retval]*/ enum OlObjectClass * Class ) = 0;
      virtual HRESULT __stdcall get_Session (
        /*[out,retval]*/ struct _NameSpace * * Session ) = 0;
      virtual HRESULT __stdcall get_Parent (
        /*[out,retval]*/ IDispatch * * Parent ) = 0;
      virtual HRESULT __stdcall get_Count (
        /*[out,retval]*/ long * Count ) = 0;
      virtual HRESULT __stdcall raw_Item (
        /*[in]*/ VARIANT Index,
        /*[out,retval]*/ struct Link * * Item ) = 0;
      virtual HRESULT __stdcall raw_Add (
        /*[in]*/ IDispatch * Item,
        /*[out,retval]*/ struct Link * * Link ) = 0;
      virtual HRESULT __stdcall raw_Remove (
        /*[in]*/ VARIANT Index ) = 0;
};

struct __declspec(uuid("000630a7-0000-0000-c000-000000000046"))
ItemProperty : IDispatch
{
    //
    // Property data
    //

    __declspec(property(get=GetApplication))
    _ApplicationPtr Application;
    __declspec(property(get=GetParent))
    IDispatchPtr Parent;
    __declspec(property(get=GetValue,put=PutValue))
    _variant_t Value;
    __declspec(property(get=GetFormula,put=PutFormula))
    _bstr_t Formula;
    __declspec(property(get=GetValidationFormula,put=PutValidationFormula))
    _bstr_t ValidationFormula;
    __declspec(property(get=GetValidationText,put=PutValidationText))
    _bstr_t ValidationText;
    __declspec(property(get=GetClass))
    enum OlObjectClass Class;
    __declspec(property(get=GetSession))
    _NameSpacePtr Session;
    __declspec(property(get=GetIsUserProperty))
    VARIANT_BOOL IsUserProperty;
    __declspec(property(get=GetType))
    enum OlUserPropertyType Type;
    __declspec(property(get=GetName))
    _bstr_t Name;

    //
    // Wrapper methods for error-handling
    //

    _ApplicationPtr GetApplication ( );
    enum OlObjectClass GetClass ( );
    _NameSpacePtr GetSession ( );
    IDispatchPtr GetParent ( );
    _bstr_t GetFormula ( );
    void PutFormula (
        _bstr_t Formula );
    _bstr_t GetName ( );
    enum OlUserPropertyType GetType ( );
    _bstr_t GetValidationFormula ( );
    void PutValidationFormula (
        _bstr_t ValidationFormula );
    _bstr_t GetValidationText ( );
    void PutValidationText (
        _bstr_t ValidationText );
    _variant_t GetValue ( );
    void PutValue (
        const _variant_t & Value );
    HRESULT Delete ( );
    VARIANT_BOOL GetIsUserProperty ( );

    //
    // Raw methods provided by interface
    //

      virtual HRESULT __stdcall get_Application (
        /*[out,retval]*/ struct _Application * * Application ) = 0;
      virtual HRESULT __stdcall get_Class (
        /*[out,retval]*/ enum OlObjectClass * Class ) = 0;
      virtual HRESULT __stdcall get_Session (
        /*[out,retval]*/ struct _NameSpace * * Session ) = 0;
      virtual HRESULT __stdcall get_Parent (
        /*[out,retval]*/ IDispatch * * Parent ) = 0;
      virtual HRESULT __stdcall get_Formula (
        /*[out,retval]*/ BSTR * Formula ) = 0;
      virtual HRESULT __stdcall put_Formula (
        /*[in]*/ BSTR Formula ) = 0;
      virtual HRESULT __stdcall get_Name (
        /*[out,retval]*/ BSTR * Name ) = 0;
      virtual HRESULT __stdcall get_Type (
        /*[out,retval]*/ enum OlUserPropertyType * Type ) = 0;
      virtual HRESULT __stdcall get_ValidationFormula (
        /*[out,retval]*/ BSTR * ValidationFormula ) = 0;
      virtual HRESULT __stdcall put_ValidationFormula (
        /*[in]*/ BSTR ValidationFormula ) = 0;
      virtual HRESULT __stdcall get_ValidationText (
        /*[out,retval]*/ BSTR * ValidationText ) = 0;
      virtual HRESULT __stdcall put_ValidationText (
        /*[in]*/ BSTR ValidationText ) = 0;
      virtual HRESULT __stdcall get_Value (
        /*[out,retval]*/ VARIANT * Value ) = 0;
      virtual HRESULT __stdcall put_Value (
        /*[in]*/ VARIANT Value ) = 0;
      virtual HRESULT __stdcall raw_Delete ( ) = 0;
      virtual HRESULT __stdcall get_IsUserProperty (
        /*[out,retval]*/ VARIANT_BOOL * IsUserProperty ) = 0;
};

struct __declspec(uuid("000630a8-0000-0000-c000-000000000046"))
ItemProperties : IDispatch
{
    //
    // Property data
    //

    __declspec(property(get=GetApplication))
    _ApplicationPtr Application;
    __declspec(property(get=GetParent))
    IDispatchPtr Parent;
    __declspec(property(get=GetClass))
    enum OlObjectClass Class;
    __declspec(property(get=GetSession))
    _NameSpacePtr Session;
    __declspec(property(get=GetCount))
    long Count;

    //
    // Wrapper methods for error-handling
    //

    _ApplicationPtr GetApplication ( );
    enum OlObjectClass GetClass ( );
    _NameSpacePtr GetSession ( );
    IDispatchPtr GetParent ( );
    long GetCount ( );
    ItemPropertyPtr Item (
        const _variant_t & Index );
    IUnknownPtr _NewEnum ( );
    ItemPropertyPtr Add (
        _bstr_t Name,
        enum OlUserPropertyType Type,
        const _variant_t & AddToFolderFields = vtMissing,
        const _variant_t & DisplayFormat = vtMissing );
    HRESULT Remove (
        long Index );

    //
    // Raw methods provided by interface
    //

      virtual HRESULT __stdcall get_Application (
        /*[out,retval]*/ struct _Application * * Application ) = 0;
      virtual HRESULT __stdcall get_Class (
        /*[out,retval]*/ enum OlObjectClass * Class ) = 0;
      virtual HRESULT __stdcall get_Session (
        /*[out,retval]*/ struct _NameSpace * * Session ) = 0;
      virtual HRESULT __stdcall get_Parent (
        /*[out,retval]*/ IDispatch * * Parent ) = 0;
      virtual HRESULT __stdcall get_Count (
        /*[out,retval]*/ long * Count ) = 0;
      virtual HRESULT __stdcall raw_Item (
        /*[in]*/ VARIANT Index,
        /*[out,retval]*/ struct ItemProperty * * Item ) = 0;
      virtual HRESULT __stdcall raw__NewEnum (
        /*[out,retval]*/ IUnknown * * ppvObject ) = 0;
      virtual HRESULT __stdcall raw_Add (
        /*[in]*/ BSTR Name,
        /*[in]*/ enum OlUserPropertyType Type,
        /*[in]*/ VARIANT AddToFolderFields,
        /*[in]*/ VARIANT DisplayFormat,
        /*[out,retval]*/ struct ItemProperty * * ItemProperty ) = 0;
      virtual HRESULT __stdcall raw_Remove (
        /*[in]*/ long Index ) = 0;
};

struct __declspec(uuid("000630c3-0000-0000-c000-000000000046"))
Conflict : IDispatch
{
    //
    // Property data
    //

    __declspec(property(get=GetApplication))
    _ApplicationPtr Application;
    __declspec(property(get=GetParent))
    IDispatchPtr Parent;
    __declspec(property(get=GetClass))
    enum OlObjectClass Class;
    __declspec(property(get=GetSession))
    _NameSpacePtr Session;
    __declspec(property(get=GetItem))
    IDispatchPtr Item;
    __declspec(property(get=GetName))
    _bstr_t Name;
    __declspec(property(get=GetType))
    enum OlObjectClass Type;

    //
    // Wrapper methods for error-handling
    //

    _ApplicationPtr GetApplication ( );
    enum OlObjectClass GetClass ( );
    _NameSpacePtr GetSession ( );
    IDispatchPtr GetParent ( );
    IDispatchPtr GetItem ( );
    _bstr_t GetName ( );
    enum OlObjectClass GetType ( );

    //
    // Raw methods provided by interface
    //

      virtual HRESULT __stdcall get_Application (
        /*[out,retval]*/ struct _Application * * Application ) = 0;
      virtual HRESULT __stdcall get_Class (
        /*[out,retval]*/ enum OlObjectClass * Class ) = 0;
      virtual HRESULT __stdcall get_Session (
        /*[out,retval]*/ struct _NameSpace * * Session ) = 0;
      virtual HRESULT __stdcall get_Parent (
        /*[out,retval]*/ IDispatch * * Parent ) = 0;
      virtual HRESULT __stdcall get_Item (
        /*[out,retval]*/ IDispatch * * Item ) = 0;
      virtual HRESULT __stdcall get_Name (
        /*[out,retval]*/ BSTR * Name ) = 0;
      virtual HRESULT __stdcall get_Type (
        /*[out,retval]*/ enum OlObjectClass * Type ) = 0;
};

struct __declspec(uuid("000630c2-0000-0000-c000-000000000046"))
Conflicts : IDispatch
{
    //
    // Property data
    //

    __declspec(property(get=GetApplication))
    _ApplicationPtr Application;
    __declspec(property(get=GetParent))
    IDispatchPtr Parent;
    __declspec(property(get=GetClass))
    enum OlObjectClass Class;
    __declspec(property(get=GetSession))
    _NameSpacePtr Session;
    __declspec(property(get=GetCount))
    long Count;

    //
    // Wrapper methods for error-handling
    //

    _ApplicationPtr GetApplication ( );
    enum OlObjectClass GetClass ( );
    _NameSpacePtr GetSession ( );
    IDispatchPtr GetParent ( );
    long GetCount ( );
    ConflictPtr Item (
        const _variant_t & Index );
    ConflictPtr GetFirst ( );
    ConflictPtr GetLast ( );
    ConflictPtr GetNext ( );
    ConflictPtr GetPrevious ( );

    //
    // Raw methods provided by interface
    //

      virtual HRESULT __stdcall get_Application (
        /*[out,retval]*/ struct _Application * * Application ) = 0;
      virtual HRESULT __stdcall get_Class (
        /*[out,retval]*/ enum OlObjectClass * Class ) = 0;
      virtual HRESULT __stdcall get_Session (
        /*[out,retval]*/ struct _NameSpace * * Session ) = 0;
      virtual HRESULT __stdcall get_Parent (
        /*[out,retval]*/ IDispatch * * Parent ) = 0;
      virtual HRESULT __stdcall get_Count (
        /*[out,retval]*/ long * Count ) = 0;
      virtual HRESULT __stdcall raw_Item (
        /*[in]*/ VARIANT Index,
        /*[out,retval]*/ struct Conflict * * Item ) = 0;
      virtual HRESULT __stdcall raw_GetFirst (
        /*[out,retval]*/ struct Conflict * * Item ) = 0;
      virtual HRESULT __stdcall raw_GetLast (
        /*[out,retval]*/ struct Conflict * * Item ) = 0;
      virtual HRESULT __stdcall raw_GetNext (
        /*[out,retval]*/ struct Conflict * * Item ) = 0;
      virtual HRESULT __stdcall raw_GetPrevious (
        /*[out,retval]*/ struct Conflict * * Item ) = 0;
};

struct __declspec(uuid("0006305c-0000-0000-c000-000000000046"))
_UserDefinedProperty : IDispatch
{
    //
    // Property data
    //

    __declspec(property(get=GetApplication))
    _ApplicationPtr Application;
    __declspec(property(get=GetParent))
    IDispatchPtr Parent;
    __declspec(property(get=GetFormula))
    _bstr_t Formula;
    __declspec(property(get=GetDisplayFormat))
    long DisplayFormat;
    __declspec(property(get=GetClass))
    enum OlObjectClass Class;
    __declspec(property(get=GetSession))
    _NameSpacePtr Session;
    __declspec(property(get=GetType))
    enum OlUserPropertyType Type;
    __declspec(property(get=GetName))
    _bstr_t Name;

    //
    // Wrapper methods for error-handling
    //

    _ApplicationPtr GetApplication ( );
    enum OlObjectClass GetClass ( );
    _NameSpacePtr GetSession ( );
    IDispatchPtr GetParent ( );
    _bstr_t GetFormula ( );
    _bstr_t GetName ( );
    enum OlUserPropertyType GetType ( );
    long GetDisplayFormat ( );
    HRESULT Delete ( );

    //
    // Raw methods provided by interface
    //

      virtual HRESULT __stdcall get_Application (
        /*[out,retval]*/ struct _Application * * Application ) = 0;
      virtual HRESULT __stdcall get_Class (
        /*[out,retval]*/ enum OlObjectClass * Class ) = 0;
      virtual HRESULT __stdcall get_Session (
        /*[out,retval]*/ struct _NameSpace * * Session ) = 0;
      virtual HRESULT __stdcall get_Parent (
        /*[out,retval]*/ IDispatch * * Parent ) = 0;
      virtual HRESULT __stdcall get_Formula (
        /*[out,retval]*/ BSTR * Formula ) = 0;
      virtual HRESULT __stdcall get_Name (
        /*[out,retval]*/ BSTR * Name ) = 0;
      virtual HRESULT __stdcall get_Type (
        /*[out,retval]*/ enum OlUserPropertyType * Type ) = 0;
      virtual HRESULT __stdcall get_DisplayFormat (
        /*[out,retval]*/ long * DisplayFormat ) = 0;
      virtual HRESULT __stdcall raw_Delete ( ) = 0;
};

struct __declspec(uuid("00063047-0000-0000-c000-000000000046"))
_UserDefinedProperties : IDispatch
{
    //
    // Property data
    //

    __declspec(property(get=GetApplication))
    _ApplicationPtr Application;
    __declspec(property(get=GetParent))
    IDispatchPtr Parent;
    __declspec(property(get=GetClass))
    enum OlObjectClass Class;
    __declspec(property(get=GetSession))
    _NameSpacePtr Session;
    __declspec(property(get=GetCount))
    long Count;

    //
    // Wrapper methods for error-handling
    //

    _ApplicationPtr GetApplication ( );
    enum OlObjectClass GetClass ( );
    _NameSpacePtr GetSession ( );
    IDispatchPtr GetParent ( );
    long GetCount ( );
    _UserDefinedPropertyPtr Item (
        const _variant_t & Index );
    _UserDefinedPropertyPtr Add (
        _bstr_t Name,
        enum OlUserPropertyType Type,
        const _variant_t & DisplayFormat = vtMissing,
        const _variant_t & Formula = vtMissing );
    _UserDefinedPropertyPtr Find (
        _bstr_t Name );
    HRESULT Remove (
        long Index );
    HRESULT Refresh ( );

    //
    // Raw methods provided by interface
    //

      virtual HRESULT __stdcall get_Application (
        /*[out,retval]*/ struct _Application * * Application ) = 0;
      virtual HRESULT __stdcall get_Class (
        /*[out,retval]*/ enum OlObjectClass * Class ) = 0;
      virtual HRESULT __stdcall get_Session (
        /*[out,retval]*/ struct _NameSpace * * Session ) = 0;
      virtual HRESULT __stdcall get_Parent (
        /*[out,retval]*/ IDispatch * * Parent ) = 0;
      virtual HRESULT __stdcall get_Count (
        /*[out,retval]*/ long * Count ) = 0;
      virtual HRESULT __stdcall raw_Item (
        /*[in]*/ VARIANT Index,
        /*[out,retval]*/ struct _UserDefinedProperty * * Item ) = 0;
      virtual HRESULT __stdcall raw_Add (
        /*[in]*/ BSTR Name,
        /*[in]*/ enum OlUserPropertyType Type,
        /*[in]*/ VARIANT DisplayFormat,
        /*[in]*/ VARIANT Formula,
        /*[out,retval]*/ struct _UserDefinedProperty * * UserDefinedProperty ) = 0;
      virtual HRESULT __stdcall raw_Find (
        /*[in]*/ BSTR Name,
        /*[out,retval]*/ struct _UserDefinedProperty * * UserDefinedProperty ) = 0;
      virtual HRESULT __stdcall raw_Remove (
        /*[in]*/ long Index ) = 0;
      virtual HRESULT __stdcall raw_Refresh ( ) = 0;
};

struct __declspec(uuid("00063083-0000-0000-c000-000000000046"))
_SyncObject : IDispatch
{
    //
    // Property data
    //

    __declspec(property(get=GetApplication))
    _ApplicationPtr Application;
    __declspec(property(get=GetParent))
    IDispatchPtr Parent;
    __declspec(property(get=GetName))
    _bstr_t Name;
    __declspec(property(get=GetClass))
    enum OlObjectClass Class;
    __declspec(property(get=GetSession))
    _NameSpacePtr Session;

    //
    // Wrapper methods for error-handling
    //

    _ApplicationPtr GetApplication ( );
    enum OlObjectClass GetClass ( );
    _NameSpacePtr GetSession ( );
    IDispatchPtr GetParent ( );
    _bstr_t GetName ( );
    HRESULT Start ( );
    HRESULT Stop ( );

    //
    // Raw methods provided by interface
    //

      virtual HRESULT __stdcall get_Application (
        /*[out,retval]*/ struct _Application * * Application ) = 0;
      virtual HRESULT __stdcall get_Class (
        /*[out,retval]*/ enum OlObjectClass * Class ) = 0;
      virtual HRESULT __stdcall get_Session (
        /*[out,retval]*/ struct _NameSpace * * Session ) = 0;
      virtual HRESULT __stdcall get_Parent (
        /*[out,retval]*/ IDispatch * * Parent ) = 0;
      virtual HRESULT __stdcall get_Name (
        /*[out,retval]*/ BSTR * Name ) = 0;
      virtual HRESULT __stdcall raw_Start ( ) = 0;
      virtual HRESULT __stdcall raw_Stop ( ) = 0;
};

struct __declspec(uuid("00063086-0000-0000-c000-000000000046"))
SyncObjects : IDispatch
{
    //
    // Property data
    //

    __declspec(property(get=GetApplication))
    _ApplicationPtr Application;
    __declspec(property(get=GetParent))
    IDispatchPtr Parent;
    __declspec(property(get=GetClass))
    enum OlObjectClass Class;
    __declspec(property(get=GetSession))
    _NameSpacePtr Session;
    __declspec(property(get=GetAppFolders))
    _SyncObjectPtr AppFolders;
    __declspec(property(get=GetCount))
    long Count;

    //
    // Wrapper methods for error-handling
    //

    _ApplicationPtr GetApplication ( );
    enum OlObjectClass GetClass ( );
    _NameSpacePtr GetSession ( );
    IDispatchPtr GetParent ( );
    long GetCount ( );
    _SyncObjectPtr Item (
        const _variant_t & Index );
    _SyncObjectPtr GetAppFolders ( );

    //
    // Raw methods provided by interface
    //

      virtual HRESULT __stdcall get_Application (
        /*[out,retval]*/ struct _Application * * Application ) = 0;
      virtual HRESULT __stdcall get_Class (
        /*[out,retval]*/ enum OlObjectClass * Class ) = 0;
      virtual HRESULT __stdcall get_Session (
        /*[out,retval]*/ struct _NameSpace * * Session ) = 0;
      virtual HRESULT __stdcall get_Parent (
        /*[out,retval]*/ IDispatch * * Parent ) = 0;
      virtual HRESULT __stdcall get_Count (
        /*[out,retval]*/ long * Count ) = 0;
      virtual HRESULT __stdcall raw_Item (
        /*[in]*/ VARIANT Index,
        /*[out,retval]*/ struct _SyncObject * * Item ) = 0;
      virtual HRESULT __stdcall get_AppFolders (
        /*[out,retval]*/ struct _SyncObject * * AppFolders ) = 0;
};

struct __declspec(uuid("000630c4-0000-0000-c000-000000000046"))
_Accounts : IDispatch
{
    //
    // Property data
    //

    __declspec(property(get=GetApplication))
    _ApplicationPtr Application;
    __declspec(property(get=GetParent))
    IDispatchPtr Parent;
    __declspec(property(get=GetClass))
    enum OlObjectClass Class;
    __declspec(property(get=GetSession))
    _NameSpacePtr Session;
    __declspec(property(get=GetCount))
    long Count;

    //
    // Wrapper methods for error-handling
    //

    _ApplicationPtr GetApplication ( );
    enum OlObjectClass GetClass ( );
    _NameSpacePtr GetSession ( );
    IDispatchPtr GetParent ( );
    long GetCount ( );
    _AccountPtr Item (
        const _variant_t & Index );

    //
    // Raw methods provided by interface
    //

      virtual HRESULT __stdcall get_Application (
        /*[out,retval]*/ struct _Application * * Application ) = 0;
      virtual HRESULT __stdcall get_Class (
        /*[out,retval]*/ enum OlObjectClass * Class ) = 0;
      virtual HRESULT __stdcall get_Session (
        /*[out,retval]*/ struct _NameSpace * * Session ) = 0;
      virtual HRESULT __stdcall get_Parent (
        /*[out,retval]*/ IDispatch * * Parent ) = 0;
      virtual HRESULT __stdcall get_Count (
        /*[out,retval]*/ long * Count ) = 0;
      virtual HRESULT __stdcall raw_Item (
        /*[in]*/ VARIANT Index,
        /*[out,retval]*/ struct _Account * * Item ) = 0;
};

struct __declspec(uuid("000630e3-0000-0000-c000-000000000046"))
_Category : IDispatch
{
    //
    // Property data
    //

    __declspec(property(get=GetApplication))
    _ApplicationPtr Application;
    __declspec(property(get=GetParent))
    IDispatchPtr Parent;
    __declspec(property(get=GetName,put=PutName))
    _bstr_t Name;
    __declspec(property(get=GetColor,put=PutColor))
    enum OlCategoryColor Color;
    __declspec(property(get=GetShortcutKey,put=PutShortcutKey))
    enum OlCategoryShortcutKey ShortcutKey;
    __declspec(property(get=GetClass))
    enum OlObjectClass Class;
    __declspec(property(get=GetSession))
    _NameSpacePtr Session;
    __declspec(property(get=GetCategoryID))
    _bstr_t CategoryID;
    __declspec(property(get=GetCategoryBorderColor))
    OLE_COLOR CategoryBorderColor;
    __declspec(property(get=GetCategoryGradientTopColor))
    OLE_COLOR CategoryGradientTopColor;
    __declspec(property(get=GetCategoryGradientBottomColor))
    OLE_COLOR CategoryGradientBottomColor;

    //
    // Wrapper methods for error-handling
    //

    _ApplicationPtr GetApplication ( );
    enum OlObjectClass GetClass ( );
    _NameSpacePtr GetSession ( );
    IDispatchPtr GetParent ( );
    _bstr_t GetName ( );
    void PutName (
        _bstr_t Name );
    enum OlCategoryColor GetColor ( );
    void PutColor (
        enum OlCategoryColor Color );
    enum OlCategoryShortcutKey GetShortcutKey ( );
    void PutShortcutKey (
        enum OlCategoryShortcutKey ShortcutKey );
    _bstr_t GetCategoryID ( );
    OLE_COLOR GetCategoryBorderColor ( );
    OLE_COLOR GetCategoryGradientTopColor ( );
    OLE_COLOR GetCategoryGradientBottomColor ( );

    //
    // Raw methods provided by interface
    //

      virtual HRESULT __stdcall get_Application (
        /*[out,retval]*/ struct _Application * * Application ) = 0;
      virtual HRESULT __stdcall get_Class (
        /*[out,retval]*/ enum OlObjectClass * Class ) = 0;
      virtual HRESULT __stdcall get_Session (
        /*[out,retval]*/ struct _NameSpace * * Session ) = 0;
      virtual HRESULT __stdcall get_Parent (
        /*[out,retval]*/ IDispatch * * Parent ) = 0;
      virtual HRESULT __stdcall get_Name (
        /*[out,retval]*/ BSTR * Name ) = 0;
      virtual HRESULT __stdcall put_Name (
        /*[in]*/ BSTR Name ) = 0;
      virtual HRESULT __stdcall get_Color (
        /*[out,retval]*/ enum OlCategoryColor * Color ) = 0;
      virtual HRESULT __stdcall put_Color (
        /*[in]*/ enum OlCategoryColor Color ) = 0;
      virtual HRESULT __stdcall get_ShortcutKey (
        /*[out,retval]*/ enum OlCategoryShortcutKey * ShortcutKey ) = 0;
      virtual HRESULT __stdcall put_ShortcutKey (
        /*[in]*/ enum OlCategoryShortcutKey ShortcutKey ) = 0;
      virtual HRESULT __stdcall get_CategoryID (
        /*[out,retval]*/ BSTR * CategoryID ) = 0;
      virtual HRESULT __stdcall get_CategoryBorderColor (
        /*[out,retval]*/ OLE_COLOR * CategoryBorderColor ) = 0;
      virtual HRESULT __stdcall get_CategoryGradientTopColor (
        /*[out,retval]*/ OLE_COLOR * CategoryGradientTopColor ) = 0;
      virtual HRESULT __stdcall get_CategoryGradientBottomColor (
        /*[out,retval]*/ OLE_COLOR * CategoryGradientBottomColor ) = 0;
};

struct __declspec(uuid("000630e4-0000-0000-c000-000000000046"))
_Categories : IDispatch
{
    //
    // Property data
    //

    __declspec(property(get=GetApplication))
    _ApplicationPtr Application;
    __declspec(property(get=GetParent))
    IDispatchPtr Parent;
    __declspec(property(get=GetClass))
    enum OlObjectClass Class;
    __declspec(property(get=GetSession))
    _NameSpacePtr Session;
    __declspec(property(get=GetCount))
    long Count;

    //
    // Wrapper methods for error-handling
    //

    _ApplicationPtr GetApplication ( );
    enum OlObjectClass GetClass ( );
    _NameSpacePtr GetSession ( );
    IDispatchPtr GetParent ( );
    long GetCount ( );
    _CategoryPtr Item (
        const _variant_t & Index );
    _CategoryPtr Add (
        _bstr_t Name,
        const _variant_t & Color = vtMissing,
        const _variant_t & ShortcutKey = vtMissing );
    HRESULT Remove (
        const _variant_t & Index );

    //
    // Raw methods provided by interface
    //

      virtual HRESULT __stdcall get_Application (
        /*[out,retval]*/ struct _Application * * Application ) = 0;
      virtual HRESULT __stdcall get_Class (
        /*[out,retval]*/ enum OlObjectClass * Class ) = 0;
      virtual HRESULT __stdcall get_Session (
        /*[out,retval]*/ struct _NameSpace * * Session ) = 0;
      virtual HRESULT __stdcall get_Parent (
        /*[out,retval]*/ IDispatch * * Parent ) = 0;
      virtual HRESULT __stdcall get_Count (
        /*[out,retval]*/ long * Count ) = 0;
      virtual HRESULT __stdcall raw_Item (
        /*[in]*/ VARIANT Index,
        /*[out,retval]*/ struct _Category * * Item ) = 0;
      virtual HRESULT __stdcall raw_Add (
        /*[in]*/ BSTR Name,
        /*[in]*/ VARIANT Color,
        /*[in]*/ VARIANT ShortcutKey,
        /*[out,retval]*/ struct _Category * * ppCategory ) = 0;
      virtual HRESULT __stdcall raw_Remove (
        /*[in]*/ VARIANT Index ) = 0;
};

struct __declspec(uuid("00063008-0000-0000-c000-000000000046"))
_Inspectors : IDispatch
{
    //
    // Property data
    //

    __declspec(property(get=GetApplication))
    _ApplicationPtr Application;
    __declspec(property(get=GetParent))
    IDispatchPtr Parent;
    __declspec(property(get=GetClass))
    enum OlObjectClass Class;
    __declspec(property(get=GetSession))
    _NameSpacePtr Session;
    __declspec(property(get=GetCount))
    long Count;

    //
    // Wrapper methods for error-handling
    //

    _ApplicationPtr GetApplication ( );
    enum OlObjectClass GetClass ( );
    _NameSpacePtr GetSession ( );
    IDispatchPtr GetParent ( );
    long GetCount ( );
    _InspectorPtr Item (
        const _variant_t & Index );
    _InspectorPtr Add (
        IDispatch * Item );

    //
    // Raw methods provided by interface
    //

      virtual HRESULT __stdcall get_Application (
        /*[out,retval]*/ struct _Application * * Application ) = 0;
      virtual HRESULT __stdcall get_Class (
        /*[out,retval]*/ enum OlObjectClass * Class ) = 0;
      virtual HRESULT __stdcall get_Session (
        /*[out,retval]*/ struct _NameSpace * * Session ) = 0;
      virtual HRESULT __stdcall get_Parent (
        /*[out,retval]*/ IDispatch * * Parent ) = 0;
      virtual HRESULT __stdcall get_Count (
        /*[out,retval]*/ long * Count ) = 0;
      virtual HRESULT __stdcall raw_Item (
        /*[in]*/ VARIANT Index,
        /*[out,retval]*/ struct _Inspector * * Item ) = 0;
      virtual HRESULT __stdcall raw_Add (
        /*[in]*/ IDispatch * Item,
        /*[out,retval]*/ struct _Inspector * * Inspector ) = 0;
};

struct __declspec(uuid("0006300c-0000-0000-c000-000000000046"))
_Results : IDispatch
{
    //
    // Property data
    //

    __declspec(property(get=GetApplication))
    _ApplicationPtr Application;
    __declspec(property(get=GetParent))
    IDispatchPtr Parent;
    __declspec(property(get=GetClass))
    enum OlObjectClass Class;
    __declspec(property(get=GetSession))
    _NameSpacePtr Session;
    __declspec(property(get=GetDefaultItemType,put=PutDefaultItemType))
    enum OlItemType DefaultItemType;
    __declspec(property(get=GetCount))
    long Count;
    __declspec(property(get=GetRawTable))
    IUnknownPtr RawTable;

    //
    // Wrapper methods for error-handling
    //

    _ApplicationPtr GetApplication ( );
    enum OlObjectClass GetClass ( );
    _NameSpacePtr GetSession ( );
    IDispatchPtr GetParent ( );
    long GetCount ( );
    IDispatchPtr Item (
        const _variant_t & Index );
    IUnknownPtr GetRawTable ( );
    IDispatchPtr GetFirst ( );
    IDispatchPtr GetLast ( );
    IDispatchPtr GetNext ( );
    IDispatchPtr GetPrevious ( );
    HRESULT ResetColumns ( );
    HRESULT SetColumns (
        _bstr_t Columns );
    HRESULT Sort (
        _bstr_t Property,
        const _variant_t & Descending = vtMissing );
    enum OlItemType GetDefaultItemType ( );
    void PutDefaultItemType (
        enum OlItemType DefaultItemType );

    //
    // Raw methods provided by interface
    //

      virtual HRESULT __stdcall get_Application (
        /*[out,retval]*/ struct _Application * * Application ) = 0;
      virtual HRESULT __stdcall get_Class (
        /*[out,retval]*/ enum OlObjectClass * Class ) = 0;
      virtual HRESULT __stdcall get_Session (
        /*[out,retval]*/ struct _NameSpace * * Session ) = 0;
      virtual HRESULT __stdcall get_Parent (
        /*[out,retval]*/ IDispatch * * Parent ) = 0;
      virtual HRESULT __stdcall get_Count (
        /*[out,retval]*/ long * Count ) = 0;
      virtual HRESULT __stdcall raw_Item (
        /*[in]*/ VARIANT Index,
        /*[out,retval]*/ IDispatch * * Item ) = 0;
      virtual HRESULT __stdcall get_RawTable (
        /*[out,retval]*/ IUnknown * * RawTable ) = 0;
      virtual HRESULT __stdcall raw_GetFirst (
        /*[out,retval]*/ IDispatch * * Item ) = 0;
      virtual HRESULT __stdcall raw_GetLast (
        /*[out,retval]*/ IDispatch * * Item ) = 0;
      virtual HRESULT __stdcall raw_GetNext (
        /*[out,retval]*/ IDispatch * * Item ) = 0;
      virtual HRESULT __stdcall raw_GetPrevious (
        /*[out,retval]*/ IDispatch * * Item ) = 0;
      virtual HRESULT __stdcall raw_ResetColumns ( ) = 0;
      virtual HRESULT __stdcall raw_SetColumns (
        /*[in]*/ BSTR Columns ) = 0;
      virtual HRESULT __stdcall raw_Sort (
        /*[in]*/ BSTR Property,
        /*[in]*/ VARIANT Descending = vtMissing ) = 0;
      virtual HRESULT __stdcall get_DefaultItemType (
        /*[out,retval]*/ enum OlItemType * DefaultItemType ) = 0;
      virtual HRESULT __stdcall put_DefaultItemType (
        /*[in]*/ enum OlItemType DefaultItemType ) = 0;
};

struct __declspec(uuid("000630b0-0000-0000-c000-000000000046"))
_Reminder : IDispatch
{
    //
    // Property data
    //

    __declspec(property(get=GetApplication))
    _ApplicationPtr Application;
    __declspec(property(get=GetParent))
    IDispatchPtr Parent;
    __declspec(property(get=GetCaption))
    _bstr_t Caption;
    __declspec(property(get=GetOriginalReminderDate))
    DATE OriginalReminderDate;
    __declspec(property(get=GetClass))
    enum OlObjectClass Class;
    __declspec(property(get=GetSession))
    _NameSpacePtr Session;
    __declspec(property(get=GetIsVisible))
    VARIANT_BOOL IsVisible;
    __declspec(property(get=GetItem))
    IDispatchPtr Item;
    __declspec(property(get=GetNextReminderDate))
    DATE NextReminderDate;

    //
    // Wrapper methods for error-handling
    //

    _ApplicationPtr GetApplication ( );
    enum OlObjectClass GetClass ( );
    _NameSpacePtr GetSession ( );
    IDispatchPtr GetParent ( );
    HRESULT Dismiss ( );
    HRESULT Snooze (
        const _variant_t & SnoozeTime = vtMissing );
    _bstr_t GetCaption ( );
    VARIANT_BOOL GetIsVisible ( );
    IDispatchPtr GetItem ( );
    DATE GetNextReminderDate ( );
    DATE GetOriginalReminderDate ( );

    //
    // Raw methods provided by interface
    //

      virtual HRESULT __stdcall get_Application (
        /*[out,retval]*/ struct _Application * * Application ) = 0;
      virtual HRESULT __stdcall get_Class (
        /*[out,retval]*/ enum OlObjectClass * Class ) = 0;
      virtual HRESULT __stdcall get_Session (
        /*[out,retval]*/ struct _NameSpace * * Session ) = 0;
      virtual HRESULT __stdcall get_Parent (
        /*[out,retval]*/ IDispatch * * Parent ) = 0;
      virtual HRESULT __stdcall raw_Dismiss ( ) = 0;
      virtual HRESULT __stdcall raw_Snooze (
        /*[in]*/ VARIANT SnoozeTime = vtMissing ) = 0;
      virtual HRESULT __stdcall get_Caption (
        /*[out,retval]*/ BSTR * Caption ) = 0;
      virtual HRESULT __stdcall get_IsVisible (
        /*[out,retval]*/ VARIANT_BOOL * IsVisible ) = 0;
      virtual HRESULT __stdcall get_Item (
        /*[out,retval]*/ IDispatch * * Item ) = 0;
      virtual HRESULT __stdcall get_NextReminderDate (
        /*[out,retval]*/ DATE * NextReminderDate ) = 0;
      virtual HRESULT __stdcall get_OriginalReminderDate (
        /*[out,retval]*/ DATE * OriginalReminderDate ) = 0;
};

struct __declspec(uuid("000630b1-0000-0000-c000-000000000046"))
_Reminders : IDispatch
{
    //
    // Property data
    //

    __declspec(property(get=GetApplication))
    _ApplicationPtr Application;
    __declspec(property(get=GetParent))
    IDispatchPtr Parent;
    __declspec(property(get=GetClass))
    enum OlObjectClass Class;
    __declspec(property(get=GetSession))
    _NameSpacePtr Session;
    __declspec(property(get=GetCount))
    long Count;

    //
    // Wrapper methods for error-handling
    //

    _ApplicationPtr GetApplication ( );
    enum OlObjectClass GetClass ( );
    _NameSpacePtr GetSession ( );
    IDispatchPtr GetParent ( );
    long GetCount ( );
    _ReminderPtr Item (
        const _variant_t & Index );
    HRESULT Remove (
        const _variant_t & Index );
    IUnknownPtr _NewEnum ( );

    //
    // Raw methods provided by interface
    //

      virtual HRESULT __stdcall get_Application (
        /*[out,retval]*/ struct _Application * * Application ) = 0;
      virtual HRESULT __stdcall get_Class (
        /*[out,retval]*/ enum OlObjectClass * Class ) = 0;
      virtual HRESULT __stdcall get_Session (
        /*[out,retval]*/ struct _NameSpace * * Session ) = 0;
      virtual HRESULT __stdcall get_Parent (
        /*[out,retval]*/ IDispatch * * Parent ) = 0;
      virtual HRESULT __stdcall get_Count (
        /*[out,retval]*/ long * Count ) = 0;
      virtual HRESULT __stdcall raw_Item (
        /*[in]*/ VARIANT Index,
        /*[out,retval]*/ struct _Reminder * * Item ) = 0;
      virtual HRESULT __stdcall raw_Remove (
        /*[in]*/ VARIANT Index ) = 0;
      virtual HRESULT __stdcall raw__NewEnum (
        /*[out,retval]*/ IUnknown * * ppvObject ) = 0;
};

struct __declspec(uuid("000630fc-0000-0000-c000-000000000046"))
_TimeZones : IDispatch
{
    //
    // Property data
    //

    __declspec(property(get=GetApplication))
    _ApplicationPtr Application;
    __declspec(property(get=GetParent))
    IDispatchPtr Parent;
    __declspec(property(get=GetClass))
    enum OlObjectClass Class;
    __declspec(property(get=GetSession))
    _NameSpacePtr Session;
    __declspec(property(get=GetCurrentTimeZone))
    _TimeZonePtr CurrentTimeZone;
    __declspec(property(get=GetCount))
    long Count;

    //
    // Wrapper methods for error-handling
    //

    _ApplicationPtr GetApplication ( );
    enum OlObjectClass GetClass ( );
    _NameSpacePtr GetSession ( );
    IDispatchPtr GetParent ( );
    long GetCount ( );
    _TimeZonePtr Item (
        const _variant_t & Index );
    DATE ConvertTime (
        DATE SourceDateTime,
        struct _TimeZone * SourceTimeZone,
        struct _TimeZone * DestinationTimeZone );
    _TimeZonePtr GetCurrentTimeZone ( );

    //
    // Raw methods provided by interface
    //

      virtual HRESULT __stdcall get_Application (
        /*[out,retval]*/ struct _Application * * Application ) = 0;
      virtual HRESULT __stdcall get_Class (
        /*[out,retval]*/ enum OlObjectClass * Class ) = 0;
      virtual HRESULT __stdcall get_Session (
        /*[out,retval]*/ struct _NameSpace * * Session ) = 0;
      virtual HRESULT __stdcall get_Parent (
        /*[out,retval]*/ IDispatch * * Parent ) = 0;
      virtual HRESULT __stdcall get_Count (
        /*[out,retval]*/ long * Count ) = 0;
      virtual HRESULT __stdcall raw_Item (
        /*[in]*/ VARIANT Index,
        /*[out,retval]*/ struct _TimeZone * * Item ) = 0;
      virtual HRESULT __stdcall raw_ConvertTime (
        /*[in]*/ DATE SourceDateTime,
        /*[in]*/ struct _TimeZone * SourceTimeZone,
        /*[in]*/ struct _TimeZone * DestinationTimeZone,
        /*[out,retval]*/ DATE * DestinationDateTime ) = 0;
      virtual HRESULT __stdcall get_CurrentTimeZone (
        /*[out,retval]*/ struct _TimeZone * * CurrentTimeZone ) = 0;
};

struct __declspec(uuid("00063080-0000-0000-c000-000000000046"))
PropertyPages : IDispatch
{
    //
    // Property data
    //

    __declspec(property(get=GetApplication))
    _ApplicationPtr Application;
    __declspec(property(get=GetParent))
    IDispatchPtr Parent;
    __declspec(property(get=GetClass))
    enum OlObjectClass Class;
    __declspec(property(get=GetSession))
    _NameSpacePtr Session;
    __declspec(property(get=GetCount))
    long Count;

    //
    // Wrapper methods for error-handling
    //

    _ApplicationPtr GetApplication ( );
    enum OlObjectClass GetClass ( );
    _NameSpacePtr GetSession ( );
    IDispatchPtr GetParent ( );
    long GetCount ( );
    IDispatchPtr Item (
        const _variant_t & Index );
    HRESULT Add (
        const _variant_t & Page,
        _bstr_t Title );
    HRESULT Remove (
        const _variant_t & Index );

    //
    // Raw methods provided by interface
    //

      virtual HRESULT __stdcall get_Application (
        /*[out,retval]*/ struct _Application * * Application ) = 0;
      virtual HRESULT __stdcall get_Class (
        /*[out,retval]*/ enum OlObjectClass * Class ) = 0;
      virtual HRESULT __stdcall get_Session (
        /*[out,retval]*/ struct _NameSpace * * Session ) = 0;
      virtual HRESULT __stdcall get_Parent (
        /*[out,retval]*/ IDispatch * * Parent ) = 0;
      virtual HRESULT __stdcall get_Count (
        /*[out,retval]*/ long * Count ) = 0;
      virtual HRESULT __stdcall raw_Item (
        /*[in]*/ VARIANT Index,
        /*[out,retval]*/ IDispatch * * Item ) = 0;
      virtual HRESULT __stdcall raw_Add (
        /*[in]*/ VARIANT Page,
        /*[in]*/ BSTR Title ) = 0;
      virtual HRESULT __stdcall raw_Remove (
        /*[in]*/ VARIANT Index ) = 0;
};

struct __declspec(uuid("0006304d-0000-0000-c000-000000000046"))
Exception : IDispatch
{
    //
    // Property data
    //

    __declspec(property(get=GetApplication))
    _ApplicationPtr Application;
    __declspec(property(get=GetParent))
    IDispatchPtr Parent;
    __declspec(property(get=GetAppointmentItem))
    _AppointmentItemPtr AppointmentItem;
    __declspec(property(get=GetDeleted))
    VARIANT_BOOL Deleted;
    __declspec(property(get=GetOriginalDate))
    DATE OriginalDate;
    __declspec(property(get=GetItemProperties))
    ItemPropertiesPtr ItemProperties;
    __declspec(property(get=GetClass))
    enum OlObjectClass Class;
    __declspec(property(get=GetSession))
    _NameSpacePtr Session;

    //
    // Wrapper methods for error-handling
    //

    _ApplicationPtr GetApplication ( );
    enum OlObjectClass GetClass ( );
    _NameSpacePtr GetSession ( );
    IDispatchPtr GetParent ( );
    _AppointmentItemPtr GetAppointmentItem ( );
    VARIANT_BOOL GetDeleted ( );
    DATE GetOriginalDate ( );
    ItemPropertiesPtr GetItemProperties ( );

    //
    // Raw methods provided by interface
    //

      virtual HRESULT __stdcall get_Application (
        /*[out,retval]*/ struct _Application * * Application ) = 0;
      virtual HRESULT __stdcall get_Class (
        /*[out,retval]*/ enum OlObjectClass * Class ) = 0;
      virtual HRESULT __stdcall get_Session (
        /*[out,retval]*/ struct _NameSpace * * Session ) = 0;
      virtual HRESULT __stdcall get_Parent (
        /*[out,retval]*/ IDispatch * * Parent ) = 0;
      virtual HRESULT __stdcall get_AppointmentItem (
        /*[out,retval]*/ struct _AppointmentItem * * AppointmentItem ) = 0;
      virtual HRESULT __stdcall get_Deleted (
        /*[out,retval]*/ VARIANT_BOOL * Deleted ) = 0;
      virtual HRESULT __stdcall get_OriginalDate (
        /*[out,retval]*/ DATE * OriginalDate ) = 0;
      virtual HRESULT __stdcall get_ItemProperties (
        /*[out,retval]*/ struct ItemProperties * * ItemProperties ) = 0;
};

struct __declspec(uuid("0006304c-0000-0000-c000-000000000046"))
Exceptions : IDispatch
{
    //
    // Property data
    //

    __declspec(property(get=GetApplication))
    _ApplicationPtr Application;
    __declspec(property(get=GetParent))
    IDispatchPtr Parent;
    __declspec(property(get=GetClass))
    enum OlObjectClass Class;
    __declspec(property(get=GetSession))
    _NameSpacePtr Session;
    __declspec(property(get=GetCount))
    long Count;

    //
    // Wrapper methods for error-handling
    //

    _ApplicationPtr GetApplication ( );
    enum OlObjectClass GetClass ( );
    _NameSpacePtr GetSession ( );
    IDispatchPtr GetParent ( );
    long GetCount ( );
    ExceptionPtr Item (
        const _variant_t & Index );

    //
    // Raw methods provided by interface
    //

      virtual HRESULT __stdcall get_Application (
        /*[out,retval]*/ struct _Application * * Application ) = 0;
      virtual HRESULT __stdcall get_Class (
        /*[out,retval]*/ enum OlObjectClass * Class ) = 0;
      virtual HRESULT __stdcall get_Session (
        /*[out,retval]*/ struct _NameSpace * * Session ) = 0;
      virtual HRESULT __stdcall get_Parent (
        /*[out,retval]*/ IDispatch * * Parent ) = 0;
      virtual HRESULT __stdcall get_Count (
        /*[out,retval]*/ long * Count ) = 0;
      virtual HRESULT __stdcall raw_Item (
        /*[in]*/ VARIANT Index,
        /*[out,retval]*/ struct Exception * * Item ) = 0;
};

struct __declspec(uuid("00063044-0000-0000-c000-000000000046"))
RecurrencePattern : IDispatch
{
    //
    // Property data
    //

    __declspec(property(get=GetApplication))
    _ApplicationPtr Application;
    __declspec(property(get=GetParent))
    IDispatchPtr Parent;
    __declspec(property(get=GetDayOfMonth,put=PutDayOfMonth))
    long DayOfMonth;
    __declspec(property(get=GetDayOfWeekMask,put=PutDayOfWeekMask))
    enum OlDaysOfWeek DayOfWeekMask;
    __declspec(property(get=GetInstance,put=PutInstance))
    long Instance;
    __declspec(property(get=GetInterval,put=PutInterval))
    long Interval;
    __declspec(property(get=GetMonthOfYear,put=PutMonthOfYear))
    long MonthOfYear;
    __declspec(property(get=GetOccurrences,put=PutOccurrences))
    long Occurrences;
    __declspec(property(get=GetPatternEndDate,put=PutPatternEndDate))
    DATE PatternEndDate;
    __declspec(property(get=GetPatternStartDate,put=PutPatternStartDate))
    DATE PatternStartDate;
    __declspec(property(get=GetClass))
    enum OlObjectClass Class;
    __declspec(property(get=GetSession))
    _NameSpacePtr Session;
    __declspec(property(get=GetEndTime,put=PutEndTime))
    DATE EndTime;
    __declspec(property(get=GetDuration,put=PutDuration))
    long Duration;
    __declspec(property(get=GetExceptions))
    ExceptionsPtr Exceptions;
    __declspec(property(get=GetNoEndDate,put=PutNoEndDate))
    VARIANT_BOOL NoEndDate;
    __declspec(property(get=GetRecurrenceType,put=PutRecurrenceType))
    enum OlRecurrenceType RecurrenceType;
    __declspec(property(get=GetRegenerate,put=PutRegenerate))
    VARIANT_BOOL Regenerate;
    __declspec(property(get=GetStartTime,put=PutStartTime))
    DATE StartTime;

    //
    // Wrapper methods for error-handling
    //

    _ApplicationPtr GetApplication ( );
    enum OlObjectClass GetClass ( );
    _NameSpacePtr GetSession ( );
    IDispatchPtr GetParent ( );
    long GetDayOfMonth ( );
    void PutDayOfMonth (
        long DayOfMonth );
    enum OlDaysOfWeek GetDayOfWeekMask ( );
    void PutDayOfWeekMask (
        enum OlDaysOfWeek DayOfWeekMask );
    long GetDuration ( );
    void PutDuration (
        long Duration );
    DATE GetEndTime ( );
    void PutEndTime (
        DATE EndTime );
    ExceptionsPtr GetExceptions ( );
    long GetInstance ( );
    void PutInstance (
        long Instance );
    long GetInterval ( );
    void PutInterval (
        long Interval );
    long GetMonthOfYear ( );
    void PutMonthOfYear (
        long MonthOfYear );
    VARIANT_BOOL GetNoEndDate ( );
    void PutNoEndDate (
        VARIANT_BOOL NoEndDate );
    long GetOccurrences ( );
    void PutOccurrences (
        long Occurrences );
    DATE GetPatternEndDate ( );
    void PutPatternEndDate (
        DATE PatternEndDate );
    DATE GetPatternStartDate ( );
    void PutPatternStartDate (
        DATE PatternStartDate );
    enum OlRecurrenceType GetRecurrenceType ( );
    void PutRecurrenceType (
        enum OlRecurrenceType RecurrenceType );
    VARIANT_BOOL GetRegenerate ( );
    void PutRegenerate (
        VARIANT_BOOL Regenerate );
    DATE GetStartTime ( );
    void PutStartTime (
        DATE StartTime );
    _AppointmentItemPtr GetOccurrence (
        DATE StartDate );

    //
    // Raw methods provided by interface
    //

      virtual HRESULT __stdcall get_Application (
        /*[out,retval]*/ struct _Application * * Application ) = 0;
      virtual HRESULT __stdcall get_Class (
        /*[out,retval]*/ enum OlObjectClass * Class ) = 0;
      virtual HRESULT __stdcall get_Session (
        /*[out,retval]*/ struct _NameSpace * * Session ) = 0;
      virtual HRESULT __stdcall get_Parent (
        /*[out,retval]*/ IDispatch * * Parent ) = 0;
      virtual HRESULT __stdcall get_DayOfMonth (
        /*[out,retval]*/ long * DayOfMonth ) = 0;
      virtual HRESULT __stdcall put_DayOfMonth (
        /*[in]*/ long DayOfMonth ) = 0;
      virtual HRESULT __stdcall get_DayOfWeekMask (
        /*[out,retval]*/ enum OlDaysOfWeek * DayOfWeekMask ) = 0;
      virtual HRESULT __stdcall put_DayOfWeekMask (
        /*[in]*/ enum OlDaysOfWeek DayOfWeekMask ) = 0;
      virtual HRESULT __stdcall get_Duration (
        /*[out,retval]*/ long * Duration ) = 0;
      virtual HRESULT __stdcall put_Duration (
        /*[in]*/ long Duration ) = 0;
      virtual HRESULT __stdcall get_EndTime (
        /*[out,retval]*/ DATE * EndTime ) = 0;
      virtual HRESULT __stdcall put_EndTime (
        /*[in]*/ DATE EndTime ) = 0;
      virtual HRESULT __stdcall get_Exceptions (
        /*[out,retval]*/ struct Exceptions * * Exceptions ) = 0;
      virtual HRESULT __stdcall get_Instance (
        /*[out,retval]*/ long * Instance ) = 0;
      virtual HRESULT __stdcall put_Instance (
        /*[in]*/ long Instance ) = 0;
      virtual HRESULT __stdcall get_Interval (
        /*[out,retval]*/ long * Interval ) = 0;
      virtual HRESULT __stdcall put_Interval (
        /*[in]*/ long Interval ) = 0;
      virtual HRESULT __stdcall get_MonthOfYear (
        /*[out,retval]*/ long * MonthOfYear ) = 0;
      virtual HRESULT __stdcall put_MonthOfYear (
        /*[in]*/ long MonthOfYear ) = 0;
      virtual HRESULT __stdcall get_NoEndDate (
        /*[out,retval]*/ VARIANT_BOOL * NoEndDate ) = 0;
      virtual HRESULT __stdcall put_NoEndDate (
        /*[in]*/ VARIANT_BOOL NoEndDate ) = 0;
      virtual HRESULT __stdcall get_Occurrences (
        /*[out,retval]*/ long * Occurrences ) = 0;
      virtual HRESULT __stdcall put_Occurrences (
        /*[in]*/ long Occurrences ) = 0;
      virtual HRESULT __stdcall get_PatternEndDate (
        /*[out,retval]*/ DATE * PatternEndDate ) = 0;
      virtual HRESULT __stdcall put_PatternEndDate (
        /*[in]*/ DATE PatternEndDate ) = 0;
      virtual HRESULT __stdcall get_PatternStartDate (
        /*[out,retval]*/ DATE * PatternStartDate ) = 0;
      virtual HRESULT __stdcall put_PatternStartDate (
        /*[in]*/ DATE PatternStartDate ) = 0;
      virtual HRESULT __stdcall get_RecurrenceType (
        /*[out,retval]*/ enum OlRecurrenceType * RecurrenceType ) = 0;
      virtual HRESULT __stdcall put_RecurrenceType (
        /*[in]*/ enum OlRecurrenceType RecurrenceType ) = 0;
      virtual HRESULT __stdcall get_Regenerate (
        /*[out,retval]*/ VARIANT_BOOL * Regenerate ) = 0;
      virtual HRESULT __stdcall put_Regenerate (
        /*[in]*/ VARIANT_BOOL Regenerate ) = 0;
      virtual HRESULT __stdcall get_StartTime (
        /*[out,retval]*/ DATE * StartTime ) = 0;
      virtual HRESULT __stdcall put_StartTime (
        /*[in]*/ DATE StartTime ) = 0;
      virtual HRESULT __stdcall raw_GetOccurrence (
        /*[in]*/ DATE StartDate,
        /*[out,retval]*/ struct _AppointmentItem * * AppointmentItem ) = 0;
};

struct __declspec(uuid("00063075-0000-0000-c000-000000000046"))
OutlookBarShortcut : IDispatch
{
    //
    // Property data
    //

    __declspec(property(get=GetApplication))
    _ApplicationPtr Application;
    __declspec(property(get=GetParent))
    IDispatchPtr Parent;
    __declspec(property(get=GetName,put=PutName))
    _bstr_t Name;
    __declspec(property(get=GetTarget))
    _variant_t Target;
    __declspec(property(get=GetClass))
    enum OlObjectClass Class;
    __declspec(property(get=GetSession))
    _NameSpacePtr Session;

    //
    // Wrapper methods for error-handling
    //

    _ApplicationPtr GetApplication ( );
    enum OlObjectClass GetClass ( );
    _NameSpacePtr GetSession ( );
    IDispatchPtr GetParent ( );
    _bstr_t GetName ( );
    void PutName (
        _bstr_t Name );
    _variant_t GetTarget ( );
    HRESULT SetIcon (
        const _variant_t & Icon );

    //
    // Raw methods provided by interface
    //

      virtual HRESULT __stdcall get_Application (
        /*[out,retval]*/ struct _Application * * Application ) = 0;
      virtual HRESULT __stdcall get_Class (
        /*[out,retval]*/ enum OlObjectClass * Class ) = 0;
      virtual HRESULT __stdcall get_Session (
        /*[out,retval]*/ struct _NameSpace * * Session ) = 0;
      virtual HRESULT __stdcall get_Parent (
        /*[out,retval]*/ IDispatch * * Parent ) = 0;
      virtual HRESULT __stdcall get_Name (
        /*[out,retval]*/ BSTR * Name ) = 0;
      virtual HRESULT __stdcall put_Name (
        /*[in]*/ BSTR Name ) = 0;
      virtual HRESULT __stdcall get_Target (
        /*[out,retval]*/ VARIANT * Target ) = 0;
      virtual HRESULT __stdcall raw_SetIcon (
        /*[in]*/ VARIANT Icon ) = 0;
};

struct __declspec(uuid("00063074-0000-0000-c000-000000000046"))
_OutlookBarShortcuts : IDispatch
{
    //
    // Property data
    //

    __declspec(property(get=GetApplication))
    _ApplicationPtr Application;
    __declspec(property(get=GetParent))
    IDispatchPtr Parent;
    __declspec(property(get=GetClass))
    enum OlObjectClass Class;
    __declspec(property(get=GetSession))
    _NameSpacePtr Session;
    __declspec(property(get=GetCount))
    long Count;

    //
    // Wrapper methods for error-handling
    //

    _ApplicationPtr GetApplication ( );
    enum OlObjectClass GetClass ( );
    _NameSpacePtr GetSession ( );
    IDispatchPtr GetParent ( );
    long GetCount ( );
    OutlookBarShortcutPtr Item (
        const _variant_t & Index );
    OutlookBarShortcutPtr Add (
        const _variant_t & Target,
        _bstr_t Name,
        const _variant_t & Index = vtMissing );
    HRESULT Remove (
        const _variant_t & Index );

    //
    // Raw methods provided by interface
    //

      virtual HRESULT __stdcall get_Application (
        /*[out,retval]*/ struct _Application * * Application ) = 0;
      virtual HRESULT __stdcall get_Class (
        /*[out,retval]*/ enum OlObjectClass * Class ) = 0;
      virtual HRESULT __stdcall get_Session (
        /*[out,retval]*/ struct _NameSpace * * Session ) = 0;
      virtual HRESULT __stdcall get_Parent (
        /*[out,retval]*/ IDispatch * * Parent ) = 0;
      virtual HRESULT __stdcall get_Count (
        /*[out,retval]*/ long * Count ) = 0;
      virtual HRESULT __stdcall raw_Item (
        /*[in]*/ VARIANT Index,
        /*[out,retval]*/ struct OutlookBarShortcut * * Item ) = 0;
      virtual HRESULT __stdcall raw_Add (
        /*[in]*/ VARIANT Target,
        /*[in]*/ BSTR Name,
        /*[in]*/ VARIANT Index,
        /*[out,retval]*/ struct OutlookBarShortcut * * Shortcut ) = 0;
      virtual HRESULT __stdcall raw_Remove (
        /*[in]*/ VARIANT Index ) = 0;
};

struct __declspec(uuid("00063073-0000-0000-c000-000000000046"))
OutlookBarGroup : IDispatch
{
    //
    // Property data
    //

    __declspec(property(get=GetApplication))
    _ApplicationPtr Application;
    __declspec(property(get=GetParent))
    IDispatchPtr Parent;
    __declspec(property(get=GetName,put=PutName))
    _bstr_t Name;
    __declspec(property(get=GetShortcuts))
    _OutlookBarShortcutsPtr Shortcuts;
    __declspec(property(get=GetViewType,put=PutViewType))
    enum OlOutlookBarViewType ViewType;
    __declspec(property(get=GetClass))
    enum OlObjectClass Class;
    __declspec(property(get=GetSession))
    _NameSpacePtr Session;

    //
    // Wrapper methods for error-handling
    //

    _ApplicationPtr GetApplication ( );
    enum OlObjectClass GetClass ( );
    _NameSpacePtr GetSession ( );
    IDispatchPtr GetParent ( );
    _bstr_t GetName ( );
    void PutName (
        _bstr_t Name );
    _OutlookBarShortcutsPtr GetShortcuts ( );
    enum OlOutlookBarViewType GetViewType ( );
    void PutViewType (
        enum OlOutlookBarViewType ViewType );

    //
    // Raw methods provided by interface
    //

      virtual HRESULT __stdcall get_Application (
        /*[out,retval]*/ struct _Application * * Application ) = 0;
      virtual HRESULT __stdcall get_Class (
        /*[out,retval]*/ enum OlObjectClass * Class ) = 0;
      virtual HRESULT __stdcall get_Session (
        /*[out,retval]*/ struct _NameSpace * * Session ) = 0;
      virtual HRESULT __stdcall get_Parent (
        /*[out,retval]*/ IDispatch * * Parent ) = 0;
      virtual HRESULT __stdcall get_Name (
        /*[out,retval]*/ BSTR * Name ) = 0;
      virtual HRESULT __stdcall put_Name (
        /*[in]*/ BSTR Name ) = 0;
      virtual HRESULT __stdcall get_Shortcuts (
        /*[out,retval]*/ struct _OutlookBarShortcuts * * Shortcuts ) = 0;
      virtual HRESULT __stdcall get_ViewType (
        /*[out,retval]*/ enum OlOutlookBarViewType * ViewType ) = 0;
      virtual HRESULT __stdcall put_ViewType (
        /*[in]*/ enum OlOutlookBarViewType ViewType ) = 0;
};

struct __declspec(uuid("00063072-0000-0000-c000-000000000046"))
_OutlookBarGroups : IDispatch
{
    //
    // Property data
    //

    __declspec(property(get=GetApplication))
    _ApplicationPtr Application;
    __declspec(property(get=GetParent))
    IDispatchPtr Parent;
    __declspec(property(get=GetClass))
    enum OlObjectClass Class;
    __declspec(property(get=GetSession))
    _NameSpacePtr Session;
    __declspec(property(get=GetCount))
    long Count;

    //
    // Wrapper methods for error-handling
    //

    _ApplicationPtr GetApplication ( );
    enum OlObjectClass GetClass ( );
    _NameSpacePtr GetSession ( );
    IDispatchPtr GetParent ( );
    long GetCount ( );
    OutlookBarGroupPtr Item (
        const _variant_t & Index );
    OutlookBarGroupPtr Add (
        _bstr_t Name,
        const _variant_t & Index = vtMissing );
    HRESULT Remove (
        const _variant_t & Index );

    //
    // Raw methods provided by interface
    //

      virtual HRESULT __stdcall get_Application (
        /*[out,retval]*/ struct _Application * * Application ) = 0;
      virtual HRESULT __stdcall get_Class (
        /*[out,retval]*/ enum OlObjectClass * Class ) = 0;
      virtual HRESULT __stdcall get_Session (
        /*[out,retval]*/ struct _NameSpace * * Session ) = 0;
      virtual HRESULT __stdcall get_Parent (
        /*[out,retval]*/ IDispatch * * Parent ) = 0;
      virtual HRESULT __stdcall get_Count (
        /*[out,retval]*/ long * Count ) = 0;
      virtual HRESULT __stdcall raw_Item (
        /*[in]*/ VARIANT Index,
        /*[out,retval]*/ struct OutlookBarGroup * * Item ) = 0;
      virtual HRESULT __stdcall raw_Add (
        /*[in]*/ BSTR Name,
        /*[in]*/ VARIANT Index,
        /*[out,retval]*/ struct OutlookBarGroup * * Group ) = 0;
      virtual HRESULT __stdcall raw_Remove (
        /*[in]*/ VARIANT Index ) = 0;
};

struct __declspec(uuid("00063071-0000-0000-c000-000000000046"))
OutlookBarStorage : IDispatch
{
    //
    // Property data
    //

    __declspec(property(get=GetApplication))
    _ApplicationPtr Application;
    __declspec(property(get=GetParent))
    IDispatchPtr Parent;
    __declspec(property(get=GetGroups))
    _OutlookBarGroupsPtr Groups;
    __declspec(property(get=GetClass))
    enum OlObjectClass Class;
    __declspec(property(get=GetSession))
    _NameSpacePtr Session;

    //
    // Wrapper methods for error-handling
    //

    _ApplicationPtr GetApplication ( );
    enum OlObjectClass GetClass ( );
    _NameSpacePtr GetSession ( );
    IDispatchPtr GetParent ( );
    _OutlookBarGroupsPtr GetGroups ( );

    //
    // Raw methods provided by interface
    //

      virtual HRESULT __stdcall get_Application (
        /*[out,retval]*/ struct _Application * * Application ) = 0;
      virtual HRESULT __stdcall get_Class (
        /*[out,retval]*/ enum OlObjectClass * Class ) = 0;
      virtual HRESULT __stdcall get_Session (
        /*[out,retval]*/ struct _NameSpace * * Session ) = 0;
      virtual HRESULT __stdcall get_Parent (
        /*[out,retval]*/ IDispatch * * Parent ) = 0;
      virtual HRESULT __stdcall get_Groups (
        /*[out,retval]*/ struct _OutlookBarGroups * * Groups ) = 0;
};

struct __declspec(uuid("00063070-0000-0000-c000-000000000046"))
_OutlookBarPane : IDispatch
{
    //
    // Property data
    //

    __declspec(property(get=GetApplication))
    _ApplicationPtr Application;
    __declspec(property(get=GetParent))
    IDispatchPtr Parent;
    __declspec(property(get=GetContents))
    OutlookBarStoragePtr Contents;
    __declspec(property(get=GetCurrentGroup,put=PutRefCurrentGroup))
    OutlookBarGroupPtr CurrentGroup;
    __declspec(property(get=GetName))
    _bstr_t Name;
    __declspec(property(get=GetVisible,put=PutVisible))
    VARIANT_BOOL Visible;
    __declspec(property(get=GetClass))
    enum OlObjectClass Class;
    __declspec(property(get=GetSession))
    _NameSpacePtr Session;

    //
    // Wrapper methods for error-handling
    //

    _ApplicationPtr GetApplication ( );
    enum OlObjectClass GetClass ( );
    _NameSpacePtr GetSession ( );
    IDispatchPtr GetParent ( );
    OutlookBarStoragePtr GetContents ( );
    OutlookBarGroupPtr GetCurrentGroup ( );
    void PutRefCurrentGroup (
        struct OutlookBarGroup * CurrentGroup );
    _bstr_t GetName ( );
    VARIANT_BOOL GetVisible ( );
    void PutVisible (
        VARIANT_BOOL Visible );

    //
    // Raw methods provided by interface
    //

      virtual HRESULT __stdcall get_Application (
        /*[out,retval]*/ struct _Application * * Application ) = 0;
      virtual HRESULT __stdcall get_Class (
        /*[out,retval]*/ enum OlObjectClass * Class ) = 0;
      virtual HRESULT __stdcall get_Session (
        /*[out,retval]*/ struct _NameSpace * * Session ) = 0;
      virtual HRESULT __stdcall get_Parent (
        /*[out,retval]*/ IDispatch * * Parent ) = 0;
      virtual HRESULT __stdcall get_Contents (
        /*[out,retval]*/ struct OutlookBarStorage * * Contents ) = 0;
      virtual HRESULT __stdcall get_CurrentGroup (
        /*[out,retval]*/ struct OutlookBarGroup * * CurrentGroup ) = 0;
      virtual HRESULT __stdcall putref_CurrentGroup (
        /*[in]*/ struct OutlookBarGroup * CurrentGroup ) = 0;
      virtual HRESULT __stdcall get_Name (
        /*[out,retval]*/ BSTR * Name ) = 0;
      virtual HRESULT __stdcall get_Visible (
        /*[out,retval]*/ VARIANT_BOOL * Visible ) = 0;
      virtual HRESULT __stdcall put_Visible (
        /*[in]*/ VARIANT_BOOL Visible ) = 0;
};

struct __declspec(uuid("0006307f-0000-0000-c000-000000000046"))
PropertyPageSite : IDispatch
{
    //
    // Property data
    //

    __declspec(property(get=GetApplication))
    _ApplicationPtr Application;
    __declspec(property(get=GetParent))
    IDispatchPtr Parent;
    __declspec(property(get=GetClass))
    enum OlObjectClass Class;
    __declspec(property(get=GetSession))
    _NameSpacePtr Session;

    //
    // Wrapper methods for error-handling
    //

    _ApplicationPtr GetApplication ( );
    enum OlObjectClass GetClass ( );
    _NameSpacePtr GetSession ( );
    IDispatchPtr GetParent ( );
    HRESULT OnStatusChange ( );

    //
    // Raw methods provided by interface
    //

      virtual HRESULT __stdcall get_Application (
        /*[out,retval]*/ struct _Application * * Application ) = 0;
      virtual HRESULT __stdcall get_Class (
        /*[out,retval]*/ enum OlObjectClass * Class ) = 0;
      virtual HRESULT __stdcall get_Session (
        /*[out,retval]*/ struct _NameSpace * * Session ) = 0;
      virtual HRESULT __stdcall get_Parent (
        /*[out,retval]*/ IDispatch * * Parent ) = 0;
      virtual HRESULT __stdcall raw_OnStatusChange ( ) = 0;
};

struct __declspec(uuid("0006303f-0000-0000-c000-000000000046"))
Pages : IDispatch
{
    //
    // Property data
    //

    __declspec(property(get=GetApplication))
    _ApplicationPtr Application;
    __declspec(property(get=GetParent))
    IDispatchPtr Parent;
    __declspec(property(get=GetClass))
    enum OlObjectClass Class;
    __declspec(property(get=GetSession))
    _NameSpacePtr Session;
    __declspec(property(get=GetCount))
    long Count;

    //
    // Wrapper methods for error-handling
    //

    _ApplicationPtr GetApplication ( );
    enum OlObjectClass GetClass ( );
    _NameSpacePtr GetSession ( );
    IDispatchPtr GetParent ( );
    long GetCount ( );
    IDispatchPtr Item (
        const _variant_t & Index );
    IDispatchPtr Add (
        const _variant_t & Name = vtMissing );
    HRESULT Remove (
        long Index );

    //
    // Raw methods provided by interface
    //

      virtual HRESULT __stdcall get_Application (
        /*[out,retval]*/ struct _Application * * Application ) = 0;
      virtual HRESULT __stdcall get_Class (
        /*[out,retval]*/ enum OlObjectClass * Class ) = 0;
      virtual HRESULT __stdcall get_Session (
        /*[out,retval]*/ struct _NameSpace * * Session ) = 0;
      virtual HRESULT __stdcall get_Parent (
        /*[out,retval]*/ IDispatch * * Parent ) = 0;
      virtual HRESULT __stdcall get_Count (
        /*[out,retval]*/ long * Count ) = 0;
      virtual HRESULT __stdcall raw_Item (
        /*[in]*/ VARIANT Index,
        /*[out,retval]*/ IDispatch * * Item ) = 0;
      virtual HRESULT __stdcall raw_Add (
        /*[in]*/ VARIANT Name,
        /*[out,retval]*/ IDispatch * * Page ) = 0;
      virtual HRESULT __stdcall raw_Remove (
        /*[in]*/ long Index ) = 0;
};

struct __declspec(uuid("000630f9-0000-0000-c000-000000000046"))
_AttachmentSelection : IDispatch
{
    //
    // Property data
    //

    __declspec(property(get=GetApplication))
    _ApplicationPtr Application;
    __declspec(property(get=GetParent))
    IDispatchPtr Parent;
    __declspec(property(get=GetClass))
    enum OlObjectClass Class;
    __declspec(property(get=GetSession))
    _NameSpacePtr Session;
    __declspec(property(get=GetCount))
    long Count;

    //
    // Wrapper methods for error-handling
    //

    _ApplicationPtr GetApplication ( );
    enum OlObjectClass GetClass ( );
    _NameSpacePtr GetSession ( );
    IDispatchPtr GetParent ( );
    long GetCount ( );
    AttachmentPtr Item (
        const _variant_t & Index );

    //
    // Raw methods provided by interface
    //

      virtual HRESULT __stdcall get_Application (
        /*[out,retval]*/ struct _Application * * Application ) = 0;
      virtual HRESULT __stdcall get_Class (
        /*[out,retval]*/ enum OlObjectClass * Class ) = 0;
      virtual HRESULT __stdcall get_Session (
        /*[out,retval]*/ struct _NameSpace * * Session ) = 0;
      virtual HRESULT __stdcall get_Parent (
        /*[out,retval]*/ IDispatch * * Parent ) = 0;
      virtual HRESULT __stdcall get_Count (
        /*[out,retval]*/ long * Count ) = 0;
      virtual HRESULT __stdcall raw_Item (
        /*[in]*/ VARIANT Index,
        /*[out,retval]*/ struct Attachment * * Item ) = 0;
};

struct __declspec(uuid("0006305a-0000-0000-c000-000000000046"))
_FormRegion : IDispatch
{
    //
    // Property data
    //

    __declspec(property(get=GetApplication))
    _ApplicationPtr Application;
    __declspec(property(get=GetParent))
    IDispatchPtr Parent;
    __declspec(property(get=GetItem))
    IDispatchPtr Item;
    __declspec(property(get=GetLanguage))
    long Language;
    __declspec(property(get=GetDisplayName))
    _bstr_t DisplayName;
    __declspec(property(get=GetInternalName))
    _bstr_t InternalName;
    __declspec(property(get=GetSuppressControlReplacement,put=PutSuppressControlReplacement))
    VARIANT_BOOL SuppressControlReplacement;
    __declspec(property(get=GetClass))
    enum OlObjectClass Class;
    __declspec(property(get=GetSession))
    _NameSpacePtr Session;
    __declspec(property(get=GetFormRegionMode))
    enum OlFormRegionMode FormRegionMode;
    __declspec(property(get=GetDetail,put=PutDetail))
    _bstr_t Detail;
    __declspec(property(get=GetIsExpanded))
    VARIANT_BOOL IsExpanded;
    __declspec(property(get=GetForm))
    IDispatchPtr Form;
    __declspec(property(get=GetEnableAutoLayout,put=PutEnableAutoLayout))
    VARIANT_BOOL EnableAutoLayout;
    __declspec(property(get=GetInspector))
    _InspectorPtr Inspector;

    //
    // Wrapper methods for error-handling
    //

    _ApplicationPtr GetApplication ( );
    enum OlObjectClass GetClass ( );
    _NameSpacePtr GetSession ( );
    IDispatchPtr GetParent ( );
    VARIANT_BOOL GetIsExpanded ( );
    IDispatchPtr GetForm ( );
    _bstr_t GetDetail ( );
    void PutDetail (
        _bstr_t Detail );
    IDispatchPtr GetItem ( );
    _InspectorPtr GetInspector ( );
    enum OlFormRegionMode GetFormRegionMode ( );
    long GetLanguage ( );
    HRESULT Reflow ( );
    _bstr_t GetDisplayName ( );
    _bstr_t GetInternalName ( );
    HRESULT SetControlItemProperty (
        IDispatch * Control,
        _bstr_t PropertyName );
    VARIANT_BOOL GetSuppressControlReplacement ( );
    void PutSuppressControlReplacement (
        VARIANT_BOOL SuppressControlReplacement );
    HRESULT Select ( );
    VARIANT_BOOL GetEnableAutoLayout ( );
    void PutEnableAutoLayout (
        VARIANT_BOOL EnableAutoLayout );

    //
    // Raw methods provided by interface
    //

      virtual HRESULT __stdcall get_Application (
        /*[out,retval]*/ struct _Application * * Application ) = 0;
      virtual HRESULT __stdcall get_Class (
        /*[out,retval]*/ enum OlObjectClass * Class ) = 0;
      virtual HRESULT __stdcall get_Session (
        /*[out,retval]*/ struct _NameSpace * * Session ) = 0;
      virtual HRESULT __stdcall get_Parent (
        /*[out,retval]*/ IDispatch * * Parent ) = 0;
      virtual HRESULT __stdcall get_IsExpanded (
        /*[out,retval]*/ VARIANT_BOOL * IsExpanded ) = 0;
      virtual HRESULT __stdcall get_Form (
        /*[out,retval]*/ IDispatch * * Form ) = 0;
      virtual HRESULT __stdcall get_Detail (
        /*[out,retval]*/ BSTR * Detail ) = 0;
      virtual HRESULT __stdcall put_Detail (
        /*[in]*/ BSTR Detail ) = 0;
      virtual HRESULT __stdcall get_Item (
        /*[out,retval]*/ IDispatch * * Item ) = 0;
      virtual HRESULT __stdcall get_Inspector (
        /*[out,retval]*/ struct _Inspector * * Inspector ) = 0;
      virtual HRESULT __stdcall get_FormRegionMode (
        /*[out,retval]*/ enum OlFormRegionMode * FormRegionMode ) = 0;
      virtual HRESULT __stdcall get_Language (
        /*[out,retval]*/ long * Language ) = 0;
      virtual HRESULT __stdcall raw_Reflow ( ) = 0;
      virtual HRESULT __stdcall get_DisplayName (
        /*[out,retval]*/ BSTR * DisplayName ) = 0;
      virtual HRESULT __stdcall get_InternalName (
        /*[out,retval]*/ BSTR * InternalName ) = 0;
      virtual HRESULT __stdcall raw_SetControlItemProperty (
        /*[in]*/ IDispatch * Control,
        /*[in]*/ BSTR PropertyName ) = 0;
      virtual HRESULT __stdcall get_SuppressControlReplacement (
        /*[out,retval]*/ VARIANT_BOOL * SuppressControlReplacement ) = 0;
      virtual HRESULT __stdcall put_SuppressControlReplacement (
        /*[in]*/ VARIANT_BOOL SuppressControlReplacement ) = 0;
      virtual HRESULT __stdcall raw_Select ( ) = 0;
      virtual HRESULT __stdcall get_EnableAutoLayout (
        /*[out,retval]*/ VARIANT_BOOL * EnableAutoLayout ) = 0;
      virtual HRESULT __stdcall put_EnableAutoLayout (
        /*[in]*/ VARIANT_BOOL EnableAutoLayout ) = 0;
};

struct __declspec(uuid("00063096-0000-0000-c000-000000000046"))
_TableView : IDispatch
{
    //
    // Property data
    //

    __declspec(property(get=GetName,put=PutName))
    _bstr_t Name;
    __declspec(property(get=GetApplication))
    _ApplicationPtr Application;
    __declspec(property(get=GetParent))
    IDispatchPtr Parent;
    __declspec(property(get=GetDefaultExpandCollapseSetting,put=PutDefaultExpandCollapseSetting))
    enum OlDefaultExpandCollapseSetting DefaultExpandCollapseSetting;
    __declspec(property(get=GetClass))
    enum OlObjectClass Class;
    __declspec(property(get=GetSession))
    _NameSpacePtr Session;
    __declspec(property(get=GetViewFields))
    _ViewFieldsPtr ViewFields;
    __declspec(property(get=GetGroupByFields))
    _OrderFieldsPtr GroupByFields;
    __declspec(property(get=GetAutomaticGrouping,put=PutAutomaticGrouping))
    VARIANT_BOOL AutomaticGrouping;
    __declspec(property(get=GetSortFields))
    _OrderFieldsPtr SortFields;
    __declspec(property(get=GetMaxLinesInMultiLineView,put=PutMaxLinesInMultiLineView))
    long MaxLinesInMultiLineView;
    __declspec(property(get=GetAutomaticColumnSizing,put=PutAutomaticColumnSizing))
    VARIANT_BOOL AutomaticColumnSizing;
    __declspec(property(get=GetMultiLine,put=PutMultiLine))
    enum OlMultiLine MultiLine;
    __declspec(property(get=GetMultiLineWidth,put=PutMultiLineWidth))
    long MultiLineWidth;
    __declspec(property(get=GetAllowInCellEditing,put=PutAllowInCellEditing))
    VARIANT_BOOL AllowInCellEditing;
    __declspec(property(get=GetShowNewItemRow,put=PutShowNewItemRow))
    VARIANT_BOOL ShowNewItemRow;
    __declspec(property(get=GetGridLineStyle,put=PutGridLineStyle))
    enum OlGridLineStyle GridLineStyle;
    __declspec(property(get=GetShowItemsInGroups,put=PutShowItemsInGroups))
    VARIANT_BOOL ShowItemsInGroups;
    __declspec(property(get=GetShowReadingPane,put=PutShowReadingPane))
    VARIANT_BOOL ShowReadingPane;
    __declspec(property(get=GetHideReadingPaneHeaderInfo,put=PutHideReadingPaneHeaderInfo))
    VARIANT_BOOL HideReadingPaneHeaderInfo;
    __declspec(property(get=GetShowUnreadAndFlaggedMessages,put=PutShowUnreadAndFlaggedMessages))
    VARIANT_BOOL ShowUnreadAndFlaggedMessages;
    __declspec(property(get=GetColumnFont))
    _ViewFontPtr ColumnFont;
    __declspec(property(get=GetRowFont))
    _ViewFontPtr RowFont;
    __declspec(property(get=GetXML,put=PutXML))
    _bstr_t XML;
    __declspec(property(get=GetStandard))
    VARIANT_BOOL Standard;
    __declspec(property(get=GetSaveOption))
    enum OlViewSaveOption SaveOption;
    __declspec(property(get=GetLockUserChanges,put=PutLockUserChanges))
    VARIANT_BOOL LockUserChanges;
    __declspec(property(get=GetLanguage,put=PutLanguage))
    _bstr_t Language;
    __declspec(property(get=GetViewType))
    enum OlViewType ViewType;
    __declspec(property(get=GetAutoPreviewFont))
    _ViewFontPtr AutoPreviewFont;
    __declspec(property(get=GetAutoFormatRules))
    _AutoFormatRulesPtr AutoFormatRules;
    __declspec(property(get=GetFilter,put=PutFilter))
    _bstr_t Filter;
    __declspec(property(get=GetAutoPreview,put=PutAutoPreview))
    enum OlAutoPreview AutoPreview;

    //
    // Wrapper methods for error-handling
    //

    _ApplicationPtr GetApplication ( );
    enum OlObjectClass GetClass ( );
    _NameSpacePtr GetSession ( );
    IDispatchPtr GetParent ( );
    HRESULT Apply ( );
    ViewPtr Copy (
        _bstr_t Name,
        enum OlViewSaveOption SaveOption );
    HRESULT Delete ( );
    HRESULT Reset ( );
    HRESULT Save ( );
    _bstr_t GetLanguage ( );
    void PutLanguage (
        _bstr_t Language );
    VARIANT_BOOL GetLockUserChanges ( );
    void PutLockUserChanges (
        VARIANT_BOOL LockUserChanges );
    _bstr_t GetName ( );
    void PutName (
        _bstr_t Name );
    enum OlViewSaveOption GetSaveOption ( );
    VARIANT_BOOL GetStandard ( );
    enum OlViewType GetViewType ( );
    _bstr_t GetXML ( );
    void PutXML (
        _bstr_t XML );
    HRESULT GoToDate (
        DATE Date );
    _bstr_t GetFilter ( );
    void PutFilter (
        _bstr_t Filter );
    _ViewFieldsPtr GetViewFields ( );
    _OrderFieldsPtr GetGroupByFields ( );
    _OrderFieldsPtr GetSortFields ( );
    long GetMaxLinesInMultiLineView ( );
    void PutMaxLinesInMultiLineView (
        long MaxLinesInMultiLineView );
    VARIANT_BOOL GetAutomaticGrouping ( );
    void PutAutomaticGrouping (
        VARIANT_BOOL AutomaticGrouping );
    enum OlDefaultExpandCollapseSetting GetDefaultExpandCollapseSetting ( );
    void PutDefaultExpandCollapseSetting (
        enum OlDefaultExpandCollapseSetting DefaultExpandCollapseSetting );
    VARIANT_BOOL GetAutomaticColumnSizing ( );
    void PutAutomaticColumnSizing (
        VARIANT_BOOL AutomaticColumnSizing );
    enum OlMultiLine GetMultiLine ( );
    void PutMultiLine (
        enum OlMultiLine MultiLine );
    long GetMultiLineWidth ( );
    void PutMultiLineWidth (
        long MultiLineWidth );
    VARIANT_BOOL GetAllowInCellEditing ( );
    void PutAllowInCellEditing (
        VARIANT_BOOL AllowInCellEditing );
    VARIANT_BOOL GetShowNewItemRow ( );
    void PutShowNewItemRow (
        VARIANT_BOOL ShowNewItemRow );
    enum OlGridLineStyle GetGridLineStyle ( );
    void PutGridLineStyle (
        enum OlGridLineStyle GridLineStyle );
    VARIANT_BOOL GetShowItemsInGroups ( );
    void PutShowItemsInGroups (
        VARIANT_BOOL ShowItemsInGroups );
    VARIANT_BOOL GetShowReadingPane ( );
    void PutShowReadingPane (
        VARIANT_BOOL ShowReadingPane );
    VARIANT_BOOL GetHideReadingPaneHeaderInfo ( );
    void PutHideReadingPaneHeaderInfo (
        VARIANT_BOOL HideReadingPaneHeaderInfo );
    VARIANT_BOOL GetShowUnreadAndFlaggedMessages ( );
    void PutShowUnreadAndFlaggedMessages (
        VARIANT_BOOL ShowUnreadAndFlaggedMessages );
    _ViewFontPtr GetRowFont ( );
    _ViewFontPtr GetColumnFont ( );
    _ViewFontPtr GetAutoPreviewFont ( );
    enum OlAutoPreview GetAutoPreview ( );
    void PutAutoPreview (
        enum OlAutoPreview AutoPreview );
    _AutoFormatRulesPtr GetAutoFormatRules ( );

    //
    // Raw methods provided by interface
    //

      virtual HRESULT __stdcall get_Application (
        /*[out,retval]*/ struct _Application * * Application ) = 0;
      virtual HRESULT __stdcall get_Class (
        /*[out,retval]*/ enum OlObjectClass * Class ) = 0;
      virtual HRESULT __stdcall get_Session (
        /*[out,retval]*/ struct _NameSpace * * Session ) = 0;
      virtual HRESULT __stdcall get_Parent (
        /*[out,retval]*/ IDispatch * * Parent ) = 0;
      virtual HRESULT __stdcall raw_Apply ( ) = 0;
      virtual HRESULT __stdcall raw_Copy (
        /*[in]*/ BSTR Name,
        /*[in]*/ enum OlViewSaveOption SaveOption,
        /*[out,retval]*/ struct View * * ppview ) = 0;
      virtual HRESULT __stdcall raw_Delete ( ) = 0;
      virtual HRESULT __stdcall raw_Reset ( ) = 0;
      virtual HRESULT __stdcall raw_Save ( ) = 0;
      virtual HRESULT __stdcall get_Language (
        /*[out,retval]*/ BSTR * Language ) = 0;
      virtual HRESULT __stdcall put_Language (
        /*[in]*/ BSTR Language ) = 0;
      virtual HRESULT __stdcall get_LockUserChanges (
        /*[out,retval]*/ VARIANT_BOOL * LockUserChanges ) = 0;
      virtual HRESULT __stdcall put_LockUserChanges (
        /*[in]*/ VARIANT_BOOL LockUserChanges ) = 0;
      virtual HRESULT __stdcall get_Name (
        /*[out,retval]*/ BSTR * Name ) = 0;
      virtual HRESULT __stdcall put_Name (
        /*[in]*/ BSTR Name ) = 0;
      virtual HRESULT __stdcall get_SaveOption (
        /*[out,retval]*/ enum OlViewSaveOption * SaveOption ) = 0;
      virtual HRESULT __stdcall get_Standard (
        /*[out,retval]*/ VARIANT_BOOL * Standard ) = 0;
      virtual HRESULT __stdcall get_ViewType (
        /*[out,retval]*/ enum OlViewType * ViewType ) = 0;
      virtual HRESULT __stdcall get_XML (
        /*[out,retval]*/ BSTR * XML ) = 0;
      virtual HRESULT __stdcall put_XML (
        /*[in]*/ BSTR XML ) = 0;
      virtual HRESULT __stdcall raw_GoToDate (
        /*[in]*/ DATE Date ) = 0;
      virtual HRESULT __stdcall get_Filter (
        /*[out,retval]*/ BSTR * Filter ) = 0;
      virtual HRESULT __stdcall put_Filter (
        /*[in]*/ BSTR Filter ) = 0;
      virtual HRESULT __stdcall get_ViewFields (
        /*[out,retval]*/ struct _ViewFields * * ViewFields ) = 0;
      virtual HRESULT __stdcall get_GroupByFields (
        /*[out,retval]*/ struct _OrderFields * * GroupByFields ) = 0;
      virtual HRESULT __stdcall get_SortFields (
        /*[out,retval]*/ struct _OrderFields * * SortFields ) = 0;
      virtual HRESULT __stdcall get_MaxLinesInMultiLineView (
        /*[out,retval]*/ long * MaxLinesInMultiLineView ) = 0;
      virtual HRESULT __stdcall put_MaxLinesInMultiLineView (
        /*[in]*/ long MaxLinesInMultiLineView ) = 0;
      virtual HRESULT __stdcall get_AutomaticGrouping (
        /*[out,retval]*/ VARIANT_BOOL * AutomaticGrouping ) = 0;
      virtual HRESULT __stdcall put_AutomaticGrouping (
        /*[in]*/ VARIANT_BOOL AutomaticGrouping ) = 0;
      virtual HRESULT __stdcall get_DefaultExpandCollapseSetting (
        /*[out,retval]*/ enum OlDefaultExpandCollapseSetting * DefaultExpandCollapseSetting ) = 0;
      virtual HRESULT __stdcall put_DefaultExpandCollapseSetting (
        /*[in]*/ enum OlDefaultExpandCollapseSetting DefaultExpandCollapseSetting ) = 0;
      virtual HRESULT __stdcall get_AutomaticColumnSizing (
        /*[out,retval]*/ VARIANT_BOOL * AutomaticColumnSizing ) = 0;
      virtual HRESULT __stdcall put_AutomaticColumnSizing (
        /*[in]*/ VARIANT_BOOL AutomaticColumnSizing ) = 0;
      virtual HRESULT __stdcall get_MultiLine (
        /*[out,retval]*/ enum OlMultiLine * MultiLine ) = 0;
      virtual HRESULT __stdcall put_MultiLine (
        /*[in]*/ enum OlMultiLine MultiLine ) = 0;
      virtual HRESULT __stdcall get_MultiLineWidth (
        /*[out,retval]*/ long * MultiLineWidth ) = 0;
      virtual HRESULT __stdcall put_MultiLineWidth (
        /*[in]*/ long MultiLineWidth ) = 0;
      virtual HRESULT __stdcall get_AllowInCellEditing (
        /*[out,retval]*/ VARIANT_BOOL * AllowInCellEditing ) = 0;
      virtual HRESULT __stdcall put_AllowInCellEditing (
        /*[in]*/ VARIANT_BOOL AllowInCellEditing ) = 0;
      virtual HRESULT __stdcall get_ShowNewItemRow (
        /*[out,retval]*/ VARIANT_BOOL * ShowNewItemRow ) = 0;
      virtual HRESULT __stdcall put_ShowNewItemRow (
        /*[in]*/ VARIANT_BOOL ShowNewItemRow ) = 0;
      virtual HRESULT __stdcall get_GridLineStyle (
        /*[out,retval]*/ enum OlGridLineStyle * GridLineStyle ) = 0;
      virtual HRESULT __stdcall put_GridLineStyle (
        /*[in]*/ enum OlGridLineStyle GridLineStyle ) = 0;
      virtual HRESULT __stdcall get_ShowItemsInGroups (
        /*[out,retval]*/ VARIANT_BOOL * ShowItemsInGroups ) = 0;
      virtual HRESULT __stdcall put_ShowItemsInGroups (
        /*[in]*/ VARIANT_BOOL ShowItemsInGroups ) = 0;
      virtual HRESULT __stdcall get_ShowReadingPane (
        /*[out,retval]*/ VARIANT_BOOL * ShowReadingPane ) = 0;
      virtual HRESULT __stdcall put_ShowReadingPane (
        /*[in]*/ VARIANT_BOOL ShowReadingPane ) = 0;
      virtual HRESULT __stdcall get_HideReadingPaneHeaderInfo (
        /*[out,retval]*/ VARIANT_BOOL * HideReadingPaneHeaderInfo ) = 0;
      virtual HRESULT __stdcall put_HideReadingPaneHeaderInfo (
        /*[in]*/ VARIANT_BOOL HideReadingPaneHeaderInfo ) = 0;
      virtual HRESULT __stdcall get_ShowUnreadAndFlaggedMessages (
        /*[out,retval]*/ VARIANT_BOOL * ShowUnreadAndFlaggedMessages ) = 0;
      virtual HRESULT __stdcall put_ShowUnreadAndFlaggedMessages (
        /*[in]*/ VARIANT_BOOL ShowUnreadAndFlaggedMessages ) = 0;
      virtual HRESULT __stdcall get_RowFont (
        /*[out,retval]*/ struct _ViewFont * * RowFont ) = 0;
      virtual HRESULT __stdcall get_ColumnFont (
        /*[out,retval]*/ struct _ViewFont * * ColumnFont ) = 0;
      virtual HRESULT __stdcall get_AutoPreviewFont (
        /*[out,retval]*/ struct _ViewFont * * AutoPreviewFont ) = 0;
      virtual HRESULT __stdcall get_AutoPreview (
        /*[out,retval]*/ enum OlAutoPreview * AutoPreview ) = 0;
      virtual HRESULT __stdcall put_AutoPreview (
        /*[in]*/ enum OlAutoPreview AutoPreview ) = 0;
      virtual HRESULT __stdcall get_AutoFormatRules (
        /*[out,retval]*/ struct _AutoFormatRules * * AutoFormatRules ) = 0;
};

struct __declspec(uuid("000630a0-0000-0000-c000-000000000046"))
_ViewField : IDispatch
{
    //
    // Property data
    //

    __declspec(property(get=GetApplication))
    _ApplicationPtr Application;
    __declspec(property(get=GetParent))
    IDispatchPtr Parent;
    __declspec(property(get=GetViewXMLSchemaName))
    _bstr_t ViewXMLSchemaName;
    __declspec(property(get=GetClass))
    enum OlObjectClass Class;
    __declspec(property(get=GetSession))
    _NameSpacePtr Session;
    __declspec(property(get=GetColumnFormat))
    _ColumnFormatPtr ColumnFormat;

    //
    // Wrapper methods for error-handling
    //

    _ApplicationPtr GetApplication ( );
    enum OlObjectClass GetClass ( );
    _NameSpacePtr GetSession ( );
    IDispatchPtr GetParent ( );
    _bstr_t GetViewXMLSchemaName ( );
    _ColumnFormatPtr GetColumnFormat ( );

    //
    // Raw methods provided by interface
    //

      virtual HRESULT __stdcall get_Application (
        /*[out,retval]*/ struct _Application * * Application ) = 0;
      virtual HRESULT __stdcall get_Class (
        /*[out,retval]*/ enum OlObjectClass * Class ) = 0;
      virtual HRESULT __stdcall get_Session (
        /*[out,retval]*/ struct _NameSpace * * Session ) = 0;
      virtual HRESULT __stdcall get_Parent (
        /*[out,retval]*/ IDispatch * * Parent ) = 0;
      virtual HRESULT __stdcall get_ViewXMLSchemaName (
        /*[out,retval]*/ BSTR * ViewXMLSchemaName ) = 0;
      virtual HRESULT __stdcall get_ColumnFormat (
        /*[out,retval]*/ struct _ColumnFormat * * ColumnFormat ) = 0;
};

struct __declspec(uuid("000630a1-0000-0000-c000-000000000046"))
_ViewFields : IDispatch
{
    //
    // Property data
    //

    __declspec(property(get=GetApplication))
    _ApplicationPtr Application;
    __declspec(property(get=GetParent))
    IDispatchPtr Parent;
    __declspec(property(get=GetClass))
    enum OlObjectClass Class;
    __declspec(property(get=GetSession))
    _NameSpacePtr Session;
    __declspec(property(get=GetCount))
    long Count;

    //
    // Wrapper methods for error-handling
    //

    _ApplicationPtr GetApplication ( );
    enum OlObjectClass GetClass ( );
    _NameSpacePtr GetSession ( );
    IDispatchPtr GetParent ( );
    long GetCount ( );
    _ViewFieldPtr Item (
        const _variant_t & Index );
    _ViewFieldPtr Add (
        _bstr_t PropertyName );
    _ViewFieldPtr Insert (
        _bstr_t PropertyName,
        const _variant_t & Index );
    HRESULT Remove (
        const _variant_t & Index );

    //
    // Raw methods provided by interface
    //

      virtual HRESULT __stdcall get_Application (
        /*[out,retval]*/ struct _Application * * Application ) = 0;
      virtual HRESULT __stdcall get_Class (
        /*[out,retval]*/ enum OlObjectClass * Class ) = 0;
      virtual HRESULT __stdcall get_Session (
        /*[out,retval]*/ struct _NameSpace * * Session ) = 0;
      virtual HRESULT __stdcall get_Parent (
        /*[out,retval]*/ IDispatch * * Parent ) = 0;
      virtual HRESULT __stdcall get_Count (
        /*[out,retval]*/ long * Count ) = 0;
      virtual HRESULT __stdcall raw_Item (
        /*[in]*/ VARIANT Index,
        /*[out,retval]*/ struct _ViewField * * Item ) = 0;
      virtual HRESULT __stdcall raw_Add (
        /*[in]*/ BSTR PropertyName,
        /*[out,retval]*/ struct _ViewField * * ViewField ) = 0;
      virtual HRESULT __stdcall raw_Insert (
        /*[in]*/ BSTR PropertyName,
        /*[in]*/ VARIANT Index,
        /*[out,retval]*/ struct _ViewField * * ViewField ) = 0;
      virtual HRESULT __stdcall raw_Remove (
        /*[in]*/ VARIANT Index ) = 0;
};

struct __declspec(uuid("0006309e-0000-0000-c000-000000000046"))
_ColumnFormat : IDispatch
{
    //
    // Property data
    //

    __declspec(property(get=GetApplication))
    _ApplicationPtr Application;
    __declspec(property(get=GetParent))
    IDispatchPtr Parent;
    __declspec(property(get=GetAlign,put=PutAlign))
    enum OlAlign Align;
    __declspec(property(get=GetClass))
    enum OlObjectClass Class;
    __declspec(property(get=GetSession))
    _NameSpacePtr Session;
    __declspec(property(get=GetFieldFormat,put=PutFieldFormat))
    long FieldFormat;
    __declspec(property(get=GetFieldType))
    enum OlUserPropertyType FieldType;
    __declspec(property(get=GetWidth,put=PutWidth))
    long Width;
    __declspec(property(get=GetLabel,put=PutLabel))
    _bstr_t Label;

    //
    // Wrapper methods for error-handling
    //

    _ApplicationPtr GetApplication ( );
    enum OlObjectClass GetClass ( );
    _NameSpacePtr GetSession ( );
    IDispatchPtr GetParent ( );
    _bstr_t GetLabel ( );
    void PutLabel (
        _bstr_t Label );
    long GetFieldFormat ( );
    void PutFieldFormat (
        long FieldFormat );
    long GetWidth ( );
    void PutWidth (
        long Width );
    enum OlAlign GetAlign ( );
    void PutAlign (
        enum OlAlign Align );
    enum OlUserPropertyType GetFieldType ( );

    //
    // Raw methods provided by interface
    //

      virtual HRESULT __stdcall get_Application (
        /*[out,retval]*/ struct _Application * * Application ) = 0;
      virtual HRESULT __stdcall get_Class (
        /*[out,retval]*/ enum OlObjectClass * Class ) = 0;
      virtual HRESULT __stdcall get_Session (
        /*[out,retval]*/ struct _NameSpace * * Session ) = 0;
      virtual HRESULT __stdcall get_Parent (
        /*[out,retval]*/ IDispatch * * Parent ) = 0;
      virtual HRESULT __stdcall get_Label (
        /*[out,retval]*/ BSTR * Label ) = 0;
      virtual HRESULT __stdcall put_Label (
        /*[in]*/ BSTR Label ) = 0;
      virtual HRESULT __stdcall get_FieldFormat (
        /*[out,retval]*/ long * FieldFormat ) = 0;
      virtual HRESULT __stdcall put_FieldFormat (
        /*[in]*/ long FieldFormat ) = 0;
      virtual HRESULT __stdcall get_Width (
        /*[out,retval]*/ long * Width ) = 0;
      virtual HRESULT __stdcall put_Width (
        /*[in]*/ long Width ) = 0;
      virtual HRESULT __stdcall get_Align (
        /*[out,retval]*/ enum OlAlign * Align ) = 0;
      virtual HRESULT __stdcall put_Align (
        /*[in]*/ enum OlAlign Align ) = 0;
      virtual HRESULT __stdcall get_FieldType (
        /*[out,retval]*/ enum OlUserPropertyType * FieldType ) = 0;
};

struct __declspec(uuid("0006309b-0000-0000-c000-000000000046"))
_OrderField : IDispatch
{
    //
    // Property data
    //

    __declspec(property(get=GetApplication))
    _ApplicationPtr Application;
    __declspec(property(get=GetParent))
    IDispatchPtr Parent;
    __declspec(property(get=GetViewXMLSchemaName))
    _bstr_t ViewXMLSchemaName;
    __declspec(property(get=GetClass))
    enum OlObjectClass Class;
    __declspec(property(get=GetSession))
    _NameSpacePtr Session;
    __declspec(property(get=GetIsDescending,put=PutIsDescending))
    VARIANT_BOOL IsDescending;

    //
    // Wrapper methods for error-handling
    //

    _ApplicationPtr GetApplication ( );
    enum OlObjectClass GetClass ( );
    _NameSpacePtr GetSession ( );
    IDispatchPtr GetParent ( );
    _bstr_t GetViewXMLSchemaName ( );
    VARIANT_BOOL GetIsDescending ( );
    void PutIsDescending (
        VARIANT_BOOL IsDescending );

    //
    // Raw methods provided by interface
    //

      virtual HRESULT __stdcall get_Application (
        /*[out,retval]*/ struct _Application * * Application ) = 0;
      virtual HRESULT __stdcall get_Class (
        /*[out,retval]*/ enum OlObjectClass * Class ) = 0;
      virtual HRESULT __stdcall get_Session (
        /*[out,retval]*/ struct _NameSpace * * Session ) = 0;
      virtual HRESULT __stdcall get_Parent (
        /*[out,retval]*/ IDispatch * * Parent ) = 0;
      virtual HRESULT __stdcall get_ViewXMLSchemaName (
        /*[out,retval]*/ BSTR * ViewXMLSchemaName ) = 0;
      virtual HRESULT __stdcall get_IsDescending (
        /*[out,retval]*/ VARIANT_BOOL * IsDescending ) = 0;
      virtual HRESULT __stdcall put_IsDescending (
        /*[in]*/ VARIANT_BOOL IsDescending ) = 0;
};

struct __declspec(uuid("0006309a-0000-0000-c000-000000000046"))
_OrderFields : IDispatch
{
    //
    // Property data
    //

    __declspec(property(get=GetApplication))
    _ApplicationPtr Application;
    __declspec(property(get=GetParent))
    IDispatchPtr Parent;
    __declspec(property(get=GetClass))
    enum OlObjectClass Class;
    __declspec(property(get=GetSession))
    _NameSpacePtr Session;
    __declspec(property(get=GetCount))
    long Count;

    //
    // Wrapper methods for error-handling
    //

    _ApplicationPtr GetApplication ( );
    enum OlObjectClass GetClass ( );
    _NameSpacePtr GetSession ( );
    IDispatchPtr GetParent ( );
    long GetCount ( );
    _OrderFieldPtr Item (
        const _variant_t & Index );
    _OrderFieldPtr Add (
        _bstr_t PropertyName,
        const _variant_t & IsDescending = vtMissing );
    HRESULT Remove (
        const _variant_t & Index );
    HRESULT RemoveAll ( );
    _OrderFieldPtr Insert (
        _bstr_t PropertyName,
        const _variant_t & Index,
        const _variant_t & IsDescending = vtMissing );

    //
    // Raw methods provided by interface
    //

      virtual HRESULT __stdcall get_Application (
        /*[out,retval]*/ struct _Application * * Application ) = 0;
      virtual HRESULT __stdcall get_Class (
        /*[out,retval]*/ enum OlObjectClass * Class ) = 0;
      virtual HRESULT __stdcall get_Session (
        /*[out,retval]*/ struct _NameSpace * * Session ) = 0;
      virtual HRESULT __stdcall get_Parent (
        /*[out,retval]*/ IDispatch * * Parent ) = 0;
      virtual HRESULT __stdcall get_Count (
        /*[out,retval]*/ long * Count ) = 0;
      virtual HRESULT __stdcall raw_Item (
        /*[in]*/ VARIANT Index,
        /*[out,retval]*/ struct _OrderField * * Item ) = 0;
      virtual HRESULT __stdcall raw_Add (
        /*[in]*/ BSTR PropertyName,
        /*[in]*/ VARIANT IsDescending,
        /*[out,retval]*/ struct _OrderField * * OrderField ) = 0;
      virtual HRESULT __stdcall raw_Remove (
        /*[in]*/ VARIANT Index ) = 0;
      virtual HRESULT __stdcall raw_RemoveAll ( ) = 0;
      virtual HRESULT __stdcall raw_Insert (
        /*[in]*/ BSTR PropertyName,
        /*[in]*/ VARIANT Index,
        /*[in]*/ VARIANT IsDescending,
        /*[out,retval]*/ struct _OrderField * * OrderField ) = 0;
};

struct __declspec(uuid("0006309d-0000-0000-c000-000000000046"))
_ViewFont : IDispatch
{
    //
    // Property data
    //

    __declspec(property(get=GetApplication))
    _ApplicationPtr Application;
    __declspec(property(get=GetParent))
    IDispatchPtr Parent;
    __declspec(property(get=GetBold,put=PutBold))
    VARIANT_BOOL Bold;
    __declspec(property(get=GetItalic,put=PutItalic))
    VARIANT_BOOL Italic;
    __declspec(property(get=GetName,put=PutName))
    _bstr_t Name;
    __declspec(property(get=GetSize,put=PutSize))
    long Size;
    __declspec(property(get=GetStrikethrough,put=PutStrikethrough))
    VARIANT_BOOL Strikethrough;
    __declspec(property(get=GetUnderline,put=PutUnderline))
    VARIANT_BOOL Underline;
    __declspec(property(get=GetClass))
    enum OlObjectClass Class;
    __declspec(property(get=GetSession))
    _NameSpacePtr Session;
    __declspec(property(get=GetColor,put=PutColor))
    enum OlColor Color;

    //
    // Wrapper methods for error-handling
    //

    _ApplicationPtr GetApplication ( );
    enum OlObjectClass GetClass ( );
    _NameSpacePtr GetSession ( );
    IDispatchPtr GetParent ( );
    VARIANT_BOOL GetBold ( );
    void PutBold (
        VARIANT_BOOL Bold );
    VARIANT_BOOL GetItalic ( );
    void PutItalic (
        VARIANT_BOOL Italic );
    _bstr_t GetName ( );
    void PutName (
        _bstr_t Name );
    long GetSize ( );
    void PutSize (
        long Size );
    VARIANT_BOOL GetStrikethrough ( );
    void PutStrikethrough (
        VARIANT_BOOL Strikethrough );
    VARIANT_BOOL GetUnderline ( );
    void PutUnderline (
        VARIANT_BOOL Underline );
    enum OlColor GetColor ( );
    void PutColor (
        enum OlColor Color );

    //
    // Raw methods provided by interface
    //

      virtual HRESULT __stdcall get_Application (
        /*[out,retval]*/ struct _Application * * Application ) = 0;
      virtual HRESULT __stdcall get_Class (
        /*[out,retval]*/ enum OlObjectClass * Class ) = 0;
      virtual HRESULT __stdcall get_Session (
        /*[out,retval]*/ struct _NameSpace * * Session ) = 0;
      virtual HRESULT __stdcall get_Parent (
        /*[out,retval]*/ IDispatch * * Parent ) = 0;
      virtual HRESULT __stdcall get_Bold (
        /*[out,retval]*/ VARIANT_BOOL * Bold ) = 0;
      virtual HRESULT __stdcall put_Bold (
        /*[in]*/ VARIANT_BOOL Bold ) = 0;
      virtual HRESULT __stdcall get_Italic (
        /*[out,retval]*/ VARIANT_BOOL * Italic ) = 0;
      virtual HRESULT __stdcall put_Italic (
        /*[in]*/ VARIANT_BOOL Italic ) = 0;
      virtual HRESULT __stdcall get_Name (
        /*[out,retval]*/ BSTR * Name ) = 0;
      virtual HRESULT __stdcall put_Name (
        /*[in]*/ BSTR Name ) = 0;
      virtual HRESULT __stdcall get_Size (
        /*[out,retval]*/ long * Size ) = 0;
      virtual HRESULT __stdcall put_Size (
        /*[in]*/ long Size ) = 0;
      virtual HRESULT __stdcall get_Strikethrough (
        /*[out,retval]*/ VARIANT_BOOL * Strikethrough ) = 0;
      virtual HRESULT __stdcall put_Strikethrough (
        /*[in]*/ VARIANT_BOOL Strikethrough ) = 0;
      virtual HRESULT __stdcall get_Underline (
        /*[out,retval]*/ VARIANT_BOOL * Underline ) = 0;
      virtual HRESULT __stdcall put_Underline (
        /*[in]*/ VARIANT_BOOL Underline ) = 0;
      virtual HRESULT __stdcall get_Color (
        /*[out,retval]*/ enum OlColor * Color ) = 0;
      virtual HRESULT __stdcall put_Color (
        /*[in]*/ enum OlColor Color ) = 0;
};

struct __declspec(uuid("00063094-0000-0000-c000-000000000046"))
_AutoFormatRules : IDispatch
{
    //
    // Property data
    //

    __declspec(property(get=GetApplication))
    _ApplicationPtr Application;
    __declspec(property(get=GetParent))
    IDispatchPtr Parent;
    __declspec(property(get=GetClass))
    enum OlObjectClass Class;
    __declspec(property(get=GetSession))
    _NameSpacePtr Session;
    __declspec(property(get=GetCount))
    long Count;

    //
    // Wrapper methods for error-handling
    //

    _ApplicationPtr GetApplication ( );
    enum OlObjectClass GetClass ( );
    _NameSpacePtr GetSession ( );
    IDispatchPtr GetParent ( );
    long GetCount ( );
    _AutoFormatRulePtr Item (
        const _variant_t & Index );
    _AutoFormatRulePtr Add (
        _bstr_t Name );
    _AutoFormatRulePtr Insert (
        _bstr_t Name,
        const _variant_t & Index );
    HRESULT Remove (
        const _variant_t & Index );
    HRESULT RemoveAll ( );
    HRESULT Save ( );

    //
    // Raw methods provided by interface
    //

      virtual HRESULT __stdcall get_Application (
        /*[out,retval]*/ struct _Application * * Application ) = 0;
      virtual HRESULT __stdcall get_Class (
        /*[out,retval]*/ enum OlObjectClass * Class ) = 0;
      virtual HRESULT __stdcall get_Session (
        /*[out,retval]*/ struct _NameSpace * * Session ) = 0;
      virtual HRESULT __stdcall get_Parent (
        /*[out,retval]*/ IDispatch * * Parent ) = 0;
      virtual HRESULT __stdcall get_Count (
        /*[out,retval]*/ long * Count ) = 0;
      virtual HRESULT __stdcall raw_Item (
        /*[in]*/ VARIANT Index,
        /*[out,retval]*/ struct _AutoFormatRule * * Item ) = 0;
      virtual HRESULT __stdcall raw_Add (
        /*[in]*/ BSTR Name,
        /*[out,retval]*/ struct _AutoFormatRule * * AutoFormatRule ) = 0;
      virtual HRESULT __stdcall raw_Insert (
        /*[in]*/ BSTR Name,
        /*[in]*/ VARIANT Index,
        /*[out,retval]*/ struct _AutoFormatRule * * AutoFormatRule ) = 0;
      virtual HRESULT __stdcall raw_Remove (
        /*[in]*/ VARIANT Index ) = 0;
      virtual HRESULT __stdcall raw_RemoveAll ( ) = 0;
      virtual HRESULT __stdcall raw_Save ( ) = 0;
};

struct __declspec(uuid("00063093-0000-0000-c000-000000000046"))
_AutoFormatRule : IDispatch
{
    //
    // Property data
    //

    __declspec(property(get=GetApplication))
    _ApplicationPtr Application;
    __declspec(property(get=GetParent))
    IDispatchPtr Parent;
    __declspec(property(get=GetName,put=PutName))
    _bstr_t Name;
    __declspec(property(get=GetEnabled,put=PutEnabled))
    VARIANT_BOOL Enabled;
    __declspec(property(get=GetClass))
    enum OlObjectClass Class;
    __declspec(property(get=GetSession))
    _NameSpacePtr Session;
    __declspec(property(get=GetFont,put=PutFont))
    _ViewFontPtr Font;
    __declspec(property(get=GetFilter,put=PutFilter))
    _bstr_t Filter;
    __declspec(property(get=GetStandard))
    VARIANT_BOOL Standard;

    //
    // Wrapper methods for error-handling
    //

    _ApplicationPtr GetApplication ( );
    enum OlObjectClass GetClass ( );
    _NameSpacePtr GetSession ( );
    IDispatchPtr GetParent ( );
    _bstr_t GetName ( );
    void PutName (
        _bstr_t Name );
    _bstr_t GetFilter ( );
    void PutFilter (
        _bstr_t Filter );
    VARIANT_BOOL GetEnabled ( );
    void PutEnabled (
        VARIANT_BOOL Enabled );
    _ViewFontPtr GetFont ( );
    void PutFont (
        struct _ViewFont * Font );
    VARIANT_BOOL GetStandard ( );

    //
    // Raw methods provided by interface
    //

      virtual HRESULT __stdcall get_Application (
        /*[out,retval]*/ struct _Application * * Application ) = 0;
      virtual HRESULT __stdcall get_Class (
        /*[out,retval]*/ enum OlObjectClass * Class ) = 0;
      virtual HRESULT __stdcall get_Session (
        /*[out,retval]*/ struct _NameSpace * * Session ) = 0;
      virtual HRESULT __stdcall get_Parent (
        /*[out,retval]*/ IDispatch * * Parent ) = 0;
      virtual HRESULT __stdcall get_Name (
        /*[out,retval]*/ BSTR * Name ) = 0;
      virtual HRESULT __stdcall put_Name (
        /*[in]*/ BSTR Name ) = 0;
      virtual HRESULT __stdcall get_Filter (
        /*[out,retval]*/ BSTR * Filter ) = 0;
      virtual HRESULT __stdcall put_Filter (
        /*[in]*/ BSTR Filter ) = 0;
      virtual HRESULT __stdcall get_Enabled (
        /*[out,retval]*/ VARIANT_BOOL * Enabled ) = 0;
      virtual HRESULT __stdcall put_Enabled (
        /*[in]*/ VARIANT_BOOL Enabled ) = 0;
      virtual HRESULT __stdcall get_Font (
        /*[out,retval]*/ struct _ViewFont * * Font ) = 0;
      virtual HRESULT __stdcall put_Font (
        /*[in]*/ struct _ViewFont * Font ) = 0;
      virtual HRESULT __stdcall get_Standard (
        /*[out,retval]*/ VARIANT_BOOL * Standard ) = 0;
};

struct __declspec(uuid("00063097-0000-0000-c000-000000000046"))
_IconView : IDispatch
{
    //
    // Property data
    //

    __declspec(property(get=GetApplication))
    _ApplicationPtr Application;
    __declspec(property(get=GetParent))
    IDispatchPtr Parent;
    __declspec(property(get=GetLanguage,put=PutLanguage))
    _bstr_t Language;
    __declspec(property(get=GetLockUserChanges,put=PutLockUserChanges))
    VARIANT_BOOL LockUserChanges;
    __declspec(property(get=GetName,put=PutName))
    _bstr_t Name;
    __declspec(property(get=GetClass))
    enum OlObjectClass Class;
    __declspec(property(get=GetSession))
    _NameSpacePtr Session;
    __declspec(property(get=GetIconViewType,put=PutIconViewType))
    enum OlIconViewType IconViewType;
    __declspec(property(get=GetIconPlacement,put=PutIconPlacement))
    enum OlIconViewPlacement IconPlacement;
    __declspec(property(get=GetViewType))
    enum OlViewType ViewType;
    __declspec(property(get=GetFilter,put=PutFilter))
    _bstr_t Filter;
    __declspec(property(get=GetSortFields))
    _OrderFieldsPtr SortFields;
    __declspec(property(get=GetXML,put=PutXML))
    _bstr_t XML;
    __declspec(property(get=GetStandard))
    VARIANT_BOOL Standard;
    __declspec(property(get=GetSaveOption))
    enum OlViewSaveOption SaveOption;

    //
    // Wrapper methods for error-handling
    //

    _ApplicationPtr GetApplication ( );
    enum OlObjectClass GetClass ( );
    _NameSpacePtr GetSession ( );
    IDispatchPtr GetParent ( );
    HRESULT Apply ( );
    ViewPtr Copy (
        _bstr_t Name,
        enum OlViewSaveOption SaveOption );
    HRESULT Delete ( );
    HRESULT Reset ( );
    HRESULT Save ( );
    _bstr_t GetLanguage ( );
    void PutLanguage (
        _bstr_t Language );
    VARIANT_BOOL GetLockUserChanges ( );
    void PutLockUserChanges (
        VARIANT_BOOL LockUserChanges );
    _bstr_t GetName ( );
    void PutName (
        _bstr_t Name );
    enum OlViewSaveOption GetSaveOption ( );
    VARIANT_BOOL GetStandard ( );
    enum OlViewType GetViewType ( );
    _bstr_t GetXML ( );
    void PutXML (
        _bstr_t XML );
    HRESULT GoToDate (
        DATE Date );
    _bstr_t GetFilter ( );
    void PutFilter (
        _bstr_t Filter );
    _OrderFieldsPtr GetSortFields ( );
    enum OlIconViewType GetIconViewType ( );
    void PutIconViewType (
        enum OlIconViewType IconViewType );
    enum OlIconViewPlacement GetIconPlacement ( );
    void PutIconPlacement (
        enum OlIconViewPlacement IconPlacement );

    //
    // Raw methods provided by interface
    //

      virtual HRESULT __stdcall get_Application (
        /*[out,retval]*/ struct _Application * * Application ) = 0;
      virtual HRESULT __stdcall get_Class (
        /*[out,retval]*/ enum OlObjectClass * Class ) = 0;
      virtual HRESULT __stdcall get_Session (
        /*[out,retval]*/ struct _NameSpace * * Session ) = 0;
      virtual HRESULT __stdcall get_Parent (
        /*[out,retval]*/ IDispatch * * Parent ) = 0;
      virtual HRESULT __stdcall raw_Apply ( ) = 0;
      virtual HRESULT __stdcall raw_Copy (
        /*[in]*/ BSTR Name,
        /*[in]*/ enum OlViewSaveOption SaveOption,
        /*[out,retval]*/ struct View * * ppview ) = 0;
      virtual HRESULT __stdcall raw_Delete ( ) = 0;
      virtual HRESULT __stdcall raw_Reset ( ) = 0;
      virtual HRESULT __stdcall raw_Save ( ) = 0;
      virtual HRESULT __stdcall get_Language (
        /*[out,retval]*/ BSTR * Language ) = 0;
      virtual HRESULT __stdcall put_Language (
        /*[in]*/ BSTR Language ) = 0;
      virtual HRESULT __stdcall get_LockUserChanges (
        /*[out,retval]*/ VARIANT_BOOL * LockUserChanges ) = 0;
      virtual HRESULT __stdcall put_LockUserChanges (
        /*[in]*/ VARIANT_BOOL LockUserChanges ) = 0;
      virtual HRESULT __stdcall get_Name (
        /*[out,retval]*/ BSTR * Name ) = 0;
      virtual HRESULT __stdcall put_Name (
        /*[in]*/ BSTR Name ) = 0;
      virtual HRESULT __stdcall get_SaveOption (
        /*[out,retval]*/ enum OlViewSaveOption * SaveOption ) = 0;
      virtual HRESULT __stdcall get_Standard (
        /*[out,retval]*/ VARIANT_BOOL * Standard ) = 0;
      virtual HRESULT __stdcall get_ViewType (
        /*[out,retval]*/ enum OlViewType * ViewType ) = 0;
      virtual HRESULT __stdcall get_XML (
        /*[out,retval]*/ BSTR * XML ) = 0;
      virtual HRESULT __stdcall put_XML (
        /*[in]*/ BSTR XML ) = 0;
      virtual HRESULT __stdcall raw_GoToDate (
        /*[in]*/ DATE Date ) = 0;
      virtual HRESULT __stdcall get_Filter (
        /*[out,retval]*/ BSTR * Filter ) = 0;
      virtual HRESULT __stdcall put_Filter (
        /*[in]*/ BSTR Filter ) = 0;
      virtual HRESULT __stdcall get_SortFields (
        /*[out,retval]*/ struct _OrderFields * * SortFields ) = 0;
      virtual HRESULT __stdcall get_IconViewType (
        /*[out,retval]*/ enum OlIconViewType * IconViewType ) = 0;
      virtual HRESULT __stdcall put_IconViewType (
        /*[in]*/ enum OlIconViewType IconViewType ) = 0;
      virtual HRESULT __stdcall get_IconPlacement (
        /*[out,retval]*/ enum OlIconViewPlacement * IconPlacement ) = 0;
      virtual HRESULT __stdcall put_IconPlacement (
        /*[in]*/ enum OlIconViewPlacement IconPlacement ) = 0;
};

struct __declspec(uuid("00063098-0000-0000-c000-000000000046"))
_CardView : IDispatch
{
    //
    // Property data
    //

    __declspec(property(get=GetApplication))
    _ApplicationPtr Application;
    __declspec(property(get=GetParent))
    IDispatchPtr Parent;
    __declspec(property(get=GetLanguage,put=PutLanguage))
    _bstr_t Language;
    __declspec(property(get=GetLockUserChanges,put=PutLockUserChanges))
    VARIANT_BOOL LockUserChanges;
    __declspec(property(get=GetName,put=PutName))
    _bstr_t Name;
    __declspec(property(get=GetAllowInCellEditing,put=PutAllowInCellEditing))
    VARIANT_BOOL AllowInCellEditing;
    __declspec(property(get=GetAutoFormatRules))
    _AutoFormatRulesPtr AutoFormatRules;
    __declspec(property(get=GetClass))
    enum OlObjectClass Class;
    __declspec(property(get=GetSession))
    _NameSpacePtr Session;
    __declspec(property(get=GetMultiLineFieldHeight,put=PutMultiLineFieldHeight))
    long MultiLineFieldHeight;
    __declspec(property(get=GetViewType))
    enum OlViewType ViewType;
    __declspec(property(get=GetViewFields))
    _ViewFieldsPtr ViewFields;
    __declspec(property(get=GetShowEmptyFields,put=PutShowEmptyFields))
    VARIANT_BOOL ShowEmptyFields;
    __declspec(property(get=GetWidth,put=PutWidth))
    long Width;
    __declspec(property(get=GetFilter,put=PutFilter))
    _bstr_t Filter;
    __declspec(property(get=GetSortFields))
    _OrderFieldsPtr SortFields;
    __declspec(property(get=GetHeadingsFont))
    _ViewFontPtr HeadingsFont;
    __declspec(property(get=GetXML,put=PutXML))
    _bstr_t XML;
    __declspec(property(get=GetBodyFont))
    _ViewFontPtr BodyFont;
    __declspec(property(get=GetStandard))
    VARIANT_BOOL Standard;
    __declspec(property(get=GetSaveOption))
    enum OlViewSaveOption SaveOption;

    //
    // Wrapper methods for error-handling
    //

    _ApplicationPtr GetApplication ( );
    enum OlObjectClass GetClass ( );
    _NameSpacePtr GetSession ( );
    IDispatchPtr GetParent ( );
    HRESULT Apply ( );
    ViewPtr Copy (
        _bstr_t Name,
        enum OlViewSaveOption SaveOption );
    HRESULT Delete ( );
    HRESULT Reset ( );
    HRESULT Save ( );
    _bstr_t GetLanguage ( );
    void PutLanguage (
        _bstr_t Language );
    VARIANT_BOOL GetLockUserChanges ( );
    void PutLockUserChanges (
        VARIANT_BOOL LockUserChanges );
    _bstr_t GetName ( );
    void PutName (
        _bstr_t Name );
    enum OlViewSaveOption GetSaveOption ( );
    VARIANT_BOOL GetStandard ( );
    enum OlViewType GetViewType ( );
    _bstr_t GetXML ( );
    void PutXML (
        _bstr_t XML );
    HRESULT GoToDate (
        DATE Date );
    _bstr_t GetFilter ( );
    void PutFilter (
        _bstr_t Filter );
    _OrderFieldsPtr GetSortFields ( );
    VARIANT_BOOL GetAllowInCellEditing ( );
    void PutAllowInCellEditing (
        VARIANT_BOOL AllowInCellEditing );
    VARIANT_BOOL GetShowEmptyFields ( );
    void PutShowEmptyFields (
        VARIANT_BOOL ShowEmptyFields );
    long GetWidth ( );
    void PutWidth (
        long Width );
    long GetMultiLineFieldHeight ( );
    void PutMultiLineFieldHeight (
        long MultiLineFieldHeight );
    _ViewFieldsPtr GetViewFields ( );
    _ViewFontPtr GetHeadingsFont ( );
    _ViewFontPtr GetBodyFont ( );
    _AutoFormatRulesPtr GetAutoFormatRules ( );

    //
    // Raw methods provided by interface
    //

      virtual HRESULT __stdcall get_Application (
        /*[out,retval]*/ struct _Application * * Application ) = 0;
      virtual HRESULT __stdcall get_Class (
        /*[out,retval]*/ enum OlObjectClass * Class ) = 0;
      virtual HRESULT __stdcall get_Session (
        /*[out,retval]*/ struct _NameSpace * * Session ) = 0;
      virtual HRESULT __stdcall get_Parent (
        /*[out,retval]*/ IDispatch * * Parent ) = 0;
      virtual HRESULT __stdcall raw_Apply ( ) = 0;
      virtual HRESULT __stdcall raw_Copy (
        /*[in]*/ BSTR Name,
        /*[in]*/ enum OlViewSaveOption SaveOption,
        /*[out,retval]*/ struct View * * ppview ) = 0;
      virtual HRESULT __stdcall raw_Delete ( ) = 0;
      virtual HRESULT __stdcall raw_Reset ( ) = 0;
      virtual HRESULT __stdcall raw_Save ( ) = 0;
      virtual HRESULT __stdcall get_Language (
        /*[out,retval]*/ BSTR * Language ) = 0;
      virtual HRESULT __stdcall put_Language (
        /*[in]*/ BSTR Language ) = 0;
      virtual HRESULT __stdcall get_LockUserChanges (
        /*[out,retval]*/ VARIANT_BOOL * LockUserChanges ) = 0;
      virtual HRESULT __stdcall put_LockUserChanges (
        /*[in]*/ VARIANT_BOOL LockUserChanges ) = 0;
      virtual HRESULT __stdcall get_Name (
        /*[out,retval]*/ BSTR * Name ) = 0;
      virtual HRESULT __stdcall put_Name (
        /*[in]*/ BSTR Name ) = 0;
      virtual HRESULT __stdcall get_SaveOption (
        /*[out,retval]*/ enum OlViewSaveOption * SaveOption ) = 0;
      virtual HRESULT __stdcall get_Standard (
        /*[out,retval]*/ VARIANT_BOOL * Standard ) = 0;
      virtual HRESULT __stdcall get_ViewType (
        /*[out,retval]*/ enum OlViewType * ViewType ) = 0;
      virtual HRESULT __stdcall get_XML (
        /*[out,retval]*/ BSTR * XML ) = 0;
      virtual HRESULT __stdcall put_XML (
        /*[in]*/ BSTR XML ) = 0;
      virtual HRESULT __stdcall raw_GoToDate (
        /*[in]*/ DATE Date ) = 0;
      virtual HRESULT __stdcall get_Filter (
        /*[out,retval]*/ BSTR * Filter ) = 0;
      virtual HRESULT __stdcall put_Filter (
        /*[in]*/ BSTR Filter ) = 0;
      virtual HRESULT __stdcall get_SortFields (
        /*[out,retval]*/ struct _OrderFields * * SortFields ) = 0;
      virtual HRESULT __stdcall get_AllowInCellEditing (
        /*[out,retval]*/ VARIANT_BOOL * AllowInCellEditing ) = 0;
      virtual HRESULT __stdcall put_AllowInCellEditing (
        /*[in]*/ VARIANT_BOOL AllowInCellEditing ) = 0;
      virtual HRESULT __stdcall get_ShowEmptyFields (
        /*[out,retval]*/ VARIANT_BOOL * ShowEmptyFields ) = 0;
      virtual HRESULT __stdcall put_ShowEmptyFields (
        /*[in]*/ VARIANT_BOOL ShowEmptyFields ) = 0;
      virtual HRESULT __stdcall get_Width (
        /*[out,retval]*/ long * Width ) = 0;
      virtual HRESULT __stdcall put_Width (
        /*[in]*/ long Width ) = 0;
      virtual HRESULT __stdcall get_MultiLineFieldHeight (
        /*[out,retval]*/ long * MultiLineFieldHeight ) = 0;
      virtual HRESULT __stdcall put_MultiLineFieldHeight (
        /*[in]*/ long MultiLineFieldHeight ) = 0;
      virtual HRESULT __stdcall get_ViewFields (
        /*[out,retval]*/ struct _ViewFields * * ViewFields ) = 0;
      virtual HRESULT __stdcall get_HeadingsFont (
        /*[out,retval]*/ struct _ViewFont * * HeadingsFont ) = 0;
      virtual HRESULT __stdcall get_BodyFont (
        /*[out,retval]*/ struct _ViewFont * * BodyFont ) = 0;
      virtual HRESULT __stdcall get_AutoFormatRules (
        /*[out,retval]*/ struct _AutoFormatRules * * AutoFormatRules ) = 0;
};

struct __declspec(uuid("00063099-0000-0000-c000-000000000046"))
_CalendarView : IDispatch
{
    //
    // Property data
    //

    __declspec(property(get=GetLockUserChanges,put=PutLockUserChanges))
    VARIANT_BOOL LockUserChanges;
    __declspec(property(get=GetLanguage,put=PutLanguage))
    _bstr_t Language;
    __declspec(property(get=GetName,put=PutName))
    _bstr_t Name;
    __declspec(property(get=GetStartField,put=PutStartField))
    _bstr_t StartField;
    __declspec(property(get=GetCalendarViewMode,put=PutCalendarViewMode))
    enum OlCalendarViewMode CalendarViewMode;
    __declspec(property(get=GetSaveOption))
    enum OlViewSaveOption SaveOption;
    __declspec(property(get=GetEndField,put=PutEndField))
    _bstr_t EndField;
    __declspec(property(get=GetViewType))
    enum OlViewType ViewType;
    __declspec(property(get=GetDayWeekFont))
    _ViewFontPtr DayWeekFont;
    __declspec(property(get=GetDayWeekTimeFont))
    _ViewFontPtr DayWeekTimeFont;
    __declspec(property(get=GetMonthFont))
    _ViewFontPtr MonthFont;
    __declspec(property(get=GetFilter,put=PutFilter))
    _bstr_t Filter;
    __declspec(property(get=GetDaysInMultiDayMode,put=PutDaysInMultiDayMode))
    long DaysInMultiDayMode;
    __declspec(property(get=GetDisplayedDates))
    _variant_t DisplayedDates;
    __declspec(property(get=GetApplication))
    _ApplicationPtr Application;
    __declspec(property(get=GetParent))
    IDispatchPtr Parent;
    __declspec(property(get=GetBoldSubjects,put=PutBoldSubjects))
    VARIANT_BOOL BoldSubjects;
    __declspec(property(get=GetClass))
    enum OlObjectClass Class;
    __declspec(property(get=GetSession))
    _NameSpacePtr Session;
    __declspec(property(get=GetDayWeekTimeScale,put=PutDayWeekTimeScale))
    enum OlDayWeekTimeScale DayWeekTimeScale;
    __declspec(property(get=GetAutoFormatRules))
    _AutoFormatRulesPtr AutoFormatRules;
    __declspec(property(get=GetXML,put=PutXML))
    _bstr_t XML;
    __declspec(property(get=GetMonthShowEndTime,put=PutMonthShowEndTime))
    VARIANT_BOOL MonthShowEndTime;
    __declspec(property(get=GetStandard))
    VARIANT_BOOL Standard;
    __declspec(property(get=GetBoldDatesWithItems,put=PutBoldDatesWithItems))
    VARIANT_BOOL BoldDatesWithItems;

    //
    // Wrapper methods for error-handling
    //

    _ApplicationPtr GetApplication ( );
    enum OlObjectClass GetClass ( );
    _NameSpacePtr GetSession ( );
    IDispatchPtr GetParent ( );
    HRESULT Apply ( );
    ViewPtr Copy (
        _bstr_t Name,
        enum OlViewSaveOption SaveOption );
    HRESULT Delete ( );
    HRESULT Reset ( );
    HRESULT Save ( );
    _bstr_t GetLanguage ( );
    void PutLanguage (
        _bstr_t Language );
    VARIANT_BOOL GetLockUserChanges ( );
    void PutLockUserChanges (
        VARIANT_BOOL LockUserChanges );
    _bstr_t GetName ( );
    void PutName (
        _bstr_t Name );
    enum OlViewSaveOption GetSaveOption ( );
    VARIANT_BOOL GetStandard ( );
    enum OlViewType GetViewType ( );
    _bstr_t GetXML ( );
    void PutXML (
        _bstr_t XML );
    HRESULT GoToDate (
        DATE Date );
    _bstr_t GetFilter ( );
    void PutFilter (
        _bstr_t Filter );
    _bstr_t GetStartField ( );
    void PutStartField (
        _bstr_t StartField );
    _bstr_t GetEndField ( );
    void PutEndField (
        _bstr_t EndField );
    enum OlCalendarViewMode GetCalendarViewMode ( );
    void PutCalendarViewMode (
        enum OlCalendarViewMode CalendarViewMode );
    enum OlDayWeekTimeScale GetDayWeekTimeScale ( );
    void PutDayWeekTimeScale (
        enum OlDayWeekTimeScale DayWeekTimeScale );
    VARIANT_BOOL GetMonthShowEndTime ( );
    void PutMonthShowEndTime (
        VARIANT_BOOL MonthShowEndTime );
    VARIANT_BOOL GetBoldDatesWithItems ( );
    void PutBoldDatesWithItems (
        VARIANT_BOOL BoldDatesWithItems );
    _ViewFontPtr GetDayWeekTimeFont ( );
    _ViewFontPtr GetDayWeekFont ( );
    _ViewFontPtr GetMonthFont ( );
    _AutoFormatRulesPtr GetAutoFormatRules ( );
    long GetDaysInMultiDayMode ( );
    void PutDaysInMultiDayMode (
        long DaysInMultiDayMode );
    _variant_t GetDisplayedDates ( );
    VARIANT_BOOL GetBoldSubjects ( );
    void PutBoldSubjects (
        VARIANT_BOOL BoldSubjects );

    //
    // Raw methods provided by interface
    //

      virtual HRESULT __stdcall get_Application (
        /*[out,retval]*/ struct _Application * * Application ) = 0;
      virtual HRESULT __stdcall get_Class (
        /*[out,retval]*/ enum OlObjectClass * Class ) = 0;
      virtual HRESULT __stdcall get_Session (
        /*[out,retval]*/ struct _NameSpace * * Session ) = 0;
      virtual HRESULT __stdcall get_Parent (
        /*[out,retval]*/ IDispatch * * Parent ) = 0;
      virtual HRESULT __stdcall raw_Apply ( ) = 0;
      virtual HRESULT __stdcall raw_Copy (
        /*[in]*/ BSTR Name,
        /*[in]*/ enum OlViewSaveOption SaveOption,
        /*[out,retval]*/ struct View * * ppview ) = 0;
      virtual HRESULT __stdcall raw_Delete ( ) = 0;
      virtual HRESULT __stdcall raw_Reset ( ) = 0;
      virtual HRESULT __stdcall raw_Save ( ) = 0;
      virtual HRESULT __stdcall get_Language (
        /*[out,retval]*/ BSTR * Language ) = 0;
      virtual HRESULT __stdcall put_Language (
        /*[in]*/ BSTR Language ) = 0;
      virtual HRESULT __stdcall get_LockUserChanges (
        /*[out,retval]*/ VARIANT_BOOL * LockUserChanges ) = 0;
      virtual HRESULT __stdcall put_LockUserChanges (
        /*[in]*/ VARIANT_BOOL LockUserChanges ) = 0;
      virtual HRESULT __stdcall get_Name (
        /*[out,retval]*/ BSTR * Name ) = 0;
      virtual HRESULT __stdcall put_Name (
        /*[in]*/ BSTR Name ) = 0;
      virtual HRESULT __stdcall get_SaveOption (
        /*[out,retval]*/ enum OlViewSaveOption * SaveOption ) = 0;
      virtual HRESULT __stdcall get_Standard (
        /*[out,retval]*/ VARIANT_BOOL * Standard ) = 0;
      virtual HRESULT __stdcall get_ViewType (
        /*[out,retval]*/ enum OlViewType * ViewType ) = 0;
      virtual HRESULT __stdcall get_XML (
        /*[out,retval]*/ BSTR * XML ) = 0;
      virtual HRESULT __stdcall put_XML (
        /*[in]*/ BSTR XML ) = 0;
      virtual HRESULT __stdcall raw_GoToDate (
        /*[in]*/ DATE Date ) = 0;
      virtual HRESULT __stdcall get_Filter (
        /*[out,retval]*/ BSTR * Filter ) = 0;
      virtual HRESULT __stdcall put_Filter (
        /*[in]*/ BSTR Filter ) = 0;
      virtual HRESULT __stdcall get_StartField (
        /*[out,retval]*/ BSTR * StartField ) = 0;
      virtual HRESULT __stdcall put_StartField (
        /*[in]*/ BSTR StartField ) = 0;
      virtual HRESULT __stdcall get_EndField (
        /*[out,retval]*/ BSTR * EndField ) = 0;
      virtual HRESULT __stdcall put_EndField (
        /*[in]*/ BSTR EndField ) = 0;
      virtual HRESULT __stdcall get_CalendarViewMode (
        /*[out,retval]*/ enum OlCalendarViewMode * CalendarViewMode ) = 0;
      virtual HRESULT __stdcall put_CalendarViewMode (
        /*[in]*/ enum OlCalendarViewMode CalendarViewMode ) = 0;
      virtual HRESULT __stdcall get_DayWeekTimeScale (
        /*[out,retval]*/ enum OlDayWeekTimeScale * DayWeekTimeScale ) = 0;
      virtual HRESULT __stdcall put_DayWeekTimeScale (
        /*[in]*/ enum OlDayWeekTimeScale DayWeekTimeScale ) = 0;
      virtual HRESULT __stdcall get_MonthShowEndTime (
        /*[out,retval]*/ VARIANT_BOOL * MonthShowEndTime ) = 0;
      virtual HRESULT __stdcall put_MonthShowEndTime (
        /*[in]*/ VARIANT_BOOL MonthShowEndTime ) = 0;
      virtual HRESULT __stdcall get_BoldDatesWithItems (
        /*[out,retval]*/ VARIANT_BOOL * BoldDatesWithItems ) = 0;
      virtual HRESULT __stdcall put_BoldDatesWithItems (
        /*[in]*/ VARIANT_BOOL BoldDatesWithItems ) = 0;
      virtual HRESULT __stdcall get_DayWeekTimeFont (
        /*[out,retval]*/ struct _ViewFont * * DayWeekTimeFont ) = 0;
      virtual HRESULT __stdcall get_DayWeekFont (
        /*[out,retval]*/ struct _ViewFont * * DayWeekFont ) = 0;
      virtual HRESULT __stdcall get_MonthFont (
        /*[out,retval]*/ struct _ViewFont * * MonthFont ) = 0;
      virtual HRESULT __stdcall get_AutoFormatRules (
        /*[out,retval]*/ struct _AutoFormatRules * * AutoFormatRules ) = 0;
      virtual HRESULT __stdcall get_DaysInMultiDayMode (
        /*[out,retval]*/ long * DaysInMultiDayMode ) = 0;
      virtual HRESULT __stdcall put_DaysInMultiDayMode (
        /*[in]*/ long DaysInMultiDayMode ) = 0;
      virtual HRESULT __stdcall get_DisplayedDates (
        /*[out,retval]*/ VARIANT * DisplayedDates ) = 0;
      virtual HRESULT __stdcall get_BoldSubjects (
        /*[out,retval]*/ VARIANT_BOOL * BoldSubjects ) = 0;
      virtual HRESULT __stdcall put_BoldSubjects (
        /*[in]*/ VARIANT_BOOL BoldSubjects ) = 0;
};

struct __declspec(uuid("0006309c-0000-0000-c000-000000000046"))
_TimelineView : IDispatch
{
    //
    // Property data
    //

    __declspec(property(get=GetLockUserChanges,put=PutLockUserChanges))
    VARIANT_BOOL LockUserChanges;
    __declspec(property(get=GetLanguage,put=PutLanguage))
    _bstr_t Language;
    __declspec(property(get=GetName,put=PutName))
    _bstr_t Name;
    __declspec(property(get=GetStartField,put=PutStartField))
    _bstr_t StartField;
    __declspec(property(get=GetShowWeekNumbers,put=PutShowWeekNumbers))
    VARIANT_BOOL ShowWeekNumbers;
    __declspec(property(get=GetShowLabelWhenViewingByMonth,put=PutShowLabelWhenViewingByMonth))
    VARIANT_BOOL ShowLabelWhenViewingByMonth;
    __declspec(property(get=GetEndField,put=PutEndField))
    _bstr_t EndField;
    __declspec(property(get=GetViewType))
    enum OlViewType ViewType;
    __declspec(property(get=GetDefaultExpandCollapseSetting,put=PutDefaultExpandCollapseSetting))
    enum OlDefaultExpandCollapseSetting DefaultExpandCollapseSetting;
    __declspec(property(get=GetFilter,put=PutFilter))
    _bstr_t Filter;
    __declspec(property(get=GetApplication))
    _ApplicationPtr Application;
    __declspec(property(get=GetParent))
    IDispatchPtr Parent;
    __declspec(property(get=GetGroupByFields))
    _OrderFieldsPtr GroupByFields;
    __declspec(property(get=GetUpperScaleFont))
    _ViewFontPtr UpperScaleFont;
    __declspec(property(get=GetTimelineViewMode,put=PutTimelineViewMode))
    enum OlTimelineViewMode TimelineViewMode;
    __declspec(property(get=GetMaxLabelWidth,put=PutMaxLabelWidth))
    long MaxLabelWidth;
    __declspec(property(get=GetLowerScaleFont))
    _ViewFontPtr LowerScaleFont;
    __declspec(property(get=GetItemFont))
    _ViewFontPtr ItemFont;
    __declspec(property(get=GetClass))
    enum OlObjectClass Class;
    __declspec(property(get=GetSession))
    _NameSpacePtr Session;
    __declspec(property(get=GetXML,put=PutXML))
    _bstr_t XML;
    __declspec(property(get=GetStandard))
    VARIANT_BOOL Standard;
    __declspec(property(get=GetSaveOption))
    enum OlViewSaveOption SaveOption;

    //
    // Wrapper methods for error-handling
    //

    _ApplicationPtr GetApplication ( );
    enum OlObjectClass GetClass ( );
    _NameSpacePtr GetSession ( );
    IDispatchPtr GetParent ( );
    HRESULT Apply ( );
    ViewPtr Copy (
        _bstr_t Name,
        enum OlViewSaveOption SaveOption );
    HRESULT Delete ( );
    HRESULT Reset ( );
    HRESULT Save ( );
    _bstr_t GetLanguage ( );
    void PutLanguage (
        _bstr_t Language );
    VARIANT_BOOL GetLockUserChanges ( );
    void PutLockUserChanges (
        VARIANT_BOOL LockUserChanges );
    _bstr_t GetName ( );
    void PutName (
        _bstr_t Name );
    enum OlViewSaveOption GetSaveOption ( );
    VARIANT_BOOL GetStandard ( );
    enum OlViewType GetViewType ( );
    _bstr_t GetXML ( );
    void PutXML (
        _bstr_t XML );
    HRESULT GoToDate (
        DATE Date );
    _bstr_t GetFilter ( );
    void PutFilter (
        _bstr_t Filter );
    _bstr_t GetStartField ( );
    void PutStartField (
        _bstr_t StartField );
    _bstr_t GetEndField ( );
    void PutEndField (
        _bstr_t EndField );
    _OrderFieldsPtr GetGroupByFields ( );
    enum OlDefaultExpandCollapseSetting GetDefaultExpandCollapseSetting ( );
    void PutDefaultExpandCollapseSetting (
        enum OlDefaultExpandCollapseSetting DefaultExpandCollapseSetting );
    VARIANT_BOOL GetShowWeekNumbers ( );
    void PutShowWeekNumbers (
        VARIANT_BOOL ShowWeekNumbers );
    long GetMaxLabelWidth ( );
    void PutMaxLabelWidth (
        long MaxLabelWidth );
    VARIANT_BOOL GetShowLabelWhenViewingByMonth ( );
    void PutShowLabelWhenViewingByMonth (
        VARIANT_BOOL ShowLabelWhenViewingByMonth );
    _ViewFontPtr GetUpperScaleFont ( );
    _ViewFontPtr GetLowerScaleFont ( );
    _ViewFontPtr GetItemFont ( );
    enum OlTimelineViewMode GetTimelineViewMode ( );
    void PutTimelineViewMode (
        enum OlTimelineViewMode TimelineViewMode );

    //
    // Raw methods provided by interface
    //

      virtual HRESULT __stdcall get_Application (
        /*[out,retval]*/ struct _Application * * Application ) = 0;
      virtual HRESULT __stdcall get_Class (
        /*[out,retval]*/ enum OlObjectClass * Class ) = 0;
      virtual HRESULT __stdcall get_Session (
        /*[out,retval]*/ struct _NameSpace * * Session ) = 0;
      virtual HRESULT __stdcall get_Parent (
        /*[out,retval]*/ IDispatch * * Parent ) = 0;
      virtual HRESULT __stdcall raw_Apply ( ) = 0;
      virtual HRESULT __stdcall raw_Copy (
        /*[in]*/ BSTR Name,
        /*[in]*/ enum OlViewSaveOption SaveOption,
        /*[out,retval]*/ struct View * * ppview ) = 0;
      virtual HRESULT __stdcall raw_Delete ( ) = 0;
      virtual HRESULT __stdcall raw_Reset ( ) = 0;
      virtual HRESULT __stdcall raw_Save ( ) = 0;
      virtual HRESULT __stdcall get_Language (
        /*[out,retval]*/ BSTR * Language ) = 0;
      virtual HRESULT __stdcall put_Language (
        /*[in]*/ BSTR Language ) = 0;
      virtual HRESULT __stdcall get_LockUserChanges (
        /*[out,retval]*/ VARIANT_BOOL * LockUserChanges ) = 0;
      virtual HRESULT __stdcall put_LockUserChanges (
        /*[in]*/ VARIANT_BOOL LockUserChanges ) = 0;
      virtual HRESULT __stdcall get_Name (
        /*[out,retval]*/ BSTR * Name ) = 0;
      virtual HRESULT __stdcall put_Name (
        /*[in]*/ BSTR Name ) = 0;
      virtual HRESULT __stdcall get_SaveOption (
        /*[out,retval]*/ enum OlViewSaveOption * SaveOption ) = 0;
      virtual HRESULT __stdcall get_Standard (
        /*[out,retval]*/ VARIANT_BOOL * Standard ) = 0;
      virtual HRESULT __stdcall get_ViewType (
        /*[out,retval]*/ enum OlViewType * ViewType ) = 0;
      virtual HRESULT __stdcall get_XML (
        /*[out,retval]*/ BSTR * XML ) = 0;
      virtual HRESULT __stdcall put_XML (
        /*[in]*/ BSTR XML ) = 0;
      virtual HRESULT __stdcall raw_GoToDate (
        /*[in]*/ DATE Date ) = 0;
      virtual HRESULT __stdcall get_Filter (
        /*[out,retval]*/ BSTR * Filter ) = 0;
      virtual HRESULT __stdcall put_Filter (
        /*[in]*/ BSTR Filter ) = 0;
      virtual HRESULT __stdcall get_StartField (
        /*[out,retval]*/ BSTR * StartField ) = 0;
      virtual HRESULT __stdcall put_StartField (
        /*[in]*/ BSTR StartField ) = 0;
      virtual HRESULT __stdcall get_EndField (
        /*[out,retval]*/ BSTR * EndField ) = 0;
      virtual HRESULT __stdcall put_EndField (
        /*[in]*/ BSTR EndField ) = 0;
      virtual HRESULT __stdcall get_GroupByFields (
        /*[out,retval]*/ struct _OrderFields * * GroupByFields ) = 0;
      virtual HRESULT __stdcall get_DefaultExpandCollapseSetting (
        /*[out,retval]*/ enum OlDefaultExpandCollapseSetting * DefaultExpandCollapseSetting ) = 0;
      virtual HRESULT __stdcall put_DefaultExpandCollapseSetting (
        /*[in]*/ enum OlDefaultExpandCollapseSetting DefaultExpandCollapseSetting ) = 0;
      virtual HRESULT __stdcall get_ShowWeekNumbers (
        /*[out,retval]*/ VARIANT_BOOL * ShowWeekNumbers ) = 0;
      virtual HRESULT __stdcall put_ShowWeekNumbers (
        /*[in]*/ VARIANT_BOOL ShowWeekNumbers ) = 0;
      virtual HRESULT __stdcall get_MaxLabelWidth (
        /*[out,retval]*/ long * MaxLabelWidth ) = 0;
      virtual HRESULT __stdcall put_MaxLabelWidth (
        /*[in]*/ long MaxLabelWidth ) = 0;
      virtual HRESULT __stdcall get_ShowLabelWhenViewingByMonth (
        /*[out,retval]*/ VARIANT_BOOL * ShowLabelWhenViewingByMonth ) = 0;
      virtual HRESULT __stdcall put_ShowLabelWhenViewingByMonth (
        /*[in]*/ VARIANT_BOOL ShowLabelWhenViewingByMonth ) = 0;
      virtual HRESULT __stdcall get_UpperScaleFont (
        /*[out,retval]*/ struct _ViewFont * * UpperScaleFont ) = 0;
      virtual HRESULT __stdcall get_LowerScaleFont (
        /*[out,retval]*/ struct _ViewFont * * LowerScaleFont ) = 0;
      virtual HRESULT __stdcall get_ItemFont (
        /*[out,retval]*/ struct _ViewFont * * ItemFont ) = 0;
      virtual HRESULT __stdcall get_TimelineViewMode (
        /*[out,retval]*/ enum OlTimelineViewMode * TimelineViewMode ) = 0;
      virtual HRESULT __stdcall put_TimelineViewMode (
        /*[in]*/ enum OlTimelineViewMode TimelineViewMode ) = 0;
};

struct __declspec(uuid("000630f0-0000-0000-c000-000000000046"))
_NavigationGroup : IDispatch
{
    //
    // Property data
    //

    __declspec(property(get=GetApplication))
    _ApplicationPtr Application;
    __declspec(property(get=GetParent))
    IDispatchPtr Parent;
    __declspec(property(get=GetGroupType))
    enum OlGroupType GroupType;
    __declspec(property(get=GetNavigationFolders))
    _NavigationFoldersPtr NavigationFolders;
    __declspec(property(get=GetName,put=PutName))
    _bstr_t Name;
    __declspec(property(get=GetPosition,put=PutPosition))
    long Position;
    __declspec(property(get=GetClass))
    enum OlObjectClass Class;
    __declspec(property(get=GetSession))
    _NameSpacePtr Session;

    //
    // Wrapper methods for error-handling
    //

    _ApplicationPtr GetApplication ( );
    enum OlObjectClass GetClass ( );
    _NameSpacePtr GetSession ( );
    IDispatchPtr GetParent ( );
    enum OlGroupType GetGroupType ( );
    _NavigationFoldersPtr GetNavigationFolders ( );
    _bstr_t GetName ( );
    void PutName (
        _bstr_t Name );
    long GetPosition ( );
    void PutPosition (
        long Position );

    //
    // Raw methods provided by interface
    //

      virtual HRESULT __stdcall get_Application (
        /*[out,retval]*/ struct _Application * * Application ) = 0;
      virtual HRESULT __stdcall get_Class (
        /*[out,retval]*/ enum OlObjectClass * Class ) = 0;
      virtual HRESULT __stdcall get_Session (
        /*[out,retval]*/ struct _NameSpace * * Session ) = 0;
      virtual HRESULT __stdcall get_Parent (
        /*[out,retval]*/ IDispatch * * Parent ) = 0;
      virtual HRESULT __stdcall get_GroupType (
        /*[out,retval]*/ enum OlGroupType * GroupType ) = 0;
      virtual HRESULT __stdcall get_NavigationFolders (
        /*[out,retval]*/ struct _NavigationFolders * * NavigationFolders ) = 0;
      virtual HRESULT __stdcall get_Name (
        /*[out,retval]*/ BSTR * Name ) = 0;
      virtual HRESULT __stdcall put_Name (
        /*[in]*/ BSTR Name ) = 0;
      virtual HRESULT __stdcall get_Position (
        /*[out,retval]*/ long * Position ) = 0;
      virtual HRESULT __stdcall put_Position (
        /*[in]*/ long Position ) = 0;
};

struct __declspec(uuid("000630ef-0000-0000-c000-000000000046"))
_NavigationGroups : IDispatch
{
    //
    // Property data
    //

    __declspec(property(get=GetApplication))
    _ApplicationPtr Application;
    __declspec(property(get=GetParent))
    IDispatchPtr Parent;
    __declspec(property(get=GetClass))
    enum OlObjectClass Class;
    __declspec(property(get=GetSession))
    _NameSpacePtr Session;
    __declspec(property(get=GetCount))
    long Count;

    //
    // Wrapper methods for error-handling
    //

    _ApplicationPtr GetApplication ( );
    enum OlObjectClass GetClass ( );
    _NameSpacePtr GetSession ( );
    IDispatchPtr GetParent ( );
    long GetCount ( );
    _NavigationGroupPtr Item (
        const _variant_t & Index );
    _NavigationGroupPtr Create (
        _bstr_t GroupDisplayName );
    HRESULT Delete (
        struct _NavigationGroup * Group );
    _NavigationGroupPtr GetDefaultNavigationGroup (
        enum OlGroupType DefaultFolderGroup );

    //
    // Raw methods provided by interface
    //

      virtual HRESULT __stdcall get_Application (
        /*[out,retval]*/ struct _Application * * Application ) = 0;
      virtual HRESULT __stdcall get_Class (
        /*[out,retval]*/ enum OlObjectClass * Class ) = 0;
      virtual HRESULT __stdcall get_Session (
        /*[out,retval]*/ struct _NameSpace * * Session ) = 0;
      virtual HRESULT __stdcall get_Parent (
        /*[out,retval]*/ IDispatch * * Parent ) = 0;
      virtual HRESULT __stdcall get_Count (
        /*[out,retval]*/ long * Count ) = 0;
      virtual HRESULT __stdcall raw_Item (
        /*[in]*/ VARIANT Index,
        /*[out,retval]*/ struct _NavigationGroup * * Item ) = 0;
      virtual HRESULT __stdcall raw_Create (
        /*[in]*/ BSTR GroupDisplayName,
        /*[out,retval]*/ struct _NavigationGroup * * NavigationGroup ) = 0;
      virtual HRESULT __stdcall raw_Delete (
        /*[in]*/ struct _NavigationGroup * Group ) = 0;
      virtual HRESULT __stdcall raw_GetDefaultNavigationGroup (
        /*[in]*/ enum OlGroupType DefaultFolderGroup,
        /*[out,retval]*/ struct _NavigationGroup * * NavigationGroup ) = 0;
};

struct __declspec(uuid("000630e9-0000-0000-c000-000000000046"))
_MailModule : IDispatch
{
    //
    // Property data
    //

    __declspec(property(get=GetApplication))
    _ApplicationPtr Application;
    __declspec(property(get=GetParent))
    IDispatchPtr Parent;
    __declspec(property(get=GetName))
    _bstr_t Name;
    __declspec(property(get=GetClass))
    enum OlObjectClass Class;
    __declspec(property(get=GetSession))
    _NameSpacePtr Session;
    __declspec(property(get=GetNavigationModuleType))
    enum OlNavigationModuleType NavigationModuleType;
    __declspec(property(get=GetPosition,put=PutPosition))
    long Position;
    __declspec(property(get=GetVisible,put=PutVisible))
    VARIANT_BOOL Visible;
    __declspec(property(get=GetNavigationGroups))
    _NavigationGroupsPtr NavigationGroups;

    //
    // Wrapper methods for error-handling
    //

    _ApplicationPtr GetApplication ( );
    enum OlObjectClass GetClass ( );
    _NameSpacePtr GetSession ( );
    IDispatchPtr GetParent ( );
    enum OlNavigationModuleType GetNavigationModuleType ( );
    _bstr_t GetName ( );
    long GetPosition ( );
    void PutPosition (
        long Position );
    VARIANT_BOOL GetVisible ( );
    void PutVisible (
        VARIANT_BOOL Visible );
    _NavigationGroupsPtr GetNavigationGroups ( );

    //
    // Raw methods provided by interface
    //

      virtual HRESULT __stdcall get_Application (
        /*[out,retval]*/ struct _Application * * Application ) = 0;
      virtual HRESULT __stdcall get_Class (
        /*[out,retval]*/ enum OlObjectClass * Class ) = 0;
      virtual HRESULT __stdcall get_Session (
        /*[out,retval]*/ struct _NameSpace * * Session ) = 0;
      virtual HRESULT __stdcall get_Parent (
        /*[out,retval]*/ IDispatch * * Parent ) = 0;
      virtual HRESULT __stdcall get_NavigationModuleType (
        /*[out,retval]*/ enum OlNavigationModuleType * NavigationModuleType ) = 0;
      virtual HRESULT __stdcall get_Name (
        /*[out,retval]*/ BSTR * Name ) = 0;
      virtual HRESULT __stdcall get_Position (
        /*[out,retval]*/ long * Position ) = 0;
      virtual HRESULT __stdcall put_Position (
        /*[in]*/ long Position ) = 0;
      virtual HRESULT __stdcall get_Visible (
        /*[out,retval]*/ VARIANT_BOOL * Visible ) = 0;
      virtual HRESULT __stdcall put_Visible (
        /*[in]*/ VARIANT_BOOL Visible ) = 0;
      virtual HRESULT __stdcall get_NavigationGroups (
        /*[out,retval]*/ struct _NavigationGroups * * NavigationGroups ) = 0;
};

struct __declspec(uuid("000630ea-0000-0000-c000-000000000046"))
_CalendarModule : IDispatch
{
    //
    // Property data
    //

    __declspec(property(get=GetApplication))
    _ApplicationPtr Application;
    __declspec(property(get=GetParent))
    IDispatchPtr Parent;
    __declspec(property(get=GetName))
    _bstr_t Name;
    __declspec(property(get=GetClass))
    enum OlObjectClass Class;
    __declspec(property(get=GetSession))
    _NameSpacePtr Session;
    __declspec(property(get=GetNavigationModuleType))
    enum OlNavigationModuleType NavigationModuleType;
    __declspec(property(get=GetPosition,put=PutPosition))
    long Position;
    __declspec(property(get=GetVisible,put=PutVisible))
    VARIANT_BOOL Visible;
    __declspec(property(get=GetNavigationGroups))
    _NavigationGroupsPtr NavigationGroups;

    //
    // Wrapper methods for error-handling
    //

    _ApplicationPtr GetApplication ( );
    enum OlObjectClass GetClass ( );
    _NameSpacePtr GetSession ( );
    IDispatchPtr GetParent ( );
    enum OlNavigationModuleType GetNavigationModuleType ( );
    _bstr_t GetName ( );
    long GetPosition ( );
    void PutPosition (
        long Position );
    VARIANT_BOOL GetVisible ( );
    void PutVisible (
        VARIANT_BOOL Visible );
    _NavigationGroupsPtr GetNavigationGroups ( );

    //
    // Raw methods provided by interface
    //

      virtual HRESULT __stdcall get_Application (
        /*[out,retval]*/ struct _Application * * Application ) = 0;
      virtual HRESULT __stdcall get_Class (
        /*[out,retval]*/ enum OlObjectClass * Class ) = 0;
      virtual HRESULT __stdcall get_Session (
        /*[out,retval]*/ struct _NameSpace * * Session ) = 0;
      virtual HRESULT __stdcall get_Parent (
        /*[out,retval]*/ IDispatch * * Parent ) = 0;
      virtual HRESULT __stdcall get_NavigationModuleType (
        /*[out,retval]*/ enum OlNavigationModuleType * NavigationModuleType ) = 0;
      virtual HRESULT __stdcall get_Name (
        /*[out,retval]*/ BSTR * Name ) = 0;
      virtual HRESULT __stdcall get_Position (
        /*[out,retval]*/ long * Position ) = 0;
      virtual HRESULT __stdcall put_Position (
        /*[in]*/ long Position ) = 0;
      virtual HRESULT __stdcall get_Visible (
        /*[out,retval]*/ VARIANT_BOOL * Visible ) = 0;
      virtual HRESULT __stdcall put_Visible (
        /*[in]*/ VARIANT_BOOL Visible ) = 0;
      virtual HRESULT __stdcall get_NavigationGroups (
        /*[out,retval]*/ struct _NavigationGroups * * NavigationGroups ) = 0;
};

struct __declspec(uuid("000630eb-0000-0000-c000-000000000046"))
_ContactsModule : IDispatch
{
    //
    // Property data
    //

    __declspec(property(get=GetApplication))
    _ApplicationPtr Application;
    __declspec(property(get=GetParent))
    IDispatchPtr Parent;
    __declspec(property(get=GetName))
    _bstr_t Name;
    __declspec(property(get=GetClass))
    enum OlObjectClass Class;
    __declspec(property(get=GetSession))
    _NameSpacePtr Session;
    __declspec(property(get=GetNavigationModuleType))
    enum OlNavigationModuleType NavigationModuleType;
    __declspec(property(get=GetPosition,put=PutPosition))
    long Position;
    __declspec(property(get=GetVisible,put=PutVisible))
    VARIANT_BOOL Visible;
    __declspec(property(get=GetNavigationGroups))
    _NavigationGroupsPtr NavigationGroups;

    //
    // Wrapper methods for error-handling
    //

    _ApplicationPtr GetApplication ( );
    enum OlObjectClass GetClass ( );
    _NameSpacePtr GetSession ( );
    IDispatchPtr GetParent ( );
    enum OlNavigationModuleType GetNavigationModuleType ( );
    _bstr_t GetName ( );
    long GetPosition ( );
    void PutPosition (
        long Position );
    VARIANT_BOOL GetVisible ( );
    void PutVisible (
        VARIANT_BOOL Visible );
    _NavigationGroupsPtr GetNavigationGroups ( );

    //
    // Raw methods provided by interface
    //

      virtual HRESULT __stdcall get_Application (
        /*[out,retval]*/ struct _Application * * Application ) = 0;
      virtual HRESULT __stdcall get_Class (
        /*[out,retval]*/ enum OlObjectClass * Class ) = 0;
      virtual HRESULT __stdcall get_Session (
        /*[out,retval]*/ struct _NameSpace * * Session ) = 0;
      virtual HRESULT __stdcall get_Parent (
        /*[out,retval]*/ IDispatch * * Parent ) = 0;
      virtual HRESULT __stdcall get_NavigationModuleType (
        /*[out,retval]*/ enum OlNavigationModuleType * NavigationModuleType ) = 0;
      virtual HRESULT __stdcall get_Name (
        /*[out,retval]*/ BSTR * Name ) = 0;
      virtual HRESULT __stdcall get_Position (
        /*[out,retval]*/ long * Position ) = 0;
      virtual HRESULT __stdcall put_Position (
        /*[in]*/ long Position ) = 0;
      virtual HRESULT __stdcall get_Visible (
        /*[out,retval]*/ VARIANT_BOOL * Visible ) = 0;
      virtual HRESULT __stdcall put_Visible (
        /*[in]*/ VARIANT_BOOL Visible ) = 0;
      virtual HRESULT __stdcall get_NavigationGroups (
        /*[out,retval]*/ struct _NavigationGroups * * NavigationGroups ) = 0;
};

struct __declspec(uuid("000630ec-0000-0000-c000-000000000046"))
_TasksModule : IDispatch
{
    //
    // Property data
    //

    __declspec(property(get=GetApplication))
    _ApplicationPtr Application;
    __declspec(property(get=GetParent))
    IDispatchPtr Parent;
    __declspec(property(get=GetName))
    _bstr_t Name;
    __declspec(property(get=GetClass))
    enum OlObjectClass Class;
    __declspec(property(get=GetSession))
    _NameSpacePtr Session;
    __declspec(property(get=GetNavigationModuleType))
    enum OlNavigationModuleType NavigationModuleType;
    __declspec(property(get=GetPosition,put=PutPosition))
    long Position;
    __declspec(property(get=GetVisible,put=PutVisible))
    VARIANT_BOOL Visible;
    __declspec(property(get=GetNavigationGroups))
    _NavigationGroupsPtr NavigationGroups;

    //
    // Wrapper methods for error-handling
    //

    _ApplicationPtr GetApplication ( );
    enum OlObjectClass GetClass ( );
    _NameSpacePtr GetSession ( );
    IDispatchPtr GetParent ( );
    enum OlNavigationModuleType GetNavigationModuleType ( );
    _bstr_t GetName ( );
    long GetPosition ( );
    void PutPosition (
        long Position );
    VARIANT_BOOL GetVisible ( );
    void PutVisible (
        VARIANT_BOOL Visible );
    _NavigationGroupsPtr GetNavigationGroups ( );

    //
    // Raw methods provided by interface
    //

      virtual HRESULT __stdcall get_Application (
        /*[out,retval]*/ struct _Application * * Application ) = 0;
      virtual HRESULT __stdcall get_Class (
        /*[out,retval]*/ enum OlObjectClass * Class ) = 0;
      virtual HRESULT __stdcall get_Session (
        /*[out,retval]*/ struct _NameSpace * * Session ) = 0;
      virtual HRESULT __stdcall get_Parent (
        /*[out,retval]*/ IDispatch * * Parent ) = 0;
      virtual HRESULT __stdcall get_NavigationModuleType (
        /*[out,retval]*/ enum OlNavigationModuleType * NavigationModuleType ) = 0;
      virtual HRESULT __stdcall get_Name (
        /*[out,retval]*/ BSTR * Name ) = 0;
      virtual HRESULT __stdcall get_Position (
        /*[out,retval]*/ long * Position ) = 0;
      virtual HRESULT __stdcall put_Position (
        /*[in]*/ long Position ) = 0;
      virtual HRESULT __stdcall get_Visible (
        /*[out,retval]*/ VARIANT_BOOL * Visible ) = 0;
      virtual HRESULT __stdcall put_Visible (
        /*[in]*/ VARIANT_BOOL Visible ) = 0;
      virtual HRESULT __stdcall get_NavigationGroups (
        /*[out,retval]*/ struct _NavigationGroups * * NavigationGroups ) = 0;
};

struct __declspec(uuid("000630ed-0000-0000-c000-000000000046"))
_JournalModule : IDispatch
{
    //
    // Property data
    //

    __declspec(property(get=GetApplication))
    _ApplicationPtr Application;
    __declspec(property(get=GetParent))
    IDispatchPtr Parent;
    __declspec(property(get=GetName))
    _bstr_t Name;
    __declspec(property(get=GetClass))
    enum OlObjectClass Class;
    __declspec(property(get=GetSession))
    _NameSpacePtr Session;
    __declspec(property(get=GetNavigationModuleType))
    enum OlNavigationModuleType NavigationModuleType;
    __declspec(property(get=GetPosition,put=PutPosition))
    long Position;
    __declspec(property(get=GetVisible,put=PutVisible))
    VARIANT_BOOL Visible;
    __declspec(property(get=GetNavigationGroups))
    _NavigationGroupsPtr NavigationGroups;

    //
    // Wrapper methods for error-handling
    //

    _ApplicationPtr GetApplication ( );
    enum OlObjectClass GetClass ( );
    _NameSpacePtr GetSession ( );
    IDispatchPtr GetParent ( );
    enum OlNavigationModuleType GetNavigationModuleType ( );
    _bstr_t GetName ( );
    long GetPosition ( );
    void PutPosition (
        long Position );
    VARIANT_BOOL GetVisible ( );
    void PutVisible (
        VARIANT_BOOL Visible );
    _NavigationGroupsPtr GetNavigationGroups ( );

    //
    // Raw methods provided by interface
    //

      virtual HRESULT __stdcall get_Application (
        /*[out,retval]*/ struct _Application * * Application ) = 0;
      virtual HRESULT __stdcall get_Class (
        /*[out,retval]*/ enum OlObjectClass * Class ) = 0;
      virtual HRESULT __stdcall get_Session (
        /*[out,retval]*/ struct _NameSpace * * Session ) = 0;
      virtual HRESULT __stdcall get_Parent (
        /*[out,retval]*/ IDispatch * * Parent ) = 0;
      virtual HRESULT __stdcall get_NavigationModuleType (
        /*[out,retval]*/ enum OlNavigationModuleType * NavigationModuleType ) = 0;
      virtual HRESULT __stdcall get_Name (
        /*[out,retval]*/ BSTR * Name ) = 0;
      virtual HRESULT __stdcall get_Position (
        /*[out,retval]*/ long * Position ) = 0;
      virtual HRESULT __stdcall put_Position (
        /*[in]*/ long Position ) = 0;
      virtual HRESULT __stdcall get_Visible (
        /*[out,retval]*/ VARIANT_BOOL * Visible ) = 0;
      virtual HRESULT __stdcall put_Visible (
        /*[in]*/ VARIANT_BOOL Visible ) = 0;
      virtual HRESULT __stdcall get_NavigationGroups (
        /*[out,retval]*/ struct _NavigationGroups * * NavigationGroups ) = 0;
};

struct __declspec(uuid("000630ee-0000-0000-c000-000000000046"))
_NotesModule : IDispatch
{
    //
    // Property data
    //

    __declspec(property(get=GetApplication))
    _ApplicationPtr Application;
    __declspec(property(get=GetParent))
    IDispatchPtr Parent;
    __declspec(property(get=GetName))
    _bstr_t Name;
    __declspec(property(get=GetClass))
    enum OlObjectClass Class;
    __declspec(property(get=GetSession))
    _NameSpacePtr Session;
    __declspec(property(get=GetNavigationModuleType))
    enum OlNavigationModuleType NavigationModuleType;
    __declspec(property(get=GetPosition,put=PutPosition))
    long Position;
    __declspec(property(get=GetVisible,put=PutVisible))
    VARIANT_BOOL Visible;
    __declspec(property(get=GetNavigationGroups))
    _NavigationGroupsPtr NavigationGroups;

    //
    // Wrapper methods for error-handling
    //

    _ApplicationPtr GetApplication ( );
    enum OlObjectClass GetClass ( );
    _NameSpacePtr GetSession ( );
    IDispatchPtr GetParent ( );
    enum OlNavigationModuleType GetNavigationModuleType ( );
    _bstr_t GetName ( );
    long GetPosition ( );
    void PutPosition (
        long Position );
    VARIANT_BOOL GetVisible ( );
    void PutVisible (
        VARIANT_BOOL Visible );
    _NavigationGroupsPtr GetNavigationGroups ( );

    //
    // Raw methods provided by interface
    //

      virtual HRESULT __stdcall get_Application (
        /*[out,retval]*/ struct _Application * * Application ) = 0;
      virtual HRESULT __stdcall get_Class (
        /*[out,retval]*/ enum OlObjectClass * Class ) = 0;
      virtual HRESULT __stdcall get_Session (
        /*[out,retval]*/ struct _NameSpace * * Session ) = 0;
      virtual HRESULT __stdcall get_Parent (
        /*[out,retval]*/ IDispatch * * Parent ) = 0;
      virtual HRESULT __stdcall get_NavigationModuleType (
        /*[out,retval]*/ enum OlNavigationModuleType * NavigationModuleType ) = 0;
      virtual HRESULT __stdcall get_Name (
        /*[out,retval]*/ BSTR * Name ) = 0;
      virtual HRESULT __stdcall get_Position (
        /*[out,retval]*/ long * Position ) = 0;
      virtual HRESULT __stdcall put_Position (
        /*[in]*/ long Position ) = 0;
      virtual HRESULT __stdcall get_Visible (
        /*[out,retval]*/ VARIANT_BOOL * Visible ) = 0;
      virtual HRESULT __stdcall put_Visible (
        /*[in]*/ VARIANT_BOOL Visible ) = 0;
      virtual HRESULT __stdcall get_NavigationGroups (
        /*[out,retval]*/ struct _NavigationGroups * * NavigationGroups ) = 0;
};

struct __declspec(uuid("000630a2-0000-0000-c000-000000000046"))
_BusinessCardView : IDispatch
{
    //
    // Property data
    //

    __declspec(property(get=GetApplication))
    _ApplicationPtr Application;
    __declspec(property(get=GetParent))
    IDispatchPtr Parent;
    __declspec(property(get=GetLanguage,put=PutLanguage))
    _bstr_t Language;
    __declspec(property(get=GetLockUserChanges,put=PutLockUserChanges))
    VARIANT_BOOL LockUserChanges;
    __declspec(property(get=GetName,put=PutName))
    _bstr_t Name;
    __declspec(property(get=GetClass))
    enum OlObjectClass Class;
    __declspec(property(get=GetSession))
    _NameSpacePtr Session;
    __declspec(property(get=GetViewType))
    enum OlViewType ViewType;
    __declspec(property(get=GetFilter,put=PutFilter))
    _bstr_t Filter;
    __declspec(property(get=GetHeadingsFont))
    _ViewFontPtr HeadingsFont;
    __declspec(property(get=GetSortFields))
    _OrderFieldsPtr SortFields;
    __declspec(property(get=GetXML,put=PutXML))
    _bstr_t XML;
    __declspec(property(get=GetCardSize,put=PutCardSize))
    long CardSize;
    __declspec(property(get=GetStandard))
    VARIANT_BOOL Standard;
    __declspec(property(get=GetSaveOption))
    enum OlViewSaveOption SaveOption;

    //
    // Wrapper methods for error-handling
    //

    _ApplicationPtr GetApplication ( );
    enum OlObjectClass GetClass ( );
    _NameSpacePtr GetSession ( );
    IDispatchPtr GetParent ( );
    HRESULT Apply ( );
    ViewPtr Copy (
        _bstr_t Name,
        enum OlViewSaveOption SaveOption );
    HRESULT Delete ( );
    HRESULT Reset ( );
    HRESULT Save ( );
    _bstr_t GetLanguage ( );
    void PutLanguage (
        _bstr_t Language );
    VARIANT_BOOL GetLockUserChanges ( );
    void PutLockUserChanges (
        VARIANT_BOOL LockUserChanges );
    _bstr_t GetName ( );
    void PutName (
        _bstr_t Name );
    enum OlViewSaveOption GetSaveOption ( );
    VARIANT_BOOL GetStandard ( );
    enum OlViewType GetViewType ( );
    _bstr_t GetXML ( );
    void PutXML (
        _bstr_t XML );
    HRESULT GoToDate (
        DATE Date );
    _bstr_t GetFilter ( );
    void PutFilter (
        _bstr_t Filter );
    _ViewFontPtr GetHeadingsFont ( );
    _OrderFieldsPtr GetSortFields ( );
    long GetCardSize ( );
    void PutCardSize (
        long CardSize );

    //
    // Raw methods provided by interface
    //

      virtual HRESULT __stdcall get_Application (
        /*[out,retval]*/ struct _Application * * Application ) = 0;
      virtual HRESULT __stdcall get_Class (
        /*[out,retval]*/ enum OlObjectClass * Class ) = 0;
      virtual HRESULT __stdcall get_Session (
        /*[out,retval]*/ struct _NameSpace * * Session ) = 0;
      virtual HRESULT __stdcall get_Parent (
        /*[out,retval]*/ IDispatch * * Parent ) = 0;
      virtual HRESULT __stdcall raw_Apply ( ) = 0;
      virtual HRESULT __stdcall raw_Copy (
        /*[in]*/ BSTR Name,
        /*[in]*/ enum OlViewSaveOption SaveOption,
        /*[out,retval]*/ struct View * * ppview ) = 0;
      virtual HRESULT __stdcall raw_Delete ( ) = 0;
      virtual HRESULT __stdcall raw_Reset ( ) = 0;
      virtual HRESULT __stdcall raw_Save ( ) = 0;
      virtual HRESULT __stdcall get_Language (
        /*[out,retval]*/ BSTR * Language ) = 0;
      virtual HRESULT __stdcall put_Language (
        /*[in]*/ BSTR Language ) = 0;
      virtual HRESULT __stdcall get_LockUserChanges (
        /*[out,retval]*/ VARIANT_BOOL * LockUserChanges ) = 0;
      virtual HRESULT __stdcall put_LockUserChanges (
        /*[in]*/ VARIANT_BOOL LockUserChanges ) = 0;
      virtual HRESULT __stdcall get_Name (
        /*[out,retval]*/ BSTR * Name ) = 0;
      virtual HRESULT __stdcall put_Name (
        /*[in]*/ BSTR Name ) = 0;
      virtual HRESULT __stdcall get_SaveOption (
        /*[out,retval]*/ enum OlViewSaveOption * SaveOption ) = 0;
      virtual HRESULT __stdcall get_Standard (
        /*[out,retval]*/ VARIANT_BOOL * Standard ) = 0;
      virtual HRESULT __stdcall get_ViewType (
        /*[out,retval]*/ enum OlViewType * ViewType ) = 0;
      virtual HRESULT __stdcall get_XML (
        /*[out,retval]*/ BSTR * XML ) = 0;
      virtual HRESULT __stdcall put_XML (
        /*[in]*/ BSTR XML ) = 0;
      virtual HRESULT __stdcall raw_GoToDate (
        /*[in]*/ DATE Date ) = 0;
      virtual HRESULT __stdcall get_Filter (
        /*[out,retval]*/ BSTR * Filter ) = 0;
      virtual HRESULT __stdcall put_Filter (
        /*[in]*/ BSTR Filter ) = 0;
      virtual HRESULT __stdcall get_HeadingsFont (
        /*[out,retval]*/ struct _ViewFont * * HeadingsFont ) = 0;
      virtual HRESULT __stdcall get_SortFields (
        /*[out,retval]*/ struct _OrderFields * * SortFields ) = 0;
      virtual HRESULT __stdcall get_CardSize (
        /*[out,retval]*/ long * CardSize ) = 0;
      virtual HRESULT __stdcall put_CardSize (
        /*[in]*/ long CardSize ) = 0;
};

struct __declspec(uuid("00063045-0000-0000-c000-000000000046"))
Recipient : IDispatch
{
    //
    // Property data
    //

    __declspec(property(get=GetApplication))
    _ApplicationPtr Application;
    __declspec(property(get=GetDisplayType))
    enum OlDisplayType DisplayType;
    __declspec(property(get=GetName))
    _bstr_t Name;
    __declspec(property(get=GetAddress))
    _bstr_t Address;
    __declspec(property(get=GetResolved))
    VARIANT_BOOL Resolved;
    __declspec(property(get=GetMeetingResponseStatus))
    enum OlResponseStatus MeetingResponseStatus;
    __declspec(property(get=GetClass))
    enum OlObjectClass Class;
    __declspec(property(get=GetSession))
    _NameSpacePtr Session;
    __declspec(property(get=GetAutoResponse,put=PutAutoResponse))
    _bstr_t AutoResponse;
    __declspec(property(get=GetParent))
    IDispatchPtr Parent;
    __declspec(property(get=GetType,put=PutType))
    long Type;
    __declspec(property(get=GetTrackingStatus,put=PutTrackingStatus))
    enum OlTrackingStatus TrackingStatus;
    __declspec(property(get=GetTrackingStatusTime,put=PutTrackingStatusTime))
    DATE TrackingStatusTime;
    __declspec(property(get=GetAddressEntry,put=PutRefAddressEntry))
    AddressEntryPtr AddressEntry;
    __declspec(property(get=GetIndex))
    long Index;
    __declspec(property(get=GetPropertyAccessor))
    _PropertyAccessorPtr PropertyAccessor;
    __declspec(property(get=GetEntryID))
    _bstr_t EntryID;

    //
    // Wrapper methods for error-handling
    //

    _ApplicationPtr GetApplication ( );
    enum OlObjectClass GetClass ( );
    _NameSpacePtr GetSession ( );
    IDispatchPtr GetParent ( );
    _bstr_t GetAddress ( );
    AddressEntryPtr GetAddressEntry ( );
    void PutRefAddressEntry (
        struct AddressEntry * AddressEntry );
    _bstr_t GetAutoResponse ( );
    void PutAutoResponse (
        _bstr_t AutoResponse );
    enum OlDisplayType GetDisplayType ( );
    _bstr_t GetEntryID ( );
    long GetIndex ( );
    enum OlResponseStatus GetMeetingResponseStatus ( );
    _bstr_t GetName ( );
    VARIANT_BOOL GetResolved ( );
    enum OlTrackingStatus GetTrackingStatus ( );
    void PutTrackingStatus (
        enum OlTrackingStatus TrackingStatus );
    DATE GetTrackingStatusTime ( );
    void PutTrackingStatusTime (
        DATE TrackingStatusTime );
    long GetType ( );
    void PutType (
        long Type );
    HRESULT Delete ( );
    _bstr_t FreeBusy (
        DATE Start,
        long MinPerChar,
        const _variant_t & CompleteFormat = vtMissing );
    VARIANT_BOOL Resolve ( );
    _PropertyAccessorPtr GetPropertyAccessor ( );

    //
    // Raw methods provided by interface
    //

      virtual HRESULT __stdcall get_Application (
        /*[out,retval]*/ struct _Application * * Application ) = 0;
      virtual HRESULT __stdcall get_Class (
        /*[out,retval]*/ enum OlObjectClass * Class ) = 0;
      virtual HRESULT __stdcall get_Session (
        /*[out,retval]*/ struct _NameSpace * * Session ) = 0;
      virtual HRESULT __stdcall get_Parent (
        /*[out,retval]*/ IDispatch * * Parent ) = 0;
      virtual HRESULT __stdcall get_Address (
        /*[out,retval]*/ BSTR * Address ) = 0;
      virtual HRESULT __stdcall get_AddressEntry (
        /*[out,retval]*/ struct AddressEntry * * AddressEntry ) = 0;
      virtual HRESULT __stdcall putref_AddressEntry (
        /*[in]*/ struct AddressEntry * AddressEntry ) = 0;
      virtual HRESULT __stdcall get_AutoResponse (
        /*[out,retval]*/ BSTR * AutoResponse ) = 0;
      virtual HRESULT __stdcall put_AutoResponse (
        /*[in]*/ BSTR AutoResponse ) = 0;
      virtual HRESULT __stdcall get_DisplayType (
        /*[out,retval]*/ enum OlDisplayType * DisplayType ) = 0;
      virtual HRESULT __stdcall get_EntryID (
        /*[out,retval]*/ BSTR * EntryID ) = 0;
      virtual HRESULT __stdcall get_Index (
        /*[out,retval]*/ long * Index ) = 0;
      virtual HRESULT __stdcall get_MeetingResponseStatus (
        /*[out,retval]*/ enum OlResponseStatus * MeetingResponseStatus ) = 0;
      virtual HRESULT __stdcall get_Name (
        /*[out,retval]*/ BSTR * Name ) = 0;
      virtual HRESULT __stdcall get_Resolved (
        /*[out,retval]*/ VARIANT_BOOL * Resolved ) = 0;
      virtual HRESULT __stdcall get_TrackingStatus (
        /*[out,retval]*/ enum OlTrackingStatus * TrackingStatus ) = 0;
      virtual HRESULT __stdcall put_TrackingStatus (
        /*[in]*/ enum OlTrackingStatus TrackingStatus ) = 0;
      virtual HRESULT __stdcall get_TrackingStatusTime (
        /*[out,retval]*/ DATE * TrackingStatusTime ) = 0;
      virtual HRESULT __stdcall put_TrackingStatusTime (
        /*[in]*/ DATE TrackingStatusTime ) = 0;
      virtual HRESULT __stdcall get_Type (
        /*[out,retval]*/ long * Type ) = 0;
      virtual HRESULT __stdcall put_Type (
        /*[in]*/ long Type ) = 0;
      virtual HRESULT __stdcall raw_Delete ( ) = 0;
      virtual HRESULT __stdcall raw_FreeBusy (
        /*[in]*/ DATE Start,
        /*[in]*/ long MinPerChar,
        /*[in]*/ VARIANT CompleteFormat,
        /*[out,retval]*/ BSTR * FreeBusyInfo ) = 0;
      virtual HRESULT __stdcall raw_Resolve (
        /*[out,retval]*/ VARIANT_BOOL * Success ) = 0;
      virtual HRESULT __stdcall get_PropertyAccessor (
        /*[out,retval]*/ struct _PropertyAccessor * * PropertyAccessor ) = 0;
};

struct __declspec(uuid("0006303b-0000-0000-c000-000000000046"))
Recipients : IDispatch
{
    //
    // Property data
    //

    __declspec(property(get=GetApplication))
    _ApplicationPtr Application;
    __declspec(property(get=GetParent))
    IDispatchPtr Parent;
    __declspec(property(get=GetClass))
    enum OlObjectClass Class;
    __declspec(property(get=GetSession))
    _NameSpacePtr Session;
    __declspec(property(get=GetCount))
    long Count;

    //
    // Wrapper methods for error-handling
    //

    _ApplicationPtr GetApplication ( );
    enum OlObjectClass GetClass ( );
    _NameSpacePtr GetSession ( );
    IDispatchPtr GetParent ( );
    long GetCount ( );
    RecipientPtr Item (
        const _variant_t & Index );
    RecipientPtr Add (
        _bstr_t Name );
    HRESULT Remove (
        long Index );
    VARIANT_BOOL ResolveAll ( );

    //
    // Raw methods provided by interface
    //

      virtual HRESULT __stdcall get_Application (
        /*[out,retval]*/ struct _Application * * Application ) = 0;
      virtual HRESULT __stdcall get_Class (
        /*[out,retval]*/ enum OlObjectClass * Class ) = 0;
      virtual HRESULT __stdcall get_Session (
        /*[out,retval]*/ struct _NameSpace * * Session ) = 0;
      virtual HRESULT __stdcall get_Parent (
        /*[out,retval]*/ IDispatch * * Parent ) = 0;
      virtual HRESULT __stdcall get_Count (
        /*[out,retval]*/ long * Count ) = 0;
      virtual HRESULT __stdcall raw_Item (
        /*[in]*/ VARIANT Index,
        /*[out,retval]*/ struct Recipient * * Item ) = 0;
      virtual HRESULT __stdcall raw_Add (
        /*[in]*/ BSTR Name,
        /*[out,retval]*/ struct Recipient * * Recipient ) = 0;
      virtual HRESULT __stdcall raw_Remove (
        /*[in]*/ long Index ) = 0;
      virtual HRESULT __stdcall raw_ResolveAll (
        /*[out,retval]*/ VARIANT_BOOL * Success ) = 0;
};

struct __declspec(uuid("000630d1-0000-0000-c000-000000000046"))
_SendRuleAction : IDispatch
{
    //
    // Property data
    //

    __declspec(property(get=GetApplication))
    _ApplicationPtr Application;
    __declspec(property(get=GetParent))
    IDispatchPtr Parent;
    __declspec(property(get=GetEnabled,put=PutEnabled))
    VARIANT_BOOL Enabled;
    __declspec(property(get=GetClass))
    enum OlObjectClass Class;
    __declspec(property(get=GetSession))
    _NameSpacePtr Session;
    __declspec(property(get=GetActionType))
    enum OlRuleActionType ActionType;
    __declspec(property(get=GetRecipients))
    RecipientsPtr Recipients;

    //
    // Wrapper methods for error-handling
    //

    _ApplicationPtr GetApplication ( );
    enum OlObjectClass GetClass ( );
    _NameSpacePtr GetSession ( );
    IDispatchPtr GetParent ( );
    VARIANT_BOOL GetEnabled ( );
    void PutEnabled (
        VARIANT_BOOL Enabled );
    enum OlRuleActionType GetActionType ( );
    RecipientsPtr GetRecipients ( );

    //
    // Raw methods provided by interface
    //

      virtual HRESULT __stdcall get_Application (
        /*[out,retval]*/ struct _Application * * Application ) = 0;
      virtual HRESULT __stdcall get_Class (
        /*[out,retval]*/ enum OlObjectClass * Class ) = 0;
      virtual HRESULT __stdcall get_Session (
        /*[out,retval]*/ struct _NameSpace * * Session ) = 0;
      virtual HRESULT __stdcall get_Parent (
        /*[out,retval]*/ IDispatch * * Parent ) = 0;
      virtual HRESULT __stdcall get_Enabled (
        /*[out,retval]*/ VARIANT_BOOL * Enabled ) = 0;
      virtual HRESULT __stdcall put_Enabled (
        /*[in]*/ VARIANT_BOOL Enabled ) = 0;
      virtual HRESULT __stdcall get_ActionType (
        /*[out,retval]*/ enum OlRuleActionType * ActionType ) = 0;
      virtual HRESULT __stdcall get_Recipients (
        /*[out,retval]*/ struct Recipients * * Recipients ) = 0;
};

struct __declspec(uuid("000630de-0000-0000-c000-000000000046"))
_ToOrFromRuleCondition : IDispatch
{
    //
    // Property data
    //

    __declspec(property(get=GetApplication))
    _ApplicationPtr Application;
    __declspec(property(get=GetParent))
    IDispatchPtr Parent;
    __declspec(property(get=GetEnabled,put=PutEnabled))
    VARIANT_BOOL Enabled;
    __declspec(property(get=GetClass))
    enum OlObjectClass Class;
    __declspec(property(get=GetSession))
    _NameSpacePtr Session;
    __declspec(property(get=GetConditionType))
    enum OlRuleConditionType ConditionType;
    __declspec(property(get=GetRecipients))
    RecipientsPtr Recipients;

    //
    // Wrapper methods for error-handling
    //

    _ApplicationPtr GetApplication ( );
    enum OlObjectClass GetClass ( );
    _NameSpacePtr GetSession ( );
    IDispatchPtr GetParent ( );
    VARIANT_BOOL GetEnabled ( );
    void PutEnabled (
        VARIANT_BOOL Enabled );
    enum OlRuleConditionType GetConditionType ( );
    RecipientsPtr GetRecipients ( );

    //
    // Raw methods provided by interface
    //

      virtual HRESULT __stdcall get_Application (
        /*[out,retval]*/ struct _Application * * Application ) = 0;
      virtual HRESULT __stdcall get_Class (
        /*[out,retval]*/ enum OlObjectClass * Class ) = 0;
      virtual HRESULT __stdcall get_Session (
        /*[out,retval]*/ struct _NameSpace * * Session ) = 0;
      virtual HRESULT __stdcall get_Parent (
        /*[out,retval]*/ IDispatch * * Parent ) = 0;
      virtual HRESULT __stdcall get_Enabled (
        /*[out,retval]*/ VARIANT_BOOL * Enabled ) = 0;
      virtual HRESULT __stdcall put_Enabled (
        /*[in]*/ VARIANT_BOOL Enabled ) = 0;
      virtual HRESULT __stdcall get_ConditionType (
        /*[out,retval]*/ enum OlRuleConditionType * ConditionType ) = 0;
      virtual HRESULT __stdcall get_Recipients (
        /*[out,retval]*/ struct Recipients * * Recipients ) = 0;
};

struct __declspec(uuid("0006304b-0000-0000-c000-000000000046"))
AddressEntry : IDispatch
{
    //
    // Property data
    //

    __declspec(property(get=GetApplication))
    _ApplicationPtr Application;
    __declspec(property(get=GetParent))
    IDispatchPtr Parent;
    __declspec(property(get=GetDisplayType))
    enum OlDisplayType DisplayType;
    __declspec(property(get=GetAddress,put=PutAddress))
    _bstr_t Address;
    __declspec(property(get=GetManager))
    AddressEntryPtr Manager;
    __declspec(property(get=GetMAPIOBJECT,put=PutMAPIOBJECT))
    IUnknownPtr MAPIOBJECT;
    __declspec(property(get=GetMembers))
    AddressEntriesPtr Members;
    __declspec(property(get=GetName,put=PutName))
    _bstr_t Name;
    __declspec(property(get=GetType,put=PutType))
    _bstr_t Type;
    __declspec(property(get=GetClass))
    enum OlObjectClass Class;
    __declspec(property(get=GetSession))
    _NameSpacePtr Session;
    __declspec(property(get=GetAddressEntryUserType))
    enum OlAddressEntryUserType AddressEntryUserType;
    __declspec(property(get=GetPropertyAccessor))
    _PropertyAccessorPtr PropertyAccessor;
    __declspec(property(get=GetID))
    _bstr_t ID;

    //
    // Wrapper methods for error-handling
    //

    _ApplicationPtr GetApplication ( );
    enum OlObjectClass GetClass ( );
    _NameSpacePtr GetSession ( );
    IDispatchPtr GetParent ( );
    _bstr_t GetAddress ( );
    void PutAddress (
        _bstr_t Address );
    enum OlDisplayType GetDisplayType ( );
    _bstr_t GetID ( );
    AddressEntryPtr GetManager ( );
    IUnknownPtr GetMAPIOBJECT ( );
    void PutMAPIOBJECT (
        IUnknown * MAPIOBJECT );
    AddressEntriesPtr GetMembers ( );
    _bstr_t GetName ( );
    void PutName (
        _bstr_t Name );
    _bstr_t GetType ( );
    void PutType (
        _bstr_t Type );
    HRESULT Delete ( );
    HRESULT Details (
        const _variant_t & HWnd = vtMissing );
    _bstr_t GetFreeBusy (
        DATE Start,
        long MinPerChar,
        const _variant_t & CompleteFormat = vtMissing );
    HRESULT Update (
        const _variant_t & MakePermanent = vtMissing,
        const _variant_t & Refresh = vtMissing );
    HRESULT UpdateFreeBusy ( );
    _ContactItemPtr GetContact ( );
    _ExchangeUserPtr GetExchangeUser ( );
    enum OlAddressEntryUserType GetAddressEntryUserType ( );
    _ExchangeDistributionListPtr GetExchangeDistributionList ( );
    _PropertyAccessorPtr GetPropertyAccessor ( );

    //
    // Raw methods provided by interface
    //

      virtual HRESULT __stdcall get_Application (
        /*[out,retval]*/ struct _Application * * Application ) = 0;
      virtual HRESULT __stdcall get_Class (
        /*[out,retval]*/ enum OlObjectClass * Class ) = 0;
      virtual HRESULT __stdcall get_Session (
        /*[out,retval]*/ struct _NameSpace * * Session ) = 0;
      virtual HRESULT __stdcall get_Parent (
        /*[out,retval]*/ IDispatch * * Parent ) = 0;
      virtual HRESULT __stdcall get_Address (
        /*[out,retval]*/ BSTR * Address ) = 0;
      virtual HRESULT __stdcall put_Address (
        /*[in]*/ BSTR Address ) = 0;
      virtual HRESULT __stdcall get_DisplayType (
        /*[out,retval]*/ enum OlDisplayType * DisplayType ) = 0;
      virtual HRESULT __stdcall get_ID (
        /*[out,retval]*/ BSTR * ID ) = 0;
      virtual HRESULT __stdcall get_Manager (
        /*[out,retval]*/ struct AddressEntry * * Manager ) = 0;
      virtual HRESULT __stdcall get_MAPIOBJECT (
        /*[out,retval]*/ IUnknown * * MAPIOBJECT ) = 0;
      virtual HRESULT __stdcall put_MAPIOBJECT (
        /*[in]*/ IUnknown * MAPIOBJECT ) = 0;
      virtual HRESULT __stdcall get_Members (
        /*[out,retval]*/ struct AddressEntries * * Members ) = 0;
      virtual HRESULT __stdcall get_Name (
        /*[out,retval]*/ BSTR * Name ) = 0;
      virtual HRESULT __stdcall put_Name (
        /*[in]*/ BSTR Name ) = 0;
      virtual HRESULT __stdcall get_Type (
        /*[out,retval]*/ BSTR * Type ) = 0;
      virtual HRESULT __stdcall put_Type (
        /*[in]*/ BSTR Type ) = 0;
      virtual HRESULT __stdcall raw_Delete ( ) = 0;
      virtual HRESULT __stdcall raw_Details (
        /*[in]*/ VARIANT HWnd = vtMissing ) = 0;
      virtual HRESULT __stdcall raw_GetFreeBusy (
        /*[in]*/ DATE Start,
        /*[in]*/ long MinPerChar,
        /*[in]*/ VARIANT CompleteFormat,
        /*[out,retval]*/ BSTR * FreeBusyInfo ) = 0;
      virtual HRESULT __stdcall raw_Update (
        /*[in]*/ VARIANT MakePermanent = vtMissing,
        /*[in]*/ VARIANT Refresh = vtMissing ) = 0;
      virtual HRESULT __stdcall raw_UpdateFreeBusy ( ) = 0;
      virtual HRESULT __stdcall raw_GetContact (
        /*[out,retval]*/ struct _ContactItem * * ret ) = 0;
      virtual HRESULT __stdcall raw_GetExchangeUser (
        /*[out,retval]*/ struct _ExchangeUser * * ret ) = 0;
      virtual HRESULT __stdcall get_AddressEntryUserType (
        /*[out,retval]*/ enum OlAddressEntryUserType * AddressEntryUserType ) = 0;
      virtual HRESULT __stdcall raw_GetExchangeDistributionList (
        /*[out,retval]*/ struct _ExchangeDistributionList * * ret ) = 0;
      virtual HRESULT __stdcall get_PropertyAccessor (
        /*[out,retval]*/ struct _PropertyAccessor * * PropertyAccessor ) = 0;
};

struct __declspec(uuid("0006304a-0000-0000-c000-000000000046"))
AddressEntries : IDispatch
{
    //
    // Property data
    //

    __declspec(property(get=GetApplication))
    _ApplicationPtr Application;
    __declspec(property(get=GetParent))
    IDispatchPtr Parent;
    __declspec(property(get=GetClass))
    enum OlObjectClass Class;
    __declspec(property(get=GetSession))
    _NameSpacePtr Session;
    __declspec(property(get=GetCount))
    long Count;
    __declspec(property(get=GetRawTable))
    IUnknownPtr RawTable;

    //
    // Wrapper methods for error-handling
    //

    _ApplicationPtr GetApplication ( );
    enum OlObjectClass GetClass ( );
    _NameSpacePtr GetSession ( );
    IDispatchPtr GetParent ( );
    long GetCount ( );
    AddressEntryPtr Item (
        const _variant_t & Index );
    IUnknownPtr GetRawTable ( );
    AddressEntryPtr Add (
        _bstr_t Type,
        const _variant_t & Name = vtMissing,
        const _variant_t & Address = vtMissing );
    AddressEntryPtr GetFirst ( );
    AddressEntryPtr GetLast ( );
    AddressEntryPtr GetNext ( );
    AddressEntryPtr GetPrevious ( );
    HRESULT Sort (
        const _variant_t & Property = vtMissing,
        const _variant_t & Order = vtMissing );

    //
    // Raw methods provided by interface
    //

      virtual HRESULT __stdcall get_Application (
        /*[out,retval]*/ struct _Application * * Application ) = 0;
      virtual HRESULT __stdcall get_Class (
        /*[out,retval]*/ enum OlObjectClass * Class ) = 0;
      virtual HRESULT __stdcall get_Session (
        /*[out,retval]*/ struct _NameSpace * * Session ) = 0;
      virtual HRESULT __stdcall get_Parent (
        /*[out,retval]*/ IDispatch * * Parent ) = 0;
      virtual HRESULT __stdcall get_Count (
        /*[out,retval]*/ long * Count ) = 0;
      virtual HRESULT __stdcall raw_Item (
        /*[in]*/ VARIANT Index,
        /*[out,retval]*/ struct AddressEntry * * Item ) = 0;
      virtual HRESULT __stdcall get_RawTable (
        /*[out,retval]*/ IUnknown * * RawTable ) = 0;
      virtual HRESULT __stdcall raw_Add (
        /*[in]*/ BSTR Type,
        /*[in]*/ VARIANT Name,
        /*[in]*/ VARIANT Address,
        /*[out,retval]*/ struct AddressEntry * * Entry ) = 0;
      virtual HRESULT __stdcall raw_GetFirst (
        /*[out,retval]*/ struct AddressEntry * * AddressEntry ) = 0;
      virtual HRESULT __stdcall raw_GetLast (
        /*[out,retval]*/ struct AddressEntry * * AddressEntry ) = 0;
      virtual HRESULT __stdcall raw_GetNext (
        /*[out,retval]*/ struct AddressEntry * * AddressEntry ) = 0;
      virtual HRESULT __stdcall raw_GetPrevious (
        /*[out,retval]*/ struct AddressEntry * * AddressEntry ) = 0;
      virtual HRESULT __stdcall raw_Sort (
        /*[in]*/ VARIANT Property = vtMissing,
        /*[in]*/ VARIANT Order = vtMissing ) = 0;
};

struct __declspec(uuid("00063021-0000-0000-c000-000000000046"))
_ContactItem : IDispatch
{
    //
    // Property data
    //

    __declspec(property(get=GetAssistantName,put=PutAssistantName))
    _bstr_t AssistantName;
    __declspec(property(get=GetParent))
    IDispatchPtr Parent;
    __declspec(property(get=GetInternetFreeBusyAddress,put=PutInternetFreeBusyAddress))
    _bstr_t InternetFreeBusyAddress;
    __declspec(property(get=GetTelexNumber,put=PutTelexNumber))
    _bstr_t TelexNumber;
    __declspec(property(get=GetClass))
    enum OlObjectClass Class;
    __declspec(property(get=GetSession))
    _NameSpacePtr Session;
    __declspec(property(get=GetReminderSet,put=PutReminderSet))
    VARIANT_BOOL ReminderSet;
    __declspec(property(get=GetReminderTime,put=PutReminderTime))
    DATE ReminderTime;
    __declspec(property(get=GetNoAging,put=PutNoAging))
    VARIANT_BOOL NoAging;
    __declspec(property(get=GetAnniversary,put=PutAnniversary))
    DATE Anniversary;
    __declspec(property(get=GetBirthday,put=PutBirthday))
    DATE Birthday;
    __declspec(property(get=GetHobby,put=PutHobby))
    _bstr_t Hobby;
    __declspec(property(get=GetMiddleName,put=PutMiddleName))
    _bstr_t MiddleName;
    __declspec(property(get=GetTitle,put=PutTitle))
    _bstr_t Title;
    __declspec(property(get=GetUnRead,put=PutUnRead))
    VARIANT_BOOL UnRead;
    __declspec(property(get=GetImportance,put=PutImportance))
    enum OlImportance Importance;
    __declspec(property(get=GetEntryID))
    _bstr_t EntryID;
    __declspec(property(get=GetComputerNetworkName,put=PutComputerNetworkName))
    _bstr_t ComputerNetworkName;
    __declspec(property(get=GetMessageClass,put=PutMessageClass))
    _bstr_t MessageClass;
    __declspec(property(get=GetCustomerID,put=PutCustomerID))
    _bstr_t CustomerID;
    __declspec(property(get=GetFTPSite,put=PutFTPSite))
    _bstr_t FTPSite;
    __declspec(property(get=GetGender,put=PutGender))
    enum OlGender Gender;
    __declspec(property(get=GetManagerName,put=PutManagerName))
    _bstr_t ManagerName;
    __declspec(property(get=GetNickName,put=PutNickName))
    _bstr_t NickName;
    __declspec(property(get=GetPersonalHomePage,put=PutPersonalHomePage))
    _bstr_t PersonalHomePage;
    __declspec(property(get=GetBusinessHomePage,put=PutBusinessHomePage))
    _bstr_t BusinessHomePage;
    __declspec(property(get=GetProfession,put=PutProfession))
    _bstr_t Profession;
    __declspec(property(get=GetReferredBy,put=PutReferredBy))
    _bstr_t ReferredBy;
    __declspec(property(get=GetSpouse,put=PutSpouse))
    _bstr_t Spouse;
    __declspec(property(get=GetTTYTDDTelephoneNumber,put=PutTTYTDDTelephoneNumber))
    _bstr_t TTYTDDTelephoneNumber;
    __declspec(property(get=GetReminderOverrideDefault,put=PutReminderOverrideDefault))
    VARIANT_BOOL ReminderOverrideDefault;
    __declspec(property(get=GetCompanyMainTelephoneNumber,put=PutCompanyMainTelephoneNumber))
    _bstr_t CompanyMainTelephoneNumber;
    __declspec(property(get=GetReminderPlaySound,put=PutReminderPlaySound))
    VARIANT_BOOL ReminderPlaySound;
    __declspec(property(get=GetHomeAddressCity,put=PutHomeAddressCity))
    _bstr_t HomeAddressCity;
    __declspec(property(get=GetHomeAddressCountry,put=PutHomeAddressCountry))
    _bstr_t HomeAddressCountry;
    __declspec(property(get=GetHomeAddressPostalCode,put=PutHomeAddressPostalCode))
    _bstr_t HomeAddressPostalCode;
    __declspec(property(get=GetHomeAddressState,put=PutHomeAddressState))
    _bstr_t HomeAddressState;
    __declspec(property(get=GetHomeAddressStreet,put=PutHomeAddressStreet))
    _bstr_t HomeAddressStreet;
    __declspec(property(get=GetHomeAddressPostOfficeBox,put=PutHomeAddressPostOfficeBox))
    _bstr_t HomeAddressPostOfficeBox;
    __declspec(property(get=GetOtherAddressCity,put=PutOtherAddressCity))
    _bstr_t OtherAddressCity;
    __declspec(property(get=GetOtherAddressCountry,put=PutOtherAddressCountry))
    _bstr_t OtherAddressCountry;
    __declspec(property(get=GetOtherAddressPostalCode,put=PutOtherAddressPostalCode))
    _bstr_t OtherAddressPostalCode;
    __declspec(property(get=GetOtherAddressState,put=PutOtherAddressState))
    _bstr_t OtherAddressState;
    __declspec(property(get=GetOtherAddressStreet,put=PutOtherAddressStreet))
    _bstr_t OtherAddressStreet;
    __declspec(property(get=GetMileage,put=PutMileage))
    _bstr_t Mileage;
    __declspec(property(get=GetFullName,put=PutFullName))
    _bstr_t FullName;
    __declspec(property(get=GetBillingInformation,put=PutBillingInformation))
    _bstr_t BillingInformation;
    __declspec(property(get=GetSensitivity,put=PutSensitivity))
    enum OlSensitivity Sensitivity;
    __declspec(property(get=GetSubject,put=PutSubject))
    _bstr_t Subject;
    __declspec(property(get=GetOtherAddressPostOfficeBox,put=PutOtherAddressPostOfficeBox))
    _bstr_t OtherAddressPostOfficeBox;
    __declspec(property(get=GetFileAs,put=PutFileAs))
    _bstr_t FileAs;
    __declspec(property(get=GetCreationTime))
    DATE CreationTime;
    __declspec(property(get=GetLastModificationTime))
    DATE LastModificationTime;
    __declspec(property(get=GetCompanies,put=PutCompanies))
    _bstr_t Companies;
    __declspec(property(get=GetChildren,put=PutChildren))
    _bstr_t Children;
    __declspec(property(get=GetGetInspector))
    _InspectorPtr GetInspector;
    __declspec(property(get=GetIsConflict))
    VARIANT_BOOL IsConflict;
    __declspec(property(get=GetTaskDueDate,put=PutTaskDueDate))
    DATE TaskDueDate;
    __declspec(property(get=GetTaskStartDate,put=PutTaskStartDate))
    DATE TaskStartDate;
    __declspec(property(get=GetTaskCompletedDate,put=PutTaskCompletedDate))
    DATE TaskCompletedDate;
    __declspec(property(get=GetReminderSoundFile,put=PutReminderSoundFile))
    _bstr_t ReminderSoundFile;
    __declspec(property(get=GetUserCertificate,put=PutUserCertificate))
    _bstr_t UserCertificate;
    __declspec(property(get=GetLastNameAndFirstName))
    _bstr_t LastNameAndFirstName;
    __declspec(property(get=GetCompanyAndFullName))
    _bstr_t CompanyAndFullName;
    __declspec(property(get=GetFullNameAndCompany))
    _bstr_t FullNameAndCompany;
    __declspec(property(get=GetHomeAddress,put=PutHomeAddress))
    _bstr_t HomeAddress;
    __declspec(property(get=GetBusinessAddress,put=PutBusinessAddress))
    _bstr_t BusinessAddress;
    __declspec(property(get=GetOtherAddress,put=PutOtherAddress))
    _bstr_t OtherAddress;
    __declspec(property(get=GetAutoResolvedWinner))
    VARIANT_BOOL AutoResolvedWinner;
    __declspec(property(get=GetConflicts))
    ConflictsPtr Conflicts;
    __declspec(property(get=GetOutlookInternalVersion))
    long OutlookInternalVersion;
    __declspec(property(get=GetOutlookVersion))
    _bstr_t OutlookVersion;
    __declspec(property(get=GetSelectedMailingAddress,put=PutSelectedMailingAddress))
    enum OlMailingAddress SelectedMailingAddress;
    __declspec(property(get=GetConversationIndex))
    _bstr_t ConversationIndex;
    __declspec(property(get=GetJournal,put=PutJournal))
    VARIANT_BOOL Journal;
    __declspec(property(get=GetHasPicture))
    VARIANT_BOOL HasPicture;
    __declspec(property(get=GetWebPage,put=PutWebPage))
    _bstr_t WebPage;
    __declspec(property(get=GetYomiFirstName,put=PutYomiFirstName))
    _bstr_t YomiFirstName;
    __declspec(property(get=GetYomiLastName,put=PutYomiLastName))
    _bstr_t YomiLastName;
    __declspec(property(get=GetYomiCompanyName,put=PutYomiCompanyName))
    _bstr_t YomiCompanyName;
    __declspec(property(get=GetLastFirstNoSpace))
    _bstr_t LastFirstNoSpace;
    __declspec(property(get=GetLastFirstSpaceOnly))
    _bstr_t LastFirstSpaceOnly;
    __declspec(property(get=GetCompanyLastFirstNoSpace))
    _bstr_t CompanyLastFirstNoSpace;
    __declspec(property(get=GetCompanyLastFirstSpaceOnly))
    _bstr_t CompanyLastFirstSpaceOnly;
    __declspec(property(get=GetLastFirstNoSpaceCompany))
    _bstr_t LastFirstNoSpaceCompany;
    __declspec(property(get=GetLastFirstSpaceOnlyCompany))
    _bstr_t LastFirstSpaceOnlyCompany;
    __declspec(property(get=GetLastFirstAndSuffix))
    _bstr_t LastFirstAndSuffix;
    __declspec(property(get=GetLastFirstNoSpaceAndSuffix))
    _bstr_t LastFirstNoSpaceAndSuffix;
    __declspec(property(get=GetConversationTopic))
    _bstr_t ConversationTopic;
    __declspec(property(get=GetMarkForDownload,put=PutMarkForDownload))
    enum OlRemoteStatus MarkForDownload;
    __declspec(property(get=GetBusinessAddressStreet,put=PutBusinessAddressStreet))
    _bstr_t BusinessAddressStreet;
    __declspec(property(get=GetBusinessAddressCity,put=PutBusinessAddressCity))
    _bstr_t BusinessAddressCity;
    __declspec(property(get=GetBusinessAddressState,put=PutBusinessAddressState))
    _bstr_t BusinessAddressState;
    __declspec(property(get=GetBusinessAddressPostalCode,put=PutBusinessAddressPostalCode))
    _bstr_t BusinessAddressPostalCode;
    __declspec(property(get=GetBusinessAddressCountry,put=PutBusinessAddressCountry))
    _bstr_t BusinessAddressCountry;
    __declspec(property(get=GetBusinessAddressPostOfficeBox,put=PutBusinessAddressPostOfficeBox))
    _bstr_t BusinessAddressPostOfficeBox;
    __declspec(property(get=GetUser1,put=PutUser1))
    _bstr_t User1;
    __declspec(property(get=GetUser2,put=PutUser2))
    _bstr_t User2;
    __declspec(property(get=GetUser3,put=PutUser3))
    _bstr_t User3;
    __declspec(property(get=GetUser4,put=PutUser4))
    _bstr_t User4;
    __declspec(property(get=GetSize))
    long Size;
    __declspec(property(get=GetFormDescription))
    FormDescriptionPtr FormDescription;
    __declspec(property(get=GetNetMeetingAlias,put=PutNetMeetingAlias))
    _bstr_t NetMeetingAlias;
    __declspec(property(get=GetBody,put=PutBody))
    _bstr_t Body;
    __declspec(property(get=GetNetMeetingServer,put=PutNetMeetingServer))
    _bstr_t NetMeetingServer;
    __declspec(property(get=GetIMAddress,put=PutIMAddress))
    _bstr_t IMAddress;
    __declspec(property(get=GetPropertyAccessor))
    _PropertyAccessorPtr PropertyAccessor;
    __declspec(property(get=GetIsMarkedAsTask))
    VARIANT_BOOL IsMarkedAsTask;
    __declspec(property(get=GetBusinessCardLayoutXml,put=PutBusinessCardLayoutXml))
    _bstr_t BusinessCardLayoutXml;
    __declspec(property(get=GetBusinessCardType))
    enum OlBusinessCardType BusinessCardType;
    __declspec(property(get=GetSaved))
    VARIANT_BOOL Saved;
    __declspec(property(get=GetCategories,put=PutCategories))
    _bstr_t Categories;
    __declspec(property(get=GetToDoTaskOrdinal,put=PutToDoTaskOrdinal))
    DATE ToDoTaskOrdinal;
    __declspec(property(get=GetItemProperties))
    ItemPropertiesPtr ItemProperties;
    __declspec(property(get=GetTaskSubject,put=PutTaskSubject))
    _bstr_t TaskSubject;
    __declspec(property(get=GetEmail1DisplayName,put=PutEmail1DisplayName))
    _bstr_t Email1DisplayName;
    __declspec(property(get=GetEmail1AddressType,put=PutEmail1AddressType))
    _bstr_t Email1AddressType;
    __declspec(property(get=GetEmail1Address,put=PutEmail1Address))
    _bstr_t Email1Address;
    __declspec(property(get=GetEmail1EntryID))
    _bstr_t Email1EntryID;
    __declspec(property(get=GetEmail2DisplayName,put=PutEmail2DisplayName))
    _bstr_t Email2DisplayName;
    __declspec(property(get=GetEmail2AddressType,put=PutEmail2AddressType))
    _bstr_t Email2AddressType;
    __declspec(property(get=GetEmail2Address,put=PutEmail2Address))
    _bstr_t Email2Address;
    __declspec(property(get=GetEmail2EntryID))
    _bstr_t Email2EntryID;
    __declspec(property(get=GetAttachments))
    AttachmentsPtr Attachments;
    __declspec(property(get=GetUserProperties))
    UserPropertiesPtr UserProperties;
    __declspec(property(get=GetActions))
    ActionsPtr Actions;
    __declspec(property(get=GetEmail3DisplayName,put=PutEmail3DisplayName))
    _bstr_t Email3DisplayName;
    __declspec(property(get=GetEmail3AddressType,put=PutEmail3AddressType))
    _bstr_t Email3AddressType;
    __declspec(property(get=GetEmail3Address,put=PutEmail3Address))
    _bstr_t Email3Address;
    __declspec(property(get=GetEmail3EntryID))
    _bstr_t Email3EntryID;
    __declspec(property(get=GetAccount,put=PutAccount))
    _bstr_t Account;
    __declspec(property(get=GetCallbackTelephoneNumber,put=PutCallbackTelephoneNumber))
    _bstr_t CallbackTelephoneNumber;
    __declspec(property(get=GetSuffix,put=PutSuffix))
    _bstr_t Suffix;
    __declspec(property(get=GetFirstName,put=PutFirstName))
    _bstr_t FirstName;
    __declspec(property(get=GetGovernmentIDNumber,put=PutGovernmentIDNumber))
    _bstr_t GovernmentIDNumber;
    __declspec(property(get=GetBusinessTelephoneNumber,put=PutBusinessTelephoneNumber))
    _bstr_t BusinessTelephoneNumber;
    __declspec(property(get=GetHomeTelephoneNumber,put=PutHomeTelephoneNumber))
    _bstr_t HomeTelephoneNumber;
    __declspec(property(get=GetInitials,put=PutInitials))
    _bstr_t Initials;
    __declspec(property(get=GetLinks))
    LinksPtr Links;
    __declspec(property(get=GetLanguage,put=PutLanguage))
    _bstr_t Language;
    __declspec(property(get=GetOrganizationalIDNumber,put=PutOrganizationalIDNumber))
    _bstr_t OrganizationalIDNumber;
    __declspec(property(get=GetLastName,put=PutLastName))
    _bstr_t LastName;
    __declspec(property(get=GetDownloadState))
    enum OlDownloadState DownloadState;
    __declspec(property(get=GetMailingAddress,put=PutMailingAddress))
    _bstr_t MailingAddress;
    __declspec(property(get=GetCompanyName,put=PutCompanyName))
    _bstr_t CompanyName;
    __declspec(property(get=GetJobTitle,put=PutJobTitle))
    _bstr_t JobTitle;
    __declspec(property(get=GetDepartment,put=PutDepartment))
    _bstr_t Department;
    __declspec(property(get=GetOfficeLocation,put=PutOfficeLocation))
    _bstr_t OfficeLocation;
    __declspec(property(get=GetPrimaryTelephoneNumber,put=PutPrimaryTelephoneNumber))
    _bstr_t PrimaryTelephoneNumber;
    __declspec(property(get=GetBusiness2TelephoneNumber,put=PutBusiness2TelephoneNumber))
    _bstr_t Business2TelephoneNumber;
    __declspec(property(get=GetMobileTelephoneNumber,put=PutMobileTelephoneNumber))
    _bstr_t MobileTelephoneNumber;
    __declspec(property(get=GetRadioTelephoneNumber,put=PutRadioTelephoneNumber))
    _bstr_t RadioTelephoneNumber;
    __declspec(property(get=GetCarTelephoneNumber,put=PutCarTelephoneNumber))
    _bstr_t CarTelephoneNumber;
    __declspec(property(get=GetOtherTelephoneNumber,put=PutOtherTelephoneNumber))
    _bstr_t OtherTelephoneNumber;
    __declspec(property(get=GetMAPIOBJECT))
    IUnknownPtr MAPIOBJECT;
    __declspec(property(get=GetPagerNumber,put=PutPagerNumber))
    _bstr_t PagerNumber;
    __declspec(property(get=GetOtherFaxNumber,put=PutOtherFaxNumber))
    _bstr_t OtherFaxNumber;
    __declspec(property(get=GetBusinessFaxNumber,put=PutBusinessFaxNumber))
    _bstr_t BusinessFaxNumber;
    __declspec(property(get=GetHomeFaxNumber,put=PutHomeFaxNumber))
    _bstr_t HomeFaxNumber;
    __declspec(property(get=GetMailingAddressCountry,put=PutMailingAddressCountry))
    _bstr_t MailingAddressCountry;
    __declspec(property(get=GetMailingAddressCity,put=PutMailingAddressCity))
    _bstr_t MailingAddressCity;
    __declspec(property(get=GetMailingAddressState,put=PutMailingAddressState))
    _bstr_t MailingAddressState;
    __declspec(property(get=GetMailingAddressStreet,put=PutMailingAddressStreet))
    _bstr_t MailingAddressStreet;
    __declspec(property(get=GetMailingAddressPostalCode,put=PutMailingAddressPostalCode))
    _bstr_t MailingAddressPostalCode;
    __declspec(property(get=GetMailingAddressPostOfficeBox,put=PutMailingAddressPostOfficeBox))
    _bstr_t MailingAddressPostOfficeBox;
    __declspec(property(get=GetApplication))
    _ApplicationPtr Application;
    __declspec(property(get=GetISDNNumber,put=PutISDNNumber))
    _bstr_t ISDNNumber;
    __declspec(property(get=GetAssistantTelephoneNumber,put=PutAssistantTelephoneNumber))
    _bstr_t AssistantTelephoneNumber;
    __declspec(property(get=GetHome2TelephoneNumber,put=PutHome2TelephoneNumber))
    _bstr_t Home2TelephoneNumber;

    //
    // Wrapper methods for error-handling
    //

    _ApplicationPtr GetApplication ( );
    enum OlObjectClass GetClass ( );
    _NameSpacePtr GetSession ( );
    IDispatchPtr GetParent ( );
    ActionsPtr GetActions ( );
    AttachmentsPtr GetAttachments ( );
    _bstr_t GetBillingInformation ( );
    void PutBillingInformation (
        _bstr_t BillingInformation );
    _bstr_t GetBody ( );
    void PutBody (
        _bstr_t Body );
    _bstr_t GetCategories ( );
    void PutCategories (
        _bstr_t Categories );
    _bstr_t GetCompanies ( );
    void PutCompanies (
        _bstr_t Companies );
    _bstr_t GetConversationIndex ( );
    _bstr_t GetConversationTopic ( );
    DATE GetCreationTime ( );
    _bstr_t GetEntryID ( );
    FormDescriptionPtr GetFormDescription ( );
    _InspectorPtr GetGetInspector ( );
    enum OlImportance GetImportance ( );
    void PutImportance (
        enum OlImportance Importance );
    DATE GetLastModificationTime ( );
    IUnknownPtr GetMAPIOBJECT ( );
    _bstr_t GetMessageClass ( );
    void PutMessageClass (
        _bstr_t MessageClass );
    _bstr_t GetMileage ( );
    void PutMileage (
        _bstr_t Mileage );
    VARIANT_BOOL GetNoAging ( );
    void PutNoAging (
        VARIANT_BOOL NoAging );
    long GetOutlookInternalVersion ( );
    _bstr_t GetOutlookVersion ( );
    VARIANT_BOOL GetSaved ( );
    enum OlSensitivity GetSensitivity ( );
    void PutSensitivity (
        enum OlSensitivity Sensitivity );
    long GetSize ( );
    _bstr_t GetSubject ( );
    void PutSubject (
        _bstr_t Subject );
    VARIANT_BOOL GetUnRead ( );
    void PutUnRead (
        VARIANT_BOOL UnRead );
    UserPropertiesPtr GetUserProperties ( );
    HRESULT Close (
        enum OlInspectorClose SaveMode );
    IDispatchPtr Copy ( );
    HRESULT Delete ( );
    HRESULT Display (
        const _variant_t & Modal = vtMissing );
    IDispatchPtr Move (
        struct MAPIFolder * DestFldr );
    HRESULT PrintOut ( );
    HRESULT Save ( );
    HRESULT SaveAs (
        _bstr_t Path,
        const _variant_t & Type = vtMissing );
    _bstr_t GetAccount ( );
    void PutAccount (
        _bstr_t Account );
    DATE GetAnniversary ( );
    void PutAnniversary (
        DATE Anniversary );
    _bstr_t GetAssistantName ( );
    void PutAssistantName (
        _bstr_t AssistantName );
    _bstr_t GetAssistantTelephoneNumber ( );
    void PutAssistantTelephoneNumber (
        _bstr_t AssistantTelephoneNumber );
    DATE GetBirthday ( );
    void PutBirthday (
        DATE Birthday );
    _bstr_t GetBusiness2TelephoneNumber ( );
    void PutBusiness2TelephoneNumber (
        _bstr_t Business2TelephoneNumber );
    _bstr_t GetBusinessAddress ( );
    void PutBusinessAddress (
        _bstr_t BusinessAddress );
    _bstr_t GetBusinessAddressCity ( );
    void PutBusinessAddressCity (
        _bstr_t BusinessAddressCity );
    _bstr_t GetBusinessAddressCountry ( );
    void PutBusinessAddressCountry (
        _bstr_t BusinessAddressCountry );
    _bstr_t GetBusinessAddressPostalCode ( );
    void PutBusinessAddressPostalCode (
        _bstr_t BusinessAddressPostalCode );
    _bstr_t GetBusinessAddressPostOfficeBox ( );
    void PutBusinessAddressPostOfficeBox (
        _bstr_t BusinessAddressPostOfficeBox );
    _bstr_t GetBusinessAddressState ( );
    void PutBusinessAddressState (
        _bstr_t BusinessAddressState );
    _bstr_t GetBusinessAddressStreet ( );
    void PutBusinessAddressStreet (
        _bstr_t BusinessAddressStreet );
    _bstr_t GetBusinessFaxNumber ( );
    void PutBusinessFaxNumber (
        _bstr_t BusinessFaxNumber );
    _bstr_t GetBusinessHomePage ( );
    void PutBusinessHomePage (
        _bstr_t BusinessHomePage );
    _bstr_t GetBusinessTelephoneNumber ( );
    void PutBusinessTelephoneNumber (
        _bstr_t BusinessTelephoneNumber );
    _bstr_t GetCallbackTelephoneNumber ( );
    void PutCallbackTelephoneNumber (
        _bstr_t CallbackTelephoneNumber );
    _bstr_t GetCarTelephoneNumber ( );
    void PutCarTelephoneNumber (
        _bstr_t CarTelephoneNumber );
    _bstr_t GetChildren ( );
    void PutChildren (
        _bstr_t Children );
    _bstr_t GetCompanyAndFullName ( );
    _bstr_t GetCompanyLastFirstNoSpace ( );
    _bstr_t GetCompanyLastFirstSpaceOnly ( );
    _bstr_t GetCompanyMainTelephoneNumber ( );
    void PutCompanyMainTelephoneNumber (
        _bstr_t CompanyMainTelephoneNumber );
    _bstr_t GetCompanyName ( );
    void PutCompanyName (
        _bstr_t CompanyName );
    _bstr_t GetComputerNetworkName ( );
    void PutComputerNetworkName (
        _bstr_t ComputerNetworkName );
    _bstr_t GetCustomerID ( );
    void PutCustomerID (
        _bstr_t CustomerID );
    _bstr_t GetDepartment ( );
    void PutDepartment (
        _bstr_t Department );
    _bstr_t GetEmail1Address ( );
    void PutEmail1Address (
        _bstr_t Email1Address );
    _bstr_t GetEmail1AddressType ( );
    void PutEmail1AddressType (
        _bstr_t Email1AddressType );
    _bstr_t GetEmail1DisplayName ( );
    _bstr_t GetEmail1EntryID ( );
    _bstr_t GetEmail2Address ( );
    void PutEmail2Address (
        _bstr_t Email2Address );
    _bstr_t GetEmail2AddressType ( );
    void PutEmail2AddressType (
        _bstr_t Email2AddressType );
    _bstr_t GetEmail2DisplayName ( );
    _bstr_t GetEmail2EntryID ( );
    _bstr_t GetEmail3Address ( );
    void PutEmail3Address (
        _bstr_t Email3Address );
    _bstr_t GetEmail3AddressType ( );
    void PutEmail3AddressType (
        _bstr_t Email3AddressType );
    _bstr_t GetEmail3DisplayName ( );
    _bstr_t GetEmail3EntryID ( );
    _bstr_t GetFileAs ( );
    void PutFileAs (
        _bstr_t FileAs );
    _bstr_t GetFirstName ( );
    void PutFirstName (
        _bstr_t FirstName );
    _bstr_t GetFTPSite ( );
    void PutFTPSite (
        _bstr_t FTPSite );
    _bstr_t GetFullName ( );
    void PutFullName (
        _bstr_t FullName );
    _bstr_t GetFullNameAndCompany ( );
    enum OlGender GetGender ( );
    void PutGender (
        enum OlGender Gender );
    _bstr_t GetGovernmentIDNumber ( );
    void PutGovernmentIDNumber (
        _bstr_t GovernmentIDNumber );
    _bstr_t GetHobby ( );
    void PutHobby (
        _bstr_t Hobby );
    _bstr_t GetHome2TelephoneNumber ( );
    void PutHome2TelephoneNumber (
        _bstr_t Home2TelephoneNumber );
    _bstr_t GetHomeAddress ( );
    void PutHomeAddress (
        _bstr_t HomeAddress );
    _bstr_t GetHomeAddressCity ( );
    void PutHomeAddressCity (
        _bstr_t HomeAddressCity );
    _bstr_t GetHomeAddressCountry ( );
    void PutHomeAddressCountry (
        _bstr_t HomeAddressCountry );
    _bstr_t GetHomeAddressPostalCode ( );
    void PutHomeAddressPostalCode (
        _bstr_t HomeAddressPostalCode );
    _bstr_t GetHomeAddressPostOfficeBox ( );
    void PutHomeAddressPostOfficeBox (
        _bstr_t HomeAddressPostOfficeBox );
    _bstr_t GetHomeAddressState ( );
    void PutHomeAddressState (
        _bstr_t HomeAddressState );
    _bstr_t GetHomeAddressStreet ( );
    void PutHomeAddressStreet (
        _bstr_t HomeAddressStreet );
    _bstr_t GetHomeFaxNumber ( );
    void PutHomeFaxNumber (
        _bstr_t HomeFaxNumber );
    _bstr_t GetHomeTelephoneNumber ( );
    void PutHomeTelephoneNumber (
        _bstr_t HomeTelephoneNumber );
    _bstr_t GetInitials ( );
    void PutInitials (
        _bstr_t Initials );
    _bstr_t GetInternetFreeBusyAddress ( );
    void PutInternetFreeBusyAddress (
        _bstr_t InternetFreeBusyAddress );
    _bstr_t GetISDNNumber ( );
    void PutISDNNumber (
        _bstr_t ISDNNumber );
    _bstr_t GetJobTitle ( );
    void PutJobTitle (
        _bstr_t JobTitle );
    VARIANT_BOOL GetJournal ( );
    void PutJournal (
        VARIANT_BOOL Journal );
    _bstr_t GetLanguage ( );
    void PutLanguage (
        _bstr_t Language );
    _bstr_t GetLastFirstAndSuffix ( );
    _bstr_t GetLastFirstNoSpace ( );
    _bstr_t GetLastFirstNoSpaceCompany ( );
    _bstr_t GetLastFirstSpaceOnly ( );
    _bstr_t GetLastFirstSpaceOnlyCompany ( );
    _bstr_t GetLastName ( );
    void PutLastName (
        _bstr_t LastName );
    _bstr_t GetLastNameAndFirstName ( );
    _bstr_t GetMailingAddress ( );
    void PutMailingAddress (
        _bstr_t MailingAddress );
    _bstr_t GetMailingAddressCity ( );
    void PutMailingAddressCity (
        _bstr_t MailingAddressCity );
    _bstr_t GetMailingAddressCountry ( );
    void PutMailingAddressCountry (
        _bstr_t MailingAddressCountry );
    _bstr_t GetMailingAddressPostalCode ( );
    void PutMailingAddressPostalCode (
        _bstr_t MailingAddressPostalCode );
    _bstr_t GetMailingAddressPostOfficeBox ( );
    void PutMailingAddressPostOfficeBox (
        _bstr_t MailingAddressPostOfficeBox );
    _bstr_t GetMailingAddressState ( );
    void PutMailingAddressState (
        _bstr_t MailingAddressState );
    _bstr_t GetMailingAddressStreet ( );
    void PutMailingAddressStreet (
        _bstr_t MailingAddressStreet );
    _bstr_t GetManagerName ( );
    void PutManagerName (
        _bstr_t ManagerName );
    _bstr_t GetMiddleName ( );
    void PutMiddleName (
        _bstr_t MiddleName );
    _bstr_t GetMobileTelephoneNumber ( );
    void PutMobileTelephoneNumber (
        _bstr_t MobileTelephoneNumber );
    _bstr_t GetNetMeetingAlias ( );
    void PutNetMeetingAlias (
        _bstr_t NetMeetingAlias );
    _bstr_t GetNetMeetingServer ( );
    void PutNetMeetingServer (
        _bstr_t NetMeetingServer );
    _bstr_t GetNickName ( );
    void PutNickName (
        _bstr_t NickName );
    _bstr_t GetOfficeLocation ( );
    void PutOfficeLocation (
        _bstr_t OfficeLocation );
    _bstr_t GetOrganizationalIDNumber ( );
    void PutOrganizationalIDNumber (
        _bstr_t OrganizationalIDNumber );
    _bstr_t GetOtherAddress ( );
    void PutOtherAddress (
        _bstr_t OtherAddress );
    _bstr_t GetOtherAddressCity ( );
    void PutOtherAddressCity (
        _bstr_t OtherAddressCity );
    _bstr_t GetOtherAddressCountry ( );
    void PutOtherAddressCountry (
        _bstr_t OtherAddressCountry );
    _bstr_t GetOtherAddressPostalCode ( );
    void PutOtherAddressPostalCode (
        _bstr_t OtherAddressPostalCode );
    _bstr_t GetOtherAddressPostOfficeBox ( );
    void PutOtherAddressPostOfficeBox (
        _bstr_t OtherAddressPostOfficeBox );
    _bstr_t GetOtherAddressState ( );
    void PutOtherAddressState (
        _bstr_t OtherAddressState );
    _bstr_t GetOtherAddressStreet ( );
    void PutOtherAddressStreet (
        _bstr_t OtherAddressStreet );
    _bstr_t GetOtherFaxNumber ( );
    void PutOtherFaxNumber (
        _bstr_t OtherFaxNumber );
    _bstr_t GetOtherTelephoneNumber ( );
    void PutOtherTelephoneNumber (
        _bstr_t OtherTelephoneNumber );
    _bstr_t GetPagerNumber ( );
    void PutPagerNumber (
        _bstr_t PagerNumber );
    _bstr_t GetPersonalHomePage ( );
    void PutPersonalHomePage (
        _bstr_t PersonalHomePage );
    _bstr_t GetPrimaryTelephoneNumber ( );
    void PutPrimaryTelephoneNumber (
        _bstr_t PrimaryTelephoneNumber );
    _bstr_t GetProfession ( );
    void PutProfession (
        _bstr_t Profession );
    _bstr_t GetRadioTelephoneNumber ( );
    void PutRadioTelephoneNumber (
        _bstr_t RadioTelephoneNumber );
    _bstr_t GetReferredBy ( );
    void PutReferredBy (
        _bstr_t ReferredBy );
    enum OlMailingAddress GetSelectedMailingAddress ( );
    void PutSelectedMailingAddress (
        enum OlMailingAddress SelectedMailingAddress );
    _bstr_t GetSpouse ( );
    void PutSpouse (
        _bstr_t Spouse );
    _bstr_t GetSuffix ( );
    void PutSuffix (
        _bstr_t Suffix );
    _bstr_t GetTelexNumber ( );
    void PutTelexNumber (
        _bstr_t TelexNumber );
    _bstr_t GetTitle ( );
    void PutTitle (
        _bstr_t Title );
    _bstr_t GetTTYTDDTelephoneNumber ( );
    void PutTTYTDDTelephoneNumber (
        _bstr_t TTYTDDTelephoneNumber );
    _bstr_t GetUser1 ( );
    void PutUser1 (
        _bstr_t User1 );
    _bstr_t GetUser2 ( );
    void PutUser2 (
        _bstr_t User2 );
    _bstr_t GetUser3 ( );
    void PutUser3 (
        _bstr_t User3 );
    _bstr_t GetUser4 ( );
    void PutUser4 (
        _bstr_t User4 );
    _bstr_t GetUserCertificate ( );
    void PutUserCertificate (
        _bstr_t UserCertificate );
    _bstr_t GetWebPage ( );
    void PutWebPage (
        _bstr_t WebPage );
    _bstr_t GetYomiCompanyName ( );
    void PutYomiCompanyName (
        _bstr_t YomiCompanyName );
    _bstr_t GetYomiFirstName ( );
    void PutYomiFirstName (
        _bstr_t YomiFirstName );
    _bstr_t GetYomiLastName ( );
    void PutYomiLastName (
        _bstr_t YomiLastName );
    _MailItemPtr ForwardAsVcard ( );
    LinksPtr GetLinks ( );
    ItemPropertiesPtr GetItemProperties ( );
    _bstr_t GetLastFirstNoSpaceAndSuffix ( );
    enum OlDownloadState GetDownloadState ( );
    HRESULT ShowCategoriesDialog ( );
    _bstr_t GetIMAddress ( );
    void PutIMAddress (
        _bstr_t IMAddress );
    enum OlRemoteStatus GetMarkForDownload ( );
    void PutMarkForDownload (
        enum OlRemoteStatus MarkForDownload );
    void PutEmail1DisplayName (
        _bstr_t Email1DisplayName );
    void PutEmail2DisplayName (
        _bstr_t Email2DisplayName );
    void PutEmail3DisplayName (
        _bstr_t Email3DisplayName );
    VARIANT_BOOL GetIsConflict ( );
    VARIANT_BOOL GetAutoResolvedWinner ( );
    ConflictsPtr GetConflicts ( );
    HRESULT AddPicture (
        _bstr_t Path );
    HRESULT RemovePicture ( );
    VARIANT_BOOL GetHasPicture ( );
    _PropertyAccessorPtr GetPropertyAccessor ( );
    _MailItemPtr ForwardAsBusinessCard ( );
    HRESULT ShowBusinessCardEditor ( );
    HRESULT SaveBusinessCardImage (
        _bstr_t Path );
    HRESULT ShowCheckPhoneDialog (
        enum OlContactPhoneNumber PhoneNumber );
    _bstr_t GetTaskSubject ( );
    void PutTaskSubject (
        _bstr_t TaskSubject );
    DATE GetTaskDueDate ( );
    void PutTaskDueDate (
        DATE TaskDueDate );
    DATE GetTaskStartDate ( );
    void PutTaskStartDate (
        DATE TaskStartDate );
    DATE GetTaskCompletedDate ( );
    void PutTaskCompletedDate (
        DATE TaskCompletedDate );
    DATE GetToDoTaskOrdinal ( );
    void PutToDoTaskOrdinal (
        DATE ToDoTaskOrdinal );
    VARIANT_BOOL GetReminderOverrideDefault ( );
    void PutReminderOverrideDefault (
        VARIANT_BOOL ReminderOverrideDefault );
    VARIANT_BOOL GetReminderPlaySound ( );
    void PutReminderPlaySound (
        VARIANT_BOOL ReminderPlaySound );
    VARIANT_BOOL GetReminderSet ( );
    void PutReminderSet (
        VARIANT_BOOL ReminderSet );
    _bstr_t GetReminderSoundFile ( );
    void PutReminderSoundFile (
        _bstr_t ReminderSoundFile );
    DATE GetReminderTime ( );
    void PutReminderTime (
        DATE ReminderTime );
    HRESULT MarkAsTask (
        enum OlMarkInterval MarkInterval );
    HRESULT ClearTaskFlag ( );
    VARIANT_BOOL GetIsMarkedAsTask ( );
    _bstr_t GetBusinessCardLayoutXml ( );
    void PutBusinessCardLayoutXml (
        _bstr_t BusinessCardLayoutXml );
    HRESULT ResetBusinessCard ( );
    HRESULT AddBusinessCardLogoPicture (
        _bstr_t Path );
    enum OlBusinessCardType GetBusinessCardType ( );

    //
    // Raw methods provided by interface
    //

      virtual HRESULT __stdcall get_Application (
        /*[out,retval]*/ struct _Application * * Application ) = 0;
      virtual HRESULT __stdcall get_Class (
        /*[out,retval]*/ enum OlObjectClass * Class ) = 0;
      virtual HRESULT __stdcall get_Session (
        /*[out,retval]*/ struct _NameSpace * * Session ) = 0;
      virtual HRESULT __stdcall get_Parent (
        /*[out,retval]*/ IDispatch * * Parent ) = 0;
      virtual HRESULT __stdcall get_Actions (
        /*[out,retval]*/ struct Actions * * Actions ) = 0;
      virtual HRESULT __stdcall get_Attachments (
        /*[out,retval]*/ struct Attachments * * Attachments ) = 0;
      virtual HRESULT __stdcall get_BillingInformation (
        /*[out,retval]*/ BSTR * BillingInformation ) = 0;
      virtual HRESULT __stdcall put_BillingInformation (
        /*[in]*/ BSTR BillingInformation ) = 0;
      virtual HRESULT __stdcall get_Body (
        /*[out,retval]*/ BSTR * Body ) = 0;
      virtual HRESULT __stdcall put_Body (
        /*[in]*/ BSTR Body ) = 0;
      virtual HRESULT __stdcall get_Categories (
        /*[out,retval]*/ BSTR * Categories ) = 0;
      virtual HRESULT __stdcall put_Categories (
        /*[in]*/ BSTR Categories ) = 0;
      virtual HRESULT __stdcall get_Companies (
        /*[out,retval]*/ BSTR * Companies ) = 0;
      virtual HRESULT __stdcall put_Companies (
        /*[in]*/ BSTR Companies ) = 0;
      virtual HRESULT __stdcall get_ConversationIndex (
        /*[out,retval]*/ BSTR * ConversationIndex ) = 0;
      virtual HRESULT __stdcall get_ConversationTopic (
        /*[out,retval]*/ BSTR * ConversationTopic ) = 0;
      virtual HRESULT __stdcall get_CreationTime (
        /*[out,retval]*/ DATE * CreationTime ) = 0;
      virtual HRESULT __stdcall get_EntryID (
        /*[out,retval]*/ BSTR * EntryID ) = 0;
      virtual HRESULT __stdcall get_FormDescription (
        /*[out,retval]*/ struct FormDescription * * FormDescription ) = 0;
      virtual HRESULT __stdcall get_GetInspector (
        /*[out,retval]*/ struct _Inspector * * GetInspector ) = 0;
      virtual HRESULT __stdcall get_Importance (
        /*[out,retval]*/ enum OlImportance * Importance ) = 0;
      virtual HRESULT __stdcall put_Importance (
        /*[in]*/ enum OlImportance Importance ) = 0;
      virtual HRESULT __stdcall get_LastModificationTime (
        /*[out,retval]*/ DATE * LastModificationTime ) = 0;
      virtual HRESULT __stdcall get_MAPIOBJECT (
        /*[out,retval]*/ IUnknown * * MAPIOBJECT ) = 0;
      virtual HRESULT __stdcall get_MessageClass (
        /*[out,retval]*/ BSTR * MessageClass ) = 0;
      virtual HRESULT __stdcall put_MessageClass (
        /*[in]*/ BSTR MessageClass ) = 0;
      virtual HRESULT __stdcall get_Mileage (
        /*[out,retval]*/ BSTR * Mileage ) = 0;
      virtual HRESULT __stdcall put_Mileage (
        /*[in]*/ BSTR Mileage ) = 0;
      virtual HRESULT __stdcall get_NoAging (
        /*[out,retval]*/ VARIANT_BOOL * NoAging ) = 0;
      virtual HRESULT __stdcall put_NoAging (
        /*[in]*/ VARIANT_BOOL NoAging ) = 0;
      virtual HRESULT __stdcall get_OutlookInternalVersion (
        /*[out,retval]*/ long * OutlookInternalVersion ) = 0;
      virtual HRESULT __stdcall get_OutlookVersion (
        /*[out,retval]*/ BSTR * OutlookVersion ) = 0;
      virtual HRESULT __stdcall get_Saved (
        /*[out,retval]*/ VARIANT_BOOL * Saved ) = 0;
      virtual HRESULT __stdcall get_Sensitivity (
        /*[out,retval]*/ enum OlSensitivity * Sensitivity ) = 0;
      virtual HRESULT __stdcall put_Sensitivity (
        /*[in]*/ enum OlSensitivity Sensitivity ) = 0;
      virtual HRESULT __stdcall get_Size (
        /*[out,retval]*/ long * Size ) = 0;
      virtual HRESULT __stdcall get_Subject (
        /*[out,retval]*/ BSTR * Subject ) = 0;
      virtual HRESULT __stdcall put_Subject (
        /*[in]*/ BSTR Subject ) = 0;
      virtual HRESULT __stdcall get_UnRead (
        /*[out,retval]*/ VARIANT_BOOL * UnRead ) = 0;
      virtual HRESULT __stdcall put_UnRead (
        /*[in]*/ VARIANT_BOOL UnRead ) = 0;
      virtual HRESULT __stdcall get_UserProperties (
        /*[out,retval]*/ struct UserProperties * * UserProperties ) = 0;
      virtual HRESULT __stdcall raw_Close (
        /*[in]*/ enum OlInspectorClose SaveMode ) = 0;
      virtual HRESULT __stdcall raw_Copy (
        /*[out,retval]*/ IDispatch * * Item ) = 0;
      virtual HRESULT __stdcall raw_Delete ( ) = 0;
      virtual HRESULT __stdcall raw_Display (
        /*[in]*/ VARIANT Modal = vtMissing ) = 0;
      virtual HRESULT __stdcall raw_Move (
        /*[in]*/ struct MAPIFolder * DestFldr,
        /*[out,retval]*/ IDispatch * * Item ) = 0;
      virtual HRESULT __stdcall raw_PrintOut ( ) = 0;
      virtual HRESULT __stdcall raw_Save ( ) = 0;
      virtual HRESULT __stdcall raw_SaveAs (
        /*[in]*/ BSTR Path,
        /*[in]*/ VARIANT Type = vtMissing ) = 0;
      virtual HRESULT __stdcall get_Account (
        /*[out,retval]*/ BSTR * Account ) = 0;
      virtual HRESULT __stdcall put_Account (
        /*[in]*/ BSTR Account ) = 0;
      virtual HRESULT __stdcall get_Anniversary (
        /*[out,retval]*/ DATE * Anniversary ) = 0;
      virtual HRESULT __stdcall put_Anniversary (
        /*[in]*/ DATE Anniversary ) = 0;
      virtual HRESULT __stdcall get_AssistantName (
        /*[out,retval]*/ BSTR * AssistantName ) = 0;
      virtual HRESULT __stdcall put_AssistantName (
        /*[in]*/ BSTR AssistantName ) = 0;
      virtual HRESULT __stdcall get_AssistantTelephoneNumber (
        /*[out,retval]*/ BSTR * AssistantTelephoneNumber ) = 0;
      virtual HRESULT __stdcall put_AssistantTelephoneNumber (
        /*[in]*/ BSTR AssistantTelephoneNumber ) = 0;
      virtual HRESULT __stdcall get_Birthday (
        /*[out,retval]*/ DATE * Birthday ) = 0;
      virtual HRESULT __stdcall put_Birthday (
        /*[in]*/ DATE Birthday ) = 0;
      virtual HRESULT __stdcall get_Business2TelephoneNumber (
        /*[out,retval]*/ BSTR * Business2TelephoneNumber ) = 0;
      virtual HRESULT __stdcall put_Business2TelephoneNumber (
        /*[in]*/ BSTR Business2TelephoneNumber ) = 0;
      virtual HRESULT __stdcall get_BusinessAddress (
        /*[out,retval]*/ BSTR * BusinessAddress ) = 0;
      virtual HRESULT __stdcall put_BusinessAddress (
        /*[in]*/ BSTR BusinessAddress ) = 0;
      virtual HRESULT __stdcall get_BusinessAddressCity (
        /*[out,retval]*/ BSTR * BusinessAddressCity ) = 0;
      virtual HRESULT __stdcall put_BusinessAddressCity (
        /*[in]*/ BSTR BusinessAddressCity ) = 0;
      virtual HRESULT __stdcall get_BusinessAddressCountry (
        /*[out,retval]*/ BSTR * BusinessAddressCountry ) = 0;
      virtual HRESULT __stdcall put_BusinessAddressCountry (
        /*[in]*/ BSTR BusinessAddressCountry ) = 0;
      virtual HRESULT __stdcall get_BusinessAddressPostalCode (
        /*[out,retval]*/ BSTR * BusinessAddressPostalCode ) = 0;
      virtual HRESULT __stdcall put_BusinessAddressPostalCode (
        /*[in]*/ BSTR BusinessAddressPostalCode ) = 0;
      virtual HRESULT __stdcall get_BusinessAddressPostOfficeBox (
        /*[out,retval]*/ BSTR * BusinessAddressPostOfficeBox ) = 0;
      virtual HRESULT __stdcall put_BusinessAddressPostOfficeBox (
        /*[in]*/ BSTR BusinessAddressPostOfficeBox ) = 0;
      virtual HRESULT __stdcall get_BusinessAddressState (
        /*[out,retval]*/ BSTR * BusinessAddressState ) = 0;
      virtual HRESULT __stdcall put_BusinessAddressState (
        /*[in]*/ BSTR BusinessAddressState ) = 0;
      virtual HRESULT __stdcall get_BusinessAddressStreet (
        /*[out,retval]*/ BSTR * BusinessAddressStreet ) = 0;
      virtual HRESULT __stdcall put_BusinessAddressStreet (
        /*[in]*/ BSTR BusinessAddressStreet ) = 0;
      virtual HRESULT __stdcall get_BusinessFaxNumber (
        /*[out,retval]*/ BSTR * BusinessFaxNumber ) = 0;
      virtual HRESULT __stdcall put_BusinessFaxNumber (
        /*[in]*/ BSTR BusinessFaxNumber ) = 0;
      virtual HRESULT __stdcall get_BusinessHomePage (
        /*[out,retval]*/ BSTR * BusinessHomePage ) = 0;
      virtual HRESULT __stdcall put_BusinessHomePage (
        /*[in]*/ BSTR BusinessHomePage ) = 0;
      virtual HRESULT __stdcall get_BusinessTelephoneNumber (
        /*[out,retval]*/ BSTR * BusinessTelephoneNumber ) = 0;
      virtual HRESULT __stdcall put_BusinessTelephoneNumber (
        /*[in]*/ BSTR BusinessTelephoneNumber ) = 0;
      virtual HRESULT __stdcall get_CallbackTelephoneNumber (
        /*[out,retval]*/ BSTR * CallbackTelephoneNumber ) = 0;
      virtual HRESULT __stdcall put_CallbackTelephoneNumber (
        /*[in]*/ BSTR CallbackTelephoneNumber ) = 0;
      virtual HRESULT __stdcall get_CarTelephoneNumber (
        /*[out,retval]*/ BSTR * CarTelephoneNumber ) = 0;
      virtual HRESULT __stdcall put_CarTelephoneNumber (
        /*[in]*/ BSTR CarTelephoneNumber ) = 0;
      virtual HRESULT __stdcall get_Children (
        /*[out,retval]*/ BSTR * Children ) = 0;
      virtual HRESULT __stdcall put_Children (
        /*[in]*/ BSTR Children ) = 0;
      virtual HRESULT __stdcall get_CompanyAndFullName (
        /*[out,retval]*/ BSTR * CompanyAndFullName ) = 0;
      virtual HRESULT __stdcall get_CompanyLastFirstNoSpace (
        /*[out,retval]*/ BSTR * CompanyLastFirstNoSpace ) = 0;
      virtual HRESULT __stdcall get_CompanyLastFirstSpaceOnly (
        /*[out,retval]*/ BSTR * CompanyLastFirstSpaceOnly ) = 0;
      virtual HRESULT __stdcall get_CompanyMainTelephoneNumber (
        /*[out,retval]*/ BSTR * CompanyMainTelephoneNumber ) = 0;
      virtual HRESULT __stdcall put_CompanyMainTelephoneNumber (
        /*[in]*/ BSTR CompanyMainTelephoneNumber ) = 0;
      virtual HRESULT __stdcall get_CompanyName (
        /*[out,retval]*/ BSTR * CompanyName ) = 0;
      virtual HRESULT __stdcall put_CompanyName (
        /*[in]*/ BSTR CompanyName ) = 0;
      virtual HRESULT __stdcall get_ComputerNetworkName (
        /*[out,retval]*/ BSTR * ComputerNetworkName ) = 0;
      virtual HRESULT __stdcall put_ComputerNetworkName (
        /*[in]*/ BSTR ComputerNetworkName ) = 0;
      virtual HRESULT __stdcall get_CustomerID (
        /*[out,retval]*/ BSTR * CustomerID ) = 0;
      virtual HRESULT __stdcall put_CustomerID (
        /*[in]*/ BSTR CustomerID ) = 0;
      virtual HRESULT __stdcall get_Department (
        /*[out,retval]*/ BSTR * Department ) = 0;
      virtual HRESULT __stdcall put_Department (
        /*[in]*/ BSTR Department ) = 0;
      virtual HRESULT __stdcall get_Email1Address (
        /*[out,retval]*/ BSTR * Email1Address ) = 0;
      virtual HRESULT __stdcall put_Email1Address (
        /*[in]*/ BSTR Email1Address ) = 0;
      virtual HRESULT __stdcall get_Email1AddressType (
        /*[out,retval]*/ BSTR * Email1AddressType ) = 0;
      virtual HRESULT __stdcall put_Email1AddressType (
        /*[in]*/ BSTR Email1AddressType ) = 0;
      virtual HRESULT __stdcall get_Email1DisplayName (
        /*[out,retval]*/ BSTR * Email1DisplayName ) = 0;
      virtual HRESULT __stdcall get_Email1EntryID (
        /*[out,retval]*/ BSTR * Email1EntryID ) = 0;
      virtual HRESULT __stdcall get_Email2Address (
        /*[out,retval]*/ BSTR * Email2Address ) = 0;
      virtual HRESULT __stdcall put_Email2Address (
        /*[in]*/ BSTR Email2Address ) = 0;
      virtual HRESULT __stdcall get_Email2AddressType (
        /*[out,retval]*/ BSTR * Email2AddressType ) = 0;
      virtual HRESULT __stdcall put_Email2AddressType (
        /*[in]*/ BSTR Email2AddressType ) = 0;
      virtual HRESULT __stdcall get_Email2DisplayName (
        /*[out,retval]*/ BSTR * Email2DisplayName ) = 0;
      virtual HRESULT __stdcall get_Email2EntryID (
        /*[out,retval]*/ BSTR * Email2EntryID ) = 0;
      virtual HRESULT __stdcall get_Email3Address (
        /*[out,retval]*/ BSTR * Email3Address ) = 0;
      virtual HRESULT __stdcall put_Email3Address (
        /*[in]*/ BSTR Email3Address ) = 0;
      virtual HRESULT __stdcall get_Email3AddressType (
        /*[out,retval]*/ BSTR * Email3AddressType ) = 0;
      virtual HRESULT __stdcall put_Email3AddressType (
        /*[in]*/ BSTR Email3AddressType ) = 0;
      virtual HRESULT __stdcall get_Email3DisplayName (
        /*[out,retval]*/ BSTR * Email3DisplayName ) = 0;
      virtual HRESULT __stdcall get_Email3EntryID (
        /*[out,retval]*/ BSTR * Email3EntryID ) = 0;
      virtual HRESULT __stdcall get_FileAs (
        /*[out,retval]*/ BSTR * FileAs ) = 0;
      virtual HRESULT __stdcall put_FileAs (
        /*[in]*/ BSTR FileAs ) = 0;
      virtual HRESULT __stdcall get_FirstName (
        /*[out,retval]*/ BSTR * FirstName ) = 0;
      virtual HRESULT __stdcall put_FirstName (
        /*[in]*/ BSTR FirstName ) = 0;
      virtual HRESULT __stdcall get_FTPSite (
        /*[out,retval]*/ BSTR * FTPSite ) = 0;
      virtual HRESULT __stdcall put_FTPSite (
        /*[in]*/ BSTR FTPSite ) = 0;
      virtual HRESULT __stdcall get_FullName (
        /*[out,retval]*/ BSTR * FullName ) = 0;
      virtual HRESULT __stdcall put_FullName (
        /*[in]*/ BSTR FullName ) = 0;
      virtual HRESULT __stdcall get_FullNameAndCompany (
        /*[out,retval]*/ BSTR * FullNameAndCompany ) = 0;
      virtual HRESULT __stdcall get_Gender (
        /*[out,retval]*/ enum OlGender * Gender ) = 0;
      virtual HRESULT __stdcall put_Gender (
        /*[in]*/ enum OlGender Gender ) = 0;
      virtual HRESULT __stdcall get_GovernmentIDNumber (
        /*[out,retval]*/ BSTR * GovernmentIDNumber ) = 0;
      virtual HRESULT __stdcall put_GovernmentIDNumber (
        /*[in]*/ BSTR GovernmentIDNumber ) = 0;
      virtual HRESULT __stdcall get_Hobby (
        /*[out,retval]*/ BSTR * Hobby ) = 0;
      virtual HRESULT __stdcall put_Hobby (
        /*[in]*/ BSTR Hobby ) = 0;
      virtual HRESULT __stdcall get_Home2TelephoneNumber (
        /*[out,retval]*/ BSTR * Home2TelephoneNumber ) = 0;
      virtual HRESULT __stdcall put_Home2TelephoneNumber (
        /*[in]*/ BSTR Home2TelephoneNumber ) = 0;
      virtual HRESULT __stdcall get_HomeAddress (
        /*[out,retval]*/ BSTR * HomeAddress ) = 0;
      virtual HRESULT __stdcall put_HomeAddress (
        /*[in]*/ BSTR HomeAddress ) = 0;
      virtual HRESULT __stdcall get_HomeAddressCity (
        /*[out,retval]*/ BSTR * HomeAddressCity ) = 0;
      virtual HRESULT __stdcall put_HomeAddressCity (
        /*[in]*/ BSTR HomeAddressCity ) = 0;
      virtual HRESULT __stdcall get_HomeAddressCountry (
        /*[out,retval]*/ BSTR * HomeAddressCountry ) = 0;
      virtual HRESULT __stdcall put_HomeAddressCountry (
        /*[in]*/ BSTR HomeAddressCountry ) = 0;
      virtual HRESULT __stdcall get_HomeAddressPostalCode (
        /*[out,retval]*/ BSTR * HomeAddressPostalCode ) = 0;
      virtual HRESULT __stdcall put_HomeAddressPostalCode (
        /*[in]*/ BSTR HomeAddressPostalCode ) = 0;
      virtual HRESULT __stdcall get_HomeAddressPostOfficeBox (
        /*[out,retval]*/ BSTR * HomeAddressPostOfficeBox ) = 0;
      virtual HRESULT __stdcall put_HomeAddressPostOfficeBox (
        /*[in]*/ BSTR HomeAddressPostOfficeBox ) = 0;
      virtual HRESULT __stdcall get_HomeAddressState (
        /*[out,retval]*/ BSTR * HomeAddressState ) = 0;
      virtual HRESULT __stdcall put_HomeAddressState (
        /*[in]*/ BSTR HomeAddressState ) = 0;
      virtual HRESULT __stdcall get_HomeAddressStreet (
        /*[out,retval]*/ BSTR * HomeAddressStreet ) = 0;
      virtual HRESULT __stdcall put_HomeAddressStreet (
        /*[in]*/ BSTR HomeAddressStreet ) = 0;
      virtual HRESULT __stdcall get_HomeFaxNumber (
        /*[out,retval]*/ BSTR * HomeFaxNumber ) = 0;
      virtual HRESULT __stdcall put_HomeFaxNumber (
        /*[in]*/ BSTR HomeFaxNumber ) = 0;
      virtual HRESULT __stdcall get_HomeTelephoneNumber (
        /*[out,retval]*/ BSTR * HomeTelephoneNumber ) = 0;
      virtual HRESULT __stdcall put_HomeTelephoneNumber (
        /*[in]*/ BSTR HomeTelephoneNumber ) = 0;
      virtual HRESULT __stdcall get_Initials (
        /*[out,retval]*/ BSTR * Initials ) = 0;
      virtual HRESULT __stdcall put_Initials (
        /*[in]*/ BSTR Initials ) = 0;
      virtual HRESULT __stdcall get_InternetFreeBusyAddress (
        /*[out,retval]*/ BSTR * InternetFreeBusyAddress ) = 0;
      virtual HRESULT __stdcall put_InternetFreeBusyAddress (
        /*[in]*/ BSTR InternetFreeBusyAddress ) = 0;
      virtual HRESULT __stdcall get_ISDNNumber (
        /*[out,retval]*/ BSTR * ISDNNumber ) = 0;
      virtual HRESULT __stdcall put_ISDNNumber (
        /*[in]*/ BSTR ISDNNumber ) = 0;
      virtual HRESULT __stdcall get_JobTitle (
        /*[out,retval]*/ BSTR * JobTitle ) = 0;
      virtual HRESULT __stdcall put_JobTitle (
        /*[in]*/ BSTR JobTitle ) = 0;
      virtual HRESULT __stdcall get_Journal (
        /*[out,retval]*/ VARIANT_BOOL * Journal ) = 0;
      virtual HRESULT __stdcall put_Journal (
        /*[in]*/ VARIANT_BOOL Journal ) = 0;
      virtual HRESULT __stdcall get_Language (
        /*[out,retval]*/ BSTR * Language ) = 0;
      virtual HRESULT __stdcall put_Language (
        /*[in]*/ BSTR Language ) = 0;
      virtual HRESULT __stdcall get_LastFirstAndSuffix (
        /*[out,retval]*/ BSTR * LastFirstAndSuffix ) = 0;
      virtual HRESULT __stdcall get_LastFirstNoSpace (
        /*[out,retval]*/ BSTR * LastFirstNoSpace ) = 0;
      virtual HRESULT __stdcall get_LastFirstNoSpaceCompany (
        /*[out,retval]*/ BSTR * LastFirstNoSpaceCompany ) = 0;
      virtual HRESULT __stdcall get_LastFirstSpaceOnly (
        /*[out,retval]*/ BSTR * LastFirstSpaceOnly ) = 0;
      virtual HRESULT __stdcall get_LastFirstSpaceOnlyCompany (
        /*[out,retval]*/ BSTR * LastFirstSpaceOnlyCompany ) = 0;
      virtual HRESULT __stdcall get_LastName (
        /*[out,retval]*/ BSTR * LastName ) = 0;
      virtual HRESULT __stdcall put_LastName (
        /*[in]*/ BSTR LastName ) = 0;
      virtual HRESULT __stdcall get_LastNameAndFirstName (
        /*[out,retval]*/ BSTR * LastNameAndFirstName ) = 0;
      virtual HRESULT __stdcall get_MailingAddress (
        /*[out,retval]*/ BSTR * MailingAddress ) = 0;
      virtual HRESULT __stdcall put_MailingAddress (
        /*[in]*/ BSTR MailingAddress ) = 0;
      virtual HRESULT __stdcall get_MailingAddressCity (
        /*[out,retval]*/ BSTR * MailingAddressCity ) = 0;
      virtual HRESULT __stdcall put_MailingAddressCity (
        /*[in]*/ BSTR MailingAddressCity ) = 0;
      virtual HRESULT __stdcall get_MailingAddressCountry (
        /*[out,retval]*/ BSTR * MailingAddressCountry ) = 0;
      virtual HRESULT __stdcall put_MailingAddressCountry (
        /*[in]*/ BSTR MailingAddressCountry ) = 0;
      virtual HRESULT __stdcall get_MailingAddressPostalCode (
        /*[out,retval]*/ BSTR * MailingAddressPostalCode ) = 0;
      virtual HRESULT __stdcall put_MailingAddressPostalCode (
        /*[in]*/ BSTR MailingAddressPostalCode ) = 0;
      virtual HRESULT __stdcall get_MailingAddressPostOfficeBox (
        /*[out,retval]*/ BSTR * MailingAddressPostOfficeBox ) = 0;
      virtual HRESULT __stdcall put_MailingAddressPostOfficeBox (
        /*[in]*/ BSTR MailingAddressPostOfficeBox ) = 0;
      virtual HRESULT __stdcall get_MailingAddressState (
        /*[out,retval]*/ BSTR * MailingAddressState ) = 0;
      virtual HRESULT __stdcall put_MailingAddressState (
        /*[in]*/ BSTR MailingAddressState ) = 0;
      virtual HRESULT __stdcall get_MailingAddressStreet (
        /*[out,retval]*/ BSTR * MailingAddressStreet ) = 0;
      virtual HRESULT __stdcall put_MailingAddressStreet (
        /*[in]*/ BSTR MailingAddressStreet ) = 0;
      virtual HRESULT __stdcall get_ManagerName (
        /*[out,retval]*/ BSTR * ManagerName ) = 0;
      virtual HRESULT __stdcall put_ManagerName (
        /*[in]*/ BSTR ManagerName ) = 0;
      virtual HRESULT __stdcall get_MiddleName (
        /*[out,retval]*/ BSTR * MiddleName ) = 0;
      virtual HRESULT __stdcall put_MiddleName (
        /*[in]*/ BSTR MiddleName ) = 0;
      virtual HRESULT __stdcall get_MobileTelephoneNumber (
        /*[out,retval]*/ BSTR * MobileTelephoneNumber ) = 0;
      virtual HRESULT __stdcall put_MobileTelephoneNumber (
        /*[in]*/ BSTR MobileTelephoneNumber ) = 0;
      virtual HRESULT __stdcall get_NetMeetingAlias (
        /*[out,retval]*/ BSTR * NetMeetingAlias ) = 0;
      virtual HRESULT __stdcall put_NetMeetingAlias (
        /*[in]*/ BSTR NetMeetingAlias ) = 0;
      virtual HRESULT __stdcall get_NetMeetingServer (
        /*[out,retval]*/ BSTR * NetMeetingServer ) = 0;
      virtual HRESULT __stdcall put_NetMeetingServer (
        /*[in]*/ BSTR NetMeetingServer ) = 0;
      virtual HRESULT __stdcall get_NickName (
        /*[out,retval]*/ BSTR * NickName ) = 0;
      virtual HRESULT __stdcall put_NickName (
        /*[in]*/ BSTR NickName ) = 0;
      virtual HRESULT __stdcall get_OfficeLocation (
        /*[out,retval]*/ BSTR * OfficeLocation ) = 0;
      virtual HRESULT __stdcall put_OfficeLocation (
        /*[in]*/ BSTR OfficeLocation ) = 0;
      virtual HRESULT __stdcall get_OrganizationalIDNumber (
        /*[out,retval]*/ BSTR * OrganizationalIDNumber ) = 0;
      virtual HRESULT __stdcall put_OrganizationalIDNumber (
        /*[in]*/ BSTR OrganizationalIDNumber ) = 0;
      virtual HRESULT __stdcall get_OtherAddress (
        /*[out,retval]*/ BSTR * OtherAddress ) = 0;
      virtual HRESULT __stdcall put_OtherAddress (
        /*[in]*/ BSTR OtherAddress ) = 0;
      virtual HRESULT __stdcall get_OtherAddressCity (
        /*[out,retval]*/ BSTR * OtherAddressCity ) = 0;
      virtual HRESULT __stdcall put_OtherAddressCity (
        /*[in]*/ BSTR OtherAddressCity ) = 0;
      virtual HRESULT __stdcall get_OtherAddressCountry (
        /*[out,retval]*/ BSTR * OtherAddressCountry ) = 0;
      virtual HRESULT __stdcall put_OtherAddressCountry (
        /*[in]*/ BSTR OtherAddressCountry ) = 0;
      virtual HRESULT __stdcall get_OtherAddressPostalCode (
        /*[out,retval]*/ BSTR * OtherAddressPostalCode ) = 0;
      virtual HRESULT __stdcall put_OtherAddressPostalCode (
        /*[in]*/ BSTR OtherAddressPostalCode ) = 0;
      virtual HRESULT __stdcall get_OtherAddressPostOfficeBox (
        /*[out,retval]*/ BSTR * OtherAddressPostOfficeBox ) = 0;
      virtual HRESULT __stdcall put_OtherAddressPostOfficeBox (
        /*[in]*/ BSTR OtherAddressPostOfficeBox ) = 0;
      virtual HRESULT __stdcall get_OtherAddressState (
        /*[out,retval]*/ BSTR * OtherAddressState ) = 0;
      virtual HRESULT __stdcall put_OtherAddressState (
        /*[in]*/ BSTR OtherAddressState ) = 0;
      virtual HRESULT __stdcall get_OtherAddressStreet (
        /*[out,retval]*/ BSTR * OtherAddressStreet ) = 0;
      virtual HRESULT __stdcall put_OtherAddressStreet (
        /*[in]*/ BSTR OtherAddressStreet ) = 0;
      virtual HRESULT __stdcall get_OtherFaxNumber (
        /*[out,retval]*/ BSTR * OtherFaxNumber ) = 0;
      virtual HRESULT __stdcall put_OtherFaxNumber (
        /*[in]*/ BSTR OtherFaxNumber ) = 0;
      virtual HRESULT __stdcall get_OtherTelephoneNumber (
        /*[out,retval]*/ BSTR * OtherTelephoneNumber ) = 0;
      virtual HRESULT __stdcall put_OtherTelephoneNumber (
        /*[in]*/ BSTR OtherTelephoneNumber ) = 0;
      virtual HRESULT __stdcall get_PagerNumber (
        /*[out,retval]*/ BSTR * PagerNumber ) = 0;
      virtual HRESULT __stdcall put_PagerNumber (
        /*[in]*/ BSTR PagerNumber ) = 0;
      virtual HRESULT __stdcall get_PersonalHomePage (
        /*[out,retval]*/ BSTR * PersonalHomePage ) = 0;
      virtual HRESULT __stdcall put_PersonalHomePage (
        /*[in]*/ BSTR PersonalHomePage ) = 0;
      virtual HRESULT __stdcall get_PrimaryTelephoneNumber (
        /*[out,retval]*/ BSTR * PrimaryTelephoneNumber ) = 0;
      virtual HRESULT __stdcall put_PrimaryTelephoneNumber (
        /*[in]*/ BSTR PrimaryTelephoneNumber ) = 0;
      virtual HRESULT __stdcall get_Profession (
        /*[out,retval]*/ BSTR * Profession ) = 0;
      virtual HRESULT __stdcall put_Profession (
        /*[in]*/ BSTR Profession ) = 0;
      virtual HRESULT __stdcall get_RadioTelephoneNumber (
        /*[out,retval]*/ BSTR * RadioTelephoneNumber ) = 0;
      virtual HRESULT __stdcall put_RadioTelephoneNumber (
        /*[in]*/ BSTR RadioTelephoneNumber ) = 0;
      virtual HRESULT __stdcall get_ReferredBy (
        /*[out,retval]*/ BSTR * ReferredBy ) = 0;
      virtual HRESULT __stdcall put_ReferredBy (
        /*[in]*/ BSTR ReferredBy ) = 0;
      virtual HRESULT __stdcall get_SelectedMailingAddress (
        /*[out,retval]*/ enum OlMailingAddress * SelectedMailingAddress ) = 0;
      virtual HRESULT __stdcall put_SelectedMailingAddress (
        /*[in]*/ enum OlMailingAddress SelectedMailingAddress ) = 0;
      virtual HRESULT __stdcall get_Spouse (
        /*[out,retval]*/ BSTR * Spouse ) = 0;
      virtual HRESULT __stdcall put_Spouse (
        /*[in]*/ BSTR Spouse ) = 0;
      virtual HRESULT __stdcall get_Suffix (
        /*[out,retval]*/ BSTR * Suffix ) = 0;
      virtual HRESULT __stdcall put_Suffix (
        /*[in]*/ BSTR Suffix ) = 0;
      virtual HRESULT __stdcall get_TelexNumber (
        /*[out,retval]*/ BSTR * TelexNumber ) = 0;
      virtual HRESULT __stdcall put_TelexNumber (
        /*[in]*/ BSTR TelexNumber ) = 0;
      virtual HRESULT __stdcall get_Title (
        /*[out,retval]*/ BSTR * Title ) = 0;
      virtual HRESULT __stdcall put_Title (
        /*[in]*/ BSTR Title ) = 0;
      virtual HRESULT __stdcall get_TTYTDDTelephoneNumber (
        /*[out,retval]*/ BSTR * TTYTDDTelephoneNumber ) = 0;
      virtual HRESULT __stdcall put_TTYTDDTelephoneNumber (
        /*[in]*/ BSTR TTYTDDTelephoneNumber ) = 0;
      virtual HRESULT __stdcall get_User1 (
        /*[out,retval]*/ BSTR * User1 ) = 0;
      virtual HRESULT __stdcall put_User1 (
        /*[in]*/ BSTR User1 ) = 0;
      virtual HRESULT __stdcall get_User2 (
        /*[out,retval]*/ BSTR * User2 ) = 0;
      virtual HRESULT __stdcall put_User2 (
        /*[in]*/ BSTR User2 ) = 0;
      virtual HRESULT __stdcall get_User3 (
        /*[out,retval]*/ BSTR * User3 ) = 0;
      virtual HRESULT __stdcall put_User3 (
        /*[in]*/ BSTR User3 ) = 0;
      virtual HRESULT __stdcall get_User4 (
        /*[out,retval]*/ BSTR * User4 ) = 0;
      virtual HRESULT __stdcall put_User4 (
        /*[in]*/ BSTR User4 ) = 0;
      virtual HRESULT __stdcall get_UserCertificate (
        /*[out,retval]*/ BSTR * UserCertificate ) = 0;
      virtual HRESULT __stdcall put_UserCertificate (
        /*[in]*/ BSTR UserCertificate ) = 0;
      virtual HRESULT __stdcall get_WebPage (
        /*[out,retval]*/ BSTR * WebPage ) = 0;
      virtual HRESULT __stdcall put_WebPage (
        /*[in]*/ BSTR WebPage ) = 0;
      virtual HRESULT __stdcall get_YomiCompanyName (
        /*[out,retval]*/ BSTR * YomiCompanyName ) = 0;
      virtual HRESULT __stdcall put_YomiCompanyName (
        /*[in]*/ BSTR YomiCompanyName ) = 0;
      virtual HRESULT __stdcall get_YomiFirstName (
        /*[out,retval]*/ BSTR * YomiFirstName ) = 0;
      virtual HRESULT __stdcall put_YomiFirstName (
        /*[in]*/ BSTR YomiFirstName ) = 0;
      virtual HRESULT __stdcall get_YomiLastName (
        /*[out,retval]*/ BSTR * YomiLastName ) = 0;
      virtual HRESULT __stdcall put_YomiLastName (
        /*[in]*/ BSTR YomiLastName ) = 0;
      virtual HRESULT __stdcall raw_ForwardAsVcard (
        /*[out,retval]*/ struct _MailItem * * Item ) = 0;
      virtual HRESULT __stdcall get_Links (
        /*[out,retval]*/ struct Links * * Links ) = 0;
      virtual HRESULT __stdcall get_ItemProperties (
        /*[out,retval]*/ struct ItemProperties * * ItemProperties ) = 0;
      virtual HRESULT __stdcall get_LastFirstNoSpaceAndSuffix (
        /*[out,retval]*/ BSTR * LastFirstNoSpaceAndSuffix ) = 0;
      virtual HRESULT __stdcall get_DownloadState (
        /*[out,retval]*/ enum OlDownloadState * DownloadState ) = 0;
      virtual HRESULT __stdcall raw_ShowCategoriesDialog ( ) = 0;
      virtual HRESULT __stdcall get_IMAddress (
        /*[out,retval]*/ BSTR * IMAddress ) = 0;
      virtual HRESULT __stdcall put_IMAddress (
        /*[in]*/ BSTR IMAddress ) = 0;
      virtual HRESULT __stdcall get_MarkForDownload (
        /*[out,retval]*/ enum OlRemoteStatus * MarkForDownload ) = 0;
      virtual HRESULT __stdcall put_MarkForDownload (
        /*[in]*/ enum OlRemoteStatus MarkForDownload ) = 0;
      virtual HRESULT __stdcall put_Email1DisplayName (
        /*[in]*/ BSTR Email1DisplayName ) = 0;
      virtual HRESULT __stdcall put_Email2DisplayName (
        /*[in]*/ BSTR Email2DisplayName ) = 0;
      virtual HRESULT __stdcall put_Email3DisplayName (
        /*[in]*/ BSTR Email3DisplayName ) = 0;
      virtual HRESULT __stdcall get_IsConflict (
        /*[out,retval]*/ VARIANT_BOOL * IsConflict ) = 0;
      virtual HRESULT __stdcall get_AutoResolvedWinner (
        /*[out,retval]*/ VARIANT_BOOL * AutoResolvedWinner ) = 0;
      virtual HRESULT __stdcall get_Conflicts (
        /*[out,retval]*/ struct Conflicts * * Conflicts ) = 0;
      virtual HRESULT __stdcall raw_AddPicture (
        /*[in]*/ BSTR Path ) = 0;
      virtual HRESULT __stdcall raw_RemovePicture ( ) = 0;
      virtual HRESULT __stdcall get_HasPicture (
        /*[out,retval]*/ VARIANT_BOOL * HasPicture ) = 0;
      virtual HRESULT __stdcall get_PropertyAccessor (
        /*[out,retval]*/ struct _PropertyAccessor * * PropertyAccessor ) = 0;
      virtual HRESULT __stdcall raw_ForwardAsBusinessCard (
        /*[out,retval]*/ struct _MailItem * * Item ) = 0;
      virtual HRESULT __stdcall raw_ShowBusinessCardEditor ( ) = 0;
      virtual HRESULT __stdcall raw_SaveBusinessCardImage (
        /*[in]*/ BSTR Path ) = 0;
      virtual HRESULT __stdcall raw_ShowCheckPhoneDialog (
        /*[in]*/ enum OlContactPhoneNumber PhoneNumber ) = 0;
      virtual HRESULT __stdcall get_TaskSubject (
        /*[out,retval]*/ BSTR * TaskSubject ) = 0;
      virtual HRESULT __stdcall put_TaskSubject (
        /*[in]*/ BSTR TaskSubject ) = 0;
      virtual HRESULT __stdcall get_TaskDueDate (
        /*[out,retval]*/ DATE * TaskDueDate ) = 0;
      virtual HRESULT __stdcall put_TaskDueDate (
        /*[in]*/ DATE TaskDueDate ) = 0;
      virtual HRESULT __stdcall get_TaskStartDate (
        /*[out,retval]*/ DATE * TaskStartDate ) = 0;
      virtual HRESULT __stdcall put_TaskStartDate (
        /*[in]*/ DATE TaskStartDate ) = 0;
      virtual HRESULT __stdcall get_TaskCompletedDate (
        /*[out,retval]*/ DATE * TaskCompletedDate ) = 0;
      virtual HRESULT __stdcall put_TaskCompletedDate (
        /*[in]*/ DATE TaskCompletedDate ) = 0;
      virtual HRESULT __stdcall get_ToDoTaskOrdinal (
        /*[out,retval]*/ DATE * ToDoTaskOrdinal ) = 0;
      virtual HRESULT __stdcall put_ToDoTaskOrdinal (
        /*[in]*/ DATE ToDoTaskOrdinal ) = 0;
      virtual HRESULT __stdcall get_ReminderOverrideDefault (
        /*[out,retval]*/ VARIANT_BOOL * ReminderOverrideDefault ) = 0;
      virtual HRESULT __stdcall put_ReminderOverrideDefault (
        /*[in]*/ VARIANT_BOOL ReminderOverrideDefault ) = 0;
      virtual HRESULT __stdcall get_ReminderPlaySound (
        /*[out,retval]*/ VARIANT_BOOL * ReminderPlaySound ) = 0;
      virtual HRESULT __stdcall put_ReminderPlaySound (
        /*[in]*/ VARIANT_BOOL ReminderPlaySound ) = 0;
      virtual HRESULT __stdcall get_ReminderSet (
        /*[out,retval]*/ VARIANT_BOOL * ReminderSet ) = 0;
      virtual HRESULT __stdcall put_ReminderSet (
        /*[in]*/ VARIANT_BOOL ReminderSet ) = 0;
      virtual HRESULT __stdcall get_ReminderSoundFile (
        /*[out,retval]*/ BSTR * ReminderSoundFile ) = 0;
      virtual HRESULT __stdcall put_ReminderSoundFile (
        /*[in]*/ BSTR ReminderSoundFile ) = 0;
      virtual HRESULT __stdcall get_ReminderTime (
        /*[out,retval]*/ DATE * ReminderTime ) = 0;
      virtual HRESULT __stdcall put_ReminderTime (
        /*[in]*/ DATE ReminderTime ) = 0;
      virtual HRESULT __stdcall raw_MarkAsTask (
        /*[in]*/ enum OlMarkInterval MarkInterval ) = 0;
      virtual HRESULT __stdcall raw_ClearTaskFlag ( ) = 0;
      virtual HRESULT __stdcall get_IsMarkedAsTask (
        /*[out,retval]*/ VARIANT_BOOL * IsMarkedAsTask ) = 0;
      virtual HRESULT __stdcall get_BusinessCardLayoutXml (
        /*[out,retval]*/ BSTR * BusinessCardLayoutXml ) = 0;
      virtual HRESULT __stdcall put_BusinessCardLayoutXml (
        /*[in]*/ BSTR BusinessCardLayoutXml ) = 0;
      virtual HRESULT __stdcall raw_ResetBusinessCard ( ) = 0;
      virtual HRESULT __stdcall raw_AddBusinessCardLogoPicture (
        /*[in]*/ BSTR Path ) = 0;
      virtual HRESULT __stdcall get_BusinessCardType (
        /*[out,retval]*/ enum OlBusinessCardType * BusinessCardType ) = 0;
};

struct __declspec(uuid("000630c9-0000-0000-c000-000000000046"))
_ExchangeUser : IDispatch
{
    //
    // Property data
    //

    __declspec(property(get=GetApplication))
    _ApplicationPtr Application;
    __declspec(property(get=GetParent))
    IDispatchPtr Parent;
    __declspec(property(get=GetJobTitle,put=PutJobTitle))
    _bstr_t JobTitle;
    __declspec(property(get=GetYomiCompanyName,put=PutYomiCompanyName))
    _bstr_t YomiCompanyName;
    __declspec(property(get=GetYomiFirstName,put=PutYomiFirstName))
    _bstr_t YomiFirstName;
    __declspec(property(get=GetYomiLastName,put=PutYomiLastName))
    _bstr_t YomiLastName;
    __declspec(property(get=GetCity,put=PutCity))
    _bstr_t City;
    __declspec(property(get=GetStateOrProvince,put=PutStateOrProvince))
    _bstr_t StateOrProvince;
    __declspec(property(get=GetStreetAddress,put=PutStreetAddress))
    _bstr_t StreetAddress;
    __declspec(property(get=GetPostalCode,put=PutPostalCode))
    _bstr_t PostalCode;
    __declspec(property(get=GetClass))
    enum OlObjectClass Class;
    __declspec(property(get=GetSession))
    _NameSpacePtr Session;
    __declspec(property(get=GetDisplayType))
    enum OlDisplayType DisplayType;
    __declspec(property(get=GetMAPIOBJECT,put=PutMAPIOBJECT))
    IUnknownPtr MAPIOBJECT;
    __declspec(property(get=GetAssistantName,put=PutAssistantName))
    _bstr_t AssistantName;
    __declspec(property(get=GetAlias))
    _bstr_t Alias;
    __declspec(property(get=GetID))
    _bstr_t ID;
    __declspec(property(get=GetFirstName,put=PutFirstName))
    _bstr_t FirstName;
    __declspec(property(get=GetBusinessTelephoneNumber,put=PutBusinessTelephoneNumber))
    _bstr_t BusinessTelephoneNumber;
    __declspec(property(get=GetAddressEntryUserType))
    enum OlAddressEntryUserType AddressEntryUserType;
    __declspec(property(get=GetPrimarySmtpAddress))
    _bstr_t PrimarySmtpAddress;
    __declspec(property(get=GetLastName,put=PutLastName))
    _bstr_t LastName;
    __declspec(property(get=GetYomiDisplayName,put=PutYomiDisplayName))
    _bstr_t YomiDisplayName;
    __declspec(property(get=GetYomiDepartment,put=PutYomiDepartment))
    _bstr_t YomiDepartment;
    __declspec(property(get=GetName,put=PutName))
    _bstr_t Name;
    __declspec(property(get=GetType,put=PutType))
    _bstr_t Type;
    __declspec(property(get=GetAddress,put=PutAddress))
    _bstr_t Address;
    __declspec(property(get=GetDepartment,put=PutDepartment))
    _bstr_t Department;
    __declspec(property(get=GetOfficeLocation,put=PutOfficeLocation))
    _bstr_t OfficeLocation;
    __declspec(property(get=GetComments,put=PutComments))
    _bstr_t Comments;
    __declspec(property(get=GetPropertyAccessor))
    _PropertyAccessorPtr PropertyAccessor;
    __declspec(property(get=GetMobileTelephoneNumber,put=PutMobileTelephoneNumber))
    _bstr_t MobileTelephoneNumber;
    __declspec(property(get=GetManager))
    AddressEntryPtr Manager;
    __declspec(property(get=GetMembers))
    AddressEntriesPtr Members;
    __declspec(property(get=GetCompanyName,put=PutCompanyName))
    _bstr_t CompanyName;

    //
    // Wrapper methods for error-handling
    //

    _ApplicationPtr GetApplication ( );
    enum OlObjectClass GetClass ( );
    _NameSpacePtr GetSession ( );
    IDispatchPtr GetParent ( );
    _bstr_t GetAddress ( );
    void PutAddress (
        _bstr_t Address );
    enum OlDisplayType GetDisplayType ( );
    _bstr_t GetID ( );
    AddressEntryPtr GetManager ( );
    IUnknownPtr GetMAPIOBJECT ( );
    void PutMAPIOBJECT (
        IUnknown * MAPIOBJECT );
    AddressEntriesPtr GetMembers ( );
    _bstr_t GetName ( );
    void PutName (
        _bstr_t Name );
    _bstr_t GetType ( );
    void PutType (
        _bstr_t Type );
    HRESULT Delete ( );
    HRESULT Details (
        const _variant_t & HWnd = vtMissing );
    _bstr_t GetFreeBusy (
        DATE Start,
        long MinPerChar,
        const _variant_t & CompleteFormat = vtMissing );
    HRESULT Update (
        const _variant_t & MakePermanent = vtMissing,
        const _variant_t & Refresh = vtMissing );
    HRESULT UpdateFreeBusy ( );
    _ContactItemPtr GetContact ( );
    _ExchangeUserPtr GetExchangeUser ( );
    enum OlAddressEntryUserType GetAddressEntryUserType ( );
    _ExchangeDistributionListPtr GetExchangeDistributionList ( );
    _PropertyAccessorPtr GetPropertyAccessor ( );
    AddressEntriesPtr GetDirectReports ( );
    AddressEntriesPtr GetMemberOfList ( );
    _bstr_t GetAlias ( );
    _bstr_t GetAssistantName ( );
    void PutAssistantName (
        _bstr_t AssistantName );
    _bstr_t GetBusinessTelephoneNumber ( );
    void PutBusinessTelephoneNumber (
        _bstr_t BusinessTelephoneNumber );
    _bstr_t GetCity ( );
    void PutCity (
        _bstr_t City );
    _bstr_t GetComments ( );
    void PutComments (
        _bstr_t Comments );
    _bstr_t GetCompanyName ( );
    void PutCompanyName (
        _bstr_t CompanyName );
    _bstr_t GetDepartment ( );
    void PutDepartment (
        _bstr_t Department );
    _bstr_t GetFirstName ( );
    void PutFirstName (
        _bstr_t FirstName );
    _bstr_t GetJobTitle ( );
    void PutJobTitle (
        _bstr_t JobTitle );
    _bstr_t GetLastName ( );
    void PutLastName (
        _bstr_t LastName );
    _bstr_t GetMobileTelephoneNumber ( );
    void PutMobileTelephoneNumber (
        _bstr_t MobileTelephoneNumber );
    _bstr_t GetOfficeLocation ( );
    void PutOfficeLocation (
        _bstr_t OfficeLocation );
    _bstr_t GetPostalCode ( );
    void PutPostalCode (
        _bstr_t PostalCode );
    _bstr_t GetPrimarySmtpAddress ( );
    _bstr_t GetStateOrProvince ( );
    void PutStateOrProvince (
        _bstr_t StateOrProvince );
    _bstr_t GetStreetAddress ( );
    void PutStreetAddress (
        _bstr_t StreetAddress );
    _ExchangeUserPtr GetExchangeUserManager ( );
    _bstr_t GetYomiCompanyName ( );
    void PutYomiCompanyName (
        _bstr_t YomiCompanyName );
    _bstr_t GetYomiFirstName ( );
    void PutYomiFirstName (
        _bstr_t YomiFirstName );
    _bstr_t GetYomiLastName ( );
    void PutYomiLastName (
        _bstr_t YomiLastName );
    _bstr_t GetYomiDisplayName ( );
    void PutYomiDisplayName (
        _bstr_t YomiDisplayName );
    _bstr_t GetYomiDepartment ( );
    void PutYomiDepartment (
        _bstr_t YomiDepartment );

    //
    // Raw methods provided by interface
    //

      virtual HRESULT __stdcall get_Application (
        /*[out,retval]*/ struct _Application * * Application ) = 0;
      virtual HRESULT __stdcall get_Class (
        /*[out,retval]*/ enum OlObjectClass * Class ) = 0;
      virtual HRESULT __stdcall get_Session (
        /*[out,retval]*/ struct _NameSpace * * Session ) = 0;
      virtual HRESULT __stdcall get_Parent (
        /*[out,retval]*/ IDispatch * * Parent ) = 0;
      virtual HRESULT __stdcall get_Address (
        /*[out,retval]*/ BSTR * Address ) = 0;
      virtual HRESULT __stdcall put_Address (
        /*[in]*/ BSTR Address ) = 0;
      virtual HRESULT __stdcall get_DisplayType (
        /*[out,retval]*/ enum OlDisplayType * DisplayType ) = 0;
      virtual HRESULT __stdcall get_ID (
        /*[out,retval]*/ BSTR * ID ) = 0;
      virtual HRESULT __stdcall get_Manager (
        /*[out,retval]*/ struct AddressEntry * * Manager ) = 0;
      virtual HRESULT __stdcall get_MAPIOBJECT (
        /*[out,retval]*/ IUnknown * * MAPIOBJECT ) = 0;
      virtual HRESULT __stdcall put_MAPIOBJECT (
        /*[in]*/ IUnknown * MAPIOBJECT ) = 0;
      virtual HRESULT __stdcall get_Members (
        /*[out,retval]*/ struct AddressEntries * * Members ) = 0;
      virtual HRESULT __stdcall get_Name (
        /*[out,retval]*/ BSTR * Name ) = 0;
      virtual HRESULT __stdcall put_Name (
        /*[in]*/ BSTR Name ) = 0;
      virtual HRESULT __stdcall get_Type (
        /*[out,retval]*/ BSTR * Type ) = 0;
      virtual HRESULT __stdcall put_Type (
        /*[in]*/ BSTR Type ) = 0;
      virtual HRESULT __stdcall raw_Delete ( ) = 0;
      virtual HRESULT __stdcall raw_Details (
        /*[in]*/ VARIANT HWnd = vtMissing ) = 0;
      virtual HRESULT __stdcall raw_GetFreeBusy (
        /*[in]*/ DATE Start,
        /*[in]*/ long MinPerChar,
        /*[in]*/ VARIANT CompleteFormat,
        /*[out,retval]*/ BSTR * FreeBusyInfo ) = 0;
      virtual HRESULT __stdcall raw_Update (
        /*[in]*/ VARIANT MakePermanent = vtMissing,
        /*[in]*/ VARIANT Refresh = vtMissing ) = 0;
      virtual HRESULT __stdcall raw_UpdateFreeBusy ( ) = 0;
      virtual HRESULT __stdcall raw_GetContact (
        /*[out,retval]*/ struct _ContactItem * * ret ) = 0;
      virtual HRESULT __stdcall raw_GetExchangeUser (
        /*[out,retval]*/ struct _ExchangeUser * * ret ) = 0;
      virtual HRESULT __stdcall get_AddressEntryUserType (
        /*[out,retval]*/ enum OlAddressEntryUserType * AddressEntryUserType ) = 0;
      virtual HRESULT __stdcall raw_GetExchangeDistributionList (
        /*[out,retval]*/ struct _ExchangeDistributionList * * ret ) = 0;
      virtual HRESULT __stdcall get_PropertyAccessor (
        /*[out,retval]*/ struct _PropertyAccessor * * PropertyAccessor ) = 0;
      virtual HRESULT __stdcall raw_GetDirectReports (
        /*[out,retval]*/ struct AddressEntries * * ret ) = 0;
      virtual HRESULT __stdcall raw_GetMemberOfList (
        /*[out,retval]*/ struct AddressEntries * * ret ) = 0;
      virtual HRESULT __stdcall get_Alias (
        /*[out,retval]*/ BSTR * Alias ) = 0;
      virtual HRESULT __stdcall get_AssistantName (
        /*[out,retval]*/ BSTR * AssistantName ) = 0;
      virtual HRESULT __stdcall put_AssistantName (
        /*[in]*/ BSTR AssistantName ) = 0;
      virtual HRESULT __stdcall get_BusinessTelephoneNumber (
        /*[out,retval]*/ BSTR * BusinessTelephoneNumber ) = 0;
      virtual HRESULT __stdcall put_BusinessTelephoneNumber (
        /*[in]*/ BSTR BusinessTelephoneNumber ) = 0;
      virtual HRESULT __stdcall get_City (
        /*[out,retval]*/ BSTR * City ) = 0;
      virtual HRESULT __stdcall put_City (
        /*[in]*/ BSTR City ) = 0;
      virtual HRESULT __stdcall get_Comments (
        /*[out,retval]*/ BSTR * Comments ) = 0;
      virtual HRESULT __stdcall put_Comments (
        /*[in]*/ BSTR Comments ) = 0;
      virtual HRESULT __stdcall get_CompanyName (
        /*[out,retval]*/ BSTR * CompanyName ) = 0;
      virtual HRESULT __stdcall put_CompanyName (
        /*[in]*/ BSTR CompanyName ) = 0;
      virtual HRESULT __stdcall get_Department (
        /*[out,retval]*/ BSTR * Department ) = 0;
      virtual HRESULT __stdcall put_Department (
        /*[in]*/ BSTR Department ) = 0;
      virtual HRESULT __stdcall get_FirstName (
        /*[out,retval]*/ BSTR * FirstName ) = 0;
      virtual HRESULT __stdcall put_FirstName (
        /*[in]*/ BSTR FirstName ) = 0;
      virtual HRESULT __stdcall get_JobTitle (
        /*[out,retval]*/ BSTR * JobTitle ) = 0;
      virtual HRESULT __stdcall put_JobTitle (
        /*[in]*/ BSTR JobTitle ) = 0;
      virtual HRESULT __stdcall get_LastName (
        /*[out,retval]*/ BSTR * LastName ) = 0;
      virtual HRESULT __stdcall put_LastName (
        /*[in]*/ BSTR LastName ) = 0;
      virtual HRESULT __stdcall get_MobileTelephoneNumber (
        /*[out,retval]*/ BSTR * MobileTelephoneNumber ) = 0;
      virtual HRESULT __stdcall put_MobileTelephoneNumber (
        /*[in]*/ BSTR MobileTelephoneNumber ) = 0;
      virtual HRESULT __stdcall get_OfficeLocation (
        /*[out,retval]*/ BSTR * OfficeLocation ) = 0;
      virtual HRESULT __stdcall put_OfficeLocation (
        /*[in]*/ BSTR OfficeLocation ) = 0;
      virtual HRESULT __stdcall get_PostalCode (
        /*[out,retval]*/ BSTR * PostalCode ) = 0;
      virtual HRESULT __stdcall put_PostalCode (
        /*[in]*/ BSTR PostalCode ) = 0;
      virtual HRESULT __stdcall get_PrimarySmtpAddress (
        /*[out,retval]*/ BSTR * PrimarySmtpAddress ) = 0;
      virtual HRESULT __stdcall get_StateOrProvince (
        /*[out,retval]*/ BSTR * StateOrProvince ) = 0;
      virtual HRESULT __stdcall put_StateOrProvince (
        /*[in]*/ BSTR StateOrProvince ) = 0;
      virtual HRESULT __stdcall get_StreetAddress (
        /*[out,retval]*/ BSTR * StreetAddress ) = 0;
      virtual HRESULT __stdcall put_StreetAddress (
        /*[in]*/ BSTR StreetAddress ) = 0;
      virtual HRESULT __stdcall raw_GetExchangeUserManager (
        /*[out,retval]*/ struct _ExchangeUser * * ret ) = 0;
      virtual HRESULT __stdcall get_YomiCompanyName (
        /*[out,retval]*/ BSTR * YomiCompanyName ) = 0;
      virtual HRESULT __stdcall put_YomiCompanyName (
        /*[in]*/ BSTR YomiCompanyName ) = 0;
      virtual HRESULT __stdcall get_YomiFirstName (
        /*[out,retval]*/ BSTR * YomiFirstName ) = 0;
      virtual HRESULT __stdcall put_YomiFirstName (
        /*[in]*/ BSTR YomiFirstName ) = 0;
      virtual HRESULT __stdcall get_YomiLastName (
        /*[out,retval]*/ BSTR * YomiLastName ) = 0;
      virtual HRESULT __stdcall put_YomiLastName (
        /*[in]*/ BSTR YomiLastName ) = 0;
      virtual HRESULT __stdcall get_YomiDisplayName (
        /*[out,retval]*/ BSTR * YomiDisplayName ) = 0;
      virtual HRESULT __stdcall put_YomiDisplayName (
        /*[in]*/ BSTR YomiDisplayName ) = 0;
      virtual HRESULT __stdcall get_YomiDepartment (
        /*[out,retval]*/ BSTR * YomiDepartment ) = 0;
      virtual HRESULT __stdcall put_YomiDepartment (
        /*[in]*/ BSTR YomiDepartment ) = 0;
};

struct __declspec(uuid("000630ca-0000-0000-c000-000000000046"))
_ExchangeDistributionList : IDispatch
{
    //
    // Property data
    //

    __declspec(property(get=GetApplication))
    _ApplicationPtr Application;
    __declspec(property(get=GetParent))
    IDispatchPtr Parent;
    __declspec(property(get=GetDisplayType))
    enum OlDisplayType DisplayType;
    __declspec(property(get=GetAddress,put=PutAddress))
    _bstr_t Address;
    __declspec(property(get=GetManager))
    AddressEntryPtr Manager;
    __declspec(property(get=GetMAPIOBJECT,put=PutMAPIOBJECT))
    IUnknownPtr MAPIOBJECT;
    __declspec(property(get=GetMembers))
    AddressEntriesPtr Members;
    __declspec(property(get=GetName,put=PutName))
    _bstr_t Name;
    __declspec(property(get=GetType,put=PutType))
    _bstr_t Type;
    __declspec(property(get=GetAlias))
    _bstr_t Alias;
    __declspec(property(get=GetClass))
    enum OlObjectClass Class;
    __declspec(property(get=GetSession))
    _NameSpacePtr Session;
    __declspec(property(get=GetComments,put=PutComments))
    _bstr_t Comments;
    __declspec(property(get=GetAddressEntryUserType))
    enum OlAddressEntryUserType AddressEntryUserType;
    __declspec(property(get=GetPrimarySmtpAddress))
    _bstr_t PrimarySmtpAddress;
    __declspec(property(get=GetPropertyAccessor))
    _PropertyAccessorPtr PropertyAccessor;
    __declspec(property(get=GetID))
    _bstr_t ID;

    //
    // Wrapper methods for error-handling
    //

    _ApplicationPtr GetApplication ( );
    enum OlObjectClass GetClass ( );
    _NameSpacePtr GetSession ( );
    IDispatchPtr GetParent ( );
    _bstr_t GetAddress ( );
    void PutAddress (
        _bstr_t Address );
    enum OlDisplayType GetDisplayType ( );
    _bstr_t GetID ( );
    AddressEntryPtr GetManager ( );
    IUnknownPtr GetMAPIOBJECT ( );
    void PutMAPIOBJECT (
        IUnknown * MAPIOBJECT );
    AddressEntriesPtr GetMembers ( );
    _bstr_t GetName ( );
    void PutName (
        _bstr_t Name );
    _bstr_t GetType ( );
    void PutType (
        _bstr_t Type );
    HRESULT Delete ( );
    HRESULT Details (
        const _variant_t & HWnd = vtMissing );
    _bstr_t GetFreeBusy (
        DATE Start,
        long MinPerChar,
        const _variant_t & CompleteFormat = vtMissing );
    HRESULT Update (
        const _variant_t & MakePermanent = vtMissing,
        const _variant_t & Refresh = vtMissing );
    HRESULT UpdateFreeBusy ( );
    _ContactItemPtr GetContact ( );
    _ExchangeUserPtr GetExchangeUser ( );
    enum OlAddressEntryUserType GetAddressEntryUserType ( );
    _ExchangeDistributionListPtr GetExchangeDistributionList ( );
    _PropertyAccessorPtr GetPropertyAccessor ( );
    AddressEntriesPtr GetMemberOfList ( );
    AddressEntriesPtr GetExchangeDistributionListMembers ( );
    _bstr_t GetAlias ( );
    _bstr_t GetComments ( );
    void PutComments (
        _bstr_t Comments );
    _bstr_t GetPrimarySmtpAddress ( );
    AddressEntriesPtr GetOwners ( );

    //
    // Raw methods provided by interface
    //

      virtual HRESULT __stdcall get_Application (
        /*[out,retval]*/ struct _Application * * Application ) = 0;
      virtual HRESULT __stdcall get_Class (
        /*[out,retval]*/ enum OlObjectClass * Class ) = 0;
      virtual HRESULT __stdcall get_Session (
        /*[out,retval]*/ struct _NameSpace * * Session ) = 0;
      virtual HRESULT __stdcall get_Parent (
        /*[out,retval]*/ IDispatch * * Parent ) = 0;
      virtual HRESULT __stdcall get_Address (
        /*[out,retval]*/ BSTR * Address ) = 0;
      virtual HRESULT __stdcall put_Address (
        /*[in]*/ BSTR Address ) = 0;
      virtual HRESULT __stdcall get_DisplayType (
        /*[out,retval]*/ enum OlDisplayType * DisplayType ) = 0;
      virtual HRESULT __stdcall get_ID (
        /*[out,retval]*/ BSTR * ID ) = 0;
      virtual HRESULT __stdcall get_Manager (
        /*[out,retval]*/ struct AddressEntry * * Manager ) = 0;
      virtual HRESULT __stdcall get_MAPIOBJECT (
        /*[out,retval]*/ IUnknown * * MAPIOBJECT ) = 0;
      virtual HRESULT __stdcall put_MAPIOBJECT (
        /*[in]*/ IUnknown * MAPIOBJECT ) = 0;
      virtual HRESULT __stdcall get_Members (
        /*[out,retval]*/ struct AddressEntries * * Members ) = 0;
      virtual HRESULT __stdcall get_Name (
        /*[out,retval]*/ BSTR * Name ) = 0;
      virtual HRESULT __stdcall put_Name (
        /*[in]*/ BSTR Name ) = 0;
      virtual HRESULT __stdcall get_Type (
        /*[out,retval]*/ BSTR * Type ) = 0;
      virtual HRESULT __stdcall put_Type (
        /*[in]*/ BSTR Type ) = 0;
      virtual HRESULT __stdcall raw_Delete ( ) = 0;
      virtual HRESULT __stdcall raw_Details (
        /*[in]*/ VARIANT HWnd = vtMissing ) = 0;
      virtual HRESULT __stdcall raw_GetFreeBusy (
        /*[in]*/ DATE Start,
        /*[in]*/ long MinPerChar,
        /*[in]*/ VARIANT CompleteFormat,
        /*[out,retval]*/ BSTR * FreeBusyInfo ) = 0;
      virtual HRESULT __stdcall raw_Update (
        /*[in]*/ VARIANT MakePermanent = vtMissing,
        /*[in]*/ VARIANT Refresh = vtMissing ) = 0;
      virtual HRESULT __stdcall raw_UpdateFreeBusy ( ) = 0;
      virtual HRESULT __stdcall raw_GetContact (
        /*[out,retval]*/ struct _ContactItem * * ret ) = 0;
      virtual HRESULT __stdcall raw_GetExchangeUser (
        /*[out,retval]*/ struct _ExchangeUser * * ret ) = 0;
      virtual HRESULT __stdcall get_AddressEntryUserType (
        /*[out,retval]*/ enum OlAddressEntryUserType * AddressEntryUserType ) = 0;
      virtual HRESULT __stdcall raw_GetExchangeDistributionList (
        /*[out,retval]*/ struct _ExchangeDistributionList * * ret ) = 0;
      virtual HRESULT __stdcall get_PropertyAccessor (
        /*[out,retval]*/ struct _PropertyAccessor * * PropertyAccessor ) = 0;
      virtual HRESULT __stdcall raw_GetMemberOfList (
        /*[out,retval]*/ struct AddressEntries * * ret ) = 0;
      virtual HRESULT __stdcall raw_GetExchangeDistributionListMembers (
        /*[out,retval]*/ struct AddressEntries * * ret ) = 0;
      virtual HRESULT __stdcall get_Alias (
        /*[out,retval]*/ BSTR * Alias ) = 0;
      virtual HRESULT __stdcall get_Comments (
        /*[out,retval]*/ BSTR * Comments ) = 0;
      virtual HRESULT __stdcall put_Comments (
        /*[in]*/ BSTR Comments ) = 0;
      virtual HRESULT __stdcall get_PrimarySmtpAddress (
        /*[out,retval]*/ BSTR * PrimarySmtpAddress ) = 0;
      virtual HRESULT __stdcall raw_GetOwners (
        /*[out,retval]*/ struct AddressEntries * * ret ) = 0;
};

struct __declspec(uuid("00063006-0000-0000-c000-000000000046"))
MAPIFolder : IDispatch
{
    //
    // Property data
    //

    __declspec(property(get=GetApplication))
    _ApplicationPtr Application;
    __declspec(property(get=GetParent))
    IDispatchPtr Parent;
    __declspec(property(get=GetItems))
    _ItemsPtr Items;
    __declspec(property(get=GetCurrentView))
    ViewPtr CurrentView;
    __declspec(property(get=GetFullFolderPath))
    _bstr_t FullFolderPath;
    __declspec(property(get=GetDefaultItemType))
    enum OlItemType DefaultItemType;
    __declspec(property(get=GetDefaultMessageClass))
    _bstr_t DefaultMessageClass;
    __declspec(property(get=GetStoreID))
    _bstr_t StoreID;
    __declspec(property(get=GetViews))
    _ViewsPtr Views;
    __declspec(property(get=GetClass))
    enum OlObjectClass Class;
    __declspec(property(get=GetSession))
    _NameSpacePtr Session;
    __declspec(property(get=GetMAPIOBJECT))
    IUnknownPtr MAPIOBJECT;
    __declspec(property(get=GetStore))
    _StorePtr Store;
    __declspec(property(get=GetUserPermissions))
    IDispatchPtr UserPermissions;
    __declspec(property(get=GetWebViewOn,put=PutWebViewOn))
    VARIANT_BOOL WebViewOn;
    __declspec(property(get=GetWebViewURL,put=PutWebViewURL))
    _bstr_t WebViewURL;
    __declspec(property(get=GetWebViewAllowNavigation,put=PutWebViewAllowNavigation))
    VARIANT_BOOL WebViewAllowNavigation;
    __declspec(property(get=GetUnReadItemCount))
    long UnReadItemCount;
    __declspec(property(get=GetAddressBookName,put=PutAddressBookName))
    _bstr_t AddressBookName;
    __declspec(property(get=GetShowAsOutlookAB,put=PutShowAsOutlookAB))
    VARIANT_BOOL ShowAsOutlookAB;
    __declspec(property(get=GetEntryID))
    _bstr_t EntryID;
    __declspec(property(get=GetUserDefinedProperties))
    _UserDefinedPropertiesPtr UserDefinedProperties;
    __declspec(property(get=GetFolderPath))
    _bstr_t FolderPath;
    __declspec(property(get=GetIsSharePointFolder))
    VARIANT_BOOL IsSharePointFolder;
    __declspec(property(get=GetName,put=PutName))
    _bstr_t Name;
    __declspec(property(get=GetCustomViewsOnly,put=PutCustomViewsOnly))
    VARIANT_BOOL CustomViewsOnly;
    __declspec(property(get=GetFolders))
    _FoldersPtr Folders;
    __declspec(property(get=GetDescription,put=PutDescription))
    _bstr_t Description;
    __declspec(property(get=GetPropertyAccessor))
    _PropertyAccessorPtr PropertyAccessor;
    __declspec(property(get=GetShowItemCount,put=PutShowItemCount))
    enum OlShowItemCount ShowItemCount;
    __declspec(property(get=GetInAppFolderSyncObject,put=PutInAppFolderSyncObject))
    VARIANT_BOOL InAppFolderSyncObject;

    //
    // Wrapper methods for error-handling
    //

    _ApplicationPtr GetApplication ( );
    enum OlObjectClass GetClass ( );
    _NameSpacePtr GetSession ( );
    IDispatchPtr GetParent ( );
    enum OlItemType GetDefaultItemType ( );
    _bstr_t GetDefaultMessageClass ( );
    _bstr_t GetDescription ( );
    void PutDescription (
        _bstr_t Description );
    _bstr_t GetEntryID ( );
    _FoldersPtr GetFolders ( );
    _ItemsPtr GetItems ( );
    _bstr_t GetName ( );
    void PutName (
        _bstr_t Name );
    _bstr_t GetStoreID ( );
    long GetUnReadItemCount ( );
    MAPIFolderPtr CopyTo (
        struct MAPIFolder * DestinationFolder );
    HRESULT Delete ( );
    HRESULT Display ( );
    _ExplorerPtr GetExplorer (
        const _variant_t & DisplayMode = vtMissing );
    HRESULT MoveTo (
        struct MAPIFolder * DestinationFolder );
    IDispatchPtr GetUserPermissions ( );
    VARIANT_BOOL GetWebViewOn ( );
    void PutWebViewOn (
        VARIANT_BOOL WebViewOn );
    _bstr_t GetWebViewURL ( );
    void PutWebViewURL (
        _bstr_t WebViewURL );
    VARIANT_BOOL GetWebViewAllowNavigation ( );
    void PutWebViewAllowNavigation (
        VARIANT_BOOL WebViewAllowNavigation );
    HRESULT AddToPFFavorites ( );
    _bstr_t GetAddressBookName ( );
    void PutAddressBookName (
        _bstr_t AddressBookName );
    VARIANT_BOOL GetShowAsOutlookAB ( );
    void PutShowAsOutlookAB (
        VARIANT_BOOL ShowAsOutlookAB );
    _bstr_t GetFolderPath ( );
    HRESULT AddToFavorites (
        const _variant_t & fNoUI = vtMissing,
        const _variant_t & Name = vtMissing );
    VARIANT_BOOL GetInAppFolderSyncObject ( );
    void PutInAppFolderSyncObject (
        VARIANT_BOOL InAppFolderSyncObject );
    ViewPtr GetCurrentView ( );
    VARIANT_BOOL GetCustomViewsOnly ( );
    void PutCustomViewsOnly (
        VARIANT_BOOL CustomViewsOnly );
    _ViewsPtr GetViews ( );
    IUnknownPtr GetMAPIOBJECT ( );
    _bstr_t GetFullFolderPath ( );
    VARIANT_BOOL GetIsSharePointFolder ( );
    enum OlShowItemCount GetShowItemCount ( );
    void PutShowItemCount (
        enum OlShowItemCount ShowItemCount );
    _StorePtr GetStore ( );
    _StorageItemPtr GetStorage (
        _bstr_t StorageIdentifier,
        enum OlStorageIdentifierType StorageIdentifierType );
    _TablePtr GetTable (
        const _variant_t & Filter = vtMissing,
        const _variant_t & TableContents = vtMissing );
    _PropertyAccessorPtr GetPropertyAccessor ( );
    _CalendarSharingPtr GetCalendarExporter ( );
    _UserDefinedPropertiesPtr GetUserDefinedProperties ( );

    //
    // Raw methods provided by interface
    //

      virtual HRESULT __stdcall get_Application (
        /*[out,retval]*/ struct _Application * * Application ) = 0;
      virtual HRESULT __stdcall get_Class (
        /*[out,retval]*/ enum OlObjectClass * Class ) = 0;
      virtual HRESULT __stdcall get_Session (
        /*[out,retval]*/ struct _NameSpace * * Session ) = 0;
      virtual HRESULT __stdcall get_Parent (
        /*[out,retval]*/ IDispatch * * Parent ) = 0;
      virtual HRESULT __stdcall get_DefaultItemType (
        /*[out,retval]*/ enum OlItemType * DefaultItemType ) = 0;
      virtual HRESULT __stdcall get_DefaultMessageClass (
        /*[out,retval]*/ BSTR * DefaultMessageClass ) = 0;
      virtual HRESULT __stdcall get_Description (
        /*[out,retval]*/ BSTR * Description ) = 0;
      virtual HRESULT __stdcall put_Description (
        /*[in]*/ BSTR Description ) = 0;
      virtual HRESULT __stdcall get_EntryID (
        /*[out,retval]*/ BSTR * EntryID ) = 0;
      virtual HRESULT __stdcall get_Folders (
        /*[out,retval]*/ struct _Folders * * Folders ) = 0;
      virtual HRESULT __stdcall get_Items (
        /*[out,retval]*/ struct _Items * * Items ) = 0;
      virtual HRESULT __stdcall get_Name (
        /*[out,retval]*/ BSTR * Name ) = 0;
      virtual HRESULT __stdcall put_Name (
        /*[in]*/ BSTR Name ) = 0;
      virtual HRESULT __stdcall get_StoreID (
        /*[out,retval]*/ BSTR * StoreID ) = 0;
      virtual HRESULT __stdcall get_UnReadItemCount (
        /*[out,retval]*/ long * UnReadItemCount ) = 0;
      virtual HRESULT __stdcall raw_CopyTo (
        /*[in]*/ struct MAPIFolder * DestinationFolder,
        /*[out,retval]*/ struct MAPIFolder * * Folder ) = 0;
      virtual HRESULT __stdcall raw_Delete ( ) = 0;
      virtual HRESULT __stdcall raw_Display ( ) = 0;
      virtual HRESULT __stdcall raw_GetExplorer (
        /*[in]*/ VARIANT DisplayMode,
        /*[out,retval]*/ struct _Explorer * * Explorer ) = 0;
      virtual HRESULT __stdcall raw_MoveTo (
        /*[in]*/ struct MAPIFolder * DestinationFolder ) = 0;
      virtual HRESULT __stdcall get_UserPermissions (
        /*[out,retval]*/ IDispatch * * UserPermissions ) = 0;
      virtual HRESULT __stdcall get_WebViewOn (
        /*[out,retval]*/ VARIANT_BOOL * WebViewOn ) = 0;
      virtual HRESULT __stdcall put_WebViewOn (
        /*[in]*/ VARIANT_BOOL WebViewOn ) = 0;
      virtual HRESULT __stdcall get_WebViewURL (
        /*[out,retval]*/ BSTR * WebViewURL ) = 0;
      virtual HRESULT __stdcall put_WebViewURL (
        /*[in]*/ BSTR WebViewURL ) = 0;
      virtual HRESULT __stdcall get_WebViewAllowNavigation (
        /*[out,retval]*/ VARIANT_BOOL * WebViewAllowNavigation ) = 0;
      virtual HRESULT __stdcall put_WebViewAllowNavigation (
        /*[in]*/ VARIANT_BOOL WebViewAllowNavigation ) = 0;
      virtual HRESULT __stdcall raw_AddToPFFavorites ( ) = 0;
      virtual HRESULT __stdcall get_AddressBookName (
        /*[out,retval]*/ BSTR * AddressBookName ) = 0;
      virtual HRESULT __stdcall put_AddressBookName (
        /*[in]*/ BSTR AddressBookName ) = 0;
      virtual HRESULT __stdcall get_ShowAsOutlookAB (
        /*[out,retval]*/ VARIANT_BOOL * ShowAsOutlookAB ) = 0;
      virtual HRESULT __stdcall put_ShowAsOutlookAB (
        /*[in]*/ VARIANT_BOOL ShowAsOutlookAB ) = 0;
      virtual HRESULT __stdcall get_FolderPath (
        /*[out,retval]*/ BSTR * FolderPath ) = 0;
      virtual HRESULT __stdcall raw_AddToFavorites (
        /*[in]*/ VARIANT fNoUI = vtMissing,
        /*[in]*/ VARIANT Name = vtMissing ) = 0;
      virtual HRESULT __stdcall get_InAppFolderSyncObject (
        /*[out,retval]*/ VARIANT_BOOL * InAppFolderSyncObject ) = 0;
      virtual HRESULT __stdcall put_InAppFolderSyncObject (
        /*[in]*/ VARIANT_BOOL InAppFolderSyncObject ) = 0;
      virtual HRESULT __stdcall get_CurrentView (
        /*[out,retval]*/ struct View * * CurrentView ) = 0;
      virtual HRESULT __stdcall get_CustomViewsOnly (
        /*[out,retval]*/ VARIANT_BOOL * CustomViewsOnly ) = 0;
      virtual HRESULT __stdcall put_CustomViewsOnly (
        /*[in]*/ VARIANT_BOOL CustomViewsOnly ) = 0;
      virtual HRESULT __stdcall get_Views (
        /*[out,retval]*/ struct _Views * * Views ) = 0;
      virtual HRESULT __stdcall get_MAPIOBJECT (
        /*[out,retval]*/ IUnknown * * MAPIOBJECT ) = 0;
      virtual HRESULT __stdcall get_FullFolderPath (
        /*[out,retval]*/ BSTR * FullFolderPath ) = 0;
      virtual HRESULT __stdcall get_IsSharePointFolder (
        /*[out,retval]*/ VARIANT_BOOL * IsSharePointFolder ) = 0;
      virtual HRESULT __stdcall get_ShowItemCount (
        /*[out,retval]*/ enum OlShowItemCount * ShowItemCount ) = 0;
      virtual HRESULT __stdcall put_ShowItemCount (
        /*[in]*/ enum OlShowItemCount ShowItemCount ) = 0;
      virtual HRESULT __stdcall get_Store (
        /*[out,retval]*/ struct _Store * * Store ) = 0;
      virtual HRESULT __stdcall raw_GetStorage (
        /*[in]*/ BSTR StorageIdentifier,
        /*[in]*/ enum OlStorageIdentifierType StorageIdentifierType,
        /*[out,retval]*/ struct _StorageItem * * StorageItem ) = 0;
      virtual HRESULT __stdcall raw_GetTable (
        /*[in]*/ VARIANT Filter,
        /*[in]*/ VARIANT TableContents,
        /*[out,retval]*/ struct _Table * * Table ) = 0;
      virtual HRESULT __stdcall get_PropertyAccessor (
        /*[out,retval]*/ struct _PropertyAccessor * * PropertyAccessor ) = 0;
      virtual HRESULT __stdcall raw_GetCalendarExporter (
        /*[out,retval]*/ struct _CalendarSharing * * Exporter ) = 0;
      virtual HRESULT __stdcall get_UserDefinedProperties (
        /*[out,retval]*/ struct _UserDefinedProperties * * UserDefinedProperties ) = 0;
};

struct __declspec(uuid("00063040-0000-0000-c000-000000000046"))
_Folders : IDispatch
{
    //
    // Property data
    //

    __declspec(property(get=GetApplication))
    _ApplicationPtr Application;
    __declspec(property(get=GetParent))
    IDispatchPtr Parent;
    __declspec(property(get=GetClass))
    enum OlObjectClass Class;
    __declspec(property(get=GetSession))
    _NameSpacePtr Session;
    __declspec(property(get=GetCount))
    long Count;
    __declspec(property(get=GetRawTable))
    IUnknownPtr RawTable;

    //
    // Wrapper methods for error-handling
    //

    _ApplicationPtr GetApplication ( );
    enum OlObjectClass GetClass ( );
    _NameSpacePtr GetSession ( );
    IDispatchPtr GetParent ( );
    long GetCount ( );
    MAPIFolderPtr Item (
        const _variant_t & Index );
    IUnknownPtr GetRawTable ( );
    MAPIFolderPtr Add (
        _bstr_t Name,
        const _variant_t & Type = vtMissing );
    MAPIFolderPtr GetFirst ( );
    MAPIFolderPtr GetLast ( );
    MAPIFolderPtr GetNext ( );
    MAPIFolderPtr GetPrevious ( );
    HRESULT Remove (
        long Index );

    //
    // Raw methods provided by interface
    //

      virtual HRESULT __stdcall get_Application (
        /*[out,retval]*/ struct _Application * * Application ) = 0;
      virtual HRESULT __stdcall get_Class (
        /*[out,retval]*/ enum OlObjectClass * Class ) = 0;
      virtual HRESULT __stdcall get_Session (
        /*[out,retval]*/ struct _NameSpace * * Session ) = 0;
      virtual HRESULT __stdcall get_Parent (
        /*[out,retval]*/ IDispatch * * Parent ) = 0;
      virtual HRESULT __stdcall get_Count (
        /*[out,retval]*/ long * Count ) = 0;
      virtual HRESULT __stdcall raw_Item (
        /*[in]*/ VARIANT Index,
        /*[out,retval]*/ struct MAPIFolder * * Item ) = 0;
      virtual HRESULT __stdcall get_RawTable (
        /*[out,retval]*/ IUnknown * * RawTable ) = 0;
      virtual HRESULT __stdcall raw_Add (
        /*[in]*/ BSTR Name,
        /*[in]*/ VARIANT Type,
        /*[out,retval]*/ struct MAPIFolder * * Folder ) = 0;
      virtual HRESULT __stdcall raw_GetFirst (
        /*[out,retval]*/ struct MAPIFolder * * Folder ) = 0;
      virtual HRESULT __stdcall raw_GetLast (
        /*[out,retval]*/ struct MAPIFolder * * Folder ) = 0;
      virtual HRESULT __stdcall raw_GetNext (
        /*[out,retval]*/ struct MAPIFolder * * Folder ) = 0;
      virtual HRESULT __stdcall raw_GetPrevious (
        /*[out,retval]*/ struct MAPIFolder * * Folder ) = 0;
      virtual HRESULT __stdcall raw_Remove (
        /*[in]*/ long Index ) = 0;
};

struct __declspec(uuid("00063003-0000-0000-c000-000000000046"))
_Explorer : IDispatch
{
    //
    // Property data
    //

    __declspec(property(get=GetApplication))
    _ApplicationPtr Application;
    __declspec(property(get=GetParent))
    IDispatchPtr Parent;
    __declspec(property(get=GetCommandBars))
    Office::_CommandBarsPtr CommandBars;
    __declspec(property(get=GetCurrentFolder,put=PutRefCurrentFolder))
    MAPIFolderPtr CurrentFolder;
    __declspec(property(get=GetCurrentView,put=PutCurrentView))
    _variant_t CurrentView;
    __declspec(property(get=GetPanes))
    PanesPtr Panes;
    __declspec(property(get=GetSelection))
    SelectionPtr Selection;
    __declspec(property(get=GetViews))
    IDispatchPtr Views;
    __declspec(property(get=GetClass))
    enum OlObjectClass Class;
    __declspec(property(get=GetSession))
    _NameSpacePtr Session;
    __declspec(property(get=GetCaption))
    _bstr_t Caption;
    __declspec(property(get=GetWindowState,put=PutWindowState))
    enum OlWindowState WindowState;
    __declspec(property(get=GetHTMLDocument))
    IDispatchPtr HTMLDocument;
    __declspec(property(get=GetHeight,put=PutHeight))
    long Height;
    __declspec(property(get=GetLeft,put=PutLeft))
    long Left;
    __declspec(property(get=GetTop,put=PutTop))
    long Top;
    __declspec(property(get=GetWidth,put=PutWidth))
    long Width;
    __declspec(property(get=GetNavigationPane))
    _NavigationPanePtr NavigationPane;

    //
    // Wrapper methods for error-handling
    //

    _ApplicationPtr GetApplication ( );
    enum OlObjectClass GetClass ( );
    _NameSpacePtr GetSession ( );
    IDispatchPtr GetParent ( );
    Office::_CommandBarsPtr GetCommandBars ( );
    MAPIFolderPtr GetCurrentFolder ( );
    void PutRefCurrentFolder (
        struct MAPIFolder * CurrentFolder );
    HRESULT Close ( );
    HRESULT Display ( );
    _bstr_t GetCaption ( );
    _variant_t GetCurrentView ( );
    void PutCurrentView (
        const _variant_t & CurrentView );
    long GetHeight ( );
    void PutHeight (
        long Height );
    long GetLeft ( );
    void PutLeft (
        long Left );
    PanesPtr GetPanes ( );
    SelectionPtr GetSelection ( );
    long GetTop ( );
    void PutTop (
        long Top );
    long GetWidth ( );
    void PutWidth (
        long Width );
    enum OlWindowState GetWindowState ( );
    void PutWindowState (
        enum OlWindowState WindowState );
    HRESULT Activate ( );
    VARIANT_BOOL IsPaneVisible (
        enum OlPane Pane );
    HRESULT ShowPane (
        enum OlPane Pane,
        VARIANT_BOOL Visible );
    IDispatchPtr GetViews ( );
    IDispatchPtr GetHTMLDocument ( );
    HRESULT SelectFolder (
        struct MAPIFolder * Folder );
    HRESULT DeselectFolder (
        struct MAPIFolder * Folder );
    VARIANT_BOOL IsFolderSelected (
        struct MAPIFolder * Folder );
    _NavigationPanePtr GetNavigationPane ( );
    HRESULT ClearSearch ( );
    HRESULT Search (
        _bstr_t Query,
        enum OlSearchScope SearchScope );

    //
    // Raw methods provided by interface
    //

      virtual HRESULT __stdcall get_Application (
        /*[out,retval]*/ struct _Application * * Application ) = 0;
      virtual HRESULT __stdcall get_Class (
        /*[out,retval]*/ enum OlObjectClass * Class ) = 0;
      virtual HRESULT __stdcall get_Session (
        /*[out,retval]*/ struct _NameSpace * * Session ) = 0;
      virtual HRESULT __stdcall get_Parent (
        /*[out,retval]*/ IDispatch * * Parent ) = 0;
      virtual HRESULT __stdcall get_CommandBars (
        /*[out,retval]*/ struct Office::_CommandBars * * CommandBars ) = 0;
      virtual HRESULT __stdcall get_CurrentFolder (
        /*[out,retval]*/ struct MAPIFolder * * CurrentFolder ) = 0;
      virtual HRESULT __stdcall putref_CurrentFolder (
        /*[in]*/ struct MAPIFolder * CurrentFolder ) = 0;
      virtual HRESULT __stdcall raw_Close ( ) = 0;
      virtual HRESULT __stdcall raw_Display ( ) = 0;
      virtual HRESULT __stdcall get_Caption (
        /*[out,retval]*/ BSTR * Caption ) = 0;
      virtual HRESULT __stdcall get_CurrentView (
        /*[out,retval]*/ VARIANT * CurrentView ) = 0;
      virtual HRESULT __stdcall put_CurrentView (
        /*[in]*/ VARIANT CurrentView ) = 0;
      virtual HRESULT __stdcall get_Height (
        /*[out,retval]*/ long * Height ) = 0;
      virtual HRESULT __stdcall put_Height (
        /*[in]*/ long Height ) = 0;
      virtual HRESULT __stdcall get_Left (
        /*[out,retval]*/ long * Left ) = 0;
      virtual HRESULT __stdcall put_Left (
        /*[in]*/ long Left ) = 0;
      virtual HRESULT __stdcall get_Panes (
        /*[out,retval]*/ struct Panes * * Panes ) = 0;
      virtual HRESULT __stdcall get_Selection (
        /*[out,retval]*/ struct Selection * * Selection ) = 0;
      virtual HRESULT __stdcall get_Top (
        /*[out,retval]*/ long * Top ) = 0;
      virtual HRESULT __stdcall put_Top (
        /*[in]*/ long Top ) = 0;
      virtual HRESULT __stdcall get_Width (
        /*[out,retval]*/ long * Width ) = 0;
      virtual HRESULT __stdcall put_Width (
        /*[in]*/ long Width ) = 0;
      virtual HRESULT __stdcall get_WindowState (
        /*[out,retval]*/ enum OlWindowState * WindowState ) = 0;
      virtual HRESULT __stdcall put_WindowState (
        /*[in]*/ enum OlWindowState WindowState ) = 0;
      virtual HRESULT __stdcall raw_Activate ( ) = 0;
      virtual HRESULT __stdcall raw_IsPaneVisible (
        /*[in]*/ enum OlPane Pane,
        /*[out,retval]*/ VARIANT_BOOL * IsPaneVisible ) = 0;
      virtual HRESULT __stdcall raw_ShowPane (
        /*[in]*/ enum OlPane Pane,
        /*[in]*/ VARIANT_BOOL Visible ) = 0;
      virtual HRESULT __stdcall get_Views (
        /*[out,retval]*/ IDispatch * * Views ) = 0;
      virtual HRESULT __stdcall get_HTMLDocument (
        /*[out,retval]*/ IDispatch * * HTMLDocument ) = 0;
      virtual HRESULT __stdcall raw_SelectFolder (
        /*[in]*/ struct MAPIFolder * Folder ) = 0;
      virtual HRESULT __stdcall raw_DeselectFolder (
        /*[in]*/ struct MAPIFolder * Folder ) = 0;
      virtual HRESULT __stdcall raw_IsFolderSelected (
        /*[in]*/ struct MAPIFolder * Folder,
        /*[out,retval]*/ VARIANT_BOOL * fIsSelected ) = 0;
      virtual HRESULT __stdcall get_NavigationPane (
        /*[out,retval]*/ struct _NavigationPane * * NavigationPane ) = 0;
      virtual HRESULT __stdcall raw_ClearSearch ( ) = 0;
      virtual HRESULT __stdcall raw_Search (
        /*[in]*/ BSTR Query,
        /*[in]*/ enum OlSearchScope SearchScope ) = 0;
};

struct __declspec(uuid("000630c7-0000-0000-c000-000000000046"))
_Store : IDispatch
{
    //
    // Property data
    //

    __declspec(property(get=GetApplication))
    _ApplicationPtr Application;
    __declspec(property(get=GetParent))
    IDispatchPtr Parent;
    __declspec(property(get=GetDisplayName))
    _bstr_t DisplayName;
    __declspec(property(get=GetIsOpen))
    VARIANT_BOOL IsOpen;
    __declspec(property(get=GetMAPIOBJECT))
    IUnknownPtr MAPIOBJECT;
    __declspec(property(get=GetPropertyAccessor))
    _PropertyAccessorPtr PropertyAccessor;
    __declspec(property(get=GetStoreID))
    _bstr_t StoreID;
    __declspec(property(get=GetClass))
    enum OlObjectClass Class;
    __declspec(property(get=GetSession))
    _NameSpacePtr Session;
    __declspec(property(get=GetIsInstantSearchEnabled))
    VARIANT_BOOL IsInstantSearchEnabled;
    __declspec(property(get=GetExchangeStoreType))
    enum OlExchangeStoreType ExchangeStoreType;
    __declspec(property(get=GetFilePath))
    _bstr_t FilePath;
    __declspec(property(get=GetIsCachedExchange))
    VARIANT_BOOL IsCachedExchange;
    __declspec(property(get=GetIsDataFileStore))
    VARIANT_BOOL IsDataFileStore;

    //
    // Wrapper methods for error-handling
    //

    _ApplicationPtr GetApplication ( );
    enum OlObjectClass GetClass ( );
    _NameSpacePtr GetSession ( );
    IDispatchPtr GetParent ( );
    _bstr_t GetDisplayName ( );
    _bstr_t GetStoreID ( );
    enum OlExchangeStoreType GetExchangeStoreType ( );
    _bstr_t GetFilePath ( );
    VARIANT_BOOL GetIsCachedExchange ( );
    VARIANT_BOOL GetIsDataFileStore ( );
    MAPIFolderPtr GetRootFolder ( );
    _FoldersPtr GetSearchFolders ( );
    VARIANT_BOOL GetIsOpen ( );
    IUnknownPtr GetMAPIOBJECT ( );
    _RulesPtr GetRules ( );
    _PropertyAccessorPtr GetPropertyAccessor ( );
    MAPIFolderPtr GetSpecialFolder (
        enum OlSpecialFolders FolderType );
    VARIANT_BOOL GetIsInstantSearchEnabled ( );

    //
    // Raw methods provided by interface
    //

      virtual HRESULT __stdcall get_Application (
        /*[out,retval]*/ struct _Application * * Application ) = 0;
      virtual HRESULT __stdcall get_Class (
        /*[out,retval]*/ enum OlObjectClass * Class ) = 0;
      virtual HRESULT __stdcall get_Session (
        /*[out,retval]*/ struct _NameSpace * * Session ) = 0;
      virtual HRESULT __stdcall get_Parent (
        /*[out,retval]*/ IDispatch * * Parent ) = 0;
      virtual HRESULT __stdcall get_DisplayName (
        /*[out,retval]*/ BSTR * DisplayName ) = 0;
      virtual HRESULT __stdcall get_StoreID (
        /*[out,retval]*/ BSTR * StoreID ) = 0;
      virtual HRESULT __stdcall get_ExchangeStoreType (
        /*[out,retval]*/ enum OlExchangeStoreType * ExchangeStoreType ) = 0;
      virtual HRESULT __stdcall get_FilePath (
        /*[out,retval]*/ BSTR * FilePath ) = 0;
      virtual HRESULT __stdcall get_IsCachedExchange (
        /*[out,retval]*/ VARIANT_BOOL * IsCachedExchange ) = 0;
      virtual HRESULT __stdcall get_IsDataFileStore (
        /*[out,retval]*/ VARIANT_BOOL * IsDataFileStore ) = 0;
      virtual HRESULT __stdcall raw_GetRootFolder (
        /*[out,retval]*/ struct MAPIFolder * * RootFolder ) = 0;
      virtual HRESULT __stdcall raw_GetSearchFolders (
        /*[out,retval]*/ struct _Folders * * SearchFolders ) = 0;
      virtual HRESULT __stdcall get_IsOpen (
        /*[out,retval]*/ VARIANT_BOOL * IsOpen ) = 0;
      virtual HRESULT __stdcall get_MAPIOBJECT (
        /*[out,retval]*/ IUnknown * * MAPIOBJECT ) = 0;
      virtual HRESULT __stdcall raw_GetRules (
        /*[out,retval]*/ struct _Rules * * Rules ) = 0;
      virtual HRESULT __stdcall get_PropertyAccessor (
        /*[out,retval]*/ struct _PropertyAccessor * * PropertyAccessor ) = 0;
      virtual HRESULT __stdcall raw_GetSpecialFolder (
        /*[in]*/ enum OlSpecialFolders FolderType,
        /*[out,retval]*/ struct MAPIFolder * * Folder ) = 0;
      virtual HRESULT __stdcall get_IsInstantSearchEnabled (
        /*[out,retval]*/ VARIANT_BOOL * IsInstantSearchEnabled ) = 0;
};

struct __declspec(uuid("000630d0-0000-0000-c000-000000000046"))
_MoveOrCopyRuleAction : IDispatch
{
    //
    // Property data
    //

    __declspec(property(get=GetApplication))
    _ApplicationPtr Application;
    __declspec(property(get=GetParent))
    IDispatchPtr Parent;
    __declspec(property(get=GetEnabled,put=PutEnabled))
    VARIANT_BOOL Enabled;
    __declspec(property(get=GetClass))
    enum OlObjectClass Class;
    __declspec(property(get=GetSession))
    _NameSpacePtr Session;
    __declspec(property(get=GetActionType))
    enum OlRuleActionType ActionType;
    __declspec(property(get=GetFolder,put=PutFolder))
    MAPIFolderPtr Folder;

    //
    // Wrapper methods for error-handling
    //

    _ApplicationPtr GetApplication ( );
    enum OlObjectClass GetClass ( );
    _NameSpacePtr GetSession ( );
    IDispatchPtr GetParent ( );
    VARIANT_BOOL GetEnabled ( );
    void PutEnabled (
        VARIANT_BOOL Enabled );
    enum OlRuleActionType GetActionType ( );
    MAPIFolderPtr GetFolder ( );
    void PutFolder (
        struct MAPIFolder * Folder );

    //
    // Raw methods provided by interface
    //

      virtual HRESULT __stdcall get_Application (
        /*[out,retval]*/ struct _Application * * Application ) = 0;
      virtual HRESULT __stdcall get_Class (
        /*[out,retval]*/ enum OlObjectClass * Class ) = 0;
      virtual HRESULT __stdcall get_Session (
        /*[out,retval]*/ struct _NameSpace * * Session ) = 0;
      virtual HRESULT __stdcall get_Parent (
        /*[out,retval]*/ IDispatch * * Parent ) = 0;
      virtual HRESULT __stdcall get_Enabled (
        /*[out,retval]*/ VARIANT_BOOL * Enabled ) = 0;
      virtual HRESULT __stdcall put_Enabled (
        /*[in]*/ VARIANT_BOOL Enabled ) = 0;
      virtual HRESULT __stdcall get_ActionType (
        /*[out,retval]*/ enum OlRuleActionType * ActionType ) = 0;
      virtual HRESULT __stdcall get_Folder (
        /*[out,retval]*/ struct MAPIFolder * * Folder ) = 0;
      virtual HRESULT __stdcall put_Folder (
        /*[in]*/ struct MAPIFolder * Folder ) = 0;
};

struct __declspec(uuid("00063049-0000-0000-c000-000000000046"))
AddressList : IDispatch
{
    //
    // Property data
    //

    __declspec(property(get=GetApplication))
    _ApplicationPtr Application;
    __declspec(property(get=GetParent))
    IDispatchPtr Parent;
    __declspec(property(get=GetAddressEntries))
    AddressEntriesPtr AddressEntries;
    __declspec(property(get=GetName))
    _bstr_t Name;
    __declspec(property(get=GetClass))
    enum OlObjectClass Class;
    __declspec(property(get=GetSession))
    _NameSpacePtr Session;
    __declspec(property(get=GetAddressListType))
    enum OlAddressListType AddressListType;
    __declspec(property(get=GetResolutionOrder))
    long ResolutionOrder;
    __declspec(property(get=GetIsReadOnly))
    VARIANT_BOOL IsReadOnly;
    __declspec(property(get=GetIsInitialAddressList))
    VARIANT_BOOL IsInitialAddressList;
    __declspec(property(get=GetIndex))
    long Index;
    __declspec(property(get=GetPropertyAccessor))
    _PropertyAccessorPtr PropertyAccessor;
    __declspec(property(get=GetID))
    _bstr_t ID;

    //
    // Wrapper methods for error-handling
    //

    _ApplicationPtr GetApplication ( );
    enum OlObjectClass GetClass ( );
    _NameSpacePtr GetSession ( );
    IDispatchPtr GetParent ( );
    AddressEntriesPtr GetAddressEntries ( );
    _bstr_t GetID ( );
    long GetIndex ( );
    VARIANT_BOOL GetIsReadOnly ( );
    _bstr_t GetName ( );
    MAPIFolderPtr GetContactsFolder ( );
    enum OlAddressListType GetAddressListType ( );
    long GetResolutionOrder ( );
    VARIANT_BOOL GetIsInitialAddressList ( );
    _PropertyAccessorPtr GetPropertyAccessor ( );

    //
    // Raw methods provided by interface
    //

      virtual HRESULT __stdcall get_Application (
        /*[out,retval]*/ struct _Application * * Application ) = 0;
      virtual HRESULT __stdcall get_Class (
        /*[out,retval]*/ enum OlObjectClass * Class ) = 0;
      virtual HRESULT __stdcall get_Session (
        /*[out,retval]*/ struct _NameSpace * * Session ) = 0;
      virtual HRESULT __stdcall get_Parent (
        /*[out,retval]*/ IDispatch * * Parent ) = 0;
      virtual HRESULT __stdcall get_AddressEntries (
        /*[out,retval]*/ struct AddressEntries * * AddressEntries ) = 0;
      virtual HRESULT __stdcall get_ID (
        /*[out,retval]*/ BSTR * ID ) = 0;
      virtual HRESULT __stdcall get_Index (
        /*[out,retval]*/ long * Index ) = 0;
      virtual HRESULT __stdcall get_IsReadOnly (
        /*[out,retval]*/ VARIANT_BOOL * IsReadOnly ) = 0;
      virtual HRESULT __stdcall get_Name (
        /*[out,retval]*/ BSTR * Name ) = 0;
      virtual HRESULT __stdcall raw_GetContactsFolder (
        /*[out,retval]*/ struct MAPIFolder * * ret ) = 0;
      virtual HRESULT __stdcall get_AddressListType (
        /*[out,retval]*/ enum OlAddressListType * AddressListType ) = 0;
      virtual HRESULT __stdcall get_ResolutionOrder (
        /*[out,retval]*/ long * ResolutionOrder ) = 0;
      virtual HRESULT __stdcall get_IsInitialAddressList (
        /*[out,retval]*/ VARIANT_BOOL * IsInitialAddressList ) = 0;
      virtual HRESULT __stdcall get_PropertyAccessor (
        /*[out,retval]*/ struct _PropertyAccessor * * PropertyAccessor ) = 0;
};

struct __declspec(uuid("000630df-0000-0000-c000-000000000046"))
_SenderInAddressListRuleCondition : IDispatch
{
    //
    // Property data
    //

    __declspec(property(get=GetApplication))
    _ApplicationPtr Application;
    __declspec(property(get=GetParent))
    IDispatchPtr Parent;
    __declspec(property(get=GetEnabled,put=PutEnabled))
    VARIANT_BOOL Enabled;
    __declspec(property(get=GetAddressList,put=PutAddressList))
    AddressListPtr AddressList;
    __declspec(property(get=GetClass))
    enum OlObjectClass Class;
    __declspec(property(get=GetSession))
    _NameSpacePtr Session;
    __declspec(property(get=GetConditionType))
    enum OlRuleConditionType ConditionType;

    //
    // Wrapper methods for error-handling
    //

    _ApplicationPtr GetApplication ( );
    enum OlObjectClass GetClass ( );
    _NameSpacePtr GetSession ( );
    IDispatchPtr GetParent ( );
    VARIANT_BOOL GetEnabled ( );
    void PutEnabled (
        VARIANT_BOOL Enabled );
    enum OlRuleConditionType GetConditionType ( );
    AddressListPtr GetAddressList ( );
    void PutAddressList (
        struct AddressList * AddressList );

    //
    // Raw methods provided by interface
    //

      virtual HRESULT __stdcall get_Application (
        /*[out,retval]*/ struct _Application * * Application ) = 0;
      virtual HRESULT __stdcall get_Class (
        /*[out,retval]*/ enum OlObjectClass * Class ) = 0;
      virtual HRESULT __stdcall get_Session (
        /*[out,retval]*/ struct _NameSpace * * Session ) = 0;
      virtual HRESULT __stdcall get_Parent (
        /*[out,retval]*/ IDispatch * * Parent ) = 0;
      virtual HRESULT __stdcall get_Enabled (
        /*[out,retval]*/ VARIANT_BOOL * Enabled ) = 0;
      virtual HRESULT __stdcall put_Enabled (
        /*[in]*/ VARIANT_BOOL Enabled ) = 0;
      virtual HRESULT __stdcall get_ConditionType (
        /*[out,retval]*/ enum OlRuleConditionType * ConditionType ) = 0;
      virtual HRESULT __stdcall get_AddressList (
        /*[out,retval]*/ struct AddressList * * AddressList ) = 0;
      virtual HRESULT __stdcall put_AddressList (
        /*[in]*/ struct AddressList * AddressList ) = 0;
};

struct __declspec(uuid("000630e2-0000-0000-c000-000000000046"))
_CalendarSharing : IDispatch
{
    //
    // Property data
    //

    __declspec(property(get=GetApplication))
    _ApplicationPtr Application;
    __declspec(property(get=GetParent))
    IDispatchPtr Parent;
    __declspec(property(get=GetStartDate,put=PutStartDate))
    DATE StartDate;
    __declspec(property(get=GetIncludeWholeCalendar,put=PutIncludeWholeCalendar))
    VARIANT_BOOL IncludeWholeCalendar;
    __declspec(property(get=GetClass))
    enum OlObjectClass Class;
    __declspec(property(get=GetSession))
    _NameSpacePtr Session;
    __declspec(property(get=GetCalendarDetail,put=PutCalendarDetail))
    enum OlCalendarDetail CalendarDetail;
    __declspec(property(get=GetEndDate,put=PutEndDate))
    DATE EndDate;
    __declspec(property(get=GetFolder))
    MAPIFolderPtr Folder;
    __declspec(property(get=GetIncludeAttachments,put=PutIncludeAttachments))
    VARIANT_BOOL IncludeAttachments;
    __declspec(property(get=GetIncludePrivateDetails,put=PutIncludePrivateDetails))
    VARIANT_BOOL IncludePrivateDetails;
    __declspec(property(get=GetRestrictToWorkingHours,put=PutRestrictToWorkingHours))
    VARIANT_BOOL RestrictToWorkingHours;

    //
    // Wrapper methods for error-handling
    //

    _ApplicationPtr GetApplication ( );
    enum OlObjectClass GetClass ( );
    _NameSpacePtr GetSession ( );
    IDispatchPtr GetParent ( );
    HRESULT SaveAsICal (
        _bstr_t Path );
    _MailItemPtr ForwardAsICal (
        enum OlCalendarMailFormat MailFormat );
    enum OlCalendarDetail GetCalendarDetail ( );
    void PutCalendarDetail (
        enum OlCalendarDetail CalendarDetail );
    DATE GetEndDate ( );
    void PutEndDate (
        DATE EndDate );
    MAPIFolderPtr GetFolder ( );
    VARIANT_BOOL GetIncludeAttachments ( );
    void PutIncludeAttachments (
        VARIANT_BOOL IncludeAttachments );
    VARIANT_BOOL GetIncludePrivateDetails ( );
    void PutIncludePrivateDetails (
        VARIANT_BOOL IncludePrivateDetails );
    VARIANT_BOOL GetRestrictToWorkingHours ( );
    void PutRestrictToWorkingHours (
        VARIANT_BOOL RestrictToWorkingHours );
    DATE GetStartDate ( );
    void PutStartDate (
        DATE StartDate );
    VARIANT_BOOL GetIncludeWholeCalendar ( );
    void PutIncludeWholeCalendar (
        VARIANT_BOOL IncludeWholeCalendar );

    //
    // Raw methods provided by interface
    //

      virtual HRESULT __stdcall get_Application (
        /*[out,retval]*/ struct _Application * * Application ) = 0;
      virtual HRESULT __stdcall get_Class (
        /*[out,retval]*/ enum OlObjectClass * Class ) = 0;
      virtual HRESULT __stdcall get_Session (
        /*[out,retval]*/ struct _NameSpace * * Session ) = 0;
      virtual HRESULT __stdcall get_Parent (
        /*[out,retval]*/ IDispatch * * Parent ) = 0;
      virtual HRESULT __stdcall raw_SaveAsICal (
        /*[in]*/ BSTR Path ) = 0;
      virtual HRESULT __stdcall raw_ForwardAsICal (
        /*[in]*/ enum OlCalendarMailFormat MailFormat,
        /*[out,retval]*/ struct _MailItem * * RetVal ) = 0;
      virtual HRESULT __stdcall get_CalendarDetail (
        /*[out,retval]*/ enum OlCalendarDetail * CalendarDetail ) = 0;
      virtual HRESULT __stdcall put_CalendarDetail (
        /*[in]*/ enum OlCalendarDetail CalendarDetail ) = 0;
      virtual HRESULT __stdcall get_EndDate (
        /*[out,retval]*/ DATE * EndDate ) = 0;
      virtual HRESULT __stdcall put_EndDate (
        /*[in]*/ DATE EndDate ) = 0;
      virtual HRESULT __stdcall get_Folder (
        /*[out,retval]*/ struct MAPIFolder * * Folder ) = 0;
      virtual HRESULT __stdcall get_IncludeAttachments (
        /*[out,retval]*/ VARIANT_BOOL * IncludeAttachments ) = 0;
      virtual HRESULT __stdcall put_IncludeAttachments (
        /*[in]*/ VARIANT_BOOL IncludeAttachments ) = 0;
      virtual HRESULT __stdcall get_IncludePrivateDetails (
        /*[out,retval]*/ VARIANT_BOOL * IncludePrivateDetails ) = 0;
      virtual HRESULT __stdcall put_IncludePrivateDetails (
        /*[in]*/ VARIANT_BOOL IncludePrivateDetails ) = 0;
      virtual HRESULT __stdcall get_RestrictToWorkingHours (
        /*[out,retval]*/ VARIANT_BOOL * RestrictToWorkingHours ) = 0;
      virtual HRESULT __stdcall put_RestrictToWorkingHours (
        /*[in]*/ VARIANT_BOOL RestrictToWorkingHours ) = 0;
      virtual HRESULT __stdcall get_StartDate (
        /*[out,retval]*/ DATE * StartDate ) = 0;
      virtual HRESULT __stdcall put_StartDate (
        /*[in]*/ DATE StartDate ) = 0;
      virtual HRESULT __stdcall get_IncludeWholeCalendar (
        /*[out,retval]*/ VARIANT_BOOL * IncludeWholeCalendar ) = 0;
      virtual HRESULT __stdcall put_IncludeWholeCalendar (
        /*[in]*/ VARIANT_BOOL IncludeWholeCalendar ) = 0;
};

struct __declspec(uuid("00063034-0000-0000-c000-000000000046"))
_MailItem : IDispatch
{
    //
    // Property data
    //

    __declspec(property(get=GetAlternateRecipientAllowed,put=PutAlternateRecipientAllowed))
    VARIANT_BOOL AlternateRecipientAllowed;
    __declspec(property(get=GetAutoForwarded,put=PutAutoForwarded))
    VARIANT_BOOL AutoForwarded;
    __declspec(property(get=GetSaveSentMessageFolder,put=PutRefSaveSentMessageFolder))
    MAPIFolderPtr SaveSentMessageFolder;
    __declspec(property(get=GetReminderTime,put=PutReminderTime))
    DATE ReminderTime;
    __declspec(property(get=GetReminderSet,put=PutReminderSet))
    VARIANT_BOOL ReminderSet;
    __declspec(property(get=GetCreationTime))
    DATE CreationTime;
    __declspec(property(get=GetCategories,put=PutCategories))
    _bstr_t Categories;
    __declspec(property(get=GetLastModificationTime))
    DATE LastModificationTime;
    __declspec(property(get=GetDeferredDeliveryTime,put=PutDeferredDeliveryTime))
    DATE DeferredDeliveryTime;
    __declspec(property(get=GetRecipients))
    RecipientsPtr Recipients;
    __declspec(property(get=GetAttachments))
    AttachmentsPtr Attachments;
    __declspec(property(get=GetUserProperties))
    UserPropertiesPtr UserProperties;
    __declspec(property(get=GetActions))
    ActionsPtr Actions;
    __declspec(property(get=GetApplication))
    _ApplicationPtr Application;
    __declspec(property(get=GetExpiryTime,put=PutExpiryTime))
    DATE ExpiryTime;
    __declspec(property(get=GetParent))
    IDispatchPtr Parent;
    __declspec(property(get=GetImportance,put=PutImportance))
    enum OlImportance Importance;
    __declspec(property(get=GetNoAging,put=PutNoAging))
    VARIANT_BOOL NoAging;
    __declspec(property(get=GetRemoteStatus,put=PutRemoteStatus))
    enum OlRemoteStatus RemoteStatus;
    __declspec(property(get=GetMessageClass,put=PutMessageClass))
    _bstr_t MessageClass;
    __declspec(property(get=GetSent))
    VARIANT_BOOL Sent;
    __declspec(property(get=GetHTMLBody,put=PutHTMLBody))
    _bstr_t HTMLBody;
    __declspec(property(get=GetFormDescription))
    FormDescriptionPtr FormDescription;
    __declspec(property(get=GetClass))
    enum OlObjectClass Class;
    __declspec(property(get=GetSession))
    _NameSpacePtr Session;
    __declspec(property(get=GetSubmitted))
    VARIANT_BOOL Submitted;
    __declspec(property(get=GetDeleteAfterSubmit,put=PutDeleteAfterSubmit))
    VARIANT_BOOL DeleteAfterSubmit;
    __declspec(property(get=GetBCC,put=PutBCC))
    _bstr_t BCC;
    __declspec(property(get=GetSaved))
    VARIANT_BOOL Saved;
    __declspec(property(get=GetOriginatorDeliveryReportRequested,put=PutOriginatorDeliveryReportRequested))
    VARIANT_BOOL OriginatorDeliveryReportRequested;
    __declspec(property(get=GetCC,put=PutCC))
    _bstr_t CC;
    __declspec(property(get=GetReceivedTime))
    DATE ReceivedTime;
    __declspec(property(get=GetReplyRecipients))
    RecipientsPtr ReplyRecipients;
    __declspec(property(get=GetSize))
    long Size;
    __declspec(property(get=GetReadReceiptRequested,put=PutReadReceiptRequested))
    VARIANT_BOOL ReadReceiptRequested;
    __declspec(property(get=GetTo,put=PutTo))
    _bstr_t To;
    __declspec(property(get=GetRecipientReassignmentProhibited,put=PutRecipientReassignmentProhibited))
    VARIANT_BOOL RecipientReassignmentProhibited;
    __declspec(property(get=GetReminderOverrideDefault,put=PutReminderOverrideDefault))
    VARIANT_BOOL ReminderOverrideDefault;
    __declspec(property(get=GetReminderPlaySound,put=PutReminderPlaySound))
    VARIANT_BOOL ReminderPlaySound;
    __declspec(property(get=GetReminderSoundFile,put=PutReminderSoundFile))
    _bstr_t ReminderSoundFile;
    __declspec(property(get=GetVotingOptions,put=PutVotingOptions))
    _bstr_t VotingOptions;
    __declspec(property(get=GetFlagDueBy,put=PutFlagDueBy))
    DATE FlagDueBy;
    __declspec(property(get=GetUnRead,put=PutUnRead))
    VARIANT_BOOL UnRead;
    __declspec(property(get=GetEntryID))
    _bstr_t EntryID;
    __declspec(property(get=GetVotingResponse,put=PutVotingResponse))
    _bstr_t VotingResponse;
    __declspec(property(get=GetLinks))
    LinksPtr Links;
    __declspec(property(get=GetIsIPFax,put=PutIsIPFax))
    VARIANT_BOOL IsIPFax;
    __declspec(property(get=GetSensitivity,put=PutSensitivity))
    enum OlSensitivity Sensitivity;
    __declspec(property(get=GetSubject,put=PutSubject))
    _bstr_t Subject;
    __declspec(property(get=GetFlagRequest,put=PutFlagRequest))
    _bstr_t FlagRequest;
    __declspec(property(get=GetSentOn))
    DATE SentOn;
    __declspec(property(get=GetPropertyAccessor))
    _PropertyAccessorPtr PropertyAccessor;
    __declspec(property(get=GetTaskSubject,put=PutTaskSubject))
    _bstr_t TaskSubject;
    __declspec(property(get=GetMileage,put=PutMileage))
    _bstr_t Mileage;
    __declspec(property(get=GetBillingInformation,put=PutBillingInformation))
    _bstr_t BillingInformation;
    __declspec(property(get=GetTaskDueDate,put=PutTaskDueDate))
    DATE TaskDueDate;
    __declspec(property(get=GetReceivedByEntryID))
    _bstr_t ReceivedByEntryID;
    __declspec(property(get=GetReceivedByName))
    _bstr_t ReceivedByName;
    __declspec(property(get=GetTaskStartDate,put=PutTaskStartDate))
    DATE TaskStartDate;
    __declspec(property(get=GetSentOnBehalfOfName,put=PutSentOnBehalfOfName))
    _bstr_t SentOnBehalfOfName;
    __declspec(property(get=GetCompanies,put=PutCompanies))
    _bstr_t Companies;
    __declspec(property(get=GetReceivedOnBehalfOfEntryID))
    _bstr_t ReceivedOnBehalfOfEntryID;
    __declspec(property(get=GetReceivedOnBehalfOfName))
    _bstr_t ReceivedOnBehalfOfName;
    __declspec(property(get=GetInternetCodepage,put=PutInternetCodepage))
    long InternetCodepage;
    __declspec(property(get=GetTaskCompletedDate,put=PutTaskCompletedDate))
    DATE TaskCompletedDate;
    __declspec(property(get=GetToDoTaskOrdinal,put=PutToDoTaskOrdinal))
    DATE ToDoTaskOrdinal;
    __declspec(property(get=GetItemProperties))
    ItemPropertiesPtr ItemProperties;
    __declspec(property(get=GetIsConflict))
    VARIANT_BOOL IsConflict;
    __declspec(property(get=GetReplyRecipientNames))
    _bstr_t ReplyRecipientNames;
    __declspec(property(get=GetGetInspector))
    _InspectorPtr GetInspector;
    __declspec(property(get=GetOutlookInternalVersion))
    long OutlookInternalVersion;
    __declspec(property(get=GetOutlookVersion))
    _bstr_t OutlookVersion;
    __declspec(property(get=GetHasCoverSheet,put=PutHasCoverSheet))
    VARIANT_BOOL HasCoverSheet;
    __declspec(property(get=GetFlagStatus,put=PutFlagStatus))
    enum OlFlagStatus FlagStatus;
    __declspec(property(get=GetAutoResolvedWinner))
    VARIANT_BOOL AutoResolvedWinner;
    __declspec(property(get=GetConflicts))
    ConflictsPtr Conflicts;
    __declspec(property(get=GetConversationIndex))
    _bstr_t ConversationIndex;
    __declspec(property(get=GetConversationTopic))
    _bstr_t ConversationTopic;
    __declspec(property(get=GetEnableSharedAttachments,put=PutEnableSharedAttachments))
    VARIANT_BOOL EnableSharedAttachments;
    __declspec(property(get=GetPermission,put=PutPermission))
    enum OlPermission Permission;
    __declspec(property(get=GetPermissionService,put=PutPermissionService))
    enum OlPermissionService PermissionService;
    __declspec(property(get=GetBody,put=PutBody))
    _bstr_t Body;
    __declspec(property(get=GetMarkForDownload,put=PutMarkForDownload))
    enum OlRemoteStatus MarkForDownload;
    __declspec(property(get=GetFlagIcon,put=PutFlagIcon))
    enum OlFlagIcon FlagIcon;
    __declspec(property(get=GetSendUsingAccount,put=PutSendUsingAccount))
    _AccountPtr SendUsingAccount;
    __declspec(property(get=GetMAPIOBJECT))
    IUnknownPtr MAPIOBJECT;
    __declspec(property(get=GetBodyFormat,put=PutBodyFormat))
    enum OlBodyFormat BodyFormat;
    __declspec(property(get=GetSenderName))
    _bstr_t SenderName;
    __declspec(property(get=GetDownloadState))
    enum OlDownloadState DownloadState;
    __declspec(property(get=GetSenderEmailType))
    _bstr_t SenderEmailType;
    __declspec(property(get=GetSenderEmailAddress))
    _bstr_t SenderEmailAddress;
    __declspec(property(get=GetIsMarkedAsTask))
    VARIANT_BOOL IsMarkedAsTask;

    //
    // Wrapper methods for error-handling
    //

    _ApplicationPtr GetApplication ( );
    enum OlObjectClass GetClass ( );
    _NameSpacePtr GetSession ( );
    IDispatchPtr GetParent ( );
    ActionsPtr GetActions ( );
    AttachmentsPtr GetAttachments ( );
    _bstr_t GetBillingInformation ( );
    void PutBillingInformation (
        _bstr_t BillingInformation );
    _bstr_t GetBody ( );
    void PutBody (
        _bstr_t Body );
    _bstr_t GetCategories ( );
    void PutCategories (
        _bstr_t Categories );
    _bstr_t GetCompanies ( );
    void PutCompanies (
        _bstr_t Companies );
    _bstr_t GetConversationIndex ( );
    _bstr_t GetConversationTopic ( );
    DATE GetCreationTime ( );
    _bstr_t GetEntryID ( );
    FormDescriptionPtr GetFormDescription ( );
    _InspectorPtr GetGetInspector ( );
    enum OlImportance GetImportance ( );
    void PutImportance (
        enum OlImportance Importance );
    DATE GetLastModificationTime ( );
    IUnknownPtr GetMAPIOBJECT ( );
    _bstr_t GetMessageClass ( );
    void PutMessageClass (
        _bstr_t MessageClass );
    _bstr_t GetMileage ( );
    void PutMileage (
        _bstr_t Mileage );
    VARIANT_BOOL GetNoAging ( );
    void PutNoAging (
        VARIANT_BOOL NoAging );
    long GetOutlookInternalVersion ( );
    _bstr_t GetOutlookVersion ( );
    VARIANT_BOOL GetSaved ( );
    enum OlSensitivity GetSensitivity ( );
    void PutSensitivity (
        enum OlSensitivity Sensitivity );
    long GetSize ( );
    _bstr_t GetSubject ( );
    void PutSubject (
        _bstr_t Subject );
    VARIANT_BOOL GetUnRead ( );
    void PutUnRead (
        VARIANT_BOOL UnRead );
    UserPropertiesPtr GetUserProperties ( );
    HRESULT Close (
        enum OlInspectorClose SaveMode );
    IDispatchPtr Copy ( );
    HRESULT Delete ( );
    HRESULT Display (
        const _variant_t & Modal = vtMissing );
    IDispatchPtr Move (
        struct MAPIFolder * DestFldr );
    HRESULT PrintOut ( );
    HRESULT Save ( );
    HRESULT SaveAs (
        _bstr_t Path,
        const _variant_t & Type = vtMissing );
    VARIANT_BOOL GetAlternateRecipientAllowed ( );
    void PutAlternateRecipientAllowed (
        VARIANT_BOOL AlternateRecipientAllowed );
    VARIANT_BOOL GetAutoForwarded ( );
    void PutAutoForwarded (
        VARIANT_BOOL AutoForwarded );
    _bstr_t GetBCC ( );
    void PutBCC (
        _bstr_t BCC );
    _bstr_t GetCC ( );
    void PutCC (
        _bstr_t CC );
    DATE GetDeferredDeliveryTime ( );
    void PutDeferredDeliveryTime (
        DATE DeferredDeliveryTime );
    VARIANT_BOOL GetDeleteAfterSubmit ( );
    void PutDeleteAfterSubmit (
        VARIANT_BOOL DeleteAfterSubmit );
    DATE GetExpiryTime ( );
    void PutExpiryTime (
        DATE ExpiryTime );
    DATE GetFlagDueBy ( );
    void PutFlagDueBy (
        DATE FlagDueBy );
    _bstr_t GetFlagRequest ( );
    void PutFlagRequest (
        _bstr_t FlagRequest );
    enum OlFlagStatus GetFlagStatus ( );
    void PutFlagStatus (
        enum OlFlagStatus FlagStatus );
    _bstr_t GetHTMLBody ( );
    void PutHTMLBody (
        _bstr_t HTMLBody );
    VARIANT_BOOL GetOriginatorDeliveryReportRequested ( );
    void PutOriginatorDeliveryReportRequested (
        VARIANT_BOOL OriginatorDeliveryReportRequested );
    VARIANT_BOOL GetReadReceiptRequested ( );
    void PutReadReceiptRequested (
        VARIANT_BOOL ReadReceiptRequested );
    _bstr_t GetReceivedByEntryID ( );
    _bstr_t GetReceivedByName ( );
    _bstr_t GetReceivedOnBehalfOfEntryID ( );
    _bstr_t GetReceivedOnBehalfOfName ( );
    DATE GetReceivedTime ( );
    VARIANT_BOOL GetRecipientReassignmentProhibited ( );
    void PutRecipientReassignmentProhibited (
        VARIANT_BOOL RecipientReassignmentProhibited );
    RecipientsPtr GetRecipients ( );
    VARIANT_BOOL GetReminderOverrideDefault ( );
    void PutReminderOverrideDefault (
        VARIANT_BOOL ReminderOverrideDefault );
    VARIANT_BOOL GetReminderPlaySound ( );
    void PutReminderPlaySound (
        VARIANT_BOOL ReminderPlaySound );
    VARIANT_BOOL GetReminderSet ( );
    void PutReminderSet (
        VARIANT_BOOL ReminderSet );
    _bstr_t GetReminderSoundFile ( );
    void PutReminderSoundFile (
        _bstr_t ReminderSoundFile );
    DATE GetReminderTime ( );
    void PutReminderTime (
        DATE ReminderTime );
    enum OlRemoteStatus GetRemoteStatus ( );
    void PutRemoteStatus (
        enum OlRemoteStatus RemoteStatus );
    _bstr_t GetReplyRecipientNames ( );
    RecipientsPtr GetReplyRecipients ( );
    MAPIFolderPtr GetSaveSentMessageFolder ( );
    void PutRefSaveSentMessageFolder (
        struct MAPIFolder * SaveSentMessageFolder );
    _bstr_t GetSenderName ( );
    VARIANT_BOOL GetSent ( );
    DATE GetSentOn ( );
    _bstr_t GetSentOnBehalfOfName ( );
    void PutSentOnBehalfOfName (
        _bstr_t SentOnBehalfOfName );
    VARIANT_BOOL GetSubmitted ( );
    _bstr_t GetTo ( );
    void PutTo (
        _bstr_t To );
    _bstr_t GetVotingOptions ( );
    void PutVotingOptions (
        _bstr_t VotingOptions );
    _bstr_t GetVotingResponse ( );
    void PutVotingResponse (
        _bstr_t VotingResponse );
    HRESULT ClearConversationIndex ( );
    _MailItemPtr Forward ( );
    _MailItemPtr Reply ( );
    _MailItemPtr ReplyAll ( );
    HRESULT Send ( );
    LinksPtr GetLinks ( );
    ItemPropertiesPtr GetItemProperties ( );
    enum OlBodyFormat GetBodyFormat ( );
    void PutBodyFormat (
        enum OlBodyFormat BodyFormat );
    enum OlDownloadState GetDownloadState ( );
    HRESULT ShowCategoriesDialog ( );
    long GetInternetCodepage ( );
    void PutInternetCodepage (
        long InternetCodepage );
    enum OlRemoteStatus GetMarkForDownload ( );
    void PutMarkForDownload (
        enum OlRemoteStatus MarkForDownload );
    VARIANT_BOOL GetIsConflict ( );
    VARIANT_BOOL GetIsIPFax ( );
    void PutIsIPFax (
        VARIANT_BOOL IsIPFax );
    enum OlFlagIcon GetFlagIcon ( );
    void PutFlagIcon (
        enum OlFlagIcon FlagIcon );
    VARIANT_BOOL GetHasCoverSheet ( );
    void PutHasCoverSheet (
        VARIANT_BOOL HasCoverSheet );
    VARIANT_BOOL GetAutoResolvedWinner ( );
    ConflictsPtr GetConflicts ( );
    _bstr_t GetSenderEmailAddress ( );
    _bstr_t GetSenderEmailType ( );
    VARIANT_BOOL GetEnableSharedAttachments ( );
    void PutEnableSharedAttachments (
        VARIANT_BOOL EnableSharedAttachments );
    enum OlPermission GetPermission ( );
    void PutPermission (
        enum OlPermission Permission );
    enum OlPermissionService GetPermissionService ( );
    void PutPermissionService (
        enum OlPermissionService PermissionService );
    _PropertyAccessorPtr GetPropertyAccessor ( );
    HRESULT AddBusinessCard (
        struct _ContactItem * contact );
    _AccountPtr GetSendUsingAccount ( );
    void PutSendUsingAccount (
        struct _Account * SendUsingAccount );
    _bstr_t GetTaskSubject ( );
    void PutTaskSubject (
        _bstr_t TaskSubject );
    DATE GetTaskDueDate ( );
    void PutTaskDueDate (
        DATE TaskDueDate );
    DATE GetTaskStartDate ( );
    void PutTaskStartDate (
        DATE TaskStartDate );
    DATE GetTaskCompletedDate ( );
    void PutTaskCompletedDate (
        DATE TaskCompletedDate );
    DATE GetToDoTaskOrdinal ( );
    void PutToDoTaskOrdinal (
        DATE ToDoTaskOrdinal );
    HRESULT MarkAsTask (
        enum OlMarkInterval MarkInterval );
    HRESULT ClearTaskFlag ( );
    VARIANT_BOOL GetIsMarkedAsTask ( );

    //
    // Raw methods provided by interface
    //

      virtual HRESULT __stdcall get_Application (
        /*[out,retval]*/ struct _Application * * Application ) = 0;
      virtual HRESULT __stdcall get_Class (
        /*[out,retval]*/ enum OlObjectClass * Class ) = 0;
      virtual HRESULT __stdcall get_Session (
        /*[out,retval]*/ struct _NameSpace * * Session ) = 0;
      virtual HRESULT __stdcall get_Parent (
        /*[out,retval]*/ IDispatch * * Parent ) = 0;
      virtual HRESULT __stdcall get_Actions (
        /*[out,retval]*/ struct Actions * * Actions ) = 0;
      virtual HRESULT __stdcall get_Attachments (
        /*[out,retval]*/ struct Attachments * * Attachments ) = 0;
      virtual HRESULT __stdcall get_BillingInformation (
        /*[out,retval]*/ BSTR * BillingInformation ) = 0;
      virtual HRESULT __stdcall put_BillingInformation (
        /*[in]*/ BSTR BillingInformation ) = 0;
      virtual HRESULT __stdcall get_Body (
        /*[out,retval]*/ BSTR * Body ) = 0;
      virtual HRESULT __stdcall put_Body (
        /*[in]*/ BSTR Body ) = 0;
      virtual HRESULT __stdcall get_Categories (
        /*[out,retval]*/ BSTR * Categories ) = 0;
      virtual HRESULT __stdcall put_Categories (
        /*[in]*/ BSTR Categories ) = 0;
      virtual HRESULT __stdcall get_Companies (
        /*[out,retval]*/ BSTR * Companies ) = 0;
      virtual HRESULT __stdcall put_Companies (
        /*[in]*/ BSTR Companies ) = 0;
      virtual HRESULT __stdcall get_ConversationIndex (
        /*[out,retval]*/ BSTR * ConversationIndex ) = 0;
      virtual HRESULT __stdcall get_ConversationTopic (
        /*[out,retval]*/ BSTR * ConversationTopic ) = 0;
      virtual HRESULT __stdcall get_CreationTime (
        /*[out,retval]*/ DATE * CreationTime ) = 0;
      virtual HRESULT __stdcall get_EntryID (
        /*[out,retval]*/ BSTR * EntryID ) = 0;
      virtual HRESULT __stdcall get_FormDescription (
        /*[out,retval]*/ struct FormDescription * * FormDescription ) = 0;
      virtual HRESULT __stdcall get_GetInspector (
        /*[out,retval]*/ struct _Inspector * * GetInspector ) = 0;
      virtual HRESULT __stdcall get_Importance (
        /*[out,retval]*/ enum OlImportance * Importance ) = 0;
      virtual HRESULT __stdcall put_Importance (
        /*[in]*/ enum OlImportance Importance ) = 0;
      virtual HRESULT __stdcall get_LastModificationTime (
        /*[out,retval]*/ DATE * LastModificationTime ) = 0;
      virtual HRESULT __stdcall get_MAPIOBJECT (
        /*[out,retval]*/ IUnknown * * MAPIOBJECT ) = 0;
      virtual HRESULT __stdcall get_MessageClass (
        /*[out,retval]*/ BSTR * MessageClass ) = 0;
      virtual HRESULT __stdcall put_MessageClass (
        /*[in]*/ BSTR MessageClass ) = 0;
      virtual HRESULT __stdcall get_Mileage (
        /*[out,retval]*/ BSTR * Mileage ) = 0;
      virtual HRESULT __stdcall put_Mileage (
        /*[in]*/ BSTR Mileage ) = 0;
      virtual HRESULT __stdcall get_NoAging (
        /*[out,retval]*/ VARIANT_BOOL * NoAging ) = 0;
      virtual HRESULT __stdcall put_NoAging (
        /*[in]*/ VARIANT_BOOL NoAging ) = 0;
      virtual HRESULT __stdcall get_OutlookInternalVersion (
        /*[out,retval]*/ long * OutlookInternalVersion ) = 0;
      virtual HRESULT __stdcall get_OutlookVersion (
        /*[out,retval]*/ BSTR * OutlookVersion ) = 0;
      virtual HRESULT __stdcall get_Saved (
        /*[out,retval]*/ VARIANT_BOOL * Saved ) = 0;
      virtual HRESULT __stdcall get_Sensitivity (
        /*[out,retval]*/ enum OlSensitivity * Sensitivity ) = 0;
      virtual HRESULT __stdcall put_Sensitivity (
        /*[in]*/ enum OlSensitivity Sensitivity ) = 0;
      virtual HRESULT __stdcall get_Size (
        /*[out,retval]*/ long * Size ) = 0;
      virtual HRESULT __stdcall get_Subject (
        /*[out,retval]*/ BSTR * Subject ) = 0;
      virtual HRESULT __stdcall put_Subject (
        /*[in]*/ BSTR Subject ) = 0;
      virtual HRESULT __stdcall get_UnRead (
        /*[out,retval]*/ VARIANT_BOOL * UnRead ) = 0;
      virtual HRESULT __stdcall put_UnRead (
        /*[in]*/ VARIANT_BOOL UnRead ) = 0;
      virtual HRESULT __stdcall get_UserProperties (
        /*[out,retval]*/ struct UserProperties * * UserProperties ) = 0;
      virtual HRESULT __stdcall raw_Close (
        /*[in]*/ enum OlInspectorClose SaveMode ) = 0;
      virtual HRESULT __stdcall raw_Copy (
        /*[out,retval]*/ IDispatch * * Item ) = 0;
      virtual HRESULT __stdcall raw_Delete ( ) = 0;
      virtual HRESULT __stdcall raw_Display (
        /*[in]*/ VARIANT Modal = vtMissing ) = 0;
      virtual HRESULT __stdcall raw_Move (
        /*[in]*/ struct MAPIFolder * DestFldr,
        /*[out,retval]*/ IDispatch * * Item ) = 0;
      virtual HRESULT __stdcall raw_PrintOut ( ) = 0;
      virtual HRESULT __stdcall raw_Save ( ) = 0;
      virtual HRESULT __stdcall raw_SaveAs (
        /*[in]*/ BSTR Path,
        /*[in]*/ VARIANT Type = vtMissing ) = 0;
      virtual HRESULT __stdcall get_AlternateRecipientAllowed (
        /*[out,retval]*/ VARIANT_BOOL * AlternateRecipientAllowed ) = 0;
      virtual HRESULT __stdcall put_AlternateRecipientAllowed (
        /*[in]*/ VARIANT_BOOL AlternateRecipientAllowed ) = 0;
      virtual HRESULT __stdcall get_AutoForwarded (
        /*[out,retval]*/ VARIANT_BOOL * AutoForwarded ) = 0;
      virtual HRESULT __stdcall put_AutoForwarded (
        /*[in]*/ VARIANT_BOOL AutoForwarded ) = 0;
      virtual HRESULT __stdcall get_BCC (
        /*[out,retval]*/ BSTR * BCC ) = 0;
      virtual HRESULT __stdcall put_BCC (
        /*[in]*/ BSTR BCC ) = 0;
      virtual HRESULT __stdcall get_CC (
        /*[out,retval]*/ BSTR * CC ) = 0;
      virtual HRESULT __stdcall put_CC (
        /*[in]*/ BSTR CC ) = 0;
      virtual HRESULT __stdcall get_DeferredDeliveryTime (
        /*[out,retval]*/ DATE * DeferredDeliveryTime ) = 0;
      virtual HRESULT __stdcall put_DeferredDeliveryTime (
        /*[in]*/ DATE DeferredDeliveryTime ) = 0;
      virtual HRESULT __stdcall get_DeleteAfterSubmit (
        /*[out,retval]*/ VARIANT_BOOL * DeleteAfterSubmit ) = 0;
      virtual HRESULT __stdcall put_DeleteAfterSubmit (
        /*[in]*/ VARIANT_BOOL DeleteAfterSubmit ) = 0;
      virtual HRESULT __stdcall get_ExpiryTime (
        /*[out,retval]*/ DATE * ExpiryTime ) = 0;
      virtual HRESULT __stdcall put_ExpiryTime (
        /*[in]*/ DATE ExpiryTime ) = 0;
      virtual HRESULT __stdcall get_FlagDueBy (
        /*[out,retval]*/ DATE * FlagDueBy ) = 0;
      virtual HRESULT __stdcall put_FlagDueBy (
        /*[in]*/ DATE FlagDueBy ) = 0;
      virtual HRESULT __stdcall get_FlagRequest (
        /*[out,retval]*/ BSTR * FlagRequest ) = 0;
      virtual HRESULT __stdcall put_FlagRequest (
        /*[in]*/ BSTR FlagRequest ) = 0;
      virtual HRESULT __stdcall get_FlagStatus (
        /*[out,retval]*/ enum OlFlagStatus * FlagStatus ) = 0;
      virtual HRESULT __stdcall put_FlagStatus (
        /*[in]*/ enum OlFlagStatus FlagStatus ) = 0;
      virtual HRESULT __stdcall get_HTMLBody (
        /*[out,retval]*/ BSTR * HTMLBody ) = 0;
      virtual HRESULT __stdcall put_HTMLBody (
        /*[in]*/ BSTR HTMLBody ) = 0;
      virtual HRESULT __stdcall get_OriginatorDeliveryReportRequested (
        /*[out,retval]*/ VARIANT_BOOL * OriginatorDeliveryReportRequested ) = 0;
      virtual HRESULT __stdcall put_OriginatorDeliveryReportRequested (
        /*[in]*/ VARIANT_BOOL OriginatorDeliveryReportRequested ) = 0;
      virtual HRESULT __stdcall get_ReadReceiptRequested (
        /*[out,retval]*/ VARIANT_BOOL * ReadReceiptRequested ) = 0;
      virtual HRESULT __stdcall put_ReadReceiptRequested (
        /*[in]*/ VARIANT_BOOL ReadReceiptRequested ) = 0;
      virtual HRESULT __stdcall get_ReceivedByEntryID (
        /*[out,retval]*/ BSTR * ReceivedByEntryID ) = 0;
      virtual HRESULT __stdcall get_ReceivedByName (
        /*[out,retval]*/ BSTR * ReceivedByName ) = 0;
      virtual HRESULT __stdcall get_ReceivedOnBehalfOfEntryID (
        /*[out,retval]*/ BSTR * ReceivedOnBehalfOfEntryID ) = 0;
      virtual HRESULT __stdcall get_ReceivedOnBehalfOfName (
        /*[out,retval]*/ BSTR * ReceivedOnBehalfOfName ) = 0;
      virtual HRESULT __stdcall get_ReceivedTime (
        /*[out,retval]*/ DATE * ReceivedTime ) = 0;
      virtual HRESULT __stdcall get_RecipientReassignmentProhibited (
        /*[out,retval]*/ VARIANT_BOOL * RecipientReassignmentProhibited ) = 0;
      virtual HRESULT __stdcall put_RecipientReassignmentProhibited (
        /*[in]*/ VARIANT_BOOL RecipientReassignmentProhibited ) = 0;
      virtual HRESULT __stdcall get_Recipients (
        /*[out,retval]*/ struct Recipients * * Recipients ) = 0;
      virtual HRESULT __stdcall get_ReminderOverrideDefault (
        /*[out,retval]*/ VARIANT_BOOL * ReminderOverrideDefault ) = 0;
      virtual HRESULT __stdcall put_ReminderOverrideDefault (
        /*[in]*/ VARIANT_BOOL ReminderOverrideDefault ) = 0;
      virtual HRESULT __stdcall get_ReminderPlaySound (
        /*[out,retval]*/ VARIANT_BOOL * ReminderPlaySound ) = 0;
      virtual HRESULT __stdcall put_ReminderPlaySound (
        /*[in]*/ VARIANT_BOOL ReminderPlaySound ) = 0;
      virtual HRESULT __stdcall get_ReminderSet (
        /*[out,retval]*/ VARIANT_BOOL * ReminderSet ) = 0;
      virtual HRESULT __stdcall put_ReminderSet (
        /*[in]*/ VARIANT_BOOL ReminderSet ) = 0;
      virtual HRESULT __stdcall get_ReminderSoundFile (
        /*[out,retval]*/ BSTR * ReminderSoundFile ) = 0;
      virtual HRESULT __stdcall put_ReminderSoundFile (
        /*[in]*/ BSTR ReminderSoundFile ) = 0;
      virtual HRESULT __stdcall get_ReminderTime (
        /*[out,retval]*/ DATE * ReminderTime ) = 0;
      virtual HRESULT __stdcall put_ReminderTime (
        /*[in]*/ DATE ReminderTime ) = 0;
      virtual HRESULT __stdcall get_RemoteStatus (
        /*[out,retval]*/ enum OlRemoteStatus * RemoteStatus ) = 0;
      virtual HRESULT __stdcall put_RemoteStatus (
        /*[in]*/ enum OlRemoteStatus RemoteStatus ) = 0;
      virtual HRESULT __stdcall get_ReplyRecipientNames (
        /*[out,retval]*/ BSTR * ReplyRecipientNames ) = 0;
      virtual HRESULT __stdcall get_ReplyRecipients (
        /*[out,retval]*/ struct Recipients * * ReplyRecipients ) = 0;
      virtual HRESULT __stdcall get_SaveSentMessageFolder (
        /*[out,retval]*/ struct MAPIFolder * * SaveSentMessageFolder ) = 0;
      virtual HRESULT __stdcall putref_SaveSentMessageFolder (
        /*[in]*/ struct MAPIFolder * SaveSentMessageFolder ) = 0;
      virtual HRESULT __stdcall get_SenderName (
        /*[out,retval]*/ BSTR * SenderName ) = 0;
      virtual HRESULT __stdcall get_Sent (
        /*[out,retval]*/ VARIANT_BOOL * Sent ) = 0;
      virtual HRESULT __stdcall get_SentOn (
        /*[out,retval]*/ DATE * SentOn ) = 0;
      virtual HRESULT __stdcall get_SentOnBehalfOfName (
        /*[out,retval]*/ BSTR * SentOnBehalfOfName ) = 0;
      virtual HRESULT __stdcall put_SentOnBehalfOfName (
        /*[in]*/ BSTR SentOnBehalfOfName ) = 0;
      virtual HRESULT __stdcall get_Submitted (
        /*[out,retval]*/ VARIANT_BOOL * Submitted ) = 0;
      virtual HRESULT __stdcall get_To (
        /*[out,retval]*/ BSTR * To ) = 0;
      virtual HRESULT __stdcall put_To (
        /*[in]*/ BSTR To ) = 0;
      virtual HRESULT __stdcall get_VotingOptions (
        /*[out,retval]*/ BSTR * VotingOptions ) = 0;
      virtual HRESULT __stdcall put_VotingOptions (
        /*[in]*/ BSTR VotingOptions ) = 0;
      virtual HRESULT __stdcall get_VotingResponse (
        /*[out,retval]*/ BSTR * VotingResponse ) = 0;
      virtual HRESULT __stdcall put_VotingResponse (
        /*[in]*/ BSTR VotingResponse ) = 0;
      virtual HRESULT __stdcall raw_ClearConversationIndex ( ) = 0;
      virtual HRESULT __stdcall raw_Forward (
        /*[out,retval]*/ struct _MailItem * * Item ) = 0;
      virtual HRESULT __stdcall raw_Reply (
        /*[out,retval]*/ struct _MailItem * * Item ) = 0;
      virtual HRESULT __stdcall raw_ReplyAll (
        /*[out,retval]*/ struct _MailItem * * Item ) = 0;
      virtual HRESULT __stdcall raw_Send ( ) = 0;
      virtual HRESULT __stdcall get_Links (
        /*[out,retval]*/ struct Links * * Links ) = 0;
      virtual HRESULT __stdcall get_ItemProperties (
        /*[out,retval]*/ struct ItemProperties * * ItemProperties ) = 0;
      virtual HRESULT __stdcall get_BodyFormat (
        /*[out,retval]*/ enum OlBodyFormat * BodyFormat ) = 0;
      virtual HRESULT __stdcall put_BodyFormat (
        /*[in]*/ enum OlBodyFormat BodyFormat ) = 0;
      virtual HRESULT __stdcall get_DownloadState (
        /*[out,retval]*/ enum OlDownloadState * DownloadState ) = 0;
      virtual HRESULT __stdcall raw_ShowCategoriesDialog ( ) = 0;
      virtual HRESULT __stdcall get_InternetCodepage (
        /*[out,retval]*/ long * InternetCodepage ) = 0;
      virtual HRESULT __stdcall put_InternetCodepage (
        /*[in]*/ long InternetCodepage ) = 0;
      virtual HRESULT __stdcall get_MarkForDownload (
        /*[out,retval]*/ enum OlRemoteStatus * MarkForDownload ) = 0;
      virtual HRESULT __stdcall put_MarkForDownload (
        /*[in]*/ enum OlRemoteStatus MarkForDownload ) = 0;
      virtual HRESULT __stdcall get_IsConflict (
        /*[out,retval]*/ VARIANT_BOOL * IsConflict ) = 0;
      virtual HRESULT __stdcall get_IsIPFax (
        /*[out,retval]*/ VARIANT_BOOL * IsIPFax ) = 0;
      virtual HRESULT __stdcall put_IsIPFax (
        /*[in]*/ VARIANT_BOOL IsIPFax ) = 0;
      virtual HRESULT __stdcall get_FlagIcon (
        /*[out,retval]*/ enum OlFlagIcon * FlagIcon ) = 0;
      virtual HRESULT __stdcall put_FlagIcon (
        /*[in]*/ enum OlFlagIcon FlagIcon ) = 0;
      virtual HRESULT __stdcall get_HasCoverSheet (
        /*[out,retval]*/ VARIANT_BOOL * HasCoverSheet ) = 0;
      virtual HRESULT __stdcall put_HasCoverSheet (
        /*[in]*/ VARIANT_BOOL HasCoverSheet ) = 0;
      virtual HRESULT __stdcall get_AutoResolvedWinner (
        /*[out,retval]*/ VARIANT_BOOL * AutoResolvedWinner ) = 0;
      virtual HRESULT __stdcall get_Conflicts (
        /*[out,retval]*/ struct Conflicts * * Conflicts ) = 0;
      virtual HRESULT __stdcall get_SenderEmailAddress (
        /*[out,retval]*/ BSTR * SenderEmailAddress ) = 0;
      virtual HRESULT __stdcall get_SenderEmailType (
        /*[out,retval]*/ BSTR * SenderEmailType ) = 0;
      virtual HRESULT __stdcall get_EnableSharedAttachments (
        /*[out,retval]*/ VARIANT_BOOL * EnableSharedAttachments ) = 0;
      virtual HRESULT __stdcall put_EnableSharedAttachments (
        /*[in]*/ VARIANT_BOOL EnableSharedAttachments ) = 0;
      virtual HRESULT __stdcall get_Permission (
        /*[out,retval]*/ enum OlPermission * Permission ) = 0;
      virtual HRESULT __stdcall put_Permission (
        /*[in]*/ enum OlPermission Permission ) = 0;
      virtual HRESULT __stdcall get_PermissionService (
        /*[out,retval]*/ enum OlPermissionService * PermissionService ) = 0;
      virtual HRESULT __stdcall put_PermissionService (
        /*[in]*/ enum OlPermissionService PermissionService ) = 0;
      virtual HRESULT __stdcall get_PropertyAccessor (
        /*[out,retval]*/ struct _PropertyAccessor * * PropertyAccessor ) = 0;
      virtual HRESULT __stdcall raw_AddBusinessCard (
        /*[in]*/ struct _ContactItem * contact ) = 0;
      virtual HRESULT __stdcall get_SendUsingAccount (
        /*[out,retval]*/ struct _Account * * SendUsingAccount ) = 0;
      virtual HRESULT __stdcall put_SendUsingAccount (
        /*[in]*/ struct _Account * SendUsingAccount ) = 0;
      virtual HRESULT __stdcall get_TaskSubject (
        /*[out,retval]*/ BSTR * TaskSubject ) = 0;
      virtual HRESULT __stdcall put_TaskSubject (
        /*[in]*/ BSTR TaskSubject ) = 0;
      virtual HRESULT __stdcall get_TaskDueDate (
        /*[out,retval]*/ DATE * TaskDueDate ) = 0;
      virtual HRESULT __stdcall put_TaskDueDate (
        /*[in]*/ DATE TaskDueDate ) = 0;
      virtual HRESULT __stdcall get_TaskStartDate (
        /*[out,retval]*/ DATE * TaskStartDate ) = 0;
      virtual HRESULT __stdcall put_TaskStartDate (
        /*[in]*/ DATE TaskStartDate ) = 0;
      virtual HRESULT __stdcall get_TaskCompletedDate (
        /*[out,retval]*/ DATE * TaskCompletedDate ) = 0;
      virtual HRESULT __stdcall put_TaskCompletedDate (
        /*[in]*/ DATE TaskCompletedDate ) = 0;
      virtual HRESULT __stdcall get_ToDoTaskOrdinal (
        /*[out,retval]*/ DATE * ToDoTaskOrdinal ) = 0;
      virtual HRESULT __stdcall put_ToDoTaskOrdinal (
        /*[in]*/ DATE ToDoTaskOrdinal ) = 0;
      virtual HRESULT __stdcall raw_MarkAsTask (
        /*[in]*/ enum OlMarkInterval MarkInterval ) = 0;
      virtual HRESULT __stdcall raw_ClearTaskFlag ( ) = 0;
      virtual HRESULT __stdcall get_IsMarkedAsTask (
        /*[out,retval]*/ VARIANT_BOOL * IsMarkedAsTask ) = 0;
};

struct __declspec(uuid("00063048-0000-0000-c000-000000000046"))
AddressLists : IDispatch
{
    //
    // Property data
    //

    __declspec(property(get=GetApplication))
    _ApplicationPtr Application;
    __declspec(property(get=GetParent))
    IDispatchPtr Parent;
    __declspec(property(get=GetClass))
    enum OlObjectClass Class;
    __declspec(property(get=GetSession))
    _NameSpacePtr Session;
    __declspec(property(get=GetCount))
    long Count;

    //
    // Wrapper methods for error-handling
    //

    _ApplicationPtr GetApplication ( );
    enum OlObjectClass GetClass ( );
    _NameSpacePtr GetSession ( );
    IDispatchPtr GetParent ( );
    long GetCount ( );
    AddressListPtr Item (
        const _variant_t & Index );

    //
    // Raw methods provided by interface
    //

      virtual HRESULT __stdcall get_Application (
        /*[out,retval]*/ struct _Application * * Application ) = 0;
      virtual HRESULT __stdcall get_Class (
        /*[out,retval]*/ enum OlObjectClass * Class ) = 0;
      virtual HRESULT __stdcall get_Session (
        /*[out,retval]*/ struct _NameSpace * * Session ) = 0;
      virtual HRESULT __stdcall get_Parent (
        /*[out,retval]*/ IDispatch * * Parent ) = 0;
      virtual HRESULT __stdcall get_Count (
        /*[out,retval]*/ long * Count ) = 0;
      virtual HRESULT __stdcall raw_Item (
        /*[in]*/ VARIANT Index,
        /*[out,retval]*/ struct AddressList * * Item ) = 0;
};

struct __declspec(uuid("000630c6-0000-0000-c000-000000000046"))
_Stores : IDispatch
{
    //
    // Property data
    //

    __declspec(property(get=GetApplication))
    _ApplicationPtr Application;
    __declspec(property(get=GetParent))
    IDispatchPtr Parent;
    __declspec(property(get=GetClass))
    enum OlObjectClass Class;
    __declspec(property(get=GetSession))
    _NameSpacePtr Session;
    __declspec(property(get=GetCount))
    long Count;

    //
    // Wrapper methods for error-handling
    //

    _ApplicationPtr GetApplication ( );
    enum OlObjectClass GetClass ( );
    _NameSpacePtr GetSession ( );
    IDispatchPtr GetParent ( );
    long GetCount ( );
    _StorePtr Item (
        const _variant_t & Index );

    //
    // Raw methods provided by interface
    //

      virtual HRESULT __stdcall get_Application (
        /*[out,retval]*/ struct _Application * * Application ) = 0;
      virtual HRESULT __stdcall get_Class (
        /*[out,retval]*/ enum OlObjectClass * Class ) = 0;
      virtual HRESULT __stdcall get_Session (
        /*[out,retval]*/ struct _NameSpace * * Session ) = 0;
      virtual HRESULT __stdcall get_Parent (
        /*[out,retval]*/ IDispatch * * Parent ) = 0;
      virtual HRESULT __stdcall get_Count (
        /*[out,retval]*/ long * Count ) = 0;
      virtual HRESULT __stdcall raw_Item (
        /*[in]*/ VARIANT Index,
        /*[out,retval]*/ struct _Store * * Item ) = 0;
};

struct __declspec(uuid("000630c8-0000-0000-c000-000000000046"))
_SelectNamesDialog : IDispatch
{
    //
    // Property data
    //

    __declspec(property(get=GetApplication))
    _ApplicationPtr Application;
    __declspec(property(get=GetParent))
    IDispatchPtr Parent;
    __declspec(property(get=GetCaption,put=PutCaption))
    _bstr_t Caption;
    __declspec(property(get=GetBccLabel,put=PutBccLabel))
    _bstr_t BccLabel;
    __declspec(property(get=GetCcLabel,put=PutCcLabel))
    _bstr_t CcLabel;
    __declspec(property(get=GetToLabel,put=PutToLabel))
    _bstr_t ToLabel;
    __declspec(property(get=GetAllowMultipleSelection,put=PutAllowMultipleSelection))
    VARIANT_BOOL AllowMultipleSelection;
    __declspec(property(get=GetForceResolution,put=PutForceResolution))
    VARIANT_BOOL ForceResolution;
    __declspec(property(get=GetShowOnlyInitialAddressList,put=PutShowOnlyInitialAddressList))
    VARIANT_BOOL ShowOnlyInitialAddressList;
    __declspec(property(get=GetNumberOfRecipientSelectors,put=PutNumberOfRecipientSelectors))
    enum OlRecipientSelectors NumberOfRecipientSelectors;
    __declspec(property(get=GetClass))
    enum OlObjectClass Class;
    __declspec(property(get=GetSession))
    _NameSpacePtr Session;
    __declspec(property(get=GetInitialAddressList,put=PutInitialAddressList))
    AddressListPtr InitialAddressList;
    __declspec(property(get=GetRecipients,put=PutRecipients))
    RecipientsPtr Recipients;

    //
    // Wrapper methods for error-handling
    //

    _ApplicationPtr GetApplication ( );
    enum OlObjectClass GetClass ( );
    _NameSpacePtr GetSession ( );
    IDispatchPtr GetParent ( );
    _bstr_t GetCaption ( );
    void PutCaption (
        _bstr_t Caption );
    VARIANT_BOOL Display ( );
    RecipientsPtr GetRecipients ( );
    void PutRecipients (
        struct Recipients * Recipients );
    _bstr_t GetBccLabel ( );
    void PutBccLabel (
        _bstr_t BccLabel );
    _bstr_t GetCcLabel ( );
    void PutCcLabel (
        _bstr_t CcLabel );
    _bstr_t GetToLabel ( );
    void PutToLabel (
        _bstr_t ToLabel );
    VARIANT_BOOL GetAllowMultipleSelection ( );
    void PutAllowMultipleSelection (
        VARIANT_BOOL AllowMultipleSelection );
    VARIANT_BOOL GetForceResolution ( );
    void PutForceResolution (
        VARIANT_BOOL ForceResolution );
    VARIANT_BOOL GetShowOnlyInitialAddressList ( );
    void PutShowOnlyInitialAddressList (
        VARIANT_BOOL ShowOnlyInitialAddressList );
    enum OlRecipientSelectors GetNumberOfRecipientSelectors ( );
    void PutNumberOfRecipientSelectors (
        enum OlRecipientSelectors NumberOfRecipientSelectors );
    AddressListPtr GetInitialAddressList ( );
    void PutInitialAddressList (
        struct AddressList * InitialAddressList );
    HRESULT SetDefaultDisplayMode (
        enum OlDefaultSelectNamesDisplayMode defaultMode );

    //
    // Raw methods provided by interface
    //

      virtual HRESULT __stdcall get_Application (
        /*[out,retval]*/ struct _Application * * Application ) = 0;
      virtual HRESULT __stdcall get_Class (
        /*[out,retval]*/ enum OlObjectClass * Class ) = 0;
      virtual HRESULT __stdcall get_Session (
        /*[out,retval]*/ struct _NameSpace * * Session ) = 0;
      virtual HRESULT __stdcall get_Parent (
        /*[out,retval]*/ IDispatch * * Parent ) = 0;
      virtual HRESULT __stdcall get_Caption (
        /*[out,retval]*/ BSTR * Caption ) = 0;
      virtual HRESULT __stdcall put_Caption (
        /*[in]*/ BSTR Caption ) = 0;
      virtual HRESULT __stdcall raw_Display (
        /*[out,retval]*/ VARIANT_BOOL * ret ) = 0;
      virtual HRESULT __stdcall get_Recipients (
        /*[out,retval]*/ struct Recipients * * Recipients ) = 0;
      virtual HRESULT __stdcall put_Recipients (
        /*[in]*/ struct Recipients * Recipients ) = 0;
      virtual HRESULT __stdcall get_BccLabel (
        /*[out,retval]*/ BSTR * BccLabel ) = 0;
      virtual HRESULT __stdcall put_BccLabel (
        /*[in]*/ BSTR BccLabel ) = 0;
      virtual HRESULT __stdcall get_CcLabel (
        /*[out,retval]*/ BSTR * CcLabel ) = 0;
      virtual HRESULT __stdcall put_CcLabel (
        /*[in]*/ BSTR CcLabel ) = 0;
      virtual HRESULT __stdcall get_ToLabel (
        /*[out,retval]*/ BSTR * ToLabel ) = 0;
      virtual HRESULT __stdcall put_ToLabel (
        /*[in]*/ BSTR ToLabel ) = 0;
      virtual HRESULT __stdcall get_AllowMultipleSelection (
        /*[out,retval]*/ VARIANT_BOOL * AllowMultipleSelection ) = 0;
      virtual HRESULT __stdcall put_AllowMultipleSelection (
        /*[in]*/ VARIANT_BOOL AllowMultipleSelection ) = 0;
      virtual HRESULT __stdcall get_ForceResolution (
        /*[out,retval]*/ VARIANT_BOOL * ForceResolution ) = 0;
      virtual HRESULT __stdcall put_ForceResolution (
        /*[in]*/ VARIANT_BOOL ForceResolution ) = 0;
      virtual HRESULT __stdcall get_ShowOnlyInitialAddressList (
        /*[out,retval]*/ VARIANT_BOOL * ShowOnlyInitialAddressList ) = 0;
      virtual HRESULT __stdcall put_ShowOnlyInitialAddressList (
        /*[in]*/ VARIANT_BOOL ShowOnlyInitialAddressList ) = 0;
      virtual HRESULT __stdcall get_NumberOfRecipientSelectors (
        /*[out,retval]*/ enum OlRecipientSelectors * NumberOfRecipientSelectors ) = 0;
      virtual HRESULT __stdcall put_NumberOfRecipientSelectors (
        /*[in]*/ enum OlRecipientSelectors NumberOfRecipientSelectors ) = 0;
      virtual HRESULT __stdcall get_InitialAddressList (
        /*[out,retval]*/ struct AddressList * * InitialAddressList ) = 0;
      virtual HRESULT __stdcall put_InitialAddressList (
        /*[in]*/ struct AddressList * InitialAddressList ) = 0;
      virtual HRESULT __stdcall raw_SetDefaultDisplayMode (
        /*[in]*/ enum OlDefaultSelectNamesDisplayMode defaultMode ) = 0;
};

struct __declspec(uuid("0006302f-0000-0000-c000-000000000046"))
_SharingItem : IDispatch
{
    //
    // Property data
    //

    __declspec(property(get=GetAlternateRecipientAllowed,put=PutAlternateRecipientAllowed))
    VARIANT_BOOL AlternateRecipientAllowed;
    __declspec(property(get=GetAutoForwarded,put=PutAutoForwarded))
    VARIANT_BOOL AutoForwarded;
    __declspec(property(get=GetSaveSentMessageFolder,put=PutRefSaveSentMessageFolder))
    MAPIFolderPtr SaveSentMessageFolder;
    __declspec(property(get=GetReminderTime,put=PutReminderTime))
    DATE ReminderTime;
    __declspec(property(get=GetReminderSet,put=PutReminderSet))
    VARIANT_BOOL ReminderSet;
    __declspec(property(get=GetCreationTime))
    DATE CreationTime;
    __declspec(property(get=GetCategories,put=PutCategories))
    _bstr_t Categories;
    __declspec(property(get=GetLastModificationTime))
    DATE LastModificationTime;
    __declspec(property(get=GetDeferredDeliveryTime,put=PutDeferredDeliveryTime))
    DATE DeferredDeliveryTime;
    __declspec(property(get=GetRecipients))
    RecipientsPtr Recipients;
    __declspec(property(get=GetAttachments))
    AttachmentsPtr Attachments;
    __declspec(property(get=GetUserProperties))
    UserPropertiesPtr UserProperties;
    __declspec(property(get=GetActions))
    ActionsPtr Actions;
    __declspec(property(get=GetApplication))
    _ApplicationPtr Application;
    __declspec(property(get=GetPropertyAccessor))
    _PropertyAccessorPtr PropertyAccessor;
    __declspec(property(get=GetExpiryTime,put=PutExpiryTime))
    DATE ExpiryTime;
    __declspec(property(get=GetImportance,put=PutImportance))
    enum OlImportance Importance;
    __declspec(property(get=GetParent))
    IDispatchPtr Parent;
    __declspec(property(get=GetNoAging,put=PutNoAging))
    VARIANT_BOOL NoAging;
    __declspec(property(get=GetMessageClass,put=PutMessageClass))
    _bstr_t MessageClass;
    __declspec(property(get=GetRemoteStatus,put=PutRemoteStatus))
    enum OlRemoteStatus RemoteStatus;
    __declspec(property(get=GetSent))
    VARIANT_BOOL Sent;
    __declspec(property(get=GetHTMLBody,put=PutHTMLBody))
    _bstr_t HTMLBody;
    __declspec(property(get=GetClass))
    enum OlObjectClass Class;
    __declspec(property(get=GetSession))
    _NameSpacePtr Session;
    __declspec(property(get=GetFormDescription))
    FormDescriptionPtr FormDescription;
    __declspec(property(get=GetDeleteAfterSubmit,put=PutDeleteAfterSubmit))
    VARIANT_BOOL DeleteAfterSubmit;
    __declspec(property(get=GetBCC,put=PutBCC))
    _bstr_t BCC;
    __declspec(property(get=GetSaved))
    VARIANT_BOOL Saved;
    __declspec(property(get=GetOriginatorDeliveryReportRequested,put=PutOriginatorDeliveryReportRequested))
    VARIANT_BOOL OriginatorDeliveryReportRequested;
    __declspec(property(get=GetCC,put=PutCC))
    _bstr_t CC;
    __declspec(property(get=GetReceivedTime))
    DATE ReceivedTime;
    __declspec(property(get=GetReplyRecipients))
    RecipientsPtr ReplyRecipients;
    __declspec(property(get=GetSize))
    long Size;
    __declspec(property(get=GetReadReceiptRequested,put=PutReadReceiptRequested))
    VARIANT_BOOL ReadReceiptRequested;
    __declspec(property(get=GetReminderOverrideDefault,put=PutReminderOverrideDefault))
    VARIANT_BOOL ReminderOverrideDefault;
    __declspec(property(get=GetRecipientReassignmentProhibited,put=PutRecipientReassignmentProhibited))
    VARIANT_BOOL RecipientReassignmentProhibited;
    __declspec(property(get=GetReminderPlaySound,put=PutReminderPlaySound))
    VARIANT_BOOL ReminderPlaySound;
    __declspec(property(get=GetReminderSoundFile,put=PutReminderSoundFile))
    _bstr_t ReminderSoundFile;
    __declspec(property(get=GetSubmitted))
    VARIANT_BOOL Submitted;
    __declspec(property(get=GetTo,put=PutTo))
    _bstr_t To;
    __declspec(property(get=GetFlagDueBy,put=PutFlagDueBy))
    DATE FlagDueBy;
    __declspec(property(get=GetUnRead,put=PutUnRead))
    VARIANT_BOOL UnRead;
    __declspec(property(get=GetEntryID))
    _bstr_t EntryID;
    __declspec(property(get=GetTaskSubject,put=PutTaskSubject))
    _bstr_t TaskSubject;
    __declspec(property(get=GetTaskDueDate,put=PutTaskDueDate))
    DATE TaskDueDate;
    __declspec(property(get=GetTaskStartDate,put=PutTaskStartDate))
    DATE TaskStartDate;
    __declspec(property(get=GetSensitivity,put=PutSensitivity))
    enum OlSensitivity Sensitivity;
    __declspec(property(get=GetSubject,put=PutSubject))
    _bstr_t Subject;
    __declspec(property(get=GetFlagRequest,put=PutFlagRequest))
    _bstr_t FlagRequest;
    __declspec(property(get=GetSentOn))
    DATE SentOn;
    __declspec(property(get=GetTaskCompletedDate,put=PutTaskCompletedDate))
    DATE TaskCompletedDate;
    __declspec(property(get=GetToDoTaskOrdinal,put=PutToDoTaskOrdinal))
    DATE ToDoTaskOrdinal;
    __declspec(property(get=GetMileage,put=PutMileage))
    _bstr_t Mileage;
    __declspec(property(get=GetBillingInformation,put=PutBillingInformation))
    _bstr_t BillingInformation;
    __declspec(property(get=GetReceivedByEntryID))
    _bstr_t ReceivedByEntryID;
    __declspec(property(get=GetReceivedByName))
    _bstr_t ReceivedByName;
    __declspec(property(get=GetSentOnBehalfOfName,put=PutSentOnBehalfOfName))
    _bstr_t SentOnBehalfOfName;
    __declspec(property(get=GetCompanies,put=PutCompanies))
    _bstr_t Companies;
    __declspec(property(get=GetReceivedOnBehalfOfEntryID))
    _bstr_t ReceivedOnBehalfOfEntryID;
    __declspec(property(get=GetReceivedOnBehalfOfName))
    _bstr_t ReceivedOnBehalfOfName;
    __declspec(property(get=GetInternetCodepage,put=PutInternetCodepage))
    long InternetCodepage;
    __declspec(property(get=GetItemProperties))
    ItemPropertiesPtr ItemProperties;
    __declspec(property(get=GetReplyRecipientNames))
    _bstr_t ReplyRecipientNames;
    __declspec(property(get=GetIsConflict))
    VARIANT_BOOL IsConflict;
    __declspec(property(get=GetGetInspector))
    _InspectorPtr GetInspector;
    __declspec(property(get=GetOutlookInternalVersion))
    long OutlookInternalVersion;
    __declspec(property(get=GetOutlookVersion))
    _bstr_t OutlookVersion;
    __declspec(property(get=GetFlagStatus,put=PutFlagStatus))
    enum OlFlagStatus FlagStatus;
    __declspec(property(get=GetConflicts))
    ConflictsPtr Conflicts;
    __declspec(property(get=GetConversationIndex))
    _bstr_t ConversationIndex;
    __declspec(property(get=GetRemoteName))
    _bstr_t RemoteName;
    __declspec(property(get=GetRemoteID))
    _bstr_t RemoteID;
    __declspec(property(get=GetConversationTopic))
    _bstr_t ConversationTopic;
    __declspec(property(get=GetRemotePath))
    _bstr_t RemotePath;
    __declspec(property(get=GetSharingProviderGuid))
    _bstr_t SharingProviderGuid;
    __declspec(property(get=GetEnableSharedAttachments,put=PutEnableSharedAttachments))
    VARIANT_BOOL EnableSharedAttachments;
    __declspec(property(get=GetPermission,put=PutPermission))
    enum OlPermission Permission;
    __declspec(property(get=GetPermissionService,put=PutPermissionService))
    enum OlPermissionService PermissionService;
    __declspec(property(get=GetBody,put=PutBody))
    _bstr_t Body;
    __declspec(property(get=GetSharingProvider))
    enum OlSharingProvider SharingProvider;
    __declspec(property(get=GetMarkForDownload,put=PutMarkForDownload))
    enum OlRemoteStatus MarkForDownload;
    __declspec(property(get=GetFlagIcon,put=PutFlagIcon))
    enum OlFlagIcon FlagIcon;
    __declspec(property(get=GetAllowWriteAccess,put=PutAllowWriteAccess))
    VARIANT_BOOL AllowWriteAccess;
    __declspec(property(get=GetType,put=PutType))
    enum OlSharingMsgType Type;
    __declspec(property(get=GetRequestedFolder))
    enum OlDefaultFolders RequestedFolder;
    __declspec(property(get=GetSendUsingAccount,put=PutSendUsingAccount))
    _AccountPtr SendUsingAccount;
    __declspec(property(get=GetMAPIOBJECT))
    IUnknownPtr MAPIOBJECT;
    __declspec(property(get=GetBodyFormat,put=PutBodyFormat))
    enum OlBodyFormat BodyFormat;
    __declspec(property(get=GetSenderName))
    _bstr_t SenderName;
    __declspec(property(get=GetDownloadState))
    enum OlDownloadState DownloadState;
    __declspec(property(get=GetSenderEmailType))
    _bstr_t SenderEmailType;
    __declspec(property(get=GetSenderEmailAddress))
    _bstr_t SenderEmailAddress;
    __declspec(property(get=GetIsMarkedAsTask))
    VARIANT_BOOL IsMarkedAsTask;

    //
    // Wrapper methods for error-handling
    //

    _ApplicationPtr GetApplication ( );
    enum OlObjectClass GetClass ( );
    _NameSpacePtr GetSession ( );
    IDispatchPtr GetParent ( );
    ActionsPtr GetActions ( );
    AttachmentsPtr GetAttachments ( );
    _bstr_t GetBillingInformation ( );
    void PutBillingInformation (
        _bstr_t BillingInformation );
    _bstr_t GetBody ( );
    void PutBody (
        _bstr_t Body );
    _bstr_t GetCategories ( );
    void PutCategories (
        _bstr_t Categories );
    _bstr_t GetCompanies ( );
    void PutCompanies (
        _bstr_t Companies );
    _bstr_t GetConversationIndex ( );
    _bstr_t GetConversationTopic ( );
    DATE GetCreationTime ( );
    _bstr_t GetEntryID ( );
    FormDescriptionPtr GetFormDescription ( );
    _InspectorPtr GetGetInspector ( );
    enum OlImportance GetImportance ( );
    void PutImportance (
        enum OlImportance Importance );
    DATE GetLastModificationTime ( );
    IUnknownPtr GetMAPIOBJECT ( );
    _bstr_t GetMessageClass ( );
    void PutMessageClass (
        _bstr_t MessageClass );
    _bstr_t GetMileage ( );
    void PutMileage (
        _bstr_t Mileage );
    VARIANT_BOOL GetNoAging ( );
    void PutNoAging (
        VARIANT_BOOL NoAging );
    long GetOutlookInternalVersion ( );
    _bstr_t GetOutlookVersion ( );
    VARIANT_BOOL GetSaved ( );
    enum OlSensitivity GetSensitivity ( );
    void PutSensitivity (
        enum OlSensitivity Sensitivity );
    long GetSize ( );
    _bstr_t GetSubject ( );
    void PutSubject (
        _bstr_t Subject );
    VARIANT_BOOL GetUnRead ( );
    void PutUnRead (
        VARIANT_BOOL UnRead );
    UserPropertiesPtr GetUserProperties ( );
    HRESULT Close (
        enum OlInspectorClose SaveMode );
    IDispatchPtr Copy ( );
    HRESULT Delete ( );
    HRESULT Display (
        const _variant_t & Modal = vtMissing );
    IDispatchPtr Move (
        struct MAPIFolder * DestFldr );
    HRESULT PrintOut ( );
    HRESULT Save ( );
    HRESULT SaveAs (
        _bstr_t Path,
        const _variant_t & Type = vtMissing );
    HRESULT Allow ( );
    _SharingItemPtr Deny ( );
    _PropertyAccessorPtr GetPropertyAccessor ( );
    _bstr_t GetRemoteName ( );
    _bstr_t GetRemoteID ( );
    _bstr_t GetRemotePath ( );
    _bstr_t GetSharingProviderGuid ( );
    MAPIFolderPtr OpenSharedFolder ( );
    enum OlSharingProvider GetSharingProvider ( );
    VARIANT_BOOL GetAllowWriteAccess ( );
    void PutAllowWriteAccess (
        VARIANT_BOOL AllowWriteAccess );
    enum OlSharingMsgType GetType ( );
    void PutType (
        enum OlSharingMsgType Type );
    enum OlDefaultFolders GetRequestedFolder ( );
    _AccountPtr GetSendUsingAccount ( );
    void PutSendUsingAccount (
        struct _Account * SendUsingAccount );
    VARIANT_BOOL GetAlternateRecipientAllowed ( );
    void PutAlternateRecipientAllowed (
        VARIANT_BOOL AlternateRecipientAllowed );
    VARIANT_BOOL GetAutoForwarded ( );
    void PutAutoForwarded (
        VARIANT_BOOL AutoForwarded );
    _bstr_t GetBCC ( );
    void PutBCC (
        _bstr_t BCC );
    _bstr_t GetCC ( );
    void PutCC (
        _bstr_t CC );
    DATE GetDeferredDeliveryTime ( );
    void PutDeferredDeliveryTime (
        DATE DeferredDeliveryTime );
    VARIANT_BOOL GetDeleteAfterSubmit ( );
    void PutDeleteAfterSubmit (
        VARIANT_BOOL DeleteAfterSubmit );
    DATE GetExpiryTime ( );
    void PutExpiryTime (
        DATE ExpiryTime );
    DATE GetFlagDueBy ( );
    void PutFlagDueBy (
        DATE FlagDueBy );
    _bstr_t GetFlagRequest ( );
    void PutFlagRequest (
        _bstr_t FlagRequest );
    enum OlFlagStatus GetFlagStatus ( );
    void PutFlagStatus (
        enum OlFlagStatus FlagStatus );
    _bstr_t GetHTMLBody ( );
    void PutHTMLBody (
        _bstr_t HTMLBody );
    VARIANT_BOOL GetOriginatorDeliveryReportRequested ( );
    void PutOriginatorDeliveryReportRequested (
        VARIANT_BOOL OriginatorDeliveryReportRequested );
    VARIANT_BOOL GetReadReceiptRequested ( );
    void PutReadReceiptRequested (
        VARIANT_BOOL ReadReceiptRequested );
    _bstr_t GetReceivedByEntryID ( );
    _bstr_t GetReceivedByName ( );
    _bstr_t GetReceivedOnBehalfOfEntryID ( );
    _bstr_t GetReceivedOnBehalfOfName ( );
    DATE GetReceivedTime ( );
    VARIANT_BOOL GetRecipientReassignmentProhibited ( );
    void PutRecipientReassignmentProhibited (
        VARIANT_BOOL RecipientReassignmentProhibited );
    RecipientsPtr GetRecipients ( );
    VARIANT_BOOL GetReminderOverrideDefault ( );
    void PutReminderOverrideDefault (
        VARIANT_BOOL ReminderOverrideDefault );
    VARIANT_BOOL GetReminderPlaySound ( );
    void PutReminderPlaySound (
        VARIANT_BOOL ReminderPlaySound );
    VARIANT_BOOL GetReminderSet ( );
    void PutReminderSet (
        VARIANT_BOOL ReminderSet );
    _bstr_t GetReminderSoundFile ( );
    void PutReminderSoundFile (
        _bstr_t ReminderSoundFile );
    DATE GetReminderTime ( );
    void PutReminderTime (
        DATE ReminderTime );
    enum OlRemoteStatus GetRemoteStatus ( );
    void PutRemoteStatus (
        enum OlRemoteStatus RemoteStatus );
    _bstr_t GetReplyRecipientNames ( );
    RecipientsPtr GetReplyRecipients ( );
    MAPIFolderPtr GetSaveSentMessageFolder ( );
    void PutRefSaveSentMessageFolder (
        struct MAPIFolder * SaveSentMessageFolder );
    _bstr_t GetSenderName ( );
    VARIANT_BOOL GetSent ( );
    DATE GetSentOn ( );
    _bstr_t GetSentOnBehalfOfName ( );
    void PutSentOnBehalfOfName (
        _bstr_t SentOnBehalfOfName );
    VARIANT_BOOL GetSubmitted ( );
    _bstr_t GetTo ( );
    void PutTo (
        _bstr_t To );
    HRESULT ClearConversationIndex ( );
    _SharingItemPtr Forward ( );
    _MailItemPtr Reply ( );
    _MailItemPtr ReplyAll ( );
    HRESULT Send ( );
    ItemPropertiesPtr GetItemProperties ( );
    enum OlBodyFormat GetBodyFormat ( );
    void PutBodyFormat (
        enum OlBodyFormat BodyFormat );
    enum OlDownloadState GetDownloadState ( );
    HRESULT ShowCategoriesDialog ( );
    long GetInternetCodepage ( );
    void PutInternetCodepage (
        long InternetCodepage );
    enum OlRemoteStatus GetMarkForDownload ( );
    void PutMarkForDownload (
        enum OlRemoteStatus MarkForDownload );
    VARIANT_BOOL GetIsConflict ( );
    HRESULT AddBusinessCard (
        struct _ContactItem * contact );
    _bstr_t GetTaskSubject ( );
    void PutTaskSubject (
        _bstr_t TaskSubject );
    DATE GetTaskDueDate ( );
    void PutTaskDueDate (
        DATE TaskDueDate );
    DATE GetTaskStartDate ( );
    void PutTaskStartDate (
        DATE TaskStartDate );
    DATE GetTaskCompletedDate ( );
    void PutTaskCompletedDate (
        DATE TaskCompletedDate );
    DATE GetToDoTaskOrdinal ( );
    void PutToDoTaskOrdinal (
        DATE ToDoTaskOrdinal );
    enum OlFlagIcon GetFlagIcon ( );
    void PutFlagIcon (
        enum OlFlagIcon FlagIcon );
    ConflictsPtr GetConflicts ( );
    _bstr_t GetSenderEmailAddress ( );
    _bstr_t GetSenderEmailType ( );
    VARIANT_BOOL GetEnableSharedAttachments ( );
    void PutEnableSharedAttachments (
        VARIANT_BOOL EnableSharedAttachments );
    enum OlPermission GetPermission ( );
    void PutPermission (
        enum OlPermission Permission );
    enum OlPermissionService GetPermissionService ( );
    void PutPermissionService (
        enum OlPermissionService PermissionService );
    HRESULT MarkAsTask (
        enum OlMarkInterval MarkInterval );
    HRESULT ClearTaskFlag ( );
    VARIANT_BOOL GetIsMarkedAsTask ( );

    //
    // Raw methods provided by interface
    //

      virtual HRESULT __stdcall get_Application (
        /*[out,retval]*/ struct _Application * * Application ) = 0;
      virtual HRESULT __stdcall get_Class (
        /*[out,retval]*/ enum OlObjectClass * Class ) = 0;
      virtual HRESULT __stdcall get_Session (
        /*[out,retval]*/ struct _NameSpace * * Session ) = 0;
      virtual HRESULT __stdcall get_Parent (
        /*[out,retval]*/ IDispatch * * Parent ) = 0;
      virtual HRESULT __stdcall get_Actions (
        /*[out,retval]*/ struct Actions * * Actions ) = 0;
      virtual HRESULT __stdcall get_Attachments (
        /*[out,retval]*/ struct Attachments * * Attachments ) = 0;
      virtual HRESULT __stdcall get_BillingInformation (
        /*[out,retval]*/ BSTR * BillingInformation ) = 0;
      virtual HRESULT __stdcall put_BillingInformation (
        /*[in]*/ BSTR BillingInformation ) = 0;
      virtual HRESULT __stdcall get_Body (
        /*[out,retval]*/ BSTR * Body ) = 0;
      virtual HRESULT __stdcall put_Body (
        /*[in]*/ BSTR Body ) = 0;
      virtual HRESULT __stdcall get_Categories (
        /*[out,retval]*/ BSTR * Categories ) = 0;
      virtual HRESULT __stdcall put_Categories (
        /*[in]*/ BSTR Categories ) = 0;
      virtual HRESULT __stdcall get_Companies (
        /*[out,retval]*/ BSTR * Companies ) = 0;
      virtual HRESULT __stdcall put_Companies (
        /*[in]*/ BSTR Companies ) = 0;
      virtual HRESULT __stdcall get_ConversationIndex (
        /*[out,retval]*/ BSTR * ConversationIndex ) = 0;
      virtual HRESULT __stdcall get_ConversationTopic (
        /*[out,retval]*/ BSTR * ConversationTopic ) = 0;
      virtual HRESULT __stdcall get_CreationTime (
        /*[out,retval]*/ DATE * CreationTime ) = 0;
      virtual HRESULT __stdcall get_EntryID (
        /*[out,retval]*/ BSTR * EntryID ) = 0;
      virtual HRESULT __stdcall get_FormDescription (
        /*[out,retval]*/ struct FormDescription * * FormDescription ) = 0;
      virtual HRESULT __stdcall get_GetInspector (
        /*[out,retval]*/ struct _Inspector * * GetInspector ) = 0;
      virtual HRESULT __stdcall get_Importance (
        /*[out,retval]*/ enum OlImportance * Importance ) = 0;
      virtual HRESULT __stdcall put_Importance (
        /*[in]*/ enum OlImportance Importance ) = 0;
      virtual HRESULT __stdcall get_LastModificationTime (
        /*[out,retval]*/ DATE * LastModificationTime ) = 0;
      virtual HRESULT __stdcall get_MAPIOBJECT (
        /*[out,retval]*/ IUnknown * * MAPIOBJECT ) = 0;
      virtual HRESULT __stdcall get_MessageClass (
        /*[out,retval]*/ BSTR * MessageClass ) = 0;
      virtual HRESULT __stdcall put_MessageClass (
        /*[in]*/ BSTR MessageClass ) = 0;
      virtual HRESULT __stdcall get_Mileage (
        /*[out,retval]*/ BSTR * Mileage ) = 0;
      virtual HRESULT __stdcall put_Mileage (
        /*[in]*/ BSTR Mileage ) = 0;
      virtual HRESULT __stdcall get_NoAging (
        /*[out,retval]*/ VARIANT_BOOL * NoAging ) = 0;
      virtual HRESULT __stdcall put_NoAging (
        /*[in]*/ VARIANT_BOOL NoAging ) = 0;
      virtual HRESULT __stdcall get_OutlookInternalVersion (
        /*[out,retval]*/ long * OutlookInternalVersion ) = 0;
      virtual HRESULT __stdcall get_OutlookVersion (
        /*[out,retval]*/ BSTR * OutlookVersion ) = 0;
      virtual HRESULT __stdcall get_Saved (
        /*[out,retval]*/ VARIANT_BOOL * Saved ) = 0;
      virtual HRESULT __stdcall get_Sensitivity (
        /*[out,retval]*/ enum OlSensitivity * Sensitivity ) = 0;
      virtual HRESULT __stdcall put_Sensitivity (
        /*[in]*/ enum OlSensitivity Sensitivity ) = 0;
      virtual HRESULT __stdcall get_Size (
        /*[out,retval]*/ long * Size ) = 0;
      virtual HRESULT __stdcall get_Subject (
        /*[out,retval]*/ BSTR * Subject ) = 0;
      virtual HRESULT __stdcall put_Subject (
        /*[in]*/ BSTR Subject ) = 0;
      virtual HRESULT __stdcall get_UnRead (
        /*[out,retval]*/ VARIANT_BOOL * UnRead ) = 0;
      virtual HRESULT __stdcall put_UnRead (
        /*[in]*/ VARIANT_BOOL UnRead ) = 0;
      virtual HRESULT __stdcall get_UserProperties (
        /*[out,retval]*/ struct UserProperties * * UserProperties ) = 0;
      virtual HRESULT __stdcall raw_Close (
        /*[in]*/ enum OlInspectorClose SaveMode ) = 0;
      virtual HRESULT __stdcall raw_Copy (
        /*[out,retval]*/ IDispatch * * Item ) = 0;
      virtual HRESULT __stdcall raw_Delete ( ) = 0;
      virtual HRESULT __stdcall raw_Display (
        /*[in]*/ VARIANT Modal = vtMissing ) = 0;
      virtual HRESULT __stdcall raw_Move (
        /*[in]*/ struct MAPIFolder * DestFldr,
        /*[out,retval]*/ IDispatch * * Item ) = 0;
      virtual HRESULT __stdcall raw_PrintOut ( ) = 0;
      virtual HRESULT __stdcall raw_Save ( ) = 0;
      virtual HRESULT __stdcall raw_SaveAs (
        /*[in]*/ BSTR Path,
        /*[in]*/ VARIANT Type = vtMissing ) = 0;
      virtual HRESULT __stdcall raw_Allow ( ) = 0;
      virtual HRESULT __stdcall raw_Deny (
        /*[out,retval]*/ struct _SharingItem * * denyMailItem ) = 0;
      virtual HRESULT __stdcall get_PropertyAccessor (
        /*[out,retval]*/ struct _PropertyAccessor * * PropertyAccessor ) = 0;
      virtual HRESULT __stdcall get_RemoteName (
        /*[out,retval]*/ BSTR * RemoteName ) = 0;
      virtual HRESULT __stdcall get_RemoteID (
        /*[out,retval]*/ BSTR * RemoteID ) = 0;
      virtual HRESULT __stdcall get_RemotePath (
        /*[out,retval]*/ BSTR * RemotePath ) = 0;
      virtual HRESULT __stdcall get_SharingProviderGuid (
        /*[out,retval]*/ BSTR * SharingProviderGuid ) = 0;
      virtual HRESULT __stdcall raw_OpenSharedFolder (
        /*[out,retval]*/ struct MAPIFolder * * sf ) = 0;
      virtual HRESULT __stdcall get_SharingProvider (
        /*[out,retval]*/ enum OlSharingProvider * SharingProvider ) = 0;
      virtual HRESULT __stdcall get_AllowWriteAccess (
        /*[out,retval]*/ VARIANT_BOOL * AllowWriteAccess ) = 0;
      virtual HRESULT __stdcall put_AllowWriteAccess (
        /*[in]*/ VARIANT_BOOL AllowWriteAccess ) = 0;
      virtual HRESULT __stdcall get_Type (
        /*[out,retval]*/ enum OlSharingMsgType * Type ) = 0;
      virtual HRESULT __stdcall put_Type (
        /*[in]*/ enum OlSharingMsgType Type ) = 0;
      virtual HRESULT __stdcall get_RequestedFolder (
        /*[out,retval]*/ enum OlDefaultFolders * RequestedFolder ) = 0;
      virtual HRESULT __stdcall get_SendUsingAccount (
        /*[out,retval]*/ struct _Account * * SendUsingAccount ) = 0;
      virtual HRESULT __stdcall put_SendUsingAccount (
        /*[in]*/ struct _Account * SendUsingAccount ) = 0;
      virtual HRESULT __stdcall get_AlternateRecipientAllowed (
        /*[out,retval]*/ VARIANT_BOOL * AlternateRecipientAllowed ) = 0;
      virtual HRESULT __stdcall put_AlternateRecipientAllowed (
        /*[in]*/ VARIANT_BOOL AlternateRecipientAllowed ) = 0;
      virtual HRESULT __stdcall get_AutoForwarded (
        /*[out,retval]*/ VARIANT_BOOL * AutoForwarded ) = 0;
      virtual HRESULT __stdcall put_AutoForwarded (
        /*[in]*/ VARIANT_BOOL AutoForwarded ) = 0;
      virtual HRESULT __stdcall get_BCC (
        /*[out,retval]*/ BSTR * BCC ) = 0;
      virtual HRESULT __stdcall put_BCC (
        /*[in]*/ BSTR BCC ) = 0;
      virtual HRESULT __stdcall get_CC (
        /*[out,retval]*/ BSTR * CC ) = 0;
      virtual HRESULT __stdcall put_CC (
        /*[in]*/ BSTR CC ) = 0;
      virtual HRESULT __stdcall get_DeferredDeliveryTime (
        /*[out,retval]*/ DATE * DeferredDeliveryTime ) = 0;
      virtual HRESULT __stdcall put_DeferredDeliveryTime (
        /*[in]*/ DATE DeferredDeliveryTime ) = 0;
      virtual HRESULT __stdcall get_DeleteAfterSubmit (
        /*[out,retval]*/ VARIANT_BOOL * DeleteAfterSubmit ) = 0;
      virtual HRESULT __stdcall put_DeleteAfterSubmit (
        /*[in]*/ VARIANT_BOOL DeleteAfterSubmit ) = 0;
      virtual HRESULT __stdcall get_ExpiryTime (
        /*[out,retval]*/ DATE * ExpiryTime ) = 0;
      virtual HRESULT __stdcall put_ExpiryTime (
        /*[in]*/ DATE ExpiryTime ) = 0;
      virtual HRESULT __stdcall get_FlagDueBy (
        /*[out,retval]*/ DATE * FlagDueBy ) = 0;
      virtual HRESULT __stdcall put_FlagDueBy (
        /*[in]*/ DATE FlagDueBy ) = 0;
      virtual HRESULT __stdcall get_FlagRequest (
        /*[out,retval]*/ BSTR * FlagRequest ) = 0;
      virtual HRESULT __stdcall put_FlagRequest (
        /*[in]*/ BSTR FlagRequest ) = 0;
      virtual HRESULT __stdcall get_FlagStatus (
        /*[out,retval]*/ enum OlFlagStatus * FlagStatus ) = 0;
      virtual HRESULT __stdcall put_FlagStatus (
        /*[in]*/ enum OlFlagStatus FlagStatus ) = 0;
      virtual HRESULT __stdcall get_HTMLBody (
        /*[out,retval]*/ BSTR * HTMLBody ) = 0;
      virtual HRESULT __stdcall put_HTMLBody (
        /*[in]*/ BSTR HTMLBody ) = 0;
      virtual HRESULT __stdcall get_OriginatorDeliveryReportRequested (
        /*[out,retval]*/ VARIANT_BOOL * OriginatorDeliveryReportRequested ) = 0;
      virtual HRESULT __stdcall put_OriginatorDeliveryReportRequested (
        /*[in]*/ VARIANT_BOOL OriginatorDeliveryReportRequested ) = 0;
      virtual HRESULT __stdcall get_ReadReceiptRequested (
        /*[out,retval]*/ VARIANT_BOOL * ReadReceiptRequested ) = 0;
      virtual HRESULT __stdcall put_ReadReceiptRequested (
        /*[in]*/ VARIANT_BOOL ReadReceiptRequested ) = 0;
      virtual HRESULT __stdcall get_ReceivedByEntryID (
        /*[out,retval]*/ BSTR * ReceivedByEntryID ) = 0;
      virtual HRESULT __stdcall get_ReceivedByName (
        /*[out,retval]*/ BSTR * ReceivedByName ) = 0;
      virtual HRESULT __stdcall get_ReceivedOnBehalfOfEntryID (
        /*[out,retval]*/ BSTR * ReceivedOnBehalfOfEntryID ) = 0;
      virtual HRESULT __stdcall get_ReceivedOnBehalfOfName (
        /*[out,retval]*/ BSTR * ReceivedOnBehalfOfName ) = 0;
      virtual HRESULT __stdcall get_ReceivedTime (
        /*[out,retval]*/ DATE * ReceivedTime ) = 0;
      virtual HRESULT __stdcall get_RecipientReassignmentProhibited (
        /*[out,retval]*/ VARIANT_BOOL * RecipientReassignmentProhibited ) = 0;
      virtual HRESULT __stdcall put_RecipientReassignmentProhibited (
        /*[in]*/ VARIANT_BOOL RecipientReassignmentProhibited ) = 0;
      virtual HRESULT __stdcall get_Recipients (
        /*[out,retval]*/ struct Recipients * * Recipients ) = 0;
      virtual HRESULT __stdcall get_ReminderOverrideDefault (
        /*[out,retval]*/ VARIANT_BOOL * ReminderOverrideDefault ) = 0;
      virtual HRESULT __stdcall put_ReminderOverrideDefault (
        /*[in]*/ VARIANT_BOOL ReminderOverrideDefault ) = 0;
      virtual HRESULT __stdcall get_ReminderPlaySound (
        /*[out,retval]*/ VARIANT_BOOL * ReminderPlaySound ) = 0;
      virtual HRESULT __stdcall put_ReminderPlaySound (
        /*[in]*/ VARIANT_BOOL ReminderPlaySound ) = 0;
      virtual HRESULT __stdcall get_ReminderSet (
        /*[out,retval]*/ VARIANT_BOOL * ReminderSet ) = 0;
      virtual HRESULT __stdcall put_ReminderSet (
        /*[in]*/ VARIANT_BOOL ReminderSet ) = 0;
      virtual HRESULT __stdcall get_ReminderSoundFile (
        /*[out,retval]*/ BSTR * ReminderSoundFile ) = 0;
      virtual HRESULT __stdcall put_ReminderSoundFile (
        /*[in]*/ BSTR ReminderSoundFile ) = 0;
      virtual HRESULT __stdcall get_ReminderTime (
        /*[out,retval]*/ DATE * ReminderTime ) = 0;
      virtual HRESULT __stdcall put_ReminderTime (
        /*[in]*/ DATE ReminderTime ) = 0;
      virtual HRESULT __stdcall get_RemoteStatus (
        /*[out,retval]*/ enum OlRemoteStatus * RemoteStatus ) = 0;
      virtual HRESULT __stdcall put_RemoteStatus (
        /*[in]*/ enum OlRemoteStatus RemoteStatus ) = 0;
      virtual HRESULT __stdcall get_ReplyRecipientNames (
        /*[out,retval]*/ BSTR * ReplyRecipientNames ) = 0;
      virtual HRESULT __stdcall get_ReplyRecipients (
        /*[out,retval]*/ struct Recipients * * ReplyRecipients ) = 0;
      virtual HRESULT __stdcall get_SaveSentMessageFolder (
        /*[out,retval]*/ struct MAPIFolder * * SaveSentMessageFolder ) = 0;
      virtual HRESULT __stdcall putref_SaveSentMessageFolder (
        /*[in]*/ struct MAPIFolder * SaveSentMessageFolder ) = 0;
      virtual HRESULT __stdcall get_SenderName (
        /*[out,retval]*/ BSTR * SenderName ) = 0;
      virtual HRESULT __stdcall get_Sent (
        /*[out,retval]*/ VARIANT_BOOL * Sent ) = 0;
      virtual HRESULT __stdcall get_SentOn (
        /*[out,retval]*/ DATE * SentOn ) = 0;
      virtual HRESULT __stdcall get_SentOnBehalfOfName (
        /*[out,retval]*/ BSTR * SentOnBehalfOfName ) = 0;
      virtual HRESULT __stdcall put_SentOnBehalfOfName (
        /*[in]*/ BSTR SentOnBehalfOfName ) = 0;
      virtual HRESULT __stdcall get_Submitted (
        /*[out,retval]*/ VARIANT_BOOL * Submitted ) = 0;
      virtual HRESULT __stdcall get_To (
        /*[out,retval]*/ BSTR * To ) = 0;
      virtual HRESULT __stdcall put_To (
        /*[in]*/ BSTR To ) = 0;
      virtual HRESULT __stdcall raw_ClearConversationIndex ( ) = 0;
      virtual HRESULT __stdcall raw_Forward (
        /*[out,retval]*/ struct _SharingItem * * Item ) = 0;
      virtual HRESULT __stdcall raw_Reply (
        /*[out,retval]*/ struct _MailItem * * Item ) = 0;
      virtual HRESULT __stdcall raw_ReplyAll (
        /*[out,retval]*/ struct _MailItem * * Item ) = 0;
      virtual HRESULT __stdcall raw_Send ( ) = 0;
      virtual HRESULT __stdcall get_ItemProperties (
        /*[out,retval]*/ struct ItemProperties * * ItemProperties ) = 0;
      virtual HRESULT __stdcall get_BodyFormat (
        /*[out,retval]*/ enum OlBodyFormat * BodyFormat ) = 0;
      virtual HRESULT __stdcall put_BodyFormat (
        /*[in]*/ enum OlBodyFormat BodyFormat ) = 0;
      virtual HRESULT __stdcall get_DownloadState (
        /*[out,retval]*/ enum OlDownloadState * DownloadState ) = 0;
      virtual HRESULT __stdcall raw_ShowCategoriesDialog ( ) = 0;
      virtual HRESULT __stdcall get_InternetCodepage (
        /*[out,retval]*/ long * InternetCodepage ) = 0;
      virtual HRESULT __stdcall put_InternetCodepage (
        /*[in]*/ long InternetCodepage ) = 0;
      virtual HRESULT __stdcall get_MarkForDownload (
        /*[out,retval]*/ enum OlRemoteStatus * MarkForDownload ) = 0;
      virtual HRESULT __stdcall put_MarkForDownload (
        /*[in]*/ enum OlRemoteStatus MarkForDownload ) = 0;
      virtual HRESULT __stdcall get_IsConflict (
        /*[out,retval]*/ VARIANT_BOOL * IsConflict ) = 0;
      virtual HRESULT __stdcall raw_AddBusinessCard (
        /*[in]*/ struct _ContactItem * contact ) = 0;
      virtual HRESULT __stdcall get_TaskSubject (
        /*[out,retval]*/ BSTR * TaskSubject ) = 0;
      virtual HRESULT __stdcall put_TaskSubject (
        /*[in]*/ BSTR TaskSubject ) = 0;
      virtual HRESULT __stdcall get_TaskDueDate (
        /*[out,retval]*/ DATE * TaskDueDate ) = 0;
      virtual HRESULT __stdcall put_TaskDueDate (
        /*[in]*/ DATE TaskDueDate ) = 0;
      virtual HRESULT __stdcall get_TaskStartDate (
        /*[out,retval]*/ DATE * TaskStartDate ) = 0;
      virtual HRESULT __stdcall put_TaskStartDate (
        /*[in]*/ DATE TaskStartDate ) = 0;
      virtual HRESULT __stdcall get_TaskCompletedDate (
        /*[out,retval]*/ DATE * TaskCompletedDate ) = 0;
      virtual HRESULT __stdcall put_TaskCompletedDate (
        /*[in]*/ DATE TaskCompletedDate ) = 0;
      virtual HRESULT __stdcall get_ToDoTaskOrdinal (
        /*[out,retval]*/ DATE * ToDoTaskOrdinal ) = 0;
      virtual HRESULT __stdcall put_ToDoTaskOrdinal (
        /*[in]*/ DATE ToDoTaskOrdinal ) = 0;
      virtual HRESULT __stdcall get_FlagIcon (
        /*[out,retval]*/ enum OlFlagIcon * FlagIcon ) = 0;
      virtual HRESULT __stdcall put_FlagIcon (
        /*[in]*/ enum OlFlagIcon FlagIcon ) = 0;
      virtual HRESULT __stdcall get_Conflicts (
        /*[out,retval]*/ struct Conflicts * * Conflicts ) = 0;
      virtual HRESULT __stdcall get_SenderEmailAddress (
        /*[out,retval]*/ BSTR * SenderEmailAddress ) = 0;
      virtual HRESULT __stdcall get_SenderEmailType (
        /*[out,retval]*/ BSTR * SenderEmailType ) = 0;
      virtual HRESULT __stdcall get_EnableSharedAttachments (
        /*[out,retval]*/ VARIANT_BOOL * EnableSharedAttachments ) = 0;
      virtual HRESULT __stdcall put_EnableSharedAttachments (
        /*[in]*/ VARIANT_BOOL EnableSharedAttachments ) = 0;
      virtual HRESULT __stdcall get_Permission (
        /*[out,retval]*/ enum OlPermission * Permission ) = 0;
      virtual HRESULT __stdcall put_Permission (
        /*[in]*/ enum OlPermission Permission ) = 0;
      virtual HRESULT __stdcall get_PermissionService (
        /*[out,retval]*/ enum OlPermissionService * PermissionService ) = 0;
      virtual HRESULT __stdcall put_PermissionService (
        /*[in]*/ enum OlPermissionService PermissionService ) = 0;
      virtual HRESULT __stdcall raw_MarkAsTask (
        /*[in]*/ enum OlMarkInterval MarkInterval ) = 0;
      virtual HRESULT __stdcall raw_ClearTaskFlag ( ) = 0;
      virtual HRESULT __stdcall get_IsMarkedAsTask (
        /*[out,retval]*/ VARIANT_BOOL * IsMarkedAsTask ) = 0;
};

struct __declspec(uuid("0006300a-0000-0000-c000-000000000046"))
_Explorers : IDispatch
{
    //
    // Property data
    //

    __declspec(property(get=GetApplication))
    _ApplicationPtr Application;
    __declspec(property(get=GetParent))
    IDispatchPtr Parent;
    __declspec(property(get=GetClass))
    enum OlObjectClass Class;
    __declspec(property(get=GetSession))
    _NameSpacePtr Session;
    __declspec(property(get=GetCount))
    long Count;

    //
    // Wrapper methods for error-handling
    //

    _ApplicationPtr GetApplication ( );
    enum OlObjectClass GetClass ( );
    _NameSpacePtr GetSession ( );
    IDispatchPtr GetParent ( );
    long GetCount ( );
    _ExplorerPtr Item (
        const _variant_t & Index );
    _ExplorerPtr Add (
        const _variant_t & Folder,
        enum OlFolderDisplayMode DisplayMode );

    //
    // Raw methods provided by interface
    //

      virtual HRESULT __stdcall get_Application (
        /*[out,retval]*/ struct _Application * * Application ) = 0;
      virtual HRESULT __stdcall get_Class (
        /*[out,retval]*/ enum OlObjectClass * Class ) = 0;
      virtual HRESULT __stdcall get_Session (
        /*[out,retval]*/ struct _NameSpace * * Session ) = 0;
      virtual HRESULT __stdcall get_Parent (
        /*[out,retval]*/ IDispatch * * Parent ) = 0;
      virtual HRESULT __stdcall get_Count (
        /*[out,retval]*/ long * Count ) = 0;
      virtual HRESULT __stdcall raw_Item (
        /*[in]*/ VARIANT Index,
        /*[out,retval]*/ struct _Explorer * * Item ) = 0;
      virtual HRESULT __stdcall raw_Add (
        /*[in]*/ VARIANT Folder,
        /*[in]*/ enum OlFolderDisplayMode DisplayMode,
        /*[out,retval]*/ struct _Explorer * * Explorer ) = 0;
};

struct __declspec(uuid("0006300b-0000-0000-c000-000000000046"))
Search : IDispatch
{
    //
    // Property data
    //

    __declspec(property(get=GetApplication))
    _ApplicationPtr Application;
    __declspec(property(get=GetParent))
    IDispatchPtr Parent;
    __declspec(property(get=GetFilter))
    _bstr_t Filter;
    __declspec(property(get=GetScope))
    _bstr_t Scope;
    __declspec(property(get=GetSearchSubFolders))
    VARIANT_BOOL SearchSubFolders;
    __declspec(property(get=GetIsSynchronous))
    VARIANT_BOOL IsSynchronous;
    __declspec(property(get=GetResults))
    _ResultsPtr Results;
    __declspec(property(get=GetClass))
    enum OlObjectClass Class;
    __declspec(property(get=GetSession))
    _NameSpacePtr Session;
    __declspec(property(get=GetTag))
    _bstr_t Tag;

    //
    // Wrapper methods for error-handling
    //

    _ApplicationPtr GetApplication ( );
    enum OlObjectClass GetClass ( );
    _NameSpacePtr GetSession ( );
    IDispatchPtr GetParent ( );
    _bstr_t GetFilter ( );
    VARIANT_BOOL GetIsSynchronous ( );
    _ResultsPtr GetResults ( );
    VARIANT_BOOL GetSearchSubFolders ( );
    HRESULT Stop ( );
    _bstr_t GetTag ( );
    _bstr_t GetScope ( );
    MAPIFolderPtr Save (
        _bstr_t Name );
    _TablePtr GetTable ( );

    //
    // Raw methods provided by interface
    //

      virtual HRESULT __stdcall get_Application (
        /*[out,retval]*/ struct _Application * * Application ) = 0;
      virtual HRESULT __stdcall get_Class (
        /*[out,retval]*/ enum OlObjectClass * Class ) = 0;
      virtual HRESULT __stdcall get_Session (
        /*[out,retval]*/ struct _NameSpace * * Session ) = 0;
      virtual HRESULT __stdcall get_Parent (
        /*[out,retval]*/ IDispatch * * Parent ) = 0;
      virtual HRESULT __stdcall get_Filter (
        /*[out,retval]*/ BSTR * Filter ) = 0;
      virtual HRESULT __stdcall get_IsSynchronous (
        /*[out,retval]*/ VARIANT_BOOL * IsSynchronous ) = 0;
      virtual HRESULT __stdcall get_Results (
        /*[out,retval]*/ struct _Results * * Results ) = 0;
      virtual HRESULT __stdcall get_SearchSubFolders (
        /*[out,retval]*/ VARIANT_BOOL * SearchSubFolders ) = 0;
      virtual HRESULT __stdcall raw_Stop ( ) = 0;
      virtual HRESULT __stdcall get_Tag (
        /*[out,retval]*/ BSTR * Tag ) = 0;
      virtual HRESULT __stdcall get_Scope (
        /*[out,retval]*/ BSTR * Scope ) = 0;
      virtual HRESULT __stdcall raw_Save (
        /*[in]*/ BSTR Name,
        /*[out,retval]*/ struct MAPIFolder * * Folder ) = 0;
      virtual HRESULT __stdcall raw_GetTable (
        /*[out,retval]*/ struct _Table * * Table ) = 0;
};

struct __declspec(uuid("00063033-0000-0000-c000-000000000046"))
_AppointmentItem : IDispatch
{
    //
    // Property data
    //

    __declspec(property(get=GetAllDayEvent,put=PutAllDayEvent))
    VARIANT_BOOL AllDayEvent;
    __declspec(property(get=GetMeetingStatus,put=PutMeetingStatus))
    enum OlMeetingStatus MeetingStatus;
    __declspec(property(get=GetResponseStatus))
    enum OlResponseStatus ResponseStatus;
    __declspec(property(get=GetReminderMinutesBeforeStart,put=PutReminderMinutesBeforeStart))
    long ReminderMinutesBeforeStart;
    __declspec(property(get=GetReminderSet,put=PutReminderSet))
    VARIANT_BOOL ReminderSet;
    __declspec(property(get=GetCreationTime))
    DATE CreationTime;
    __declspec(property(get=GetCategories,put=PutCategories))
    _bstr_t Categories;
    __declspec(property(get=GetLastModificationTime))
    DATE LastModificationTime;
    __declspec(property(get=GetReplyTime,put=PutReplyTime))
    DATE ReplyTime;
    __declspec(property(get=GetRecipients))
    RecipientsPtr Recipients;
    __declspec(property(get=GetAttachments))
    AttachmentsPtr Attachments;
    __declspec(property(get=GetUserProperties))
    UserPropertiesPtr UserProperties;
    __declspec(property(get=GetActions))
    ActionsPtr Actions;
    __declspec(property(get=GetApplication))
    _ApplicationPtr Application;
    __declspec(property(get=GetPropertyAccessor))
    _PropertyAccessorPtr PropertyAccessor;
    __declspec(property(get=GetParent))
    IDispatchPtr Parent;
    __declspec(property(get=GetImportance,put=PutImportance))
    enum OlImportance Importance;
    __declspec(property(get=GetNoAging,put=PutNoAging))
    VARIANT_BOOL NoAging;
    __declspec(property(get=GetIsRecurring))
    VARIANT_BOOL IsRecurring;
    __declspec(property(get=GetMessageClass,put=PutMessageClass))
    _bstr_t MessageClass;
    __declspec(property(get=GetForceUpdateToAllAttendees,put=PutForceUpdateToAllAttendees))
    VARIANT_BOOL ForceUpdateToAllAttendees;
    __declspec(property(get=GetFormDescription))
    FormDescriptionPtr FormDescription;
    __declspec(property(get=GetLinks))
    LinksPtr Links;
    __declspec(property(get=GetClass))
    enum OlObjectClass Class;
    __declspec(property(get=GetSession))
    _NameSpacePtr Session;
    __declspec(property(get=GetStartTimeZone,put=PutStartTimeZone))
    _TimeZonePtr StartTimeZone;
    __declspec(property(get=GetEndTimeZone,put=PutEndTimeZone))
    _TimeZonePtr EndTimeZone;
    __declspec(property(get=GetResources,put=PutResources))
    _bstr_t Resources;
    __declspec(property(get=GetSaved))
    VARIANT_BOOL Saved;
    __declspec(property(get=GetOptionalAttendees,put=PutOptionalAttendees))
    _bstr_t OptionalAttendees;
    __declspec(property(get=GetRequiredAttendees,put=PutRequiredAttendees))
    _bstr_t RequiredAttendees;
    __declspec(property(get=GetReminderOverrideDefault,put=PutReminderOverrideDefault))
    VARIANT_BOOL ReminderOverrideDefault;
    __declspec(property(get=GetReminderPlaySound,put=PutReminderPlaySound))
    VARIANT_BOOL ReminderPlaySound;
    __declspec(property(get=GetSize))
    long Size;
    __declspec(property(get=GetReminderSoundFile,put=PutReminderSoundFile))
    _bstr_t ReminderSoundFile;
    __declspec(property(get=GetRecurrenceState))
    enum OlRecurrenceState RecurrenceState;
    __declspec(property(get=GetIsOnlineMeeting,put=PutIsOnlineMeeting))
    VARIANT_BOOL IsOnlineMeeting;
    __declspec(property(get=GetNetMeetingType,put=PutNetMeetingType))
    enum OlNetMeetingType NetMeetingType;
    __declspec(property(get=GetNetMeetingServer,put=PutNetMeetingServer))
    _bstr_t NetMeetingServer;
    __declspec(property(get=GetNetMeetingOrganizerAlias,put=PutNetMeetingOrganizerAlias))
    _bstr_t NetMeetingOrganizerAlias;
    __declspec(property(get=GetNetMeetingAutoStart,put=PutNetMeetingAutoStart))
    VARIANT_BOOL NetMeetingAutoStart;
    __declspec(property(get=GetUnRead,put=PutUnRead))
    VARIANT_BOOL UnRead;
    __declspec(property(get=GetConferenceServerAllowExternal,put=PutConferenceServerAllowExternal))
    VARIANT_BOOL ConferenceServerAllowExternal;
    __declspec(property(get=GetNetMeetingDocPathName,put=PutNetMeetingDocPathName))
    _bstr_t NetMeetingDocPathName;
    __declspec(property(get=GetNetShowURL,put=PutNetShowURL))
    _bstr_t NetShowURL;
    __declspec(property(get=GetConferenceServerPassword,put=PutConferenceServerPassword))
    _bstr_t ConferenceServerPassword;
    __declspec(property(get=GetSensitivity,put=PutSensitivity))
    enum OlSensitivity Sensitivity;
    __declspec(property(get=GetSubject,put=PutSubject))
    _bstr_t Subject;
    __declspec(property(get=GetEntryID))
    _bstr_t EntryID;
    __declspec(property(get=GetMileage,put=PutMileage))
    _bstr_t Mileage;
    __declspec(property(get=GetBillingInformation,put=PutBillingInformation))
    _bstr_t BillingInformation;
    __declspec(property(get=GetOrganizer))
    _bstr_t Organizer;
    __declspec(property(get=GetCompanies,put=PutCompanies))
    _bstr_t Companies;
    __declspec(property(get=GetInternetCodepage,put=PutInternetCodepage))
    long InternetCodepage;
    __declspec(property(get=GetItemProperties))
    ItemPropertiesPtr ItemProperties;
    __declspec(property(get=GetIsConflict))
    VARIANT_BOOL IsConflict;
    __declspec(property(get=GetGetInspector))
    _InspectorPtr GetInspector;
    __declspec(property(get=GetStartInStartTimeZone,put=PutStartInStartTimeZone))
    DATE StartInStartTimeZone;
    __declspec(property(get=GetStartUTC,put=PutStartUTC))
    DATE StartUTC;
    __declspec(property(get=GetEndUTC,put=PutEndUTC))
    DATE EndUTC;
    __declspec(property(get=GetEndInEndTimeZone,put=PutEndInEndTimeZone))
    DATE EndInEndTimeZone;
    __declspec(property(get=GetOutlookInternalVersion))
    long OutlookInternalVersion;
    __declspec(property(get=GetOutlookVersion))
    _bstr_t OutlookVersion;
    __declspec(property(get=GetResponseRequested,put=PutResponseRequested))
    VARIANT_BOOL ResponseRequested;
    __declspec(property(get=GetAutoResolvedWinner))
    VARIANT_BOOL AutoResolvedWinner;
    __declspec(property(get=GetConflicts))
    ConflictsPtr Conflicts;
    __declspec(property(get=GetConversationIndex))
    _bstr_t ConversationIndex;
    __declspec(property(get=GetConversationTopic))
    _bstr_t ConversationTopic;
    __declspec(property(get=GetBody,put=PutBody))
    _bstr_t Body;
    __declspec(property(get=GetMarkForDownload,put=PutMarkForDownload))
    enum OlRemoteStatus MarkForDownload;
    __declspec(property(get=GetSendUsingAccount,put=PutSendUsingAccount))
    _AccountPtr SendUsingAccount;
    __declspec(property(get=GetMAPIOBJECT))
    IUnknownPtr MAPIOBJECT;
    __declspec(property(get=GetGlobalAppointmentID))
    _bstr_t GlobalAppointmentID;
    __declspec(property(get=GetBusyStatus,put=PutBusyStatus))
    enum OlBusyStatus BusyStatus;
    __declspec(property(get=GetLocation,put=PutLocation))
    _bstr_t Location;
    __declspec(property(get=GetMeetingWorkspaceURL))
    _bstr_t MeetingWorkspaceURL;
    __declspec(property(get=GetDownloadState))
    enum OlDownloadState DownloadState;
    __declspec(property(get=GetEnd,put=PutEnd))
    DATE End;
    __declspec(property(get=GetStart,put=PutStart))
    DATE Start;
    __declspec(property(get=GetDuration,put=PutDuration))
    long Duration;

    //
    // Wrapper methods for error-handling
    //

    _ApplicationPtr GetApplication ( );
    enum OlObjectClass GetClass ( );
    _NameSpacePtr GetSession ( );
    IDispatchPtr GetParent ( );
    ActionsPtr GetActions ( );
    AttachmentsPtr GetAttachments ( );
    _bstr_t GetBillingInformation ( );
    void PutBillingInformation (
        _bstr_t BillingInformation );
    _bstr_t GetBody ( );
    void PutBody (
        _bstr_t Body );
    _bstr_t GetCategories ( );
    void PutCategories (
        _bstr_t Categories );
    _bstr_t GetCompanies ( );
    void PutCompanies (
        _bstr_t Companies );
    _bstr_t GetConversationIndex ( );
    _bstr_t GetConversationTopic ( );
    DATE GetCreationTime ( );
    _bstr_t GetEntryID ( );
    FormDescriptionPtr GetFormDescription ( );
    _InspectorPtr GetGetInspector ( );
    enum OlImportance GetImportance ( );
    void PutImportance (
        enum OlImportance Importance );
    DATE GetLastModificationTime ( );
    IUnknownPtr GetMAPIOBJECT ( );
    _bstr_t GetMessageClass ( );
    void PutMessageClass (
        _bstr_t MessageClass );
    _bstr_t GetMileage ( );
    void PutMileage (
        _bstr_t Mileage );
    VARIANT_BOOL GetNoAging ( );
    void PutNoAging (
        VARIANT_BOOL NoAging );
    long GetOutlookInternalVersion ( );
    _bstr_t GetOutlookVersion ( );
    VARIANT_BOOL GetSaved ( );
    enum OlSensitivity GetSensitivity ( );
    void PutSensitivity (
        enum OlSensitivity Sensitivity );
    long GetSize ( );
    _bstr_t GetSubject ( );
    void PutSubject (
        _bstr_t Subject );
    VARIANT_BOOL GetUnRead ( );
    void PutUnRead (
        VARIANT_BOOL UnRead );
    UserPropertiesPtr GetUserProperties ( );
    HRESULT Close (
        enum OlInspectorClose SaveMode );
    IDispatchPtr Copy ( );
    HRESULT Delete ( );
    HRESULT Display (
        const _variant_t & Modal = vtMissing );
    IDispatchPtr Move (
        struct MAPIFolder * DestFldr );
    HRESULT PrintOut ( );
    HRESULT Save ( );
    HRESULT SaveAs (
        _bstr_t Path,
        const _variant_t & Type = vtMissing );
    VARIANT_BOOL GetAllDayEvent ( );
    void PutAllDayEvent (
        VARIANT_BOOL AllDayEvent );
    enum OlBusyStatus GetBusyStatus ( );
    void PutBusyStatus (
        enum OlBusyStatus BusyStatus );
    long GetDuration ( );
    void PutDuration (
        long Duration );
    DATE GetEnd ( );
    void PutEnd (
        DATE End );
    VARIANT_BOOL GetIsOnlineMeeting ( );
    void PutIsOnlineMeeting (
        VARIANT_BOOL IsOnlineMeeting );
    VARIANT_BOOL GetIsRecurring ( );
    _bstr_t GetLocation ( );
    void PutLocation (
        _bstr_t Location );
    enum OlMeetingStatus GetMeetingStatus ( );
    void PutMeetingStatus (
        enum OlMeetingStatus MeetingStatus );
    VARIANT_BOOL GetNetMeetingAutoStart ( );
    void PutNetMeetingAutoStart (
        VARIANT_BOOL NetMeetingAutoStart );
    _bstr_t GetNetMeetingOrganizerAlias ( );
    void PutNetMeetingOrganizerAlias (
        _bstr_t NetMeetingOrganizerAlias );
    _bstr_t GetNetMeetingServer ( );
    void PutNetMeetingServer (
        _bstr_t NetMeetingServer );
    enum OlNetMeetingType GetNetMeetingType ( );
    void PutNetMeetingType (
        enum OlNetMeetingType NetMeetingType );
    _bstr_t GetOptionalAttendees ( );
    void PutOptionalAttendees (
        _bstr_t OptionalAttendees );
    _bstr_t GetOrganizer ( );
    RecipientsPtr GetRecipients ( );
    enum OlRecurrenceState GetRecurrenceState ( );
    long GetReminderMinutesBeforeStart ( );
    void PutReminderMinutesBeforeStart (
        long ReminderMinutesBeforeStart );
    VARIANT_BOOL GetReminderOverrideDefault ( );
    void PutReminderOverrideDefault (
        VARIANT_BOOL ReminderOverrideDefault );
    VARIANT_BOOL GetReminderPlaySound ( );
    void PutReminderPlaySound (
        VARIANT_BOOL ReminderPlaySound );
    VARIANT_BOOL GetReminderSet ( );
    void PutReminderSet (
        VARIANT_BOOL ReminderSet );
    _bstr_t GetReminderSoundFile ( );
    void PutReminderSoundFile (
        _bstr_t ReminderSoundFile );
    DATE GetReplyTime ( );
    void PutReplyTime (
        DATE ReplyTime );
    _bstr_t GetRequiredAttendees ( );
    void PutRequiredAttendees (
        _bstr_t RequiredAttendees );
    _bstr_t GetResources ( );
    void PutResources (
        _bstr_t Resources );
    VARIANT_BOOL GetResponseRequested ( );
    void PutResponseRequested (
        VARIANT_BOOL ResponseRequested );
    enum OlResponseStatus GetResponseStatus ( );
    DATE GetStart ( );
    void PutStart (
        DATE Start );
    HRESULT ClearRecurrencePattern ( );
    _MailItemPtr ForwardAsVcal ( );
    RecurrencePatternPtr GetRecurrencePattern ( );
    _MeetingItemPtr Respond (
        enum OlMeetingResponse Response,
        const _variant_t & fNoUI = vtMissing,
        const _variant_t & fAdditionalTextDialog = vtMissing );
    HRESULT Send ( );
    _bstr_t GetNetMeetingDocPathName ( );
    void PutNetMeetingDocPathName (
        _bstr_t NetMeetingDocPathName );
    _bstr_t GetNetShowURL ( );
    void PutNetShowURL (
        _bstr_t NetShowURL );
    LinksPtr GetLinks ( );
    VARIANT_BOOL GetConferenceServerAllowExternal ( );
    void PutConferenceServerAllowExternal (
        VARIANT_BOOL ConferenceServerAllowExternal );
    _bstr_t GetConferenceServerPassword ( );
    void PutConferenceServerPassword (
        _bstr_t ConferenceServerPassword );
    ItemPropertiesPtr GetItemProperties ( );
    enum OlDownloadState GetDownloadState ( );
    HRESULT ShowCategoriesDialog ( );
    long GetInternetCodepage ( );
    void PutInternetCodepage (
        long InternetCodepage );
    enum OlRemoteStatus GetMarkForDownload ( );
    void PutMarkForDownload (
        enum OlRemoteStatus MarkForDownload );
    VARIANT_BOOL GetIsConflict ( );
    _bstr_t GetMeetingWorkspaceURL ( );
    VARIANT_BOOL GetAutoResolvedWinner ( );
    ConflictsPtr GetConflicts ( );
    _PropertyAccessorPtr GetPropertyAccessor ( );
    _AccountPtr GetSendUsingAccount ( );
    void PutSendUsingAccount (
        struct _Account * SendUsingAccount );
    _bstr_t GetGlobalAppointmentID ( );
    VARIANT_BOOL GetForceUpdateToAllAttendees ( );
    void PutForceUpdateToAllAttendees (
        VARIANT_BOOL ForceUpdateToAllAttendees );
    DATE GetStartUTC ( );
    void PutStartUTC (
        DATE StartUTC );
    DATE GetEndUTC ( );
    void PutEndUTC (
        DATE EndUTC );
    DATE GetStartInStartTimeZone ( );
    void PutStartInStartTimeZone (
        DATE StartInStartTimeZone );
    DATE GetEndInEndTimeZone ( );
    void PutEndInEndTimeZone (
        DATE EndInEndTimeZone );
    _TimeZonePtr GetStartTimeZone ( );
    void PutStartTimeZone (
        struct _TimeZone * StartTimeZone );
    _TimeZonePtr GetEndTimeZone ( );
    void PutEndTimeZone (
        struct _TimeZone * EndTimeZone );

    //
    // Raw methods provided by interface
    //

      virtual HRESULT __stdcall get_Application (
        /*[out,retval]*/ struct _Application * * Application ) = 0;
      virtual HRESULT __stdcall get_Class (
        /*[out,retval]*/ enum OlObjectClass * Class ) = 0;
      virtual HRESULT __stdcall get_Session (
        /*[out,retval]*/ struct _NameSpace * * Session ) = 0;
      virtual HRESULT __stdcall get_Parent (
        /*[out,retval]*/ IDispatch * * Parent ) = 0;
      virtual HRESULT __stdcall get_Actions (
        /*[out,retval]*/ struct Actions * * Actions ) = 0;
      virtual HRESULT __stdcall get_Attachments (
        /*[out,retval]*/ struct Attachments * * Attachments ) = 0;
      virtual HRESULT __stdcall get_BillingInformation (
        /*[out,retval]*/ BSTR * BillingInformation ) = 0;
      virtual HRESULT __stdcall put_BillingInformation (
        /*[in]*/ BSTR BillingInformation ) = 0;
      virtual HRESULT __stdcall get_Body (
        /*[out,retval]*/ BSTR * Body ) = 0;
      virtual HRESULT __stdcall put_Body (
        /*[in]*/ BSTR Body ) = 0;
      virtual HRESULT __stdcall get_Categories (
        /*[out,retval]*/ BSTR * Categories ) = 0;
      virtual HRESULT __stdcall put_Categories (
        /*[in]*/ BSTR Categories ) = 0;
      virtual HRESULT __stdcall get_Companies (
        /*[out,retval]*/ BSTR * Companies ) = 0;
      virtual HRESULT __stdcall put_Companies (
        /*[in]*/ BSTR Companies ) = 0;
      virtual HRESULT __stdcall get_ConversationIndex (
        /*[out,retval]*/ BSTR * ConversationIndex ) = 0;
      virtual HRESULT __stdcall get_ConversationTopic (
        /*[out,retval]*/ BSTR * ConversationTopic ) = 0;
      virtual HRESULT __stdcall get_CreationTime (
        /*[out,retval]*/ DATE * CreationTime ) = 0;
      virtual HRESULT __stdcall get_EntryID (
        /*[out,retval]*/ BSTR * EntryID ) = 0;
      virtual HRESULT __stdcall get_FormDescription (
        /*[out,retval]*/ struct FormDescription * * FormDescription ) = 0;
      virtual HRESULT __stdcall get_GetInspector (
        /*[out,retval]*/ struct _Inspector * * GetInspector ) = 0;
      virtual HRESULT __stdcall get_Importance (
        /*[out,retval]*/ enum OlImportance * Importance ) = 0;
      virtual HRESULT __stdcall put_Importance (
        /*[in]*/ enum OlImportance Importance ) = 0;
      virtual HRESULT __stdcall get_LastModificationTime (
        /*[out,retval]*/ DATE * LastModificationTime ) = 0;
      virtual HRESULT __stdcall get_MAPIOBJECT (
        /*[out,retval]*/ IUnknown * * MAPIOBJECT ) = 0;
      virtual HRESULT __stdcall get_MessageClass (
        /*[out,retval]*/ BSTR * MessageClass ) = 0;
      virtual HRESULT __stdcall put_MessageClass (
        /*[in]*/ BSTR MessageClass ) = 0;
      virtual HRESULT __stdcall get_Mileage (
        /*[out,retval]*/ BSTR * Mileage ) = 0;
      virtual HRESULT __stdcall put_Mileage (
        /*[in]*/ BSTR Mileage ) = 0;
      virtual HRESULT __stdcall get_NoAging (
        /*[out,retval]*/ VARIANT_BOOL * NoAging ) = 0;
      virtual HRESULT __stdcall put_NoAging (
        /*[in]*/ VARIANT_BOOL NoAging ) = 0;
      virtual HRESULT __stdcall get_OutlookInternalVersion (
        /*[out,retval]*/ long * OutlookInternalVersion ) = 0;
      virtual HRESULT __stdcall get_OutlookVersion (
        /*[out,retval]*/ BSTR * OutlookVersion ) = 0;
      virtual HRESULT __stdcall get_Saved (
        /*[out,retval]*/ VARIANT_BOOL * Saved ) = 0;
      virtual HRESULT __stdcall get_Sensitivity (
        /*[out,retval]*/ enum OlSensitivity * Sensitivity ) = 0;
      virtual HRESULT __stdcall put_Sensitivity (
        /*[in]*/ enum OlSensitivity Sensitivity ) = 0;
      virtual HRESULT __stdcall get_Size (
        /*[out,retval]*/ long * Size ) = 0;
      virtual HRESULT __stdcall get_Subject (
        /*[out,retval]*/ BSTR * Subject ) = 0;
      virtual HRESULT __stdcall put_Subject (
        /*[in]*/ BSTR Subject ) = 0;
      virtual HRESULT __stdcall get_UnRead (
        /*[out,retval]*/ VARIANT_BOOL * UnRead ) = 0;
      virtual HRESULT __stdcall put_UnRead (
        /*[in]*/ VARIANT_BOOL UnRead ) = 0;
      virtual HRESULT __stdcall get_UserProperties (
        /*[out,retval]*/ struct UserProperties * * UserProperties ) = 0;
      virtual HRESULT __stdcall raw_Close (
        /*[in]*/ enum OlInspectorClose SaveMode ) = 0;
      virtual HRESULT __stdcall raw_Copy (
        /*[out,retval]*/ IDispatch * * Item ) = 0;
      virtual HRESULT __stdcall raw_Delete ( ) = 0;
      virtual HRESULT __stdcall raw_Display (
        /*[in]*/ VARIANT Modal = vtMissing ) = 0;
      virtual HRESULT __stdcall raw_Move (
        /*[in]*/ struct MAPIFolder * DestFldr,
        /*[out,retval]*/ IDispatch * * Item ) = 0;
      virtual HRESULT __stdcall raw_PrintOut ( ) = 0;
      virtual HRESULT __stdcall raw_Save ( ) = 0;
      virtual HRESULT __stdcall raw_SaveAs (
        /*[in]*/ BSTR Path,
        /*[in]*/ VARIANT Type = vtMissing ) = 0;
      virtual HRESULT __stdcall get_AllDayEvent (
        /*[out,retval]*/ VARIANT_BOOL * AllDayEvent ) = 0;
      virtual HRESULT __stdcall put_AllDayEvent (
        /*[in]*/ VARIANT_BOOL AllDayEvent ) = 0;
      virtual HRESULT __stdcall get_BusyStatus (
        /*[out,retval]*/ enum OlBusyStatus * BusyStatus ) = 0;
      virtual HRESULT __stdcall put_BusyStatus (
        /*[in]*/ enum OlBusyStatus BusyStatus ) = 0;
      virtual HRESULT __stdcall get_Duration (
        /*[out,retval]*/ long * Duration ) = 0;
      virtual HRESULT __stdcall put_Duration (
        /*[in]*/ long Duration ) = 0;
      virtual HRESULT __stdcall get_End (
        /*[out,retval]*/ DATE * End ) = 0;
      virtual HRESULT __stdcall put_End (
        /*[in]*/ DATE End ) = 0;
      virtual HRESULT __stdcall get_IsOnlineMeeting (
        /*[out,retval]*/ VARIANT_BOOL * IsOnlineMeeting ) = 0;
      virtual HRESULT __stdcall put_IsOnlineMeeting (
        /*[in]*/ VARIANT_BOOL IsOnlineMeeting ) = 0;
      virtual HRESULT __stdcall get_IsRecurring (
        /*[out,retval]*/ VARIANT_BOOL * IsRecurring ) = 0;
      virtual HRESULT __stdcall get_Location (
        /*[out,retval]*/ BSTR * Location ) = 0;
      virtual HRESULT __stdcall put_Location (
        /*[in]*/ BSTR Location ) = 0;
      virtual HRESULT __stdcall get_MeetingStatus (
        /*[out,retval]*/ enum OlMeetingStatus * MeetingStatus ) = 0;
      virtual HRESULT __stdcall put_MeetingStatus (
        /*[in]*/ enum OlMeetingStatus MeetingStatus ) = 0;
      virtual HRESULT __stdcall get_NetMeetingAutoStart (
        /*[out,retval]*/ VARIANT_BOOL * NetMeetingAutoStart ) = 0;
      virtual HRESULT __stdcall put_NetMeetingAutoStart (
        /*[in]*/ VARIANT_BOOL NetMeetingAutoStart ) = 0;
      virtual HRESULT __stdcall get_NetMeetingOrganizerAlias (
        /*[out,retval]*/ BSTR * NetMeetingOrganizerAlias ) = 0;
      virtual HRESULT __stdcall put_NetMeetingOrganizerAlias (
        /*[in]*/ BSTR NetMeetingOrganizerAlias ) = 0;
      virtual HRESULT __stdcall get_NetMeetingServer (
        /*[out,retval]*/ BSTR * NetMeetingServer ) = 0;
      virtual HRESULT __stdcall put_NetMeetingServer (
        /*[in]*/ BSTR NetMeetingServer ) = 0;
      virtual HRESULT __stdcall get_NetMeetingType (
        /*[out,retval]*/ enum OlNetMeetingType * NetMeetingType ) = 0;
      virtual HRESULT __stdcall put_NetMeetingType (
        /*[in]*/ enum OlNetMeetingType NetMeetingType ) = 0;
      virtual HRESULT __stdcall get_OptionalAttendees (
        /*[out,retval]*/ BSTR * OptionalAttendees ) = 0;
      virtual HRESULT __stdcall put_OptionalAttendees (
        /*[in]*/ BSTR OptionalAttendees ) = 0;
      virtual HRESULT __stdcall get_Organizer (
        /*[out,retval]*/ BSTR * Organizer ) = 0;
      virtual HRESULT __stdcall get_Recipients (
        /*[out,retval]*/ struct Recipients * * Recipients ) = 0;
      virtual HRESULT __stdcall get_RecurrenceState (
        /*[out,retval]*/ enum OlRecurrenceState * RecurrenceState ) = 0;
      virtual HRESULT __stdcall get_ReminderMinutesBeforeStart (
        /*[out,retval]*/ long * ReminderMinutesBeforeStart ) = 0;
      virtual HRESULT __stdcall put_ReminderMinutesBeforeStart (
        /*[in]*/ long ReminderMinutesBeforeStart ) = 0;
      virtual HRESULT __stdcall get_ReminderOverrideDefault (
        /*[out,retval]*/ VARIANT_BOOL * ReminderOverrideDefault ) = 0;
      virtual HRESULT __stdcall put_ReminderOverrideDefault (
        /*[in]*/ VARIANT_BOOL ReminderOverrideDefault ) = 0;
      virtual HRESULT __stdcall get_ReminderPlaySound (
        /*[out,retval]*/ VARIANT_BOOL * ReminderPlaySound ) = 0;
      virtual HRESULT __stdcall put_ReminderPlaySound (
        /*[in]*/ VARIANT_BOOL ReminderPlaySound ) = 0;
      virtual HRESULT __stdcall get_ReminderSet (
        /*[out,retval]*/ VARIANT_BOOL * ReminderSet ) = 0;
      virtual HRESULT __stdcall put_ReminderSet (
        /*[in]*/ VARIANT_BOOL ReminderSet ) = 0;
      virtual HRESULT __stdcall get_ReminderSoundFile (
        /*[out,retval]*/ BSTR * ReminderSoundFile ) = 0;
      virtual HRESULT __stdcall put_ReminderSoundFile (
        /*[in]*/ BSTR ReminderSoundFile ) = 0;
      virtual HRESULT __stdcall get_ReplyTime (
        /*[out,retval]*/ DATE * ReplyTime ) = 0;
      virtual HRESULT __stdcall put_ReplyTime (
        /*[in]*/ DATE ReplyTime ) = 0;
      virtual HRESULT __stdcall get_RequiredAttendees (
        /*[out,retval]*/ BSTR * RequiredAttendees ) = 0;
      virtual HRESULT __stdcall put_RequiredAttendees (
        /*[in]*/ BSTR RequiredAttendees ) = 0;
      virtual HRESULT __stdcall get_Resources (
        /*[out,retval]*/ BSTR * Resources ) = 0;
      virtual HRESULT __stdcall put_Resources (
        /*[in]*/ BSTR Resources ) = 0;
      virtual HRESULT __stdcall get_ResponseRequested (
        /*[out,retval]*/ VARIANT_BOOL * ResponseRequested ) = 0;
      virtual HRESULT __stdcall put_ResponseRequested (
        /*[in]*/ VARIANT_BOOL ResponseRequested ) = 0;
      virtual HRESULT __stdcall get_ResponseStatus (
        /*[out,retval]*/ enum OlResponseStatus * ResponseStatus ) = 0;
      virtual HRESULT __stdcall get_Start (
        /*[out,retval]*/ DATE * Start ) = 0;
      virtual HRESULT __stdcall put_Start (
        /*[in]*/ DATE Start ) = 0;
      virtual HRESULT __stdcall raw_ClearRecurrencePattern ( ) = 0;
      virtual HRESULT __stdcall raw_ForwardAsVcal (
        /*[out,retval]*/ struct _MailItem * * Item ) = 0;
      virtual HRESULT __stdcall raw_GetRecurrencePattern (
        /*[out,retval]*/ struct RecurrencePattern * * RecurrencPattern ) = 0;
      virtual HRESULT __stdcall raw_Respond (
        /*[in]*/ enum OlMeetingResponse Response,
        /*[in]*/ VARIANT fNoUI,
        /*[in]*/ VARIANT fAdditionalTextDialog,
        /*[out,retval]*/ struct _MeetingItem * * ResponseItem ) = 0;
      virtual HRESULT __stdcall raw_Send ( ) = 0;
      virtual HRESULT __stdcall get_NetMeetingDocPathName (
        /*[out,retval]*/ BSTR * NetMeetingDocPathName ) = 0;
      virtual HRESULT __stdcall put_NetMeetingDocPathName (
        /*[in]*/ BSTR NetMeetingDocPathName ) = 0;
      virtual HRESULT __stdcall get_NetShowURL (
        /*[out,retval]*/ BSTR * NetShowURL ) = 0;
      virtual HRESULT __stdcall put_NetShowURL (
        /*[in]*/ BSTR NetShowURL ) = 0;
      virtual HRESULT __stdcall get_Links (
        /*[out,retval]*/ struct Links * * Links ) = 0;
      virtual HRESULT __stdcall get_ConferenceServerAllowExternal (
        /*[out,retval]*/ VARIANT_BOOL * ConferenceServerAllowExternal ) = 0;
      virtual HRESULT __stdcall put_ConferenceServerAllowExternal (
        /*[in]*/ VARIANT_BOOL ConferenceServerAllowExternal ) = 0;
      virtual HRESULT __stdcall get_ConferenceServerPassword (
        /*[out,retval]*/ BSTR * ConferenceServerPassword ) = 0;
      virtual HRESULT __stdcall put_ConferenceServerPassword (
        /*[in]*/ BSTR ConferenceServerPassword ) = 0;
      virtual HRESULT __stdcall get_ItemProperties (
        /*[out,retval]*/ struct ItemProperties * * ItemProperties ) = 0;
      virtual HRESULT __stdcall get_DownloadState (
        /*[out,retval]*/ enum OlDownloadState * DownloadState ) = 0;
      virtual HRESULT __stdcall raw_ShowCategoriesDialog ( ) = 0;
      virtual HRESULT __stdcall get_InternetCodepage (
        /*[out,retval]*/ long * InternetCodepage ) = 0;
      virtual HRESULT __stdcall put_InternetCodepage (
        /*[in]*/ long InternetCodepage ) = 0;
      virtual HRESULT __stdcall get_MarkForDownload (
        /*[out,retval]*/ enum OlRemoteStatus * MarkForDownload ) = 0;
      virtual HRESULT __stdcall put_MarkForDownload (
        /*[in]*/ enum OlRemoteStatus MarkForDownload ) = 0;
      virtual HRESULT __stdcall get_IsConflict (
        /*[out,retval]*/ VARIANT_BOOL * IsConflict ) = 0;
      virtual HRESULT __stdcall get_MeetingWorkspaceURL (
        /*[out,retval]*/ BSTR * MeetingWorkspaceURL ) = 0;
      virtual HRESULT __stdcall get_AutoResolvedWinner (
        /*[out,retval]*/ VARIANT_BOOL * AutoResolvedWinner ) = 0;
      virtual HRESULT __stdcall get_Conflicts (
        /*[out,retval]*/ struct Conflicts * * Conflicts ) = 0;
      virtual HRESULT __stdcall get_PropertyAccessor (
        /*[out,retval]*/ struct _PropertyAccessor * * PropertyAccessor ) = 0;
      virtual HRESULT __stdcall get_SendUsingAccount (
        /*[out,retval]*/ struct _Account * * SendUsingAccount ) = 0;
      virtual HRESULT __stdcall put_SendUsingAccount (
        /*[in]*/ struct _Account * SendUsingAccount ) = 0;
      virtual HRESULT __stdcall get_GlobalAppointmentID (
        /*[out,retval]*/ BSTR * GlobalAppointmentID ) = 0;
      virtual HRESULT __stdcall get_ForceUpdateToAllAttendees (
        /*[out,retval]*/ VARIANT_BOOL * ForceUpdateToAllAttendees ) = 0;
      virtual HRESULT __stdcall put_ForceUpdateToAllAttendees (
        /*[in]*/ VARIANT_BOOL ForceUpdateToAllAttendees ) = 0;
      virtual HRESULT __stdcall get_StartUTC (
        /*[out,retval]*/ DATE * StartUTC ) = 0;
      virtual HRESULT __stdcall put_StartUTC (
        /*[in]*/ DATE StartUTC ) = 0;
      virtual HRESULT __stdcall get_EndUTC (
        /*[out,retval]*/ DATE * EndUTC ) = 0;
      virtual HRESULT __stdcall put_EndUTC (
        /*[in]*/ DATE EndUTC ) = 0;
      virtual HRESULT __stdcall get_StartInStartTimeZone (
        /*[out,retval]*/ DATE * StartInStartTimeZone ) = 0;
      virtual HRESULT __stdcall put_StartInStartTimeZone (
        /*[in]*/ DATE StartInStartTimeZone ) = 0;
      virtual HRESULT __stdcall get_EndInEndTimeZone (
        /*[out,retval]*/ DATE * EndInEndTimeZone ) = 0;
      virtual HRESULT __stdcall put_EndInEndTimeZone (
        /*[in]*/ DATE EndInEndTimeZone ) = 0;
      virtual HRESULT __stdcall get_StartTimeZone (
        /*[out,retval]*/ struct _TimeZone * * StartTimeZone ) = 0;
      virtual HRESULT __stdcall put_StartTimeZone (
        /*[in]*/ struct _TimeZone * StartTimeZone ) = 0;
      virtual HRESULT __stdcall get_EndTimeZone (
        /*[out,retval]*/ struct _TimeZone * * EndTimeZone ) = 0;
      virtual HRESULT __stdcall put_EndTimeZone (
        /*[in]*/ struct _TimeZone * EndTimeZone ) = 0;
};

struct __declspec(uuid("00063062-0000-0000-c000-000000000046"))
_MeetingItem : IDispatch
{
    //
    // Property data
    //

    __declspec(property(get=GetMileage,put=PutMileage))
    _bstr_t Mileage;
    __declspec(property(get=GetBillingInformation,put=PutBillingInformation))
    _bstr_t BillingInformation;
    __declspec(property(get=GetConversationTopic))
    _bstr_t ConversationTopic;
    __declspec(property(get=GetSaved))
    VARIANT_BOOL Saved;
    __declspec(property(get=GetAutoForwarded,put=PutAutoForwarded))
    VARIANT_BOOL AutoForwarded;
    __declspec(property(get=GetCompanies,put=PutCompanies))
    _bstr_t Companies;
    __declspec(property(get=GetGetInspector))
    _InspectorPtr GetInspector;
    __declspec(property(get=GetPropertyAccessor))
    _PropertyAccessorPtr PropertyAccessor;
    __declspec(property(get=GetDeferredDeliveryTime,put=PutDeferredDeliveryTime))
    DATE DeferredDeliveryTime;
    __declspec(property(get=GetCategories,put=PutCategories))
    _bstr_t Categories;
    __declspec(property(get=GetSenderName))
    _bstr_t SenderName;
    __declspec(property(get=GetExpiryTime,put=PutExpiryTime))
    DATE ExpiryTime;
    __declspec(property(get=GetSenderEmailType))
    _bstr_t SenderEmailType;
    __declspec(property(get=GetImportance,put=PutImportance))
    enum OlImportance Importance;
    __declspec(property(get=GetSenderEmailAddress))
    _bstr_t SenderEmailAddress;
    __declspec(property(get=GetMessageClass,put=PutMessageClass))
    _bstr_t MessageClass;
    __declspec(property(get=GetOutlookInternalVersion))
    long OutlookInternalVersion;
    __declspec(property(get=GetOutlookVersion))
    _bstr_t OutlookVersion;
    __declspec(property(get=GetIsConflict))
    VARIANT_BOOL IsConflict;
    __declspec(property(get=GetOriginatorDeliveryReportRequested,put=PutOriginatorDeliveryReportRequested))
    VARIANT_BOOL OriginatorDeliveryReportRequested;
    __declspec(property(get=GetRecipients))
    RecipientsPtr Recipients;
    __declspec(property(get=GetAttachments))
    AttachmentsPtr Attachments;
    __declspec(property(get=GetUserProperties))
    UserPropertiesPtr UserProperties;
    __declspec(property(get=GetActions))
    ActionsPtr Actions;
    __declspec(property(get=GetFlagDueBy,put=PutFlagDueBy))
    DATE FlagDueBy;
    __declspec(property(get=GetBody,put=PutBody))
    _bstr_t Body;
    __declspec(property(get=GetSensitivity,put=PutSensitivity))
    enum OlSensitivity Sensitivity;
    __declspec(property(get=GetSubject,put=PutSubject))
    _bstr_t Subject;
    __declspec(property(get=GetAutoResolvedWinner))
    VARIANT_BOOL AutoResolvedWinner;
    __declspec(property(get=GetDownloadState))
    enum OlDownloadState DownloadState;
    __declspec(property(get=GetSentOn))
    DATE SentOn;
    __declspec(property(get=GetConflicts))
    ConflictsPtr Conflicts;
    __declspec(property(get=GetApplication))
    _ApplicationPtr Application;
    __declspec(property(get=GetParent))
    IDispatchPtr Parent;
    __declspec(property(get=GetReminderSet,put=PutReminderSet))
    VARIANT_BOOL ReminderSet;
    __declspec(property(get=GetReminderTime,put=PutReminderTime))
    DATE ReminderTime;
    __declspec(property(get=GetMarkForDownload,put=PutMarkForDownload))
    enum OlRemoteStatus MarkForDownload;
    __declspec(property(get=GetFlagStatus,put=PutFlagStatus))
    enum OlFlagStatus FlagStatus;
    __declspec(property(get=GetDeleteAfterSubmit,put=PutDeleteAfterSubmit))
    VARIANT_BOOL DeleteAfterSubmit;
    __declspec(property(get=GetConversationIndex))
    _bstr_t ConversationIndex;
    __declspec(property(get=GetMeetingWorkspaceURL))
    _bstr_t MeetingWorkspaceURL;
    __declspec(property(get=GetClass))
    enum OlObjectClass Class;
    __declspec(property(get=GetSession))
    _NameSpacePtr Session;
    __declspec(property(get=GetNoAging,put=PutNoAging))
    VARIANT_BOOL NoAging;
    __declspec(property(get=GetReceivedTime,put=PutReceivedTime))
    DATE ReceivedTime;
    __declspec(property(get=GetSize))
    long Size;
    __declspec(property(get=GetFlagIcon,put=PutFlagIcon))
    enum OlFlagIcon FlagIcon;
    __declspec(property(get=GetReplyRecipients))
    RecipientsPtr ReplyRecipients;
    __declspec(property(get=GetCreationTime))
    DATE CreationTime;
    __declspec(property(get=GetLastModificationTime))
    DATE LastModificationTime;
    __declspec(property(get=GetUnRead,put=PutUnRead))
    VARIANT_BOOL UnRead;
    __declspec(property(get=GetEntryID))
    _bstr_t EntryID;
    __declspec(property(get=GetSaveSentMessageFolder,put=PutRefSaveSentMessageFolder))
    MAPIFolderPtr SaveSentMessageFolder;
    __declspec(property(get=GetMAPIOBJECT))
    IUnknownPtr MAPIOBJECT;
    __declspec(property(get=GetSent))
    VARIANT_BOOL Sent;
    __declspec(property(get=GetSubmitted))
    VARIANT_BOOL Submitted;
    __declspec(property(get=GetFormDescription))
    FormDescriptionPtr FormDescription;
    __declspec(property(get=GetItemProperties))
    ItemPropertiesPtr ItemProperties;
    __declspec(property(get=GetLinks))
    LinksPtr Links;
    __declspec(property(get=GetFlagRequest,put=PutFlagRequest))
    _bstr_t FlagRequest;

    //
    // Wrapper methods for error-handling
    //

    _ApplicationPtr GetApplication ( );
    enum OlObjectClass GetClass ( );
    _NameSpacePtr GetSession ( );
    IDispatchPtr GetParent ( );
    ActionsPtr GetActions ( );
    AttachmentsPtr GetAttachments ( );
    _bstr_t GetBillingInformation ( );
    void PutBillingInformation (
        _bstr_t BillingInformation );
    _bstr_t GetBody ( );
    void PutBody (
        _bstr_t Body );
    _bstr_t GetCategories ( );
    void PutCategories (
        _bstr_t Categories );
    _bstr_t GetCompanies ( );
    void PutCompanies (
        _bstr_t Companies );
    _bstr_t GetConversationIndex ( );
    _bstr_t GetConversationTopic ( );
    DATE GetCreationTime ( );
    _bstr_t GetEntryID ( );
    FormDescriptionPtr GetFormDescription ( );
    _InspectorPtr GetGetInspector ( );
    enum OlImportance GetImportance ( );
    void PutImportance (
        enum OlImportance Importance );
    DATE GetLastModificationTime ( );
    IUnknownPtr GetMAPIOBJECT ( );
    _bstr_t GetMessageClass ( );
    void PutMessageClass (
        _bstr_t MessageClass );
    _bstr_t GetMileage ( );
    void PutMileage (
        _bstr_t Mileage );
    VARIANT_BOOL GetNoAging ( );
    void PutNoAging (
        VARIANT_BOOL NoAging );
    long GetOutlookInternalVersion ( );
    _bstr_t GetOutlookVersion ( );
    VARIANT_BOOL GetSaved ( );
    enum OlSensitivity GetSensitivity ( );
    void PutSensitivity (
        enum OlSensitivity Sensitivity );
    long GetSize ( );
    _bstr_t GetSubject ( );
    void PutSubject (
        _bstr_t Subject );
    VARIANT_BOOL GetUnRead ( );
    void PutUnRead (
        VARIANT_BOOL UnRead );
    UserPropertiesPtr GetUserProperties ( );
    HRESULT Close (
        enum OlInspectorClose SaveMode );
    IDispatchPtr Copy ( );
    HRESULT Delete ( );
    HRESULT Display (
        const _variant_t & Modal = vtMissing );
    IDispatchPtr Move (
        struct MAPIFolder * DestFldr );
    HRESULT PrintOut ( );
    HRESULT Save ( );
    HRESULT SaveAs (
        _bstr_t Path,
        const _variant_t & Type = vtMissing );
    VARIANT_BOOL GetAutoForwarded ( );
    void PutAutoForwarded (
        VARIANT_BOOL AutoForwarded );
    DATE GetDeferredDeliveryTime ( );
    void PutDeferredDeliveryTime (
        DATE DeferredDeliveryTime );
    VARIANT_BOOL GetDeleteAfterSubmit ( );
    void PutDeleteAfterSubmit (
        VARIANT_BOOL DeleteAfterSubmit );
    DATE GetExpiryTime ( );
    void PutExpiryTime (
        DATE ExpiryTime );
    DATE GetFlagDueBy ( );
    void PutFlagDueBy (
        DATE FlagDueBy );
    _bstr_t GetFlagRequest ( );
    void PutFlagRequest (
        _bstr_t FlagRequest );
    enum OlFlagStatus GetFlagStatus ( );
    void PutFlagStatus (
        enum OlFlagStatus FlagStatus );
    VARIANT_BOOL GetOriginatorDeliveryReportRequested ( );
    void PutOriginatorDeliveryReportRequested (
        VARIANT_BOOL OriginatorDeliveryReportRequested );
    DATE GetReceivedTime ( );
    void PutReceivedTime (
        DATE ReceivedTime );
    RecipientsPtr GetRecipients ( );
    VARIANT_BOOL GetReminderSet ( );
    void PutReminderSet (
        VARIANT_BOOL ReminderSet );
    DATE GetReminderTime ( );
    void PutReminderTime (
        DATE ReminderTime );
    RecipientsPtr GetReplyRecipients ( );
    MAPIFolderPtr GetSaveSentMessageFolder ( );
    void PutRefSaveSentMessageFolder (
        struct MAPIFolder * SaveSentMessageFolder );
    _bstr_t GetSenderName ( );
    VARIANT_BOOL GetSent ( );
    DATE GetSentOn ( );
    VARIANT_BOOL GetSubmitted ( );
    _MeetingItemPtr Forward ( );
    _AppointmentItemPtr GetAssociatedAppointment (
        VARIANT_BOOL AddToCalendar );
    _MailItemPtr Reply ( );
    _MailItemPtr ReplyAll ( );
    HRESULT Send ( );
    LinksPtr GetLinks ( );
    enum OlDownloadState GetDownloadState ( );
    HRESULT ShowCategoriesDialog ( );
    ItemPropertiesPtr GetItemProperties ( );
    enum OlRemoteStatus GetMarkForDownload ( );
    void PutMarkForDownload (
        enum OlRemoteStatus MarkForDownload );
    VARIANT_BOOL GetIsConflict ( );
    _bstr_t GetMeetingWorkspaceURL ( );
    enum OlFlagIcon GetFlagIcon ( );
    void PutFlagIcon (
        enum OlFlagIcon FlagIcon );
    VARIANT_BOOL GetAutoResolvedWinner ( );
    ConflictsPtr GetConflicts ( );
    _bstr_t GetSenderEmailAddress ( );
    _bstr_t GetSenderEmailType ( );
    _PropertyAccessorPtr GetPropertyAccessor ( );

    //
    // Raw methods provided by interface
    //

      virtual HRESULT __stdcall get_Application (
        /*[out,retval]*/ struct _Application * * Application ) = 0;
      virtual HRESULT __stdcall get_Class (
        /*[out,retval]*/ enum OlObjectClass * Class ) = 0;
      virtual HRESULT __stdcall get_Session (
        /*[out,retval]*/ struct _NameSpace * * Session ) = 0;
      virtual HRESULT __stdcall get_Parent (
        /*[out,retval]*/ IDispatch * * Parent ) = 0;
      virtual HRESULT __stdcall get_Actions (
        /*[out,retval]*/ struct Actions * * Actions ) = 0;
      virtual HRESULT __stdcall get_Attachments (
        /*[out,retval]*/ struct Attachments * * Attachments ) = 0;
      virtual HRESULT __stdcall get_BillingInformation (
        /*[out,retval]*/ BSTR * BillingInformation ) = 0;
      virtual HRESULT __stdcall put_BillingInformation (
        /*[in]*/ BSTR BillingInformation ) = 0;
      virtual HRESULT __stdcall get_Body (
        /*[out,retval]*/ BSTR * Body ) = 0;
      virtual HRESULT __stdcall put_Body (
        /*[in]*/ BSTR Body ) = 0;
      virtual HRESULT __stdcall get_Categories (
        /*[out,retval]*/ BSTR * Categories ) = 0;
      virtual HRESULT __stdcall put_Categories (
        /*[in]*/ BSTR Categories ) = 0;
      virtual HRESULT __stdcall get_Companies (
        /*[out,retval]*/ BSTR * Companies ) = 0;
      virtual HRESULT __stdcall put_Companies (
        /*[in]*/ BSTR Companies ) = 0;
      virtual HRESULT __stdcall get_ConversationIndex (
        /*[out,retval]*/ BSTR * ConversationIndex ) = 0;
      virtual HRESULT __stdcall get_ConversationTopic (
        /*[out,retval]*/ BSTR * ConversationTopic ) = 0;
      virtual HRESULT __stdcall get_CreationTime (
        /*[out,retval]*/ DATE * CreationTime ) = 0;
      virtual HRESULT __stdcall get_EntryID (
        /*[out,retval]*/ BSTR * EntryID ) = 0;
      virtual HRESULT __stdcall get_FormDescription (
        /*[out,retval]*/ struct FormDescription * * FormDescription ) = 0;
      virtual HRESULT __stdcall get_GetInspector (
        /*[out,retval]*/ struct _Inspector * * GetInspector ) = 0;
      virtual HRESULT __stdcall get_Importance (
        /*[out,retval]*/ enum OlImportance * Importance ) = 0;
      virtual HRESULT __stdcall put_Importance (
        /*[in]*/ enum OlImportance Importance ) = 0;
      virtual HRESULT __stdcall get_LastModificationTime (
        /*[out,retval]*/ DATE * LastModificationTime ) = 0;
      virtual HRESULT __stdcall get_MAPIOBJECT (
        /*[out,retval]*/ IUnknown * * MAPIOBJECT ) = 0;
      virtual HRESULT __stdcall get_MessageClass (
        /*[out,retval]*/ BSTR * MessageClass ) = 0;
      virtual HRESULT __stdcall put_MessageClass (
        /*[in]*/ BSTR MessageClass ) = 0;
      virtual HRESULT __stdcall get_Mileage (
        /*[out,retval]*/ BSTR * Mileage ) = 0;
      virtual HRESULT __stdcall put_Mileage (
        /*[in]*/ BSTR Mileage ) = 0;
      virtual HRESULT __stdcall get_NoAging (
        /*[out,retval]*/ VARIANT_BOOL * NoAging ) = 0;
      virtual HRESULT __stdcall put_NoAging (
        /*[in]*/ VARIANT_BOOL NoAging ) = 0;
      virtual HRESULT __stdcall get_OutlookInternalVersion (
        /*[out,retval]*/ long * OutlookInternalVersion ) = 0;
      virtual HRESULT __stdcall get_OutlookVersion (
        /*[out,retval]*/ BSTR * OutlookVersion ) = 0;
      virtual HRESULT __stdcall get_Saved (
        /*[out,retval]*/ VARIANT_BOOL * Saved ) = 0;
      virtual HRESULT __stdcall get_Sensitivity (
        /*[out,retval]*/ enum OlSensitivity * Sensitivity ) = 0;
      virtual HRESULT __stdcall put_Sensitivity (
        /*[in]*/ enum OlSensitivity Sensitivity ) = 0;
      virtual HRESULT __stdcall get_Size (
        /*[out,retval]*/ long * Size ) = 0;
      virtual HRESULT __stdcall get_Subject (
        /*[out,retval]*/ BSTR * Subject ) = 0;
      virtual HRESULT __stdcall put_Subject (
        /*[in]*/ BSTR Subject ) = 0;
      virtual HRESULT __stdcall get_UnRead (
        /*[out,retval]*/ VARIANT_BOOL * UnRead ) = 0;
      virtual HRESULT __stdcall put_UnRead (
        /*[in]*/ VARIANT_BOOL UnRead ) = 0;
      virtual HRESULT __stdcall get_UserProperties (
        /*[out,retval]*/ struct UserProperties * * UserProperties ) = 0;
      virtual HRESULT __stdcall raw_Close (
        /*[in]*/ enum OlInspectorClose SaveMode ) = 0;
      virtual HRESULT __stdcall raw_Copy (
        /*[out,retval]*/ IDispatch * * Item ) = 0;
      virtual HRESULT __stdcall raw_Delete ( ) = 0;
      virtual HRESULT __stdcall raw_Display (
        /*[in]*/ VARIANT Modal = vtMissing ) = 0;
      virtual HRESULT __stdcall raw_Move (
        /*[in]*/ struct MAPIFolder * DestFldr,
        /*[out,retval]*/ IDispatch * * Item ) = 0;
      virtual HRESULT __stdcall raw_PrintOut ( ) = 0;
      virtual HRESULT __stdcall raw_Save ( ) = 0;
      virtual HRESULT __stdcall raw_SaveAs (
        /*[in]*/ BSTR Path,
        /*[in]*/ VARIANT Type = vtMissing ) = 0;
      virtual HRESULT __stdcall get_AutoForwarded (
        /*[out,retval]*/ VARIANT_BOOL * AutoForwarded ) = 0;
      virtual HRESULT __stdcall put_AutoForwarded (
        /*[in]*/ VARIANT_BOOL AutoForwarded ) = 0;
      virtual HRESULT __stdcall get_DeferredDeliveryTime (
        /*[out,retval]*/ DATE * DeferredDeliveryTime ) = 0;
      virtual HRESULT __stdcall put_DeferredDeliveryTime (
        /*[in]*/ DATE DeferredDeliveryTime ) = 0;
      virtual HRESULT __stdcall get_DeleteAfterSubmit (
        /*[out,retval]*/ VARIANT_BOOL * DeleteAfterSubmit ) = 0;
      virtual HRESULT __stdcall put_DeleteAfterSubmit (
        /*[in]*/ VARIANT_BOOL DeleteAfterSubmit ) = 0;
      virtual HRESULT __stdcall get_ExpiryTime (
        /*[out,retval]*/ DATE * ExpiryTime ) = 0;
      virtual HRESULT __stdcall put_ExpiryTime (
        /*[in]*/ DATE ExpiryTime ) = 0;
      virtual HRESULT __stdcall get_FlagDueBy (
        /*[out,retval]*/ DATE * FlagDueBy ) = 0;
      virtual HRESULT __stdcall put_FlagDueBy (
        /*[in]*/ DATE FlagDueBy ) = 0;
      virtual HRESULT __stdcall get_FlagRequest (
        /*[out,retval]*/ BSTR * FlagRequest ) = 0;
      virtual HRESULT __stdcall put_FlagRequest (
        /*[in]*/ BSTR FlagRequest ) = 0;
      virtual HRESULT __stdcall get_FlagStatus (
        /*[out,retval]*/ enum OlFlagStatus * FlagStatus ) = 0;
      virtual HRESULT __stdcall put_FlagStatus (
        /*[in]*/ enum OlFlagStatus FlagStatus ) = 0;
      virtual HRESULT __stdcall get_OriginatorDeliveryReportRequested (
        /*[out,retval]*/ VARIANT_BOOL * OriginatorDeliveryReportRequested ) = 0;
      virtual HRESULT __stdcall put_OriginatorDeliveryReportRequested (
        /*[in]*/ VARIANT_BOOL OriginatorDeliveryReportRequested ) = 0;
      virtual HRESULT __stdcall get_ReceivedTime (
        /*[out,retval]*/ DATE * ReceivedTime ) = 0;
      virtual HRESULT __stdcall put_ReceivedTime (
        /*[in]*/ DATE ReceivedTime ) = 0;
      virtual HRESULT __stdcall get_Recipients (
        /*[out,retval]*/ struct Recipients * * Recipients ) = 0;
      virtual HRESULT __stdcall get_ReminderSet (
        /*[out,retval]*/ VARIANT_BOOL * ReminderSet ) = 0;
      virtual HRESULT __stdcall put_ReminderSet (
        /*[in]*/ VARIANT_BOOL ReminderSet ) = 0;
      virtual HRESULT __stdcall get_ReminderTime (
        /*[out,retval]*/ DATE * ReminderTime ) = 0;
      virtual HRESULT __stdcall put_ReminderTime (
        /*[in]*/ DATE ReminderTime ) = 0;
      virtual HRESULT __stdcall get_ReplyRecipients (
        /*[out,retval]*/ struct Recipients * * ReplyRecipients ) = 0;
      virtual HRESULT __stdcall get_SaveSentMessageFolder (
        /*[out,retval]*/ struct MAPIFolder * * SaveSentMessageFolder ) = 0;
      virtual HRESULT __stdcall putref_SaveSentMessageFolder (
        /*[in]*/ struct MAPIFolder * SaveSentMessageFolder ) = 0;
      virtual HRESULT __stdcall get_SenderName (
        /*[out,retval]*/ BSTR * SenderName ) = 0;
      virtual HRESULT __stdcall get_Sent (
        /*[out,retval]*/ VARIANT_BOOL * Sent ) = 0;
      virtual HRESULT __stdcall get_SentOn (
        /*[out,retval]*/ DATE * SentOn ) = 0;
      virtual HRESULT __stdcall get_Submitted (
        /*[out,retval]*/ VARIANT_BOOL * Submitted ) = 0;
      virtual HRESULT __stdcall raw_Forward (
        /*[out,retval]*/ struct _MeetingItem * * Item ) = 0;
      virtual HRESULT __stdcall raw_GetAssociatedAppointment (
        /*[in]*/ VARIANT_BOOL AddToCalendar,
        /*[out,retval]*/ struct _AppointmentItem * * Item ) = 0;
      virtual HRESULT __stdcall raw_Reply (
        /*[out,retval]*/ struct _MailItem * * Item ) = 0;
      virtual HRESULT __stdcall raw_ReplyAll (
        /*[out,retval]*/ struct _MailItem * * Item ) = 0;
      virtual HRESULT __stdcall raw_Send ( ) = 0;
      virtual HRESULT __stdcall get_Links (
        /*[out,retval]*/ struct Links * * Links ) = 0;
      virtual HRESULT __stdcall get_DownloadState (
        /*[out,retval]*/ enum OlDownloadState * DownloadState ) = 0;
      virtual HRESULT __stdcall raw_ShowCategoriesDialog ( ) = 0;
      virtual HRESULT __stdcall get_ItemProperties (
        /*[out,retval]*/ struct ItemProperties * * ItemProperties ) = 0;
      virtual HRESULT __stdcall get_MarkForDownload (
        /*[out,retval]*/ enum OlRemoteStatus * MarkForDownload ) = 0;
      virtual HRESULT __stdcall put_MarkForDownload (
        /*[in]*/ enum OlRemoteStatus MarkForDownload ) = 0;
      virtual HRESULT __stdcall get_IsConflict (
        /*[out,retval]*/ VARIANT_BOOL * IsConflict ) = 0;
      virtual HRESULT __stdcall get_MeetingWorkspaceURL (
        /*[out,retval]*/ BSTR * MeetingWorkspaceURL ) = 0;
      virtual HRESULT __stdcall get_FlagIcon (
        /*[out,retval]*/ enum OlFlagIcon * FlagIcon ) = 0;
      virtual HRESULT __stdcall put_FlagIcon (
        /*[in]*/ enum OlFlagIcon FlagIcon ) = 0;
      virtual HRESULT __stdcall get_AutoResolvedWinner (
        /*[out,retval]*/ VARIANT_BOOL * AutoResolvedWinner ) = 0;
      virtual HRESULT __stdcall get_Conflicts (
        /*[out,retval]*/ struct Conflicts * * Conflicts ) = 0;
      virtual HRESULT __stdcall get_SenderEmailAddress (
        /*[out,retval]*/ BSTR * SenderEmailAddress ) = 0;
      virtual HRESULT __stdcall get_SenderEmailType (
        /*[out,retval]*/ BSTR * SenderEmailType ) = 0;
      virtual HRESULT __stdcall get_PropertyAccessor (
        /*[out,retval]*/ struct _PropertyAccessor * * PropertyAccessor ) = 0;
};

struct __declspec(uuid("00063081-0000-0000-c000-000000000046"))
_DistListItem : IDispatch
{
    //
    // Property data
    //

    __declspec(property(get=GetGetInspector))
    _InspectorPtr GetInspector;
    __declspec(property(get=GetFormDescription))
    FormDescriptionPtr FormDescription;
    __declspec(property(get=GetTaskSubject,put=PutTaskSubject))
    _bstr_t TaskSubject;
    __declspec(property(get=GetToDoTaskOrdinal,put=PutToDoTaskOrdinal))
    DATE ToDoTaskOrdinal;
    __declspec(property(get=GetOutlookInternalVersion))
    long OutlookInternalVersion;
    __declspec(property(get=GetOutlookVersion))
    _bstr_t OutlookVersion;
    __declspec(property(get=GetSaved))
    VARIANT_BOOL Saved;
    __declspec(property(get=GetApplication))
    _ApplicationPtr Application;
    __declspec(property(get=GetParent))
    IDispatchPtr Parent;
    __declspec(property(get=GetImportance,put=PutImportance))
    enum OlImportance Importance;
    __declspec(property(get=GetReminderSet,put=PutReminderSet))
    VARIANT_BOOL ReminderSet;
    __declspec(property(get=GetMessageClass,put=PutMessageClass))
    _bstr_t MessageClass;
    __declspec(property(get=GetReminderTime,put=PutReminderTime))
    DATE ReminderTime;
    __declspec(property(get=GetConversationTopic))
    _bstr_t ConversationTopic;
    __declspec(property(get=GetClass))
    enum OlObjectClass Class;
    __declspec(property(get=GetSession))
    _NameSpacePtr Session;
    __declspec(property(get=GetMAPIOBJECT))
    IUnknownPtr MAPIOBJECT;
    __declspec(property(get=GetDownloadState))
    enum OlDownloadState DownloadState;
    __declspec(property(get=GetNoAging,put=PutNoAging))
    VARIANT_BOOL NoAging;
    __declspec(property(get=GetIsConflict))
    VARIANT_BOOL IsConflict;
    __declspec(property(get=GetAttachments))
    AttachmentsPtr Attachments;
    __declspec(property(get=GetUserProperties))
    UserPropertiesPtr UserProperties;
    __declspec(property(get=GetMemberCount))
    long MemberCount;
    __declspec(property(get=GetActions))
    ActionsPtr Actions;
    __declspec(property(get=GetCheckSum))
    long CheckSum;
    __declspec(property(get=GetReminderOverrideDefault,put=PutReminderOverrideDefault))
    VARIANT_BOOL ReminderOverrideDefault;
    __declspec(property(get=GetCategories,put=PutCategories))
    _bstr_t Categories;
    __declspec(property(get=GetPropertyAccessor))
    _PropertyAccessorPtr PropertyAccessor;
    __declspec(property(get=GetMarkForDownload,put=PutMarkForDownload))
    enum OlRemoteStatus MarkForDownload;
    __declspec(property(get=GetUnRead,put=PutUnRead))
    VARIANT_BOOL UnRead;
    __declspec(property(get=GetDLName,put=PutDLName))
    _bstr_t DLName;
    __declspec(property(get=GetEntryID))
    _bstr_t EntryID;
    __declspec(property(get=GetMembers,put=PutMembers))
    _variant_t Members;
    __declspec(property(get=GetOneOffMembers,put=PutOneOffMembers))
    _variant_t OneOffMembers;
    __declspec(property(get=GetItemProperties))
    ItemPropertiesPtr ItemProperties;
    __declspec(property(get=GetBody,put=PutBody))
    _bstr_t Body;
    __declspec(property(get=GetSensitivity,put=PutSensitivity))
    enum OlSensitivity Sensitivity;
    __declspec(property(get=GetSubject,put=PutSubject))
    _bstr_t Subject;
    __declspec(property(get=GetReminderPlaySound,put=PutReminderPlaySound))
    VARIANT_BOOL ReminderPlaySound;
    __declspec(property(get=GetReminderSoundFile,put=PutReminderSoundFile))
    _bstr_t ReminderSoundFile;
    __declspec(property(get=GetAutoResolvedWinner))
    VARIANT_BOOL AutoResolvedWinner;
    __declspec(property(get=GetConflicts))
    ConflictsPtr Conflicts;
    __declspec(property(get=GetTaskStartDate,put=PutTaskStartDate))
    DATE TaskStartDate;
    __declspec(property(get=GetTaskDueDate,put=PutTaskDueDate))
    DATE TaskDueDate;
    __declspec(property(get=GetSize))
    long Size;
    __declspec(property(get=GetLinks))
    LinksPtr Links;
    __declspec(property(get=GetConversationIndex))
    _bstr_t ConversationIndex;
    __declspec(property(get=GetMileage,put=PutMileage))
    _bstr_t Mileage;
    __declspec(property(get=GetBillingInformation,put=PutBillingInformation))
    _bstr_t BillingInformation;
    __declspec(property(get=GetIsMarkedAsTask))
    VARIANT_BOOL IsMarkedAsTask;
    __declspec(property(get=GetTaskCompletedDate,put=PutTaskCompletedDate))
    DATE TaskCompletedDate;
    __declspec(property(get=GetCompanies,put=PutCompanies))
    _bstr_t Companies;
    __declspec(property(get=GetCreationTime))
    DATE CreationTime;
    __declspec(property(get=GetLastModificationTime))
    DATE LastModificationTime;

    //
    // Wrapper methods for error-handling
    //

    _ApplicationPtr GetApplication ( );
    enum OlObjectClass GetClass ( );
    _NameSpacePtr GetSession ( );
    IDispatchPtr GetParent ( );
    ActionsPtr GetActions ( );
    AttachmentsPtr GetAttachments ( );
    _bstr_t GetBillingInformation ( );
    void PutBillingInformation (
        _bstr_t BillingInformation );
    _bstr_t GetBody ( );
    void PutBody (
        _bstr_t Body );
    _bstr_t GetCategories ( );
    void PutCategories (
        _bstr_t Categories );
    _bstr_t GetCompanies ( );
    void PutCompanies (
        _bstr_t Companies );
    _bstr_t GetConversationIndex ( );
    _bstr_t GetConversationTopic ( );
    DATE GetCreationTime ( );
    _bstr_t GetEntryID ( );
    FormDescriptionPtr GetFormDescription ( );
    _InspectorPtr GetGetInspector ( );
    enum OlImportance GetImportance ( );
    void PutImportance (
        enum OlImportance Importance );
    DATE GetLastModificationTime ( );
    IUnknownPtr GetMAPIOBJECT ( );
    _bstr_t GetMessageClass ( );
    void PutMessageClass (
        _bstr_t MessageClass );
    _bstr_t GetMileage ( );
    void PutMileage (
        _bstr_t Mileage );
    VARIANT_BOOL GetNoAging ( );
    void PutNoAging (
        VARIANT_BOOL NoAging );
    long GetOutlookInternalVersion ( );
    _bstr_t GetOutlookVersion ( );
    VARIANT_BOOL GetSaved ( );
    enum OlSensitivity GetSensitivity ( );
    void PutSensitivity (
        enum OlSensitivity Sensitivity );
    long GetSize ( );
    _bstr_t GetSubject ( );
    void PutSubject (
        _bstr_t Subject );
    VARIANT_BOOL GetUnRead ( );
    void PutUnRead (
        VARIANT_BOOL UnRead );
    UserPropertiesPtr GetUserProperties ( );
    HRESULT Close (
        enum OlInspectorClose SaveMode );
    IDispatchPtr Copy ( );
    HRESULT Delete ( );
    HRESULT Display (
        const _variant_t & Modal = vtMissing );
    IDispatchPtr Move (
        struct MAPIFolder * DestFldr );
    HRESULT PrintOut ( );
    HRESULT Save ( );
    HRESULT SaveAs (
        _bstr_t Path,
        const _variant_t & Type = vtMissing );
    _bstr_t GetDLName ( );
    void PutDLName (
        _bstr_t DLName );
    long GetMemberCount ( );
    long GetCheckSum ( );
    _variant_t GetMembers ( );
    void PutMembers (
        const _variant_t & Members );
    _variant_t GetOneOffMembers ( );
    void PutOneOffMembers (
        const _variant_t & OneOffMembers );
    LinksPtr GetLinks ( );
    HRESULT AddMembers (
        struct Recipients * Recipients );
    HRESULT RemoveMembers (
        struct Recipients * Recipients );
    RecipientPtr GetMember (
        long Index );
    enum OlDownloadState GetDownloadState ( );
    HRESULT ShowCategoriesDialog ( );
    HRESULT AddMember (
        struct Recipient * Recipient );
    HRESULT RemoveMember (
        struct Recipient * Recipient );
    ItemPropertiesPtr GetItemProperties ( );
    enum OlRemoteStatus GetMarkForDownload ( );
    void PutMarkForDownload (
        enum OlRemoteStatus MarkForDownload );
    VARIANT_BOOL GetIsConflict ( );
    VARIANT_BOOL GetAutoResolvedWinner ( );
    ConflictsPtr GetConflicts ( );
    _PropertyAccessorPtr GetPropertyAccessor ( );
    _bstr_t GetTaskSubject ( );
    void PutTaskSubject (
        _bstr_t TaskSubject );
    DATE GetTaskDueDate ( );
    void PutTaskDueDate (
        DATE TaskDueDate );
    DATE GetTaskStartDate ( );
    void PutTaskStartDate (
        DATE TaskStartDate );
    DATE GetTaskCompletedDate ( );
    void PutTaskCompletedDate (
        DATE TaskCompletedDate );
    DATE GetToDoTaskOrdinal ( );
    void PutToDoTaskOrdinal (
        DATE ToDoTaskOrdinal );
    VARIANT_BOOL GetReminderOverrideDefault ( );
    void PutReminderOverrideDefault (
        VARIANT_BOOL ReminderOverrideDefault );
    VARIANT_BOOL GetReminderPlaySound ( );
    void PutReminderPlaySound (
        VARIANT_BOOL ReminderPlaySound );
    VARIANT_BOOL GetReminderSet ( );
    void PutReminderSet (
        VARIANT_BOOL ReminderSet );
    _bstr_t GetReminderSoundFile ( );
    void PutReminderSoundFile (
        _bstr_t ReminderSoundFile );
    DATE GetReminderTime ( );
    void PutReminderTime (
        DATE ReminderTime );
    HRESULT MarkAsTask (
        enum OlMarkInterval MarkInterval );
    HRESULT ClearTaskFlag ( );
    VARIANT_BOOL GetIsMarkedAsTask ( );

    //
    // Raw methods provided by interface
    //

      virtual HRESULT __stdcall get_Application (
        /*[out,retval]*/ struct _Application * * Application ) = 0;
      virtual HRESULT __stdcall get_Class (
        /*[out,retval]*/ enum OlObjectClass * Class ) = 0;
      virtual HRESULT __stdcall get_Session (
        /*[out,retval]*/ struct _NameSpace * * Session ) = 0;
      virtual HRESULT __stdcall get_Parent (
        /*[out,retval]*/ IDispatch * * Parent ) = 0;
      virtual HRESULT __stdcall get_Actions (
        /*[out,retval]*/ struct Actions * * Actions ) = 0;
      virtual HRESULT __stdcall get_Attachments (
        /*[out,retval]*/ struct Attachments * * Attachments ) = 0;
      virtual HRESULT __stdcall get_BillingInformation (
        /*[out,retval]*/ BSTR * BillingInformation ) = 0;
      virtual HRESULT __stdcall put_BillingInformation (
        /*[in]*/ BSTR BillingInformation ) = 0;
      virtual HRESULT __stdcall get_Body (
        /*[out,retval]*/ BSTR * Body ) = 0;
      virtual HRESULT __stdcall put_Body (
        /*[in]*/ BSTR Body ) = 0;
      virtual HRESULT __stdcall get_Categories (
        /*[out,retval]*/ BSTR * Categories ) = 0;
      virtual HRESULT __stdcall put_Categories (
        /*[in]*/ BSTR Categories ) = 0;
      virtual HRESULT __stdcall get_Companies (
        /*[out,retval]*/ BSTR * Companies ) = 0;
      virtual HRESULT __stdcall put_Companies (
        /*[in]*/ BSTR Companies ) = 0;
      virtual HRESULT __stdcall get_ConversationIndex (
        /*[out,retval]*/ BSTR * ConversationIndex ) = 0;
      virtual HRESULT __stdcall get_ConversationTopic (
        /*[out,retval]*/ BSTR * ConversationTopic ) = 0;
      virtual HRESULT __stdcall get_CreationTime (
        /*[out,retval]*/ DATE * CreationTime ) = 0;
      virtual HRESULT __stdcall get_EntryID (
        /*[out,retval]*/ BSTR * EntryID ) = 0;
      virtual HRESULT __stdcall get_FormDescription (
        /*[out,retval]*/ struct FormDescription * * FormDescription ) = 0;
      virtual HRESULT __stdcall get_GetInspector (
        /*[out,retval]*/ struct _Inspector * * GetInspector ) = 0;
      virtual HRESULT __stdcall get_Importance (
        /*[out,retval]*/ enum OlImportance * Importance ) = 0;
      virtual HRESULT __stdcall put_Importance (
        /*[in]*/ enum OlImportance Importance ) = 0;
      virtual HRESULT __stdcall get_LastModificationTime (
        /*[out,retval]*/ DATE * LastModificationTime ) = 0;
      virtual HRESULT __stdcall get_MAPIOBJECT (
        /*[out,retval]*/ IUnknown * * MAPIOBJECT ) = 0;
      virtual HRESULT __stdcall get_MessageClass (
        /*[out,retval]*/ BSTR * MessageClass ) = 0;
      virtual HRESULT __stdcall put_MessageClass (
        /*[in]*/ BSTR MessageClass ) = 0;
      virtual HRESULT __stdcall get_Mileage (
        /*[out,retval]*/ BSTR * Mileage ) = 0;
      virtual HRESULT __stdcall put_Mileage (
        /*[in]*/ BSTR Mileage ) = 0;
      virtual HRESULT __stdcall get_NoAging (
        /*[out,retval]*/ VARIANT_BOOL * NoAging ) = 0;
      virtual HRESULT __stdcall put_NoAging (
        /*[in]*/ VARIANT_BOOL NoAging ) = 0;
      virtual HRESULT __stdcall get_OutlookInternalVersion (
        /*[out,retval]*/ long * OutlookInternalVersion ) = 0;
      virtual HRESULT __stdcall get_OutlookVersion (
        /*[out,retval]*/ BSTR * OutlookVersion ) = 0;
      virtual HRESULT __stdcall get_Saved (
        /*[out,retval]*/ VARIANT_BOOL * Saved ) = 0;
      virtual HRESULT __stdcall get_Sensitivity (
        /*[out,retval]*/ enum OlSensitivity * Sensitivity ) = 0;
      virtual HRESULT __stdcall put_Sensitivity (
        /*[in]*/ enum OlSensitivity Sensitivity ) = 0;
      virtual HRESULT __stdcall get_Size (
        /*[out,retval]*/ long * Size ) = 0;
      virtual HRESULT __stdcall get_Subject (
        /*[out,retval]*/ BSTR * Subject ) = 0;
      virtual HRESULT __stdcall put_Subject (
        /*[in]*/ BSTR Subject ) = 0;
      virtual HRESULT __stdcall get_UnRead (
        /*[out,retval]*/ VARIANT_BOOL * UnRead ) = 0;
      virtual HRESULT __stdcall put_UnRead (
        /*[in]*/ VARIANT_BOOL UnRead ) = 0;
      virtual HRESULT __stdcall get_UserProperties (
        /*[out,retval]*/ struct UserProperties * * UserProperties ) = 0;
      virtual HRESULT __stdcall raw_Close (
        /*[in]*/ enum OlInspectorClose SaveMode ) = 0;
      virtual HRESULT __stdcall raw_Copy (
        /*[out,retval]*/ IDispatch * * Item ) = 0;
      virtual HRESULT __stdcall raw_Delete ( ) = 0;
      virtual HRESULT __stdcall raw_Display (
        /*[in]*/ VARIANT Modal = vtMissing ) = 0;
      virtual HRESULT __stdcall raw_Move (
        /*[in]*/ struct MAPIFolder * DestFldr,
        /*[out,retval]*/ IDispatch * * Item ) = 0;
      virtual HRESULT __stdcall raw_PrintOut ( ) = 0;
      virtual HRESULT __stdcall raw_Save ( ) = 0;
      virtual HRESULT __stdcall raw_SaveAs (
        /*[in]*/ BSTR Path,
        /*[in]*/ VARIANT Type = vtMissing ) = 0;
      virtual HRESULT __stdcall get_DLName (
        /*[out,retval]*/ BSTR * DLName ) = 0;
      virtual HRESULT __stdcall put_DLName (
        /*[in]*/ BSTR DLName ) = 0;
      virtual HRESULT __stdcall get_MemberCount (
        /*[out,retval]*/ long * MemberCount ) = 0;
      virtual HRESULT __stdcall get_CheckSum (
        /*[out,retval]*/ long * CheckSum ) = 0;
      virtual HRESULT __stdcall get_Members (
        /*[out,retval]*/ VARIANT * Members ) = 0;
      virtual HRESULT __stdcall put_Members (
        /*[in]*/ VARIANT Members ) = 0;
      virtual HRESULT __stdcall get_OneOffMembers (
        /*[out,retval]*/ VARIANT * OneOffMembers ) = 0;
      virtual HRESULT __stdcall put_OneOffMembers (
        /*[in]*/ VARIANT OneOffMembers ) = 0;
      virtual HRESULT __stdcall get_Links (
        /*[out,retval]*/ struct Links * * Links ) = 0;
      virtual HRESULT __stdcall raw_AddMembers (
        /*[in]*/ struct Recipients * Recipients ) = 0;
      virtual HRESULT __stdcall raw_RemoveMembers (
        /*[in]*/ struct Recipients * Recipients ) = 0;
      virtual HRESULT __stdcall raw_GetMember (
        /*[in]*/ long Index,
        /*[out,retval]*/ struct Recipient * * Recipient ) = 0;
      virtual HRESULT __stdcall get_DownloadState (
        /*[out,retval]*/ enum OlDownloadState * DownloadState ) = 0;
      virtual HRESULT __stdcall raw_ShowCategoriesDialog ( ) = 0;
      virtual HRESULT __stdcall raw_AddMember (
        /*[in]*/ struct Recipient * Recipient ) = 0;
      virtual HRESULT __stdcall raw_RemoveMember (
        /*[in]*/ struct Recipient * Recipient ) = 0;
      virtual HRESULT __stdcall get_ItemProperties (
        /*[out,retval]*/ struct ItemProperties * * ItemProperties ) = 0;
      virtual HRESULT __stdcall get_MarkForDownload (
        /*[out,retval]*/ enum OlRemoteStatus * MarkForDownload ) = 0;
      virtual HRESULT __stdcall put_MarkForDownload (
        /*[in]*/ enum OlRemoteStatus MarkForDownload ) = 0;
      virtual HRESULT __stdcall get_IsConflict (
        /*[out,retval]*/ VARIANT_BOOL * IsConflict ) = 0;
      virtual HRESULT __stdcall get_AutoResolvedWinner (
        /*[out,retval]*/ VARIANT_BOOL * AutoResolvedWinner ) = 0;
      virtual HRESULT __stdcall get_Conflicts (
        /*[out,retval]*/ struct Conflicts * * Conflicts ) = 0;
      virtual HRESULT __stdcall get_PropertyAccessor (
        /*[out,retval]*/ struct _PropertyAccessor * * PropertyAccessor ) = 0;
      virtual HRESULT __stdcall get_TaskSubject (
        /*[out,retval]*/ BSTR * TaskSubject ) = 0;
      virtual HRESULT __stdcall put_TaskSubject (
        /*[in]*/ BSTR TaskSubject ) = 0;
      virtual HRESULT __stdcall get_TaskDueDate (
        /*[out,retval]*/ DATE * TaskDueDate ) = 0;
      virtual HRESULT __stdcall put_TaskDueDate (
        /*[in]*/ DATE TaskDueDate ) = 0;
      virtual HRESULT __stdcall get_TaskStartDate (
        /*[out,retval]*/ DATE * TaskStartDate ) = 0;
      virtual HRESULT __stdcall put_TaskStartDate (
        /*[in]*/ DATE TaskStartDate ) = 0;
      virtual HRESULT __stdcall get_TaskCompletedDate (
        /*[out,retval]*/ DATE * TaskCompletedDate ) = 0;
      virtual HRESULT __stdcall put_TaskCompletedDate (
        /*[in]*/ DATE TaskCompletedDate ) = 0;
      virtual HRESULT __stdcall get_ToDoTaskOrdinal (
        /*[out,retval]*/ DATE * ToDoTaskOrdinal ) = 0;
      virtual HRESULT __stdcall put_ToDoTaskOrdinal (
        /*[in]*/ DATE ToDoTaskOrdinal ) = 0;
      virtual HRESULT __stdcall get_ReminderOverrideDefault (
        /*[out,retval]*/ VARIANT_BOOL * ReminderOverrideDefault ) = 0;
      virtual HRESULT __stdcall put_ReminderOverrideDefault (
        /*[in]*/ VARIANT_BOOL ReminderOverrideDefault ) = 0;
      virtual HRESULT __stdcall get_ReminderPlaySound (
        /*[out,retval]*/ VARIANT_BOOL * ReminderPlaySound ) = 0;
      virtual HRESULT __stdcall put_ReminderPlaySound (
        /*[in]*/ VARIANT_BOOL ReminderPlaySound ) = 0;
      virtual HRESULT __stdcall get_ReminderSet (
        /*[out,retval]*/ VARIANT_BOOL * ReminderSet ) = 0;
      virtual HRESULT __stdcall put_ReminderSet (
        /*[in]*/ VARIANT_BOOL ReminderSet ) = 0;
      virtual HRESULT __stdcall get_ReminderSoundFile (
        /*[out,retval]*/ BSTR * ReminderSoundFile ) = 0;
      virtual HRESULT __stdcall put_ReminderSoundFile (
        /*[in]*/ BSTR ReminderSoundFile ) = 0;
      virtual HRESULT __stdcall get_ReminderTime (
        /*[out,retval]*/ DATE * ReminderTime ) = 0;
      virtual HRESULT __stdcall put_ReminderTime (
        /*[in]*/ DATE ReminderTime ) = 0;
      virtual HRESULT __stdcall raw_MarkAsTask (
        /*[in]*/ enum OlMarkInterval MarkInterval ) = 0;
      virtual HRESULT __stdcall raw_ClearTaskFlag ( ) = 0;
      virtual HRESULT __stdcall get_IsMarkedAsTask (
        /*[out,retval]*/ VARIANT_BOOL * IsMarkedAsTask ) = 0;
};

struct __declspec(uuid("00063020-0000-0000-c000-000000000046"))
_DocumentItem : IDispatch
{
    //
    // Property data
    //

    __declspec(property(get=GetApplication))
    _ApplicationPtr Application;
    __declspec(property(get=GetParent))
    IDispatchPtr Parent;
    __declspec(property(get=GetGetInspector))
    _InspectorPtr GetInspector;
    __declspec(property(get=GetDownloadState))
    enum OlDownloadState DownloadState;
    __declspec(property(get=GetPropertyAccessor))
    _PropertyAccessorPtr PropertyAccessor;
    __declspec(property(get=GetLinks))
    LinksPtr Links;
    __declspec(property(get=GetClass))
    enum OlObjectClass Class;
    __declspec(property(get=GetSession))
    _NameSpacePtr Session;
    __declspec(property(get=GetMAPIOBJECT))
    IUnknownPtr MAPIOBJECT;
    __declspec(property(get=GetMileage,put=PutMileage))
    _bstr_t Mileage;
    __declspec(property(get=GetBillingInformation,put=PutBillingInformation))
    _bstr_t BillingInformation;
    __declspec(property(get=GetMarkForDownload,put=PutMarkForDownload))
    enum OlRemoteStatus MarkForDownload;
    __declspec(property(get=GetImportance,put=PutImportance))
    enum OlImportance Importance;
    __declspec(property(get=GetIsConflict))
    VARIANT_BOOL IsConflict;
    __declspec(property(get=GetCategories,put=PutCategories))
    _bstr_t Categories;
    __declspec(property(get=GetMessageClass,put=PutMessageClass))
    _bstr_t MessageClass;
    __declspec(property(get=GetCompanies,put=PutCompanies))
    _bstr_t Companies;
    __declspec(property(get=GetUnRead,put=PutUnRead))
    VARIANT_BOOL UnRead;
    __declspec(property(get=GetAttachments))
    AttachmentsPtr Attachments;
    __declspec(property(get=GetEntryID))
    _bstr_t EntryID;
    __declspec(property(get=GetActions))
    ActionsPtr Actions;
    __declspec(property(get=GetUserProperties))
    UserPropertiesPtr UserProperties;
    __declspec(property(get=GetFormDescription))
    FormDescriptionPtr FormDescription;
    __declspec(property(get=GetBody,put=PutBody))
    _bstr_t Body;
    __declspec(property(get=GetNoAging,put=PutNoAging))
    VARIANT_BOOL NoAging;
    __declspec(property(get=GetSaved))
    VARIANT_BOOL Saved;
    __declspec(property(get=GetAutoResolvedWinner))
    VARIANT_BOOL AutoResolvedWinner;
    __declspec(property(get=GetConflicts))
    ConflictsPtr Conflicts;
    __declspec(property(get=GetItemProperties))
    ItemPropertiesPtr ItemProperties;
    __declspec(property(get=GetOutlookInternalVersion))
    long OutlookInternalVersion;
    __declspec(property(get=GetConversationTopic))
    _bstr_t ConversationTopic;
    __declspec(property(get=GetSize))
    long Size;
    __declspec(property(get=GetSensitivity,put=PutSensitivity))
    enum OlSensitivity Sensitivity;
    __declspec(property(get=GetSubject,put=PutSubject))
    _bstr_t Subject;
    __declspec(property(get=GetCreationTime))
    DATE CreationTime;
    __declspec(property(get=GetLastModificationTime))
    DATE LastModificationTime;
    __declspec(property(get=GetOutlookVersion))
    _bstr_t OutlookVersion;
    __declspec(property(get=GetConversationIndex))
    _bstr_t ConversationIndex;

    //
    // Wrapper methods for error-handling
    //

    _ApplicationPtr GetApplication ( );
    enum OlObjectClass GetClass ( );
    _NameSpacePtr GetSession ( );
    IDispatchPtr GetParent ( );
    ActionsPtr GetActions ( );
    AttachmentsPtr GetAttachments ( );
    _bstr_t GetBillingInformation ( );
    void PutBillingInformation (
        _bstr_t BillingInformation );
    _bstr_t GetBody ( );
    void PutBody (
        _bstr_t Body );
    _bstr_t GetCategories ( );
    void PutCategories (
        _bstr_t Categories );
    _bstr_t GetCompanies ( );
    void PutCompanies (
        _bstr_t Companies );
    _bstr_t GetConversationIndex ( );
    _bstr_t GetConversationTopic ( );
    DATE GetCreationTime ( );
    _bstr_t GetEntryID ( );
    FormDescriptionPtr GetFormDescription ( );
    _InspectorPtr GetGetInspector ( );
    enum OlImportance GetImportance ( );
    void PutImportance (
        enum OlImportance Importance );
    DATE GetLastModificationTime ( );
    IUnknownPtr GetMAPIOBJECT ( );
    _bstr_t GetMessageClass ( );
    void PutMessageClass (
        _bstr_t MessageClass );
    _bstr_t GetMileage ( );
    void PutMileage (
        _bstr_t Mileage );
    VARIANT_BOOL GetNoAging ( );
    void PutNoAging (
        VARIANT_BOOL NoAging );
    long GetOutlookInternalVersion ( );
    _bstr_t GetOutlookVersion ( );
    VARIANT_BOOL GetSaved ( );
    enum OlSensitivity GetSensitivity ( );
    void PutSensitivity (
        enum OlSensitivity Sensitivity );
    long GetSize ( );
    _bstr_t GetSubject ( );
    void PutSubject (
        _bstr_t Subject );
    VARIANT_BOOL GetUnRead ( );
    void PutUnRead (
        VARIANT_BOOL UnRead );
    UserPropertiesPtr GetUserProperties ( );
    HRESULT Close (
        enum OlInspectorClose SaveMode );
    IDispatchPtr Copy ( );
    HRESULT Delete ( );
    HRESULT Display (
        const _variant_t & Modal = vtMissing );
    IDispatchPtr Move (
        struct MAPIFolder * DestFldr );
    HRESULT PrintOut ( );
    HRESULT Save ( );
    HRESULT SaveAs (
        _bstr_t Path,
        const _variant_t & Type = vtMissing );
    LinksPtr GetLinks ( );
    enum OlDownloadState GetDownloadState ( );
    HRESULT ShowCategoriesDialog ( );
    ItemPropertiesPtr GetItemProperties ( );
    enum OlRemoteStatus GetMarkForDownload ( );
    void PutMarkForDownload (
        enum OlRemoteStatus MarkForDownload );
    VARIANT_BOOL GetIsConflict ( );
    VARIANT_BOOL GetAutoResolvedWinner ( );
    ConflictsPtr GetConflicts ( );
    _PropertyAccessorPtr GetPropertyAccessor ( );

    //
    // Raw methods provided by interface
    //

      virtual HRESULT __stdcall get_Application (
        /*[out,retval]*/ struct _Application * * Application ) = 0;
      virtual HRESULT __stdcall get_Class (
        /*[out,retval]*/ enum OlObjectClass * Class ) = 0;
      virtual HRESULT __stdcall get_Session (
        /*[out,retval]*/ struct _NameSpace * * Session ) = 0;
      virtual HRESULT __stdcall get_Parent (
        /*[out,retval]*/ IDispatch * * Parent ) = 0;
      virtual HRESULT __stdcall get_Actions (
        /*[out,retval]*/ struct Actions * * Actions ) = 0;
      virtual HRESULT __stdcall get_Attachments (
        /*[out,retval]*/ struct Attachments * * Attachments ) = 0;
      virtual HRESULT __stdcall get_BillingInformation (
        /*[out,retval]*/ BSTR * BillingInformation ) = 0;
      virtual HRESULT __stdcall put_BillingInformation (
        /*[in]*/ BSTR BillingInformation ) = 0;
      virtual HRESULT __stdcall get_Body (
        /*[out,retval]*/ BSTR * Body ) = 0;
      virtual HRESULT __stdcall put_Body (
        /*[in]*/ BSTR Body ) = 0;
      virtual HRESULT __stdcall get_Categories (
        /*[out,retval]*/ BSTR * Categories ) = 0;
      virtual HRESULT __stdcall put_Categories (
        /*[in]*/ BSTR Categories ) = 0;
      virtual HRESULT __stdcall get_Companies (
        /*[out,retval]*/ BSTR * Companies ) = 0;
      virtual HRESULT __stdcall put_Companies (
        /*[in]*/ BSTR Companies ) = 0;
      virtual HRESULT __stdcall get_ConversationIndex (
        /*[out,retval]*/ BSTR * ConversationIndex ) = 0;
      virtual HRESULT __stdcall get_ConversationTopic (
        /*[out,retval]*/ BSTR * ConversationTopic ) = 0;
      virtual HRESULT __stdcall get_CreationTime (
        /*[out,retval]*/ DATE * CreationTime ) = 0;
      virtual HRESULT __stdcall get_EntryID (
        /*[out,retval]*/ BSTR * EntryID ) = 0;
      virtual HRESULT __stdcall get_FormDescription (
        /*[out,retval]*/ struct FormDescription * * FormDescription ) = 0;
      virtual HRESULT __stdcall get_GetInspector (
        /*[out,retval]*/ struct _Inspector * * GetInspector ) = 0;
      virtual HRESULT __stdcall get_Importance (
        /*[out,retval]*/ enum OlImportance * Importance ) = 0;
      virtual HRESULT __stdcall put_Importance (
        /*[in]*/ enum OlImportance Importance ) = 0;
      virtual HRESULT __stdcall get_LastModificationTime (
        /*[out,retval]*/ DATE * LastModificationTime ) = 0;
      virtual HRESULT __stdcall get_MAPIOBJECT (
        /*[out,retval]*/ IUnknown * * MAPIOBJECT ) = 0;
      virtual HRESULT __stdcall get_MessageClass (
        /*[out,retval]*/ BSTR * MessageClass ) = 0;
      virtual HRESULT __stdcall put_MessageClass (
        /*[in]*/ BSTR MessageClass ) = 0;
      virtual HRESULT __stdcall get_Mileage (
        /*[out,retval]*/ BSTR * Mileage ) = 0;
      virtual HRESULT __stdcall put_Mileage (
        /*[in]*/ BSTR Mileage ) = 0;
      virtual HRESULT __stdcall get_NoAging (
        /*[out,retval]*/ VARIANT_BOOL * NoAging ) = 0;
      virtual HRESULT __stdcall put_NoAging (
        /*[in]*/ VARIANT_BOOL NoAging ) = 0;
      virtual HRESULT __stdcall get_OutlookInternalVersion (
        /*[out,retval]*/ long * OutlookInternalVersion ) = 0;
      virtual HRESULT __stdcall get_OutlookVersion (
        /*[out,retval]*/ BSTR * OutlookVersion ) = 0;
      virtual HRESULT __stdcall get_Saved (
        /*[out,retval]*/ VARIANT_BOOL * Saved ) = 0;
      virtual HRESULT __stdcall get_Sensitivity (
        /*[out,retval]*/ enum OlSensitivity * Sensitivity ) = 0;
      virtual HRESULT __stdcall put_Sensitivity (
        /*[in]*/ enum OlSensitivity Sensitivity ) = 0;
      virtual HRESULT __stdcall get_Size (
        /*[out,retval]*/ long * Size ) = 0;
      virtual HRESULT __stdcall get_Subject (
        /*[out,retval]*/ BSTR * Subject ) = 0;
      virtual HRESULT __stdcall put_Subject (
        /*[in]*/ BSTR Subject ) = 0;
      virtual HRESULT __stdcall get_UnRead (
        /*[out,retval]*/ VARIANT_BOOL * UnRead ) = 0;
      virtual HRESULT __stdcall put_UnRead (
        /*[in]*/ VARIANT_BOOL UnRead ) = 0;
      virtual HRESULT __stdcall get_UserProperties (
        /*[out,retval]*/ struct UserProperties * * UserProperties ) = 0;
      virtual HRESULT __stdcall raw_Close (
        /*[in]*/ enum OlInspectorClose SaveMode ) = 0;
      virtual HRESULT __stdcall raw_Copy (
        /*[out,retval]*/ IDispatch * * Item ) = 0;
      virtual HRESULT __stdcall raw_Delete ( ) = 0;
      virtual HRESULT __stdcall raw_Display (
        /*[in]*/ VARIANT Modal = vtMissing ) = 0;
      virtual HRESULT __stdcall raw_Move (
        /*[in]*/ struct MAPIFolder * DestFldr,
        /*[out,retval]*/ IDispatch * * Item ) = 0;
      virtual HRESULT __stdcall raw_PrintOut ( ) = 0;
      virtual HRESULT __stdcall raw_Save ( ) = 0;
      virtual HRESULT __stdcall raw_SaveAs (
        /*[in]*/ BSTR Path,
        /*[in]*/ VARIANT Type = vtMissing ) = 0;
      virtual HRESULT __stdcall get_Links (
        /*[out,retval]*/ struct Links * * Links ) = 0;
      virtual HRESULT __stdcall get_DownloadState (
        /*[out,retval]*/ enum OlDownloadState * DownloadState ) = 0;
      virtual HRESULT __stdcall raw_ShowCategoriesDialog ( ) = 0;
      virtual HRESULT __stdcall get_ItemProperties (
        /*[out,retval]*/ struct ItemProperties * * ItemProperties ) = 0;
      virtual HRESULT __stdcall get_MarkForDownload (
        /*[out,retval]*/ enum OlRemoteStatus * MarkForDownload ) = 0;
      virtual HRESULT __stdcall put_MarkForDownload (
        /*[in]*/ enum OlRemoteStatus MarkForDownload ) = 0;
      virtual HRESULT __stdcall get_IsConflict (
        /*[out,retval]*/ VARIANT_BOOL * IsConflict ) = 0;
      virtual HRESULT __stdcall get_AutoResolvedWinner (
        /*[out,retval]*/ VARIANT_BOOL * AutoResolvedWinner ) = 0;
      virtual HRESULT __stdcall get_Conflicts (
        /*[out,retval]*/ struct Conflicts * * Conflicts ) = 0;
      virtual HRESULT __stdcall get_PropertyAccessor (
        /*[out,retval]*/ struct _PropertyAccessor * * PropertyAccessor ) = 0;
};

struct __declspec(uuid("00063022-0000-0000-c000-000000000046"))
_JournalItem : IDispatch
{
    //
    // Property data
    //

    __declspec(property(get=GetGetInspector))
    _InspectorPtr GetInspector;
    __declspec(property(get=GetFormDescription))
    FormDescriptionPtr FormDescription;
    __declspec(property(get=GetOutlookInternalVersion))
    long OutlookInternalVersion;
    __declspec(property(get=GetOutlookVersion))
    _bstr_t OutlookVersion;
    __declspec(property(get=GetSaved))
    VARIANT_BOOL Saved;
    __declspec(property(get=GetApplication))
    _ApplicationPtr Application;
    __declspec(property(get=GetParent))
    IDispatchPtr Parent;
    __declspec(property(get=GetImportance,put=PutImportance))
    enum OlImportance Importance;
    __declspec(property(get=GetMessageClass,put=PutMessageClass))
    _bstr_t MessageClass;
    __declspec(property(get=GetConversationTopic))
    _bstr_t ConversationTopic;
    __declspec(property(get=GetClass))
    enum OlObjectClass Class;
    __declspec(property(get=GetSession))
    _NameSpacePtr Session;
    __declspec(property(get=GetMAPIOBJECT))
    IUnknownPtr MAPIOBJECT;
    __declspec(property(get=GetNoAging,put=PutNoAging))
    VARIANT_BOOL NoAging;
    __declspec(property(get=GetDownloadState))
    enum OlDownloadState DownloadState;
    __declspec(property(get=GetType,put=PutType))
    _bstr_t Type;
    __declspec(property(get=GetRecipients))
    RecipientsPtr Recipients;
    __declspec(property(get=GetAttachments))
    AttachmentsPtr Attachments;
    __declspec(property(get=GetUserProperties))
    UserPropertiesPtr UserProperties;
    __declspec(property(get=GetActions))
    ActionsPtr Actions;
    __declspec(property(get=GetStart,put=PutStart))
    DATE Start;
    __declspec(property(get=GetDuration,put=PutDuration))
    long Duration;
    __declspec(property(get=GetEnd,put=PutEnd))
    DATE End;
    __declspec(property(get=GetCategories,put=PutCategories))
    _bstr_t Categories;
    __declspec(property(get=GetIsConflict))
    VARIANT_BOOL IsConflict;
    __declspec(property(get=GetItemProperties))
    ItemPropertiesPtr ItemProperties;
    __declspec(property(get=GetUnRead,put=PutUnRead))
    VARIANT_BOOL UnRead;
    __declspec(property(get=GetMarkForDownload,put=PutMarkForDownload))
    enum OlRemoteStatus MarkForDownload;
    __declspec(property(get=GetDocPrinted,put=PutDocPrinted))
    VARIANT_BOOL DocPrinted;
    __declspec(property(get=GetDocSaved,put=PutDocSaved))
    VARIANT_BOOL DocSaved;
    __declspec(property(get=GetDocRouted,put=PutDocRouted))
    VARIANT_BOOL DocRouted;
    __declspec(property(get=GetDocPosted,put=PutDocPosted))
    VARIANT_BOOL DocPosted;
    __declspec(property(get=GetEntryID))
    _bstr_t EntryID;
    __declspec(property(get=GetBody,put=PutBody))
    _bstr_t Body;
    __declspec(property(get=GetSensitivity,put=PutSensitivity))
    enum OlSensitivity Sensitivity;
    __declspec(property(get=GetSubject,put=PutSubject))
    _bstr_t Subject;
    __declspec(property(get=GetPropertyAccessor))
    _PropertyAccessorPtr PropertyAccessor;
    __declspec(property(get=GetContactNames,put=PutContactNames))
    _bstr_t ContactNames;
    __declspec(property(get=GetAutoResolvedWinner))
    VARIANT_BOOL AutoResolvedWinner;
    __declspec(property(get=GetConflicts))
    ConflictsPtr Conflicts;
    __declspec(property(get=GetSize))
    long Size;
    __declspec(property(get=GetLinks))
    LinksPtr Links;
    __declspec(property(get=GetConversationIndex))
    _bstr_t ConversationIndex;
    __declspec(property(get=GetMileage,put=PutMileage))
    _bstr_t Mileage;
    __declspec(property(get=GetBillingInformation,put=PutBillingInformation))
    _bstr_t BillingInformation;
    __declspec(property(get=GetCompanies,put=PutCompanies))
    _bstr_t Companies;
    __declspec(property(get=GetCreationTime))
    DATE CreationTime;
    __declspec(property(get=GetLastModificationTime))
    DATE LastModificationTime;

    //
    // Wrapper methods for error-handling
    //

    _ApplicationPtr GetApplication ( );
    enum OlObjectClass GetClass ( );
    _NameSpacePtr GetSession ( );
    IDispatchPtr GetParent ( );
    ActionsPtr GetActions ( );
    AttachmentsPtr GetAttachments ( );
    _bstr_t GetBillingInformation ( );
    void PutBillingInformation (
        _bstr_t BillingInformation );
    _bstr_t GetBody ( );
    void PutBody (
        _bstr_t Body );
    _bstr_t GetCategories ( );
    void PutCategories (
        _bstr_t Categories );
    _bstr_t GetCompanies ( );
    void PutCompanies (
        _bstr_t Companies );
    _bstr_t GetConversationIndex ( );
    _bstr_t GetConversationTopic ( );
    DATE GetCreationTime ( );
    _bstr_t GetEntryID ( );
    FormDescriptionPtr GetFormDescription ( );
    _InspectorPtr GetGetInspector ( );
    enum OlImportance GetImportance ( );
    void PutImportance (
        enum OlImportance Importance );
    DATE GetLastModificationTime ( );
    IUnknownPtr GetMAPIOBJECT ( );
    _bstr_t GetMessageClass ( );
    void PutMessageClass (
        _bstr_t MessageClass );
    _bstr_t GetMileage ( );
    void PutMileage (
        _bstr_t Mileage );
    VARIANT_BOOL GetNoAging ( );
    void PutNoAging (
        VARIANT_BOOL NoAging );
    long GetOutlookInternalVersion ( );
    _bstr_t GetOutlookVersion ( );
    VARIANT_BOOL GetSaved ( );
    enum OlSensitivity GetSensitivity ( );
    void PutSensitivity (
        enum OlSensitivity Sensitivity );
    long GetSize ( );
    _bstr_t GetSubject ( );
    void PutSubject (
        _bstr_t Subject );
    VARIANT_BOOL GetUnRead ( );
    void PutUnRead (
        VARIANT_BOOL UnRead );
    UserPropertiesPtr GetUserProperties ( );
    HRESULT Close (
        enum OlInspectorClose SaveMode );
    IDispatchPtr Copy ( );
    HRESULT Delete ( );
    HRESULT Display (
        const _variant_t & Modal = vtMissing );
    IDispatchPtr Move (
        struct MAPIFolder * DestFldr );
    HRESULT PrintOut ( );
    HRESULT Save ( );
    HRESULT SaveAs (
        _bstr_t Path,
        const _variant_t & Type = vtMissing );
    _bstr_t GetContactNames ( );
    void PutContactNames (
        _bstr_t ContactNames );
    VARIANT_BOOL GetDocPosted ( );
    void PutDocPosted (
        VARIANT_BOOL DocPosted );
    VARIANT_BOOL GetDocPrinted ( );
    void PutDocPrinted (
        VARIANT_BOOL DocPrinted );
    VARIANT_BOOL GetDocRouted ( );
    void PutDocRouted (
        VARIANT_BOOL DocRouted );
    VARIANT_BOOL GetDocSaved ( );
    void PutDocSaved (
        VARIANT_BOOL DocSaved );
    long GetDuration ( );
    void PutDuration (
        long Duration );
    DATE GetEnd ( );
    void PutEnd (
        DATE End );
    _bstr_t GetType ( );
    void PutType (
        _bstr_t Type );
    RecipientsPtr GetRecipients ( );
    DATE GetStart ( );
    void PutStart (
        DATE Start );
    _MailItemPtr Forward ( );
    _MailItemPtr Reply ( );
    _MailItemPtr ReplyAll ( );
    HRESULT StartTimer ( );
    HRESULT StopTimer ( );
    LinksPtr GetLinks ( );
    enum OlDownloadState GetDownloadState ( );
    HRESULT ShowCategoriesDialog ( );
    ItemPropertiesPtr GetItemProperties ( );
    enum OlRemoteStatus GetMarkForDownload ( );
    void PutMarkForDownload (
        enum OlRemoteStatus MarkForDownload );
    VARIANT_BOOL GetIsConflict ( );
    VARIANT_BOOL GetAutoResolvedWinner ( );
    ConflictsPtr GetConflicts ( );
    _PropertyAccessorPtr GetPropertyAccessor ( );

    //
    // Raw methods provided by interface
    //

      virtual HRESULT __stdcall get_Application (
        /*[out,retval]*/ struct _Application * * Application ) = 0;
      virtual HRESULT __stdcall get_Class (
        /*[out,retval]*/ enum OlObjectClass * Class ) = 0;
      virtual HRESULT __stdcall get_Session (
        /*[out,retval]*/ struct _NameSpace * * Session ) = 0;
      virtual HRESULT __stdcall get_Parent (
        /*[out,retval]*/ IDispatch * * Parent ) = 0;
      virtual HRESULT __stdcall get_Actions (
        /*[out,retval]*/ struct Actions * * Actions ) = 0;
      virtual HRESULT __stdcall get_Attachments (
        /*[out,retval]*/ struct Attachments * * Attachments ) = 0;
      virtual HRESULT __stdcall get_BillingInformation (
        /*[out,retval]*/ BSTR * BillingInformation ) = 0;
      virtual HRESULT __stdcall put_BillingInformation (
        /*[in]*/ BSTR BillingInformation ) = 0;
      virtual HRESULT __stdcall get_Body (
        /*[out,retval]*/ BSTR * Body ) = 0;
      virtual HRESULT __stdcall put_Body (
        /*[in]*/ BSTR Body ) = 0;
      virtual HRESULT __stdcall get_Categories (
        /*[out,retval]*/ BSTR * Categories ) = 0;
      virtual HRESULT __stdcall put_Categories (
        /*[in]*/ BSTR Categories ) = 0;
      virtual HRESULT __stdcall get_Companies (
        /*[out,retval]*/ BSTR * Companies ) = 0;
      virtual HRESULT __stdcall put_Companies (
        /*[in]*/ BSTR Companies ) = 0;
      virtual HRESULT __stdcall get_ConversationIndex (
        /*[out,retval]*/ BSTR * ConversationIndex ) = 0;
      virtual HRESULT __stdcall get_ConversationTopic (
        /*[out,retval]*/ BSTR * ConversationTopic ) = 0;
      virtual HRESULT __stdcall get_CreationTime (
        /*[out,retval]*/ DATE * CreationTime ) = 0;
      virtual HRESULT __stdcall get_EntryID (
        /*[out,retval]*/ BSTR * EntryID ) = 0;
      virtual HRESULT __stdcall get_FormDescription (
        /*[out,retval]*/ struct FormDescription * * FormDescription ) = 0;
      virtual HRESULT __stdcall get_GetInspector (
        /*[out,retval]*/ struct _Inspector * * GetInspector ) = 0;
      virtual HRESULT __stdcall get_Importance (
        /*[out,retval]*/ enum OlImportance * Importance ) = 0;
      virtual HRESULT __stdcall put_Importance (
        /*[in]*/ enum OlImportance Importance ) = 0;
      virtual HRESULT __stdcall get_LastModificationTime (
        /*[out,retval]*/ DATE * LastModificationTime ) = 0;
      virtual HRESULT __stdcall get_MAPIOBJECT (
        /*[out,retval]*/ IUnknown * * MAPIOBJECT ) = 0;
      virtual HRESULT __stdcall get_MessageClass (
        /*[out,retval]*/ BSTR * MessageClass ) = 0;
      virtual HRESULT __stdcall put_MessageClass (
        /*[in]*/ BSTR MessageClass ) = 0;
      virtual HRESULT __stdcall get_Mileage (
        /*[out,retval]*/ BSTR * Mileage ) = 0;
      virtual HRESULT __stdcall put_Mileage (
        /*[in]*/ BSTR Mileage ) = 0;
      virtual HRESULT __stdcall get_NoAging (
        /*[out,retval]*/ VARIANT_BOOL * NoAging ) = 0;
      virtual HRESULT __stdcall put_NoAging (
        /*[in]*/ VARIANT_BOOL NoAging ) = 0;
      virtual HRESULT __stdcall get_OutlookInternalVersion (
        /*[out,retval]*/ long * OutlookInternalVersion ) = 0;
      virtual HRESULT __stdcall get_OutlookVersion (
        /*[out,retval]*/ BSTR * OutlookVersion ) = 0;
      virtual HRESULT __stdcall get_Saved (
        /*[out,retval]*/ VARIANT_BOOL * Saved ) = 0;
      virtual HRESULT __stdcall get_Sensitivity (
        /*[out,retval]*/ enum OlSensitivity * Sensitivity ) = 0;
      virtual HRESULT __stdcall put_Sensitivity (
        /*[in]*/ enum OlSensitivity Sensitivity ) = 0;
      virtual HRESULT __stdcall get_Size (
        /*[out,retval]*/ long * Size ) = 0;
      virtual HRESULT __stdcall get_Subject (
        /*[out,retval]*/ BSTR * Subject ) = 0;
      virtual HRESULT __stdcall put_Subject (
        /*[in]*/ BSTR Subject ) = 0;
      virtual HRESULT __stdcall get_UnRead (
        /*[out,retval]*/ VARIANT_BOOL * UnRead ) = 0;
      virtual HRESULT __stdcall put_UnRead (
        /*[in]*/ VARIANT_BOOL UnRead ) = 0;
      virtual HRESULT __stdcall get_UserProperties (
        /*[out,retval]*/ struct UserProperties * * UserProperties ) = 0;
      virtual HRESULT __stdcall raw_Close (
        /*[in]*/ enum OlInspectorClose SaveMode ) = 0;
      virtual HRESULT __stdcall raw_Copy (
        /*[out,retval]*/ IDispatch * * Item ) = 0;
      virtual HRESULT __stdcall raw_Delete ( ) = 0;
      virtual HRESULT __stdcall raw_Display (
        /*[in]*/ VARIANT Modal = vtMissing ) = 0;
      virtual HRESULT __stdcall raw_Move (
        /*[in]*/ struct MAPIFolder * DestFldr,
        /*[out,retval]*/ IDispatch * * Item ) = 0;
      virtual HRESULT __stdcall raw_PrintOut ( ) = 0;
      virtual HRESULT __stdcall raw_Save ( ) = 0;
      virtual HRESULT __stdcall raw_SaveAs (
        /*[in]*/ BSTR Path,
        /*[in]*/ VARIANT Type = vtMissing ) = 0;
      virtual HRESULT __stdcall get_ContactNames (
        /*[out,retval]*/ BSTR * ContactNames ) = 0;
      virtual HRESULT __stdcall put_ContactNames (
        /*[in]*/ BSTR ContactNames ) = 0;
      virtual HRESULT __stdcall get_DocPosted (
        /*[out,retval]*/ VARIANT_BOOL * DocPosted ) = 0;
      virtual HRESULT __stdcall put_DocPosted (
        /*[in]*/ VARIANT_BOOL DocPosted ) = 0;
      virtual HRESULT __stdcall get_DocPrinted (
        /*[out,retval]*/ VARIANT_BOOL * DocPrinted ) = 0;
      virtual HRESULT __stdcall put_DocPrinted (
        /*[in]*/ VARIANT_BOOL DocPrinted ) = 0;
      virtual HRESULT __stdcall get_DocRouted (
        /*[out,retval]*/ VARIANT_BOOL * DocRouted ) = 0;
      virtual HRESULT __stdcall put_DocRouted (
        /*[in]*/ VARIANT_BOOL DocRouted ) = 0;
      virtual HRESULT __stdcall get_DocSaved (
        /*[out,retval]*/ VARIANT_BOOL * DocSaved ) = 0;
      virtual HRESULT __stdcall put_DocSaved (
        /*[in]*/ VARIANT_BOOL DocSaved ) = 0;
      virtual HRESULT __stdcall get_Duration (
        /*[out,retval]*/ long * Duration ) = 0;
      virtual HRESULT __stdcall put_Duration (
        /*[in]*/ long Duration ) = 0;
      virtual HRESULT __stdcall get_End (
        /*[out,retval]*/ DATE * End ) = 0;
      virtual HRESULT __stdcall put_End (
        /*[in]*/ DATE End ) = 0;
      virtual HRESULT __stdcall get_Type (
        /*[out,retval]*/ BSTR * Type ) = 0;
      virtual HRESULT __stdcall put_Type (
        /*[in]*/ BSTR Type ) = 0;
      virtual HRESULT __stdcall get_Recipients (
        /*[out,retval]*/ struct Recipients * * Recipients ) = 0;
      virtual HRESULT __stdcall get_Start (
        /*[out,retval]*/ DATE * Start ) = 0;
      virtual HRESULT __stdcall put_Start (
        /*[in]*/ DATE Start ) = 0;
      virtual HRESULT __stdcall raw_Forward (
        /*[out,retval]*/ struct _MailItem * * Item ) = 0;
      virtual HRESULT __stdcall raw_Reply (
        /*[out,retval]*/ struct _MailItem * * Item ) = 0;
      virtual HRESULT __stdcall raw_ReplyAll (
        /*[out,retval]*/ struct _MailItem * * Item ) = 0;
      virtual HRESULT __stdcall raw_StartTimer ( ) = 0;
      virtual HRESULT __stdcall raw_StopTimer ( ) = 0;
      virtual HRESULT __stdcall get_Links (
        /*[out,retval]*/ struct Links * * Links ) = 0;
      virtual HRESULT __stdcall get_DownloadState (
        /*[out,retval]*/ enum OlDownloadState * DownloadState ) = 0;
      virtual HRESULT __stdcall raw_ShowCategoriesDialog ( ) = 0;
      virtual HRESULT __stdcall get_ItemProperties (
        /*[out,retval]*/ struct ItemProperties * * ItemProperties ) = 0;
      virtual HRESULT __stdcall get_MarkForDownload (
        /*[out,retval]*/ enum OlRemoteStatus * MarkForDownload ) = 0;
      virtual HRESULT __stdcall put_MarkForDownload (
        /*[in]*/ enum OlRemoteStatus MarkForDownload ) = 0;
      virtual HRESULT __stdcall get_IsConflict (
        /*[out,retval]*/ VARIANT_BOOL * IsConflict ) = 0;
      virtual HRESULT __stdcall get_AutoResolvedWinner (
        /*[out,retval]*/ VARIANT_BOOL * AutoResolvedWinner ) = 0;
      virtual HRESULT __stdcall get_Conflicts (
        /*[out,retval]*/ struct Conflicts * * Conflicts ) = 0;
      virtual HRESULT __stdcall get_PropertyAccessor (
        /*[out,retval]*/ struct _PropertyAccessor * * PropertyAccessor ) = 0;
};

struct __declspec(uuid("00063025-0000-0000-c000-000000000046"))
_NoteItem : IDispatch
{
    //
    // Property data
    //

    __declspec(property(get=GetEntryID))
    _bstr_t EntryID;
    __declspec(property(get=GetSaved))
    VARIANT_BOOL Saved;
    __declspec(property(get=GetIsConflict))
    VARIANT_BOOL IsConflict;
    __declspec(property(get=GetDownloadState))
    enum OlDownloadState DownloadState;
    __declspec(property(get=GetPropertyAccessor))
    _PropertyAccessorPtr PropertyAccessor;
    __declspec(property(get=GetApplication))
    _ApplicationPtr Application;
    __declspec(property(get=GetParent))
    IDispatchPtr Parent;
    __declspec(property(get=GetMarkForDownload,put=PutMarkForDownload))
    enum OlRemoteStatus MarkForDownload;
    __declspec(property(get=GetCreationTime))
    DATE CreationTime;
    __declspec(property(get=GetLastModificationTime))
    DATE LastModificationTime;
    __declspec(property(get=GetClass))
    enum OlObjectClass Class;
    __declspec(property(get=GetSession))
    _NameSpacePtr Session;
    __declspec(property(get=GetBody,put=PutBody))
    _bstr_t Body;
    __declspec(property(get=GetSize))
    long Size;
    __declspec(property(get=GetMessageClass,put=PutMessageClass))
    _bstr_t MessageClass;
    __declspec(property(get=GetColor,put=PutColor))
    enum OlNoteColor Color;
    __declspec(property(get=GetSubject))
    _bstr_t Subject;
    __declspec(property(get=GetWidth,put=PutWidth))
    long Width;
    __declspec(property(get=GetHeight,put=PutHeight))
    long Height;
    __declspec(property(get=GetLeft,put=PutLeft))
    long Left;
    __declspec(property(get=GetCategories,put=PutCategories))
    _bstr_t Categories;
    __declspec(property(get=GetTop,put=PutTop))
    long Top;
    __declspec(property(get=GetLinks))
    LinksPtr Links;
    __declspec(property(get=GetItemProperties))
    ItemPropertiesPtr ItemProperties;
    __declspec(property(get=GetGetInspector))
    _InspectorPtr GetInspector;
    __declspec(property(get=GetAutoResolvedWinner))
    VARIANT_BOOL AutoResolvedWinner;
    __declspec(property(get=GetConflicts))
    ConflictsPtr Conflicts;

    //
    // Wrapper methods for error-handling
    //

    _ApplicationPtr GetApplication ( );
    enum OlObjectClass GetClass ( );
    _NameSpacePtr GetSession ( );
    IDispatchPtr GetParent ( );
    _bstr_t GetBody ( );
    void PutBody (
        _bstr_t Body );
    _bstr_t GetCategories ( );
    void PutCategories (
        _bstr_t Categories );
    enum OlNoteColor GetColor ( );
    void PutColor (
        enum OlNoteColor Color );
    DATE GetCreationTime ( );
    _bstr_t GetEntryID ( );
    _InspectorPtr GetGetInspector ( );
    long GetHeight ( );
    void PutHeight (
        long Height );
    DATE GetLastModificationTime ( );
    long GetLeft ( );
    void PutLeft (
        long Left );
    _bstr_t GetMessageClass ( );
    void PutMessageClass (
        _bstr_t MessageClass );
    VARIANT_BOOL GetSaved ( );
    long GetSize ( );
    _bstr_t GetSubject ( );
    long GetTop ( );
    void PutTop (
        long Top );
    long GetWidth ( );
    void PutWidth (
        long Width );
    HRESULT Close (
        enum OlInspectorClose SaveMode );
    IDispatchPtr Copy ( );
    HRESULT Delete ( );
    HRESULT Display (
        const _variant_t & Modal = vtMissing );
    IDispatchPtr Move (
        struct MAPIFolder * DestFldr );
    HRESULT PrintOut ( );
    HRESULT Save ( );
    HRESULT SaveAs (
        _bstr_t Path,
        const _variant_t & Type = vtMissing );
    LinksPtr GetLinks ( );
    enum OlDownloadState GetDownloadState ( );
    ItemPropertiesPtr GetItemProperties ( );
    enum OlRemoteStatus GetMarkForDownload ( );
    void PutMarkForDownload (
        enum OlRemoteStatus MarkForDownload );
    VARIANT_BOOL GetIsConflict ( );
    VARIANT_BOOL GetAutoResolvedWinner ( );
    ConflictsPtr GetConflicts ( );
    _PropertyAccessorPtr GetPropertyAccessor ( );

    //
    // Raw methods provided by interface
    //

      virtual HRESULT __stdcall get_Application (
        /*[out,retval]*/ struct _Application * * Application ) = 0;
      virtual HRESULT __stdcall get_Class (
        /*[out,retval]*/ enum OlObjectClass * Class ) = 0;
      virtual HRESULT __stdcall get_Session (
        /*[out,retval]*/ struct _NameSpace * * Session ) = 0;
      virtual HRESULT __stdcall get_Parent (
        /*[out,retval]*/ IDispatch * * Parent ) = 0;
      virtual HRESULT __stdcall get_Body (
        /*[out,retval]*/ BSTR * Body ) = 0;
      virtual HRESULT __stdcall put_Body (
        /*[in]*/ BSTR Body ) = 0;
      virtual HRESULT __stdcall get_Categories (
        /*[out,retval]*/ BSTR * Categories ) = 0;
      virtual HRESULT __stdcall put_Categories (
        /*[in]*/ BSTR Categories ) = 0;
      virtual HRESULT __stdcall get_Color (
        /*[out,retval]*/ enum OlNoteColor * Color ) = 0;
      virtual HRESULT __stdcall put_Color (
        /*[in]*/ enum OlNoteColor Color ) = 0;
      virtual HRESULT __stdcall get_CreationTime (
        /*[out,retval]*/ DATE * CreationTime ) = 0;
      virtual HRESULT __stdcall get_EntryID (
        /*[out,retval]*/ BSTR * EntryID ) = 0;
      virtual HRESULT __stdcall get_GetInspector (
        /*[out,retval]*/ struct _Inspector * * GetInspector ) = 0;
      virtual HRESULT __stdcall get_Height (
        /*[out,retval]*/ long * Height ) = 0;
      virtual HRESULT __stdcall put_Height (
        /*[in]*/ long Height ) = 0;
      virtual HRESULT __stdcall get_LastModificationTime (
        /*[out,retval]*/ DATE * LastModificationTime ) = 0;
      virtual HRESULT __stdcall get_Left (
        /*[out,retval]*/ long * Left ) = 0;
      virtual HRESULT __stdcall put_Left (
        /*[in]*/ long Left ) = 0;
      virtual HRESULT __stdcall get_MessageClass (
        /*[out,retval]*/ BSTR * MessageClass ) = 0;
      virtual HRESULT __stdcall put_MessageClass (
        /*[in]*/ BSTR MessageClass ) = 0;
      virtual HRESULT __stdcall get_Saved (
        /*[out,retval]*/ VARIANT_BOOL * Saved ) = 0;
      virtual HRESULT __stdcall get_Size (
        /*[out,retval]*/ long * Size ) = 0;
      virtual HRESULT __stdcall get_Subject (
        /*[out,retval]*/ BSTR * Subject ) = 0;
      virtual HRESULT __stdcall get_Top (
        /*[out,retval]*/ long * Top ) = 0;
      virtual HRESULT __stdcall put_Top (
        /*[in]*/ long Top ) = 0;
      virtual HRESULT __stdcall get_Width (
        /*[out,retval]*/ long * Width ) = 0;
      virtual HRESULT __stdcall put_Width (
        /*[in]*/ long Width ) = 0;
      virtual HRESULT __stdcall raw_Close (
        /*[in]*/ enum OlInspectorClose SaveMode ) = 0;
      virtual HRESULT __stdcall raw_Copy (
        /*[out,retval]*/ IDispatch * * Item ) = 0;
      virtual HRESULT __stdcall raw_Delete ( ) = 0;
      virtual HRESULT __stdcall raw_Display (
        /*[in]*/ VARIANT Modal = vtMissing ) = 0;
      virtual HRESULT __stdcall raw_Move (
        /*[in]*/ struct MAPIFolder * DestFldr,
        /*[out,retval]*/ IDispatch * * Item ) = 0;
      virtual HRESULT __stdcall raw_PrintOut ( ) = 0;
      virtual HRESULT __stdcall raw_Save ( ) = 0;
      virtual HRESULT __stdcall raw_SaveAs (
        /*[in]*/ BSTR Path,
        /*[in]*/ VARIANT Type = vtMissing ) = 0;
      virtual HRESULT __stdcall get_Links (
        /*[out,retval]*/ struct Links * * Links ) = 0;
      virtual HRESULT __stdcall get_DownloadState (
        /*[out,retval]*/ enum OlDownloadState * DownloadState ) = 0;
      virtual HRESULT __stdcall get_ItemProperties (
        /*[out,retval]*/ struct ItemProperties * * ItemProperties ) = 0;
      virtual HRESULT __stdcall get_MarkForDownload (
        /*[out,retval]*/ enum OlRemoteStatus * MarkForDownload ) = 0;
      virtual HRESULT __stdcall put_MarkForDownload (
        /*[in]*/ enum OlRemoteStatus MarkForDownload ) = 0;
      virtual HRESULT __stdcall get_IsConflict (
        /*[out,retval]*/ VARIANT_BOOL * IsConflict ) = 0;
      virtual HRESULT __stdcall get_AutoResolvedWinner (
        /*[out,retval]*/ VARIANT_BOOL * AutoResolvedWinner ) = 0;
      virtual HRESULT __stdcall get_Conflicts (
        /*[out,retval]*/ struct Conflicts * * Conflicts ) = 0;
      virtual HRESULT __stdcall get_PropertyAccessor (
        /*[out,retval]*/ struct _PropertyAccessor * * PropertyAccessor ) = 0;
};

struct __declspec(uuid("00063024-0000-0000-c000-000000000046"))
_PostItem : IDispatch
{
    //
    // Property data
    //

    __declspec(property(get=GetMileage,put=PutMileage))
    _bstr_t Mileage;
    __declspec(property(get=GetBillingInformation,put=PutBillingInformation))
    _bstr_t BillingInformation;
    __declspec(property(get=GetConversationTopic))
    _bstr_t ConversationTopic;
    __declspec(property(get=GetSaved))
    VARIANT_BOOL Saved;
    __declspec(property(get=GetCompanies,put=PutCompanies))
    _bstr_t Companies;
    __declspec(property(get=GetGetInspector))
    _InspectorPtr GetInspector;
    __declspec(property(get=GetPropertyAccessor))
    _PropertyAccessorPtr PropertyAccessor;
    __declspec(property(get=GetCategories,put=PutCategories))
    _bstr_t Categories;
    __declspec(property(get=GetSenderName))
    _bstr_t SenderName;
    __declspec(property(get=GetExpiryTime,put=PutExpiryTime))
    DATE ExpiryTime;
    __declspec(property(get=GetSenderEmailType))
    _bstr_t SenderEmailType;
    __declspec(property(get=GetImportance,put=PutImportance))
    enum OlImportance Importance;
    __declspec(property(get=GetSenderEmailAddress))
    _bstr_t SenderEmailAddress;
    __declspec(property(get=GetMessageClass,put=PutMessageClass))
    _bstr_t MessageClass;
    __declspec(property(get=GetTaskStartDate,put=PutTaskStartDate))
    DATE TaskStartDate;
    __declspec(property(get=GetTaskDueDate,put=PutTaskDueDate))
    DATE TaskDueDate;
    __declspec(property(get=GetOutlookInternalVersion))
    long OutlookInternalVersion;
    __declspec(property(get=GetOutlookVersion))
    _bstr_t OutlookVersion;
    __declspec(property(get=GetIsConflict))
    VARIANT_BOOL IsConflict;
    __declspec(property(get=GetAttachments))
    AttachmentsPtr Attachments;
    __declspec(property(get=GetUserProperties))
    UserPropertiesPtr UserProperties;
    __declspec(property(get=GetActions))
    ActionsPtr Actions;
    __declspec(property(get=GetTaskCompletedDate,put=PutTaskCompletedDate))
    DATE TaskCompletedDate;
    __declspec(property(get=GetBody,put=PutBody))
    _bstr_t Body;
    __declspec(property(get=GetBodyFormat,put=PutBodyFormat))
    enum OlBodyFormat BodyFormat;
    __declspec(property(get=GetSensitivity,put=PutSensitivity))
    enum OlSensitivity Sensitivity;
    __declspec(property(get=GetSubject,put=PutSubject))
    _bstr_t Subject;
    __declspec(property(get=GetAutoResolvedWinner))
    VARIANT_BOOL AutoResolvedWinner;
    __declspec(property(get=GetDownloadState))
    enum OlDownloadState DownloadState;
    __declspec(property(get=GetSentOn))
    DATE SentOn;
    __declspec(property(get=GetConflicts))
    ConflictsPtr Conflicts;
    __declspec(property(get=GetApplication))
    _ApplicationPtr Application;
    __declspec(property(get=GetParent))
    IDispatchPtr Parent;
    __declspec(property(get=GetReminderSet,put=PutReminderSet))
    VARIANT_BOOL ReminderSet;
    __declspec(property(get=GetMarkForDownload,put=PutMarkForDownload))
    enum OlRemoteStatus MarkForDownload;
    __declspec(property(get=GetConversationIndex))
    _bstr_t ConversationIndex;
    __declspec(property(get=GetReminderTime,put=PutReminderTime))
    DATE ReminderTime;
    __declspec(property(get=GetIsMarkedAsTask))
    VARIANT_BOOL IsMarkedAsTask;
    __declspec(property(get=GetClass))
    enum OlObjectClass Class;
    __declspec(property(get=GetSession))
    _NameSpacePtr Session;
    __declspec(property(get=GetInternetCodepage,put=PutInternetCodepage))
    long InternetCodepage;
    __declspec(property(get=GetNoAging,put=PutNoAging))
    VARIANT_BOOL NoAging;
    __declspec(property(get=GetReceivedTime))
    DATE ReceivedTime;
    __declspec(property(get=GetSize))
    long Size;
    __declspec(property(get=GetTaskSubject,put=PutTaskSubject))
    _bstr_t TaskSubject;
    __declspec(property(get=GetCreationTime))
    DATE CreationTime;
    __declspec(property(get=GetReminderOverrideDefault,put=PutReminderOverrideDefault))
    VARIANT_BOOL ReminderOverrideDefault;
    __declspec(property(get=GetLastModificationTime))
    DATE LastModificationTime;
    __declspec(property(get=GetUnRead,put=PutUnRead))
    VARIANT_BOOL UnRead;
    __declspec(property(get=GetReminderPlaySound,put=PutReminderPlaySound))
    VARIANT_BOOL ReminderPlaySound;
    __declspec(property(get=GetEntryID))
    _bstr_t EntryID;
    __declspec(property(get=GetReminderSoundFile,put=PutReminderSoundFile))
    _bstr_t ReminderSoundFile;
    __declspec(property(get=GetMAPIOBJECT))
    IUnknownPtr MAPIOBJECT;
    __declspec(property(get=GetHTMLBody,put=PutHTMLBody))
    _bstr_t HTMLBody;
    __declspec(property(get=GetFormDescription))
    FormDescriptionPtr FormDescription;
    __declspec(property(get=GetItemProperties))
    ItemPropertiesPtr ItemProperties;
    __declspec(property(get=GetLinks))
    LinksPtr Links;
    __declspec(property(get=GetToDoTaskOrdinal,put=PutToDoTaskOrdinal))
    DATE ToDoTaskOrdinal;

    //
    // Wrapper methods for error-handling
    //

    _ApplicationPtr GetApplication ( );
    enum OlObjectClass GetClass ( );
    _NameSpacePtr GetSession ( );
    IDispatchPtr GetParent ( );
    ActionsPtr GetActions ( );
    AttachmentsPtr GetAttachments ( );
    _bstr_t GetBillingInformation ( );
    void PutBillingInformation (
        _bstr_t BillingInformation );
    _bstr_t GetBody ( );
    void PutBody (
        _bstr_t Body );
    _bstr_t GetCategories ( );
    void PutCategories (
        _bstr_t Categories );
    _bstr_t GetCompanies ( );
    void PutCompanies (
        _bstr_t Companies );
    _bstr_t GetConversationIndex ( );
    _bstr_t GetConversationTopic ( );
    DATE GetCreationTime ( );
    _bstr_t GetEntryID ( );
    FormDescriptionPtr GetFormDescription ( );
    _InspectorPtr GetGetInspector ( );
    enum OlImportance GetImportance ( );
    void PutImportance (
        enum OlImportance Importance );
    DATE GetLastModificationTime ( );
    IUnknownPtr GetMAPIOBJECT ( );
    _bstr_t GetMessageClass ( );
    void PutMessageClass (
        _bstr_t MessageClass );
    _bstr_t GetMileage ( );
    void PutMileage (
        _bstr_t Mileage );
    VARIANT_BOOL GetNoAging ( );
    void PutNoAging (
        VARIANT_BOOL NoAging );
    long GetOutlookInternalVersion ( );
    _bstr_t GetOutlookVersion ( );
    VARIANT_BOOL GetSaved ( );
    enum OlSensitivity GetSensitivity ( );
    void PutSensitivity (
        enum OlSensitivity Sensitivity );
    long GetSize ( );
    _bstr_t GetSubject ( );
    void PutSubject (
        _bstr_t Subject );
    VARIANT_BOOL GetUnRead ( );
    void PutUnRead (
        VARIANT_BOOL UnRead );
    UserPropertiesPtr GetUserProperties ( );
    HRESULT Close (
        enum OlInspectorClose SaveMode );
    IDispatchPtr Copy ( );
    HRESULT Delete ( );
    HRESULT Display (
        const _variant_t & Modal = vtMissing );
    IDispatchPtr Move (
        struct MAPIFolder * DestFldr );
    HRESULT PrintOut ( );
    HRESULT Save ( );
    HRESULT SaveAs (
        _bstr_t Path,
        const _variant_t & Type = vtMissing );
    DATE GetExpiryTime ( );
    void PutExpiryTime (
        DATE ExpiryTime );
    _bstr_t GetHTMLBody ( );
    void PutHTMLBody (
        _bstr_t HTMLBody );
    DATE GetReceivedTime ( );
    _bstr_t GetSenderName ( );
    DATE GetSentOn ( );
    HRESULT ClearConversationIndex ( );
    _MailItemPtr Forward ( );
    HRESULT Post ( );
    _MailItemPtr Reply ( );
    LinksPtr GetLinks ( );
    ItemPropertiesPtr GetItemProperties ( );
    enum OlBodyFormat GetBodyFormat ( );
    void PutBodyFormat (
        enum OlBodyFormat BodyFormat );
    enum OlDownloadState GetDownloadState ( );
    HRESULT ShowCategoriesDialog ( );
    long GetInternetCodepage ( );
    void PutInternetCodepage (
        long InternetCodepage );
    enum OlRemoteStatus GetMarkForDownload ( );
    void PutMarkForDownload (
        enum OlRemoteStatus MarkForDownload );
    VARIANT_BOOL SetACLs ( );
    VARIANT_BOOL GetIsConflict ( );
    VARIANT_BOOL GetAutoResolvedWinner ( );
    ConflictsPtr GetConflicts ( );
    _bstr_t GetSenderEmailAddress ( );
    _bstr_t GetSenderEmailType ( );
    _PropertyAccessorPtr GetPropertyAccessor ( );
    _bstr_t GetTaskSubject ( );
    void PutTaskSubject (
        _bstr_t TaskSubject );
    DATE GetTaskDueDate ( );
    void PutTaskDueDate (
        DATE TaskDueDate );
    DATE GetTaskStartDate ( );
    void PutTaskStartDate (
        DATE TaskStartDate );
    DATE GetTaskCompletedDate ( );
    void PutTaskCompletedDate (
        DATE TaskCompletedDate );
    DATE GetToDoTaskOrdinal ( );
    void PutToDoTaskOrdinal (
        DATE ToDoTaskOrdinal );
    VARIANT_BOOL GetReminderOverrideDefault ( );
    void PutReminderOverrideDefault (
        VARIANT_BOOL ReminderOverrideDefault );
    VARIANT_BOOL GetReminderPlaySound ( );
    void PutReminderPlaySound (
        VARIANT_BOOL ReminderPlaySound );
    VARIANT_BOOL GetReminderSet ( );
    void PutReminderSet (
        VARIANT_BOOL ReminderSet );
    _bstr_t GetReminderSoundFile ( );
    void PutReminderSoundFile (
        _bstr_t ReminderSoundFile );
    DATE GetReminderTime ( );
    void PutReminderTime (
        DATE ReminderTime );
    HRESULT MarkAsTask (
        enum OlMarkInterval MarkInterval );
    HRESULT ClearTaskFlag ( );
    VARIANT_BOOL GetIsMarkedAsTask ( );

    //
    // Raw methods provided by interface
    //

      virtual HRESULT __stdcall get_Application (
        /*[out,retval]*/ struct _Application * * Application ) = 0;
      virtual HRESULT __stdcall get_Class (
        /*[out,retval]*/ enum OlObjectClass * Class ) = 0;
      virtual HRESULT __stdcall get_Session (
        /*[out,retval]*/ struct _NameSpace * * Session ) = 0;
      virtual HRESULT __stdcall get_Parent (
        /*[out,retval]*/ IDispatch * * Parent ) = 0;
      virtual HRESULT __stdcall get_Actions (
        /*[out,retval]*/ struct Actions * * Actions ) = 0;
      virtual HRESULT __stdcall get_Attachments (
        /*[out,retval]*/ struct Attachments * * Attachments ) = 0;
      virtual HRESULT __stdcall get_BillingInformation (
        /*[out,retval]*/ BSTR * BillingInformation ) = 0;
      virtual HRESULT __stdcall put_BillingInformation (
        /*[in]*/ BSTR BillingInformation ) = 0;
      virtual HRESULT __stdcall get_Body (
        /*[out,retval]*/ BSTR * Body ) = 0;
      virtual HRESULT __stdcall put_Body (
        /*[in]*/ BSTR Body ) = 0;
      virtual HRESULT __stdcall get_Categories (
        /*[out,retval]*/ BSTR * Categories ) = 0;
      virtual HRESULT __stdcall put_Categories (
        /*[in]*/ BSTR Categories ) = 0;
      virtual HRESULT __stdcall get_Companies (
        /*[out,retval]*/ BSTR * Companies ) = 0;
      virtual HRESULT __stdcall put_Companies (
        /*[in]*/ BSTR Companies ) = 0;
      virtual HRESULT __stdcall get_ConversationIndex (
        /*[out,retval]*/ BSTR * ConversationIndex ) = 0;
      virtual HRESULT __stdcall get_ConversationTopic (
        /*[out,retval]*/ BSTR * ConversationTopic ) = 0;
      virtual HRESULT __stdcall get_CreationTime (
        /*[out,retval]*/ DATE * CreationTime ) = 0;
      virtual HRESULT __stdcall get_EntryID (
        /*[out,retval]*/ BSTR * EntryID ) = 0;
      virtual HRESULT __stdcall get_FormDescription (
        /*[out,retval]*/ struct FormDescription * * FormDescription ) = 0;
      virtual HRESULT __stdcall get_GetInspector (
        /*[out,retval]*/ struct _Inspector * * GetInspector ) = 0;
      virtual HRESULT __stdcall get_Importance (
        /*[out,retval]*/ enum OlImportance * Importance ) = 0;
      virtual HRESULT __stdcall put_Importance (
        /*[in]*/ enum OlImportance Importance ) = 0;
      virtual HRESULT __stdcall get_LastModificationTime (
        /*[out,retval]*/ DATE * LastModificationTime ) = 0;
      virtual HRESULT __stdcall get_MAPIOBJECT (
        /*[out,retval]*/ IUnknown * * MAPIOBJECT ) = 0;
      virtual HRESULT __stdcall get_MessageClass (
        /*[out,retval]*/ BSTR * MessageClass ) = 0;
      virtual HRESULT __stdcall put_MessageClass (
        /*[in]*/ BSTR MessageClass ) = 0;
      virtual HRESULT __stdcall get_Mileage (
        /*[out,retval]*/ BSTR * Mileage ) = 0;
      virtual HRESULT __stdcall put_Mileage (
        /*[in]*/ BSTR Mileage ) = 0;
      virtual HRESULT __stdcall get_NoAging (
        /*[out,retval]*/ VARIANT_BOOL * NoAging ) = 0;
      virtual HRESULT __stdcall put_NoAging (
        /*[in]*/ VARIANT_BOOL NoAging ) = 0;
      virtual HRESULT __stdcall get_OutlookInternalVersion (
        /*[out,retval]*/ long * OutlookInternalVersion ) = 0;
      virtual HRESULT __stdcall get_OutlookVersion (
        /*[out,retval]*/ BSTR * OutlookVersion ) = 0;
      virtual HRESULT __stdcall get_Saved (
        /*[out,retval]*/ VARIANT_BOOL * Saved ) = 0;
      virtual HRESULT __stdcall get_Sensitivity (
        /*[out,retval]*/ enum OlSensitivity * Sensitivity ) = 0;
      virtual HRESULT __stdcall put_Sensitivity (
        /*[in]*/ enum OlSensitivity Sensitivity ) = 0;
      virtual HRESULT __stdcall get_Size (
        /*[out,retval]*/ long * Size ) = 0;
      virtual HRESULT __stdcall get_Subject (
        /*[out,retval]*/ BSTR * Subject ) = 0;
      virtual HRESULT __stdcall put_Subject (
        /*[in]*/ BSTR Subject ) = 0;
      virtual HRESULT __stdcall get_UnRead (
        /*[out,retval]*/ VARIANT_BOOL * UnRead ) = 0;
      virtual HRESULT __stdcall put_UnRead (
        /*[in]*/ VARIANT_BOOL UnRead ) = 0;
      virtual HRESULT __stdcall get_UserProperties (
        /*[out,retval]*/ struct UserProperties * * UserProperties ) = 0;
      virtual HRESULT __stdcall raw_Close (
        /*[in]*/ enum OlInspectorClose SaveMode ) = 0;
      virtual HRESULT __stdcall raw_Copy (
        /*[out,retval]*/ IDispatch * * Item ) = 0;
      virtual HRESULT __stdcall raw_Delete ( ) = 0;
      virtual HRESULT __stdcall raw_Display (
        /*[in]*/ VARIANT Modal = vtMissing ) = 0;
      virtual HRESULT __stdcall raw_Move (
        /*[in]*/ struct MAPIFolder * DestFldr,
        /*[out,retval]*/ IDispatch * * Item ) = 0;
      virtual HRESULT __stdcall raw_PrintOut ( ) = 0;
      virtual HRESULT __stdcall raw_Save ( ) = 0;
      virtual HRESULT __stdcall raw_SaveAs (
        /*[in]*/ BSTR Path,
        /*[in]*/ VARIANT Type = vtMissing ) = 0;
      virtual HRESULT __stdcall get_ExpiryTime (
        /*[out,retval]*/ DATE * ExpiryTime ) = 0;
      virtual HRESULT __stdcall put_ExpiryTime (
        /*[in]*/ DATE ExpiryTime ) = 0;
      virtual HRESULT __stdcall get_HTMLBody (
        /*[out,retval]*/ BSTR * HTMLBody ) = 0;
      virtual HRESULT __stdcall put_HTMLBody (
        /*[in]*/ BSTR HTMLBody ) = 0;
      virtual HRESULT __stdcall get_ReceivedTime (
        /*[out,retval]*/ DATE * ReceivedTime ) = 0;
      virtual HRESULT __stdcall get_SenderName (
        /*[out,retval]*/ BSTR * SenderName ) = 0;
      virtual HRESULT __stdcall get_SentOn (
        /*[out,retval]*/ DATE * SentOn ) = 0;
      virtual HRESULT __stdcall raw_ClearConversationIndex ( ) = 0;
      virtual HRESULT __stdcall raw_Forward (
        /*[out,retval]*/ struct _MailItem * * Item ) = 0;
      virtual HRESULT __stdcall raw_Post ( ) = 0;
      virtual HRESULT __stdcall raw_Reply (
        /*[out,retval]*/ struct _MailItem * * Item ) = 0;
      virtual HRESULT __stdcall get_Links (
        /*[out,retval]*/ struct Links * * Links ) = 0;
      virtual HRESULT __stdcall get_ItemProperties (
        /*[out,retval]*/ struct ItemProperties * * ItemProperties ) = 0;
      virtual HRESULT __stdcall get_BodyFormat (
        /*[out,retval]*/ enum OlBodyFormat * BodyFormat ) = 0;
      virtual HRESULT __stdcall put_BodyFormat (
        /*[in]*/ enum OlBodyFormat BodyFormat ) = 0;
      virtual HRESULT __stdcall get_DownloadState (
        /*[out,retval]*/ enum OlDownloadState * DownloadState ) = 0;
      virtual HRESULT __stdcall raw_ShowCategoriesDialog ( ) = 0;
      virtual HRESULT __stdcall get_InternetCodepage (
        /*[out,retval]*/ long * InternetCodepage ) = 0;
      virtual HRESULT __stdcall put_InternetCodepage (
        /*[in]*/ long InternetCodepage ) = 0;
      virtual HRESULT __stdcall get_MarkForDownload (
        /*[out,retval]*/ enum OlRemoteStatus * MarkForDownload ) = 0;
      virtual HRESULT __stdcall put_MarkForDownload (
        /*[in]*/ enum OlRemoteStatus MarkForDownload ) = 0;
      virtual HRESULT __stdcall raw_SetACLs (
        /*[out,retval]*/ VARIANT_BOOL * AllOkay ) = 0;
      virtual HRESULT __stdcall get_IsConflict (
        /*[out,retval]*/ VARIANT_BOOL * IsConflict ) = 0;
      virtual HRESULT __stdcall get_AutoResolvedWinner (
        /*[out,retval]*/ VARIANT_BOOL * AutoResolvedWinner ) = 0;
      virtual HRESULT __stdcall get_Conflicts (
        /*[out,retval]*/ struct Conflicts * * Conflicts ) = 0;
      virtual HRESULT __stdcall get_SenderEmailAddress (
        /*[out,retval]*/ BSTR * SenderEmailAddress ) = 0;
      virtual HRESULT __stdcall get_SenderEmailType (
        /*[out,retval]*/ BSTR * SenderEmailType ) = 0;
      virtual HRESULT __stdcall get_PropertyAccessor (
        /*[out,retval]*/ struct _PropertyAccessor * * PropertyAccessor ) = 0;
      virtual HRESULT __stdcall get_TaskSubject (
        /*[out,retval]*/ BSTR * TaskSubject ) = 0;
      virtual HRESULT __stdcall put_TaskSubject (
        /*[in]*/ BSTR TaskSubject ) = 0;
      virtual HRESULT __stdcall get_TaskDueDate (
        /*[out,retval]*/ DATE * TaskDueDate ) = 0;
      virtual HRESULT __stdcall put_TaskDueDate (
        /*[in]*/ DATE TaskDueDate ) = 0;
      virtual HRESULT __stdcall get_TaskStartDate (
        /*[out,retval]*/ DATE * TaskStartDate ) = 0;
      virtual HRESULT __stdcall put_TaskStartDate (
        /*[in]*/ DATE TaskStartDate ) = 0;
      virtual HRESULT __stdcall get_TaskCompletedDate (
        /*[out,retval]*/ DATE * TaskCompletedDate ) = 0;
      virtual HRESULT __stdcall put_TaskCompletedDate (
        /*[in]*/ DATE TaskCompletedDate ) = 0;
      virtual HRESULT __stdcall get_ToDoTaskOrdinal (
        /*[out,retval]*/ DATE * ToDoTaskOrdinal ) = 0;
      virtual HRESULT __stdcall put_ToDoTaskOrdinal (
        /*[in]*/ DATE ToDoTaskOrdinal ) = 0;
      virtual HRESULT __stdcall get_ReminderOverrideDefault (
        /*[out,retval]*/ VARIANT_BOOL * ReminderOverrideDefault ) = 0;
      virtual HRESULT __stdcall put_ReminderOverrideDefault (
        /*[in]*/ VARIANT_BOOL ReminderOverrideDefault ) = 0;
      virtual HRESULT __stdcall get_ReminderPlaySound (
        /*[out,retval]*/ VARIANT_BOOL * ReminderPlaySound ) = 0;
      virtual HRESULT __stdcall put_ReminderPlaySound (
        /*[in]*/ VARIANT_BOOL ReminderPlaySound ) = 0;
      virtual HRESULT __stdcall get_ReminderSet (
        /*[out,retval]*/ VARIANT_BOOL * ReminderSet ) = 0;
      virtual HRESULT __stdcall put_ReminderSet (
        /*[in]*/ VARIANT_BOOL ReminderSet ) = 0;
      virtual HRESULT __stdcall get_ReminderSoundFile (
        /*[out,retval]*/ BSTR * ReminderSoundFile ) = 0;
      virtual HRESULT __stdcall put_ReminderSoundFile (
        /*[in]*/ BSTR ReminderSoundFile ) = 0;
      virtual HRESULT __stdcall get_ReminderTime (
        /*[out,retval]*/ DATE * ReminderTime ) = 0;
      virtual HRESULT __stdcall put_ReminderTime (
        /*[in]*/ DATE ReminderTime ) = 0;
      virtual HRESULT __stdcall raw_MarkAsTask (
        /*[in]*/ enum OlMarkInterval MarkInterval ) = 0;
      virtual HRESULT __stdcall raw_ClearTaskFlag ( ) = 0;
      virtual HRESULT __stdcall get_IsMarkedAsTask (
        /*[out,retval]*/ VARIANT_BOOL * IsMarkedAsTask ) = 0;
};

struct __declspec(uuid("00063023-0000-0000-c000-000000000046"))
_RemoteItem : IDispatch
{
    //
    // Property data
    //

    __declspec(property(get=GetGetInspector))
    _InspectorPtr GetInspector;
    __declspec(property(get=GetFormDescription))
    FormDescriptionPtr FormDescription;
    __declspec(property(get=GetOutlookInternalVersion))
    long OutlookInternalVersion;
    __declspec(property(get=GetOutlookVersion))
    _bstr_t OutlookVersion;
    __declspec(property(get=GetSaved))
    VARIANT_BOOL Saved;
    __declspec(property(get=GetApplication))
    _ApplicationPtr Application;
    __declspec(property(get=GetParent))
    IDispatchPtr Parent;
    __declspec(property(get=GetImportance,put=PutImportance))
    enum OlImportance Importance;
    __declspec(property(get=GetMessageClass,put=PutMessageClass))
    _bstr_t MessageClass;
    __declspec(property(get=GetConversationTopic))
    _bstr_t ConversationTopic;
    __declspec(property(get=GetClass))
    enum OlObjectClass Class;
    __declspec(property(get=GetSession))
    _NameSpacePtr Session;
    __declspec(property(get=GetMAPIOBJECT))
    IUnknownPtr MAPIOBJECT;
    __declspec(property(get=GetDownloadState))
    enum OlDownloadState DownloadState;
    __declspec(property(get=GetNoAging,put=PutNoAging))
    VARIANT_BOOL NoAging;
    __declspec(property(get=GetRemoteMessageClass))
    _bstr_t RemoteMessageClass;
    __declspec(property(get=GetTransferTime))
    long TransferTime;
    __declspec(property(get=GetTransferSize))
    long TransferSize;
    __declspec(property(get=GetIsConflict))
    VARIANT_BOOL IsConflict;
    __declspec(property(get=GetHasAttachment))
    VARIANT_BOOL HasAttachment;
    __declspec(property(get=GetAttachments))
    AttachmentsPtr Attachments;
    __declspec(property(get=GetActions))
    ActionsPtr Actions;
    __declspec(property(get=GetUserProperties))
    UserPropertiesPtr UserProperties;
    __declspec(property(get=GetCategories,put=PutCategories))
    _bstr_t Categories;
    __declspec(property(get=GetPropertyAccessor))
    _PropertyAccessorPtr PropertyAccessor;
    __declspec(property(get=GetMarkForDownload,put=PutMarkForDownload))
    enum OlRemoteStatus MarkForDownload;
    __declspec(property(get=GetUnRead,put=PutUnRead))
    VARIANT_BOOL UnRead;
    __declspec(property(get=GetItemProperties))
    ItemPropertiesPtr ItemProperties;
    __declspec(property(get=GetEntryID))
    _bstr_t EntryID;
    __declspec(property(get=GetSensitivity,put=PutSensitivity))
    enum OlSensitivity Sensitivity;
    __declspec(property(get=GetSubject,put=PutSubject))
    _bstr_t Subject;
    __declspec(property(get=GetBody,put=PutBody))
    _bstr_t Body;
    __declspec(property(get=GetAutoResolvedWinner))
    VARIANT_BOOL AutoResolvedWinner;
    __declspec(property(get=GetConflicts))
    ConflictsPtr Conflicts;
    __declspec(property(get=GetSize))
    long Size;
    __declspec(property(get=GetLinks))
    LinksPtr Links;
    __declspec(property(get=GetConversationIndex))
    _bstr_t ConversationIndex;
    __declspec(property(get=GetMileage,put=PutMileage))
    _bstr_t Mileage;
    __declspec(property(get=GetBillingInformation,put=PutBillingInformation))
    _bstr_t BillingInformation;
    __declspec(property(get=GetCompanies,put=PutCompanies))
    _bstr_t Companies;
    __declspec(property(get=GetCreationTime))
    DATE CreationTime;
    __declspec(property(get=GetLastModificationTime))
    DATE LastModificationTime;

    //
    // Wrapper methods for error-handling
    //

    _ApplicationPtr GetApplication ( );
    enum OlObjectClass GetClass ( );
    _NameSpacePtr GetSession ( );
    IDispatchPtr GetParent ( );
    ActionsPtr GetActions ( );
    AttachmentsPtr GetAttachments ( );
    _bstr_t GetBillingInformation ( );
    void PutBillingInformation (
        _bstr_t BillingInformation );
    _bstr_t GetBody ( );
    void PutBody (
        _bstr_t Body );
    _bstr_t GetCategories ( );
    void PutCategories (
        _bstr_t Categories );
    _bstr_t GetCompanies ( );
    void PutCompanies (
        _bstr_t Companies );
    _bstr_t GetConversationIndex ( );
    _bstr_t GetConversationTopic ( );
    DATE GetCreationTime ( );
    _bstr_t GetEntryID ( );
    FormDescriptionPtr GetFormDescription ( );
    _InspectorPtr GetGetInspector ( );
    enum OlImportance GetImportance ( );
    void PutImportance (
        enum OlImportance Importance );
    DATE GetLastModificationTime ( );
    IUnknownPtr GetMAPIOBJECT ( );
    _bstr_t GetMessageClass ( );
    void PutMessageClass (
        _bstr_t MessageClass );
    _bstr_t GetMileage ( );
    void PutMileage (
        _bstr_t Mileage );
    VARIANT_BOOL GetNoAging ( );
    void PutNoAging (
        VARIANT_BOOL NoAging );
    long GetOutlookInternalVersion ( );
    _bstr_t GetOutlookVersion ( );
    VARIANT_BOOL GetSaved ( );
    enum OlSensitivity GetSensitivity ( );
    void PutSensitivity (
        enum OlSensitivity Sensitivity );
    long GetSize ( );
    _bstr_t GetSubject ( );
    void PutSubject (
        _bstr_t Subject );
    VARIANT_BOOL GetUnRead ( );
    void PutUnRead (
        VARIANT_BOOL UnRead );
    UserPropertiesPtr GetUserProperties ( );
    HRESULT Close (
        enum OlInspectorClose SaveMode );
    IDispatchPtr Copy ( );
    HRESULT Delete ( );
    HRESULT Display (
        const _variant_t & Modal = vtMissing );
    IDispatchPtr Move (
        struct MAPIFolder * DestFldr );
    HRESULT PrintOut ( );
    HRESULT Save ( );
    HRESULT SaveAs (
        _bstr_t Path,
        const _variant_t & Type = vtMissing );
    VARIANT_BOOL GetHasAttachment ( );
    _bstr_t GetRemoteMessageClass ( );
    long GetTransferSize ( );
    long GetTransferTime ( );
    LinksPtr GetLinks ( );
    enum OlDownloadState GetDownloadState ( );
    HRESULT ShowCategoriesDialog ( );
    ItemPropertiesPtr GetItemProperties ( );
    enum OlRemoteStatus GetMarkForDownload ( );
    void PutMarkForDownload (
        enum OlRemoteStatus MarkForDownload );
    VARIANT_BOOL GetIsConflict ( );
    VARIANT_BOOL GetAutoResolvedWinner ( );
    ConflictsPtr GetConflicts ( );
    _PropertyAccessorPtr GetPropertyAccessor ( );

    //
    // Raw methods provided by interface
    //

      virtual HRESULT __stdcall get_Application (
        /*[out,retval]*/ struct _Application * * Application ) = 0;
      virtual HRESULT __stdcall get_Class (
        /*[out,retval]*/ enum OlObjectClass * Class ) = 0;
      virtual HRESULT __stdcall get_Session (
        /*[out,retval]*/ struct _NameSpace * * Session ) = 0;
      virtual HRESULT __stdcall get_Parent (
        /*[out,retval]*/ IDispatch * * Parent ) = 0;
      virtual HRESULT __stdcall get_Actions (
        /*[out,retval]*/ struct Actions * * Actions ) = 0;
      virtual HRESULT __stdcall get_Attachments (
        /*[out,retval]*/ struct Attachments * * Attachments ) = 0;
      virtual HRESULT __stdcall get_BillingInformation (
        /*[out,retval]*/ BSTR * BillingInformation ) = 0;
      virtual HRESULT __stdcall put_BillingInformation (
        /*[in]*/ BSTR BillingInformation ) = 0;
      virtual HRESULT __stdcall get_Body (
        /*[out,retval]*/ BSTR * Body ) = 0;
      virtual HRESULT __stdcall put_Body (
        /*[in]*/ BSTR Body ) = 0;
      virtual HRESULT __stdcall get_Categories (
        /*[out,retval]*/ BSTR * Categories ) = 0;
      virtual HRESULT __stdcall put_Categories (
        /*[in]*/ BSTR Categories ) = 0;
      virtual HRESULT __stdcall get_Companies (
        /*[out,retval]*/ BSTR * Companies ) = 0;
      virtual HRESULT __stdcall put_Companies (
        /*[in]*/ BSTR Companies ) = 0;
      virtual HRESULT __stdcall get_ConversationIndex (
        /*[out,retval]*/ BSTR * ConversationIndex ) = 0;
      virtual HRESULT __stdcall get_ConversationTopic (
        /*[out,retval]*/ BSTR * ConversationTopic ) = 0;
      virtual HRESULT __stdcall get_CreationTime (
        /*[out,retval]*/ DATE * CreationTime ) = 0;
      virtual HRESULT __stdcall get_EntryID (
        /*[out,retval]*/ BSTR * EntryID ) = 0;
      virtual HRESULT __stdcall get_FormDescription (
        /*[out,retval]*/ struct FormDescription * * FormDescription ) = 0;
      virtual HRESULT __stdcall get_GetInspector (
        /*[out,retval]*/ struct _Inspector * * GetInspector ) = 0;
      virtual HRESULT __stdcall get_Importance (
        /*[out,retval]*/ enum OlImportance * Importance ) = 0;
      virtual HRESULT __stdcall put_Importance (
        /*[in]*/ enum OlImportance Importance ) = 0;
      virtual HRESULT __stdcall get_LastModificationTime (
        /*[out,retval]*/ DATE * LastModificationTime ) = 0;
      virtual HRESULT __stdcall get_MAPIOBJECT (
        /*[out,retval]*/ IUnknown * * MAPIOBJECT ) = 0;
      virtual HRESULT __stdcall get_MessageClass (
        /*[out,retval]*/ BSTR * MessageClass ) = 0;
      virtual HRESULT __stdcall put_MessageClass (
        /*[in]*/ BSTR MessageClass ) = 0;
      virtual HRESULT __stdcall get_Mileage (
        /*[out,retval]*/ BSTR * Mileage ) = 0;
      virtual HRESULT __stdcall put_Mileage (
        /*[in]*/ BSTR Mileage ) = 0;
      virtual HRESULT __stdcall get_NoAging (
        /*[out,retval]*/ VARIANT_BOOL * NoAging ) = 0;
      virtual HRESULT __stdcall put_NoAging (
        /*[in]*/ VARIANT_BOOL NoAging ) = 0;
      virtual HRESULT __stdcall get_OutlookInternalVersion (
        /*[out,retval]*/ long * OutlookInternalVersion ) = 0;
      virtual HRESULT __stdcall get_OutlookVersion (
        /*[out,retval]*/ BSTR * OutlookVersion ) = 0;
      virtual HRESULT __stdcall get_Saved (
        /*[out,retval]*/ VARIANT_BOOL * Saved ) = 0;
      virtual HRESULT __stdcall get_Sensitivity (
        /*[out,retval]*/ enum OlSensitivity * Sensitivity ) = 0;
      virtual HRESULT __stdcall put_Sensitivity (
        /*[in]*/ enum OlSensitivity Sensitivity ) = 0;
      virtual HRESULT __stdcall get_Size (
        /*[out,retval]*/ long * Size ) = 0;
      virtual HRESULT __stdcall get_Subject (
        /*[out,retval]*/ BSTR * Subject ) = 0;
      virtual HRESULT __stdcall put_Subject (
        /*[in]*/ BSTR Subject ) = 0;
      virtual HRESULT __stdcall get_UnRead (
        /*[out,retval]*/ VARIANT_BOOL * UnRead ) = 0;
      virtual HRESULT __stdcall put_UnRead (
        /*[in]*/ VARIANT_BOOL UnRead ) = 0;
      virtual HRESULT __stdcall get_UserProperties (
        /*[out,retval]*/ struct UserProperties * * UserProperties ) = 0;
      virtual HRESULT __stdcall raw_Close (
        /*[in]*/ enum OlInspectorClose SaveMode ) = 0;
      virtual HRESULT __stdcall raw_Copy (
        /*[out,retval]*/ IDispatch * * Item ) = 0;
      virtual HRESULT __stdcall raw_Delete ( ) = 0;
      virtual HRESULT __stdcall raw_Display (
        /*[in]*/ VARIANT Modal = vtMissing ) = 0;
      virtual HRESULT __stdcall raw_Move (
        /*[in]*/ struct MAPIFolder * DestFldr,
        /*[out,retval]*/ IDispatch * * Item ) = 0;
      virtual HRESULT __stdcall raw_PrintOut ( ) = 0;
      virtual HRESULT __stdcall raw_Save ( ) = 0;
      virtual HRESULT __stdcall raw_SaveAs (
        /*[in]*/ BSTR Path,
        /*[in]*/ VARIANT Type = vtMissing ) = 0;
      virtual HRESULT __stdcall get_HasAttachment (
        /*[out,retval]*/ VARIANT_BOOL * HasAttachment ) = 0;
      virtual HRESULT __stdcall get_RemoteMessageClass (
        /*[out,retval]*/ BSTR * RemoteMessageClass ) = 0;
      virtual HRESULT __stdcall get_TransferSize (
        /*[out,retval]*/ long * TransferSize ) = 0;
      virtual HRESULT __stdcall get_TransferTime (
        /*[out,retval]*/ long * TransferTime ) = 0;
      virtual HRESULT __stdcall get_Links (
        /*[out,retval]*/ struct Links * * Links ) = 0;
      virtual HRESULT __stdcall get_DownloadState (
        /*[out,retval]*/ enum OlDownloadState * DownloadState ) = 0;
      virtual HRESULT __stdcall raw_ShowCategoriesDialog ( ) = 0;
      virtual HRESULT __stdcall get_ItemProperties (
        /*[out,retval]*/ struct ItemProperties * * ItemProperties ) = 0;
      virtual HRESULT __stdcall get_MarkForDownload (
        /*[out,retval]*/ enum OlRemoteStatus * MarkForDownload ) = 0;
      virtual HRESULT __stdcall put_MarkForDownload (
        /*[in]*/ enum OlRemoteStatus MarkForDownload ) = 0;
      virtual HRESULT __stdcall get_IsConflict (
        /*[out,retval]*/ VARIANT_BOOL * IsConflict ) = 0;
      virtual HRESULT __stdcall get_AutoResolvedWinner (
        /*[out,retval]*/ VARIANT_BOOL * AutoResolvedWinner ) = 0;
      virtual HRESULT __stdcall get_Conflicts (
        /*[out,retval]*/ struct Conflicts * * Conflicts ) = 0;
      virtual HRESULT __stdcall get_PropertyAccessor (
        /*[out,retval]*/ struct _PropertyAccessor * * PropertyAccessor ) = 0;
};

struct __declspec(uuid("00063026-0000-0000-c000-000000000046"))
_ReportItem : IDispatch
{
    //
    // Property data
    //

    __declspec(property(get=GetApplication))
    _ApplicationPtr Application;
    __declspec(property(get=GetParent))
    IDispatchPtr Parent;
    __declspec(property(get=GetGetInspector))
    _InspectorPtr GetInspector;
    __declspec(property(get=GetDownloadState))
    enum OlDownloadState DownloadState;
    __declspec(property(get=GetPropertyAccessor))
    _PropertyAccessorPtr PropertyAccessor;
    __declspec(property(get=GetLinks))
    LinksPtr Links;
    __declspec(property(get=GetClass))
    enum OlObjectClass Class;
    __declspec(property(get=GetSession))
    _NameSpacePtr Session;
    __declspec(property(get=GetMAPIOBJECT))
    IUnknownPtr MAPIOBJECT;
    __declspec(property(get=GetMileage,put=PutMileage))
    _bstr_t Mileage;
    __declspec(property(get=GetBillingInformation,put=PutBillingInformation))
    _bstr_t BillingInformation;
    __declspec(property(get=GetMarkForDownload,put=PutMarkForDownload))
    enum OlRemoteStatus MarkForDownload;
    __declspec(property(get=GetImportance,put=PutImportance))
    enum OlImportance Importance;
    __declspec(property(get=GetIsConflict))
    VARIANT_BOOL IsConflict;
    __declspec(property(get=GetCategories,put=PutCategories))
    _bstr_t Categories;
    __declspec(property(get=GetMessageClass,put=PutMessageClass))
    _bstr_t MessageClass;
    __declspec(property(get=GetCompanies,put=PutCompanies))
    _bstr_t Companies;
    __declspec(property(get=GetUnRead,put=PutUnRead))
    VARIANT_BOOL UnRead;
    __declspec(property(get=GetAttachments))
    AttachmentsPtr Attachments;
    __declspec(property(get=GetEntryID))
    _bstr_t EntryID;
    __declspec(property(get=GetActions))
    ActionsPtr Actions;
    __declspec(property(get=GetUserProperties))
    UserPropertiesPtr UserProperties;
    __declspec(property(get=GetFormDescription))
    FormDescriptionPtr FormDescription;
    __declspec(property(get=GetBody,put=PutBody))
    _bstr_t Body;
    __declspec(property(get=GetNoAging,put=PutNoAging))
    VARIANT_BOOL NoAging;
    __declspec(property(get=GetSaved))
    VARIANT_BOOL Saved;
    __declspec(property(get=GetAutoResolvedWinner))
    VARIANT_BOOL AutoResolvedWinner;
    __declspec(property(get=GetConflicts))
    ConflictsPtr Conflicts;
    __declspec(property(get=GetItemProperties))
    ItemPropertiesPtr ItemProperties;
    __declspec(property(get=GetOutlookInternalVersion))
    long OutlookInternalVersion;
    __declspec(property(get=GetConversationTopic))
    _bstr_t ConversationTopic;
    __declspec(property(get=GetSize))
    long Size;
    __declspec(property(get=GetSensitivity,put=PutSensitivity))
    enum OlSensitivity Sensitivity;
    __declspec(property(get=GetSubject,put=PutSubject))
    _bstr_t Subject;
    __declspec(property(get=GetCreationTime))
    DATE CreationTime;
    __declspec(property(get=GetLastModificationTime))
    DATE LastModificationTime;
    __declspec(property(get=GetOutlookVersion))
    _bstr_t OutlookVersion;
    __declspec(property(get=GetConversationIndex))
    _bstr_t ConversationIndex;

    //
    // Wrapper methods for error-handling
    //

    _ApplicationPtr GetApplication ( );
    enum OlObjectClass GetClass ( );
    _NameSpacePtr GetSession ( );
    IDispatchPtr GetParent ( );
    ActionsPtr GetActions ( );
    AttachmentsPtr GetAttachments ( );
    _bstr_t GetBillingInformation ( );
    void PutBillingInformation (
        _bstr_t BillingInformation );
    _bstr_t GetBody ( );
    void PutBody (
        _bstr_t Body );
    _bstr_t GetCategories ( );
    void PutCategories (
        _bstr_t Categories );
    _bstr_t GetCompanies ( );
    void PutCompanies (
        _bstr_t Companies );
    _bstr_t GetConversationIndex ( );
    _bstr_t GetConversationTopic ( );
    DATE GetCreationTime ( );
    _bstr_t GetEntryID ( );
    FormDescriptionPtr GetFormDescription ( );
    _InspectorPtr GetGetInspector ( );
    enum OlImportance GetImportance ( );
    void PutImportance (
        enum OlImportance Importance );
    DATE GetLastModificationTime ( );
    IUnknownPtr GetMAPIOBJECT ( );
    _bstr_t GetMessageClass ( );
    void PutMessageClass (
        _bstr_t MessageClass );
    _bstr_t GetMileage ( );
    void PutMileage (
        _bstr_t Mileage );
    VARIANT_BOOL GetNoAging ( );
    void PutNoAging (
        VARIANT_BOOL NoAging );
    long GetOutlookInternalVersion ( );
    _bstr_t GetOutlookVersion ( );
    VARIANT_BOOL GetSaved ( );
    enum OlSensitivity GetSensitivity ( );
    void PutSensitivity (
        enum OlSensitivity Sensitivity );
    long GetSize ( );
    _bstr_t GetSubject ( );
    void PutSubject (
        _bstr_t Subject );
    VARIANT_BOOL GetUnRead ( );
    void PutUnRead (
        VARIANT_BOOL UnRead );
    UserPropertiesPtr GetUserProperties ( );
    HRESULT Close (
        enum OlInspectorClose SaveMode );
    IDispatchPtr Copy ( );
    HRESULT Delete ( );
    HRESULT Display (
        const _variant_t & Modal = vtMissing );
    IDispatchPtr Move (
        struct MAPIFolder * DestFldr );
    HRESULT PrintOut ( );
    HRESULT Save ( );
    HRESULT SaveAs (
        _bstr_t Path,
        const _variant_t & Type = vtMissing );
    LinksPtr GetLinks ( );
    enum OlDownloadState GetDownloadState ( );
    HRESULT ShowCategoriesDialog ( );
    ItemPropertiesPtr GetItemProperties ( );
    enum OlRemoteStatus GetMarkForDownload ( );
    void PutMarkForDownload (
        enum OlRemoteStatus MarkForDownload );
    VARIANT_BOOL GetIsConflict ( );
    VARIANT_BOOL GetAutoResolvedWinner ( );
    ConflictsPtr GetConflicts ( );
    _PropertyAccessorPtr GetPropertyAccessor ( );

    //
    // Raw methods provided by interface
    //

      virtual HRESULT __stdcall get_Application (
        /*[out,retval]*/ struct _Application * * Application ) = 0;
      virtual HRESULT __stdcall get_Class (
        /*[out,retval]*/ enum OlObjectClass * Class ) = 0;
      virtual HRESULT __stdcall get_Session (
        /*[out,retval]*/ struct _NameSpace * * Session ) = 0;
      virtual HRESULT __stdcall get_Parent (
        /*[out,retval]*/ IDispatch * * Parent ) = 0;
      virtual HRESULT __stdcall get_Actions (
        /*[out,retval]*/ struct Actions * * Actions ) = 0;
      virtual HRESULT __stdcall get_Attachments (
        /*[out,retval]*/ struct Attachments * * Attachments ) = 0;
      virtual HRESULT __stdcall get_BillingInformation (
        /*[out,retval]*/ BSTR * BillingInformation ) = 0;
      virtual HRESULT __stdcall put_BillingInformation (
        /*[in]*/ BSTR BillingInformation ) = 0;
      virtual HRESULT __stdcall get_Body (
        /*[out,retval]*/ BSTR * Body ) = 0;
      virtual HRESULT __stdcall put_Body (
        /*[in]*/ BSTR Body ) = 0;
      virtual HRESULT __stdcall get_Categories (
        /*[out,retval]*/ BSTR * Categories ) = 0;
      virtual HRESULT __stdcall put_Categories (
        /*[in]*/ BSTR Categories ) = 0;
      virtual HRESULT __stdcall get_Companies (
        /*[out,retval]*/ BSTR * Companies ) = 0;
      virtual HRESULT __stdcall put_Companies (
        /*[in]*/ BSTR Companies ) = 0;
      virtual HRESULT __stdcall get_ConversationIndex (
        /*[out,retval]*/ BSTR * ConversationIndex ) = 0;
      virtual HRESULT __stdcall get_ConversationTopic (
        /*[out,retval]*/ BSTR * ConversationTopic ) = 0;
      virtual HRESULT __stdcall get_CreationTime (
        /*[out,retval]*/ DATE * CreationTime ) = 0;
      virtual HRESULT __stdcall get_EntryID (
        /*[out,retval]*/ BSTR * EntryID ) = 0;
      virtual HRESULT __stdcall get_FormDescription (
        /*[out,retval]*/ struct FormDescription * * FormDescription ) = 0;
      virtual HRESULT __stdcall get_GetInspector (
        /*[out,retval]*/ struct _Inspector * * GetInspector ) = 0;
      virtual HRESULT __stdcall get_Importance (
        /*[out,retval]*/ enum OlImportance * Importance ) = 0;
      virtual HRESULT __stdcall put_Importance (
        /*[in]*/ enum OlImportance Importance ) = 0;
      virtual HRESULT __stdcall get_LastModificationTime (
        /*[out,retval]*/ DATE * LastModificationTime ) = 0;
      virtual HRESULT __stdcall get_MAPIOBJECT (
        /*[out,retval]*/ IUnknown * * MAPIOBJECT ) = 0;
      virtual HRESULT __stdcall get_MessageClass (
        /*[out,retval]*/ BSTR * MessageClass ) = 0;
      virtual HRESULT __stdcall put_MessageClass (
        /*[in]*/ BSTR MessageClass ) = 0;
      virtual HRESULT __stdcall get_Mileage (
        /*[out,retval]*/ BSTR * Mileage ) = 0;
      virtual HRESULT __stdcall put_Mileage (
        /*[in]*/ BSTR Mileage ) = 0;
      virtual HRESULT __stdcall get_NoAging (
        /*[out,retval]*/ VARIANT_BOOL * NoAging ) = 0;
      virtual HRESULT __stdcall put_NoAging (
        /*[in]*/ VARIANT_BOOL NoAging ) = 0;
      virtual HRESULT __stdcall get_OutlookInternalVersion (
        /*[out,retval]*/ long * OutlookInternalVersion ) = 0;
      virtual HRESULT __stdcall get_OutlookVersion (
        /*[out,retval]*/ BSTR * OutlookVersion ) = 0;
      virtual HRESULT __stdcall get_Saved (
        /*[out,retval]*/ VARIANT_BOOL * Saved ) = 0;
      virtual HRESULT __stdcall get_Sensitivity (
        /*[out,retval]*/ enum OlSensitivity * Sensitivity ) = 0;
      virtual HRESULT __stdcall put_Sensitivity (
        /*[in]*/ enum OlSensitivity Sensitivity ) = 0;
      virtual HRESULT __stdcall get_Size (
        /*[out,retval]*/ long * Size ) = 0;
      virtual HRESULT __stdcall get_Subject (
        /*[out,retval]*/ BSTR * Subject ) = 0;
      virtual HRESULT __stdcall put_Subject (
        /*[in]*/ BSTR Subject ) = 0;
      virtual HRESULT __stdcall get_UnRead (
        /*[out,retval]*/ VARIANT_BOOL * UnRead ) = 0;
      virtual HRESULT __stdcall put_UnRead (
        /*[in]*/ VARIANT_BOOL UnRead ) = 0;
      virtual HRESULT __stdcall get_UserProperties (
        /*[out,retval]*/ struct UserProperties * * UserProperties ) = 0;
      virtual HRESULT __stdcall raw_Close (
        /*[in]*/ enum OlInspectorClose SaveMode ) = 0;
      virtual HRESULT __stdcall raw_Copy (
        /*[out,retval]*/ IDispatch * * Item ) = 0;
      virtual HRESULT __stdcall raw_Delete ( ) = 0;
      virtual HRESULT __stdcall raw_Display (
        /*[in]*/ VARIANT Modal = vtMissing ) = 0;
      virtual HRESULT __stdcall raw_Move (
        /*[in]*/ struct MAPIFolder * DestFldr,
        /*[out,retval]*/ IDispatch * * Item ) = 0;
      virtual HRESULT __stdcall raw_PrintOut ( ) = 0;
      virtual HRESULT __stdcall raw_Save ( ) = 0;
      virtual HRESULT __stdcall raw_SaveAs (
        /*[in]*/ BSTR Path,
        /*[in]*/ VARIANT Type = vtMissing ) = 0;
      virtual HRESULT __stdcall get_Links (
        /*[out,retval]*/ struct Links * * Links ) = 0;
      virtual HRESULT __stdcall get_DownloadState (
        /*[out,retval]*/ enum OlDownloadState * DownloadState ) = 0;
      virtual HRESULT __stdcall raw_ShowCategoriesDialog ( ) = 0;
      virtual HRESULT __stdcall get_ItemProperties (
        /*[out,retval]*/ struct ItemProperties * * ItemProperties ) = 0;
      virtual HRESULT __stdcall get_MarkForDownload (
        /*[out,retval]*/ enum OlRemoteStatus * MarkForDownload ) = 0;
      virtual HRESULT __stdcall put_MarkForDownload (
        /*[in]*/ enum OlRemoteStatus MarkForDownload ) = 0;
      virtual HRESULT __stdcall get_IsConflict (
        /*[out,retval]*/ VARIANT_BOOL * IsConflict ) = 0;
      virtual HRESULT __stdcall get_AutoResolvedWinner (
        /*[out,retval]*/ VARIANT_BOOL * AutoResolvedWinner ) = 0;
      virtual HRESULT __stdcall get_Conflicts (
        /*[out,retval]*/ struct Conflicts * * Conflicts ) = 0;
      virtual HRESULT __stdcall get_PropertyAccessor (
        /*[out,retval]*/ struct _PropertyAccessor * * PropertyAccessor ) = 0;
};

struct __declspec(uuid("00063035-0000-0000-c000-000000000046"))
_TaskItem : IDispatch
{
    //
    // Property data
    //

    __declspec(property(get=GetMileage,put=PutMileage))
    _bstr_t Mileage;
    __declspec(property(get=GetBillingInformation,put=PutBillingInformation))
    _bstr_t BillingInformation;
    __declspec(property(get=GetConversationTopic))
    _bstr_t ConversationTopic;
    __declspec(property(get=GetSaved))
    VARIANT_BOOL Saved;
    __declspec(property(get=GetContacts,put=PutContacts))
    _bstr_t Contacts;
    __declspec(property(get=GetCompanies,put=PutCompanies))
    _bstr_t Companies;
    __declspec(property(get=GetContactNames,put=PutContactNames))
    _bstr_t ContactNames;
    __declspec(property(get=GetGetInspector))
    _InspectorPtr GetInspector;
    __declspec(property(get=GetPropertyAccessor))
    _PropertyAccessorPtr PropertyAccessor;
    __declspec(property(get=GetCategories,put=PutCategories))
    _bstr_t Categories;
    __declspec(property(get=GetImportance,put=PutImportance))
    enum OlImportance Importance;
    __declspec(property(get=GetStatus,put=PutStatus))
    enum OlTaskStatus Status;
    __declspec(property(get=GetMessageClass,put=PutMessageClass))
    _bstr_t MessageClass;
    __declspec(property(get=GetTeamTask,put=PutTeamTask))
    VARIANT_BOOL TeamTask;
    __declspec(property(get=GetStartDate,put=PutStartDate))
    DATE StartDate;
    __declspec(property(get=GetDueDate,put=PutDueDate))
    DATE DueDate;
    __declspec(property(get=GetOutlookInternalVersion))
    long OutlookInternalVersion;
    __declspec(property(get=GetOutlookVersion))
    _bstr_t OutlookVersion;
    __declspec(property(get=GetIsConflict))
    VARIANT_BOOL IsConflict;
    __declspec(property(get=GetRecipients))
    RecipientsPtr Recipients;
    __declspec(property(get=GetAttachments))
    AttachmentsPtr Attachments;
    __declspec(property(get=GetUserProperties))
    UserPropertiesPtr UserProperties;
    __declspec(property(get=GetActions))
    ActionsPtr Actions;
    __declspec(property(get=GetDateCompleted,put=PutDateCompleted))
    DATE DateCompleted;
    __declspec(property(get=GetActualWork,put=PutActualWork))
    long ActualWork;
    __declspec(property(get=GetTotalWork,put=PutTotalWork))
    long TotalWork;
    __declspec(property(get=GetBody,put=PutBody))
    _bstr_t Body;
    __declspec(property(get=GetComplete,put=PutComplete))
    VARIANT_BOOL Complete;
    __declspec(property(get=GetSensitivity,put=PutSensitivity))
    enum OlSensitivity Sensitivity;
    __declspec(property(get=GetOwner,put=PutOwner))
    _bstr_t Owner;
    __declspec(property(get=GetSubject,put=PutSubject))
    _bstr_t Subject;
    __declspec(property(get=GetDelegator))
    _bstr_t Delegator;
    __declspec(property(get=GetDownloadState))
    enum OlDownloadState DownloadState;
    __declspec(property(get=GetOrdinal,put=PutOrdinal))
    long Ordinal;
    __declspec(property(get=GetApplication))
    _ApplicationPtr Application;
    __declspec(property(get=GetParent))
    IDispatchPtr Parent;
    __declspec(property(get=GetReminderTime,put=PutReminderTime))
    DATE ReminderTime;
    __declspec(property(get=GetRole,put=PutRole))
    _bstr_t Role;
    __declspec(property(get=GetReminderSet,put=PutReminderSet))
    VARIANT_BOOL ReminderSet;
    __declspec(property(get=GetOwnership))
    enum OlTaskOwnership Ownership;
    __declspec(property(get=GetDelegationState))
    enum OlTaskDelegationState DelegationState;
    __declspec(property(get=GetCardData,put=PutCardData))
    _bstr_t CardData;
    __declspec(property(get=GetConversationIndex))
    _bstr_t ConversationIndex;
    __declspec(property(get=GetStatusOnCompletionRecipients,put=PutStatusOnCompletionRecipients))
    _bstr_t StatusOnCompletionRecipients;
    __declspec(property(get=GetClass))
    enum OlObjectClass Class;
    __declspec(property(get=GetSession))
    _NameSpacePtr Session;
    __declspec(property(get=GetNoAging,put=PutNoAging))
    VARIANT_BOOL NoAging;
    __declspec(property(get=GetSchedulePlusPriority,put=PutSchedulePlusPriority))
    _bstr_t SchedulePlusPriority;
    __declspec(property(get=GetSize))
    long Size;
    __declspec(property(get=GetStatusUpdateRecipients,put=PutStatusUpdateRecipients))
    _bstr_t StatusUpdateRecipients;
    __declspec(property(get=GetInternetCodepage,put=PutInternetCodepage))
    long InternetCodepage;
    __declspec(property(get=GetMarkForDownload,put=PutMarkForDownload))
    enum OlRemoteStatus MarkForDownload;
    __declspec(property(get=GetAutoResolvedWinner))
    VARIANT_BOOL AutoResolvedWinner;
    __declspec(property(get=GetIsRecurring))
    VARIANT_BOOL IsRecurring;
    __declspec(property(get=GetConflicts))
    ConflictsPtr Conflicts;
    __declspec(property(get=GetSendUsingAccount,put=PutSendUsingAccount))
    _AccountPtr SendUsingAccount;
    __declspec(property(get=GetCreationTime))
    DATE CreationTime;
    __declspec(property(get=GetReminderOverrideDefault,put=PutReminderOverrideDefault))
    VARIANT_BOOL ReminderOverrideDefault;
    __declspec(property(get=GetPercentComplete,put=PutPercentComplete))
    long PercentComplete;
    __declspec(property(get=GetReminderPlaySound,put=PutReminderPlaySound))
    VARIANT_BOOL ReminderPlaySound;
    __declspec(property(get=GetReminderSoundFile,put=PutReminderSoundFile))
    _bstr_t ReminderSoundFile;
    __declspec(property(get=GetUnRead,put=PutUnRead))
    VARIANT_BOOL UnRead;
    __declspec(property(get=GetResponseState))
    enum OlTaskResponse ResponseState;
    __declspec(property(get=GetEntryID))
    _bstr_t EntryID;
    __declspec(property(get=GetLastModificationTime))
    DATE LastModificationTime;
    __declspec(property(get=GetMAPIOBJECT))
    IUnknownPtr MAPIOBJECT;
    __declspec(property(get=GetFormDescription))
    FormDescriptionPtr FormDescription;
    __declspec(property(get=GetLinks))
    LinksPtr Links;
    __declspec(property(get=GetItemProperties))
    ItemPropertiesPtr ItemProperties;
    __declspec(property(get=GetToDoTaskOrdinal,put=PutToDoTaskOrdinal))
    DATE ToDoTaskOrdinal;

    //
    // Wrapper methods for error-handling
    //

    _ApplicationPtr GetApplication ( );
    enum OlObjectClass GetClass ( );
    _NameSpacePtr GetSession ( );
    IDispatchPtr GetParent ( );
    ActionsPtr GetActions ( );
    AttachmentsPtr GetAttachments ( );
    _bstr_t GetBillingInformation ( );
    void PutBillingInformation (
        _bstr_t BillingInformation );
    _bstr_t GetBody ( );
    void PutBody (
        _bstr_t Body );
    _bstr_t GetCategories ( );
    void PutCategories (
        _bstr_t Categories );
    _bstr_t GetCompanies ( );
    void PutCompanies (
        _bstr_t Companies );
    _bstr_t GetConversationIndex ( );
    _bstr_t GetConversationTopic ( );
    DATE GetCreationTime ( );
    _bstr_t GetEntryID ( );
    FormDescriptionPtr GetFormDescription ( );
    _InspectorPtr GetGetInspector ( );
    enum OlImportance GetImportance ( );
    void PutImportance (
        enum OlImportance Importance );
    DATE GetLastModificationTime ( );
    IUnknownPtr GetMAPIOBJECT ( );
    _bstr_t GetMessageClass ( );
    void PutMessageClass (
        _bstr_t MessageClass );
    _bstr_t GetMileage ( );
    void PutMileage (
        _bstr_t Mileage );
    VARIANT_BOOL GetNoAging ( );
    void PutNoAging (
        VARIANT_BOOL NoAging );
    long GetOutlookInternalVersion ( );
    _bstr_t GetOutlookVersion ( );
    VARIANT_BOOL GetSaved ( );
    enum OlSensitivity GetSensitivity ( );
    void PutSensitivity (
        enum OlSensitivity Sensitivity );
    long GetSize ( );
    _bstr_t GetSubject ( );
    void PutSubject (
        _bstr_t Subject );
    VARIANT_BOOL GetUnRead ( );
    void PutUnRead (
        VARIANT_BOOL UnRead );
    UserPropertiesPtr GetUserProperties ( );
    HRESULT Close (
        enum OlInspectorClose SaveMode );
    IDispatchPtr Copy ( );
    HRESULT Delete ( );
    HRESULT Display (
        const _variant_t & Modal = vtMissing );
    IDispatchPtr Move (
        struct MAPIFolder * DestFldr );
    HRESULT PrintOut ( );
    HRESULT Save ( );
    HRESULT SaveAs (
        _bstr_t Path,
        const _variant_t & Type = vtMissing );
    long GetActualWork ( );
    void PutActualWork (
        long ActualWork );
    _bstr_t GetCardData ( );
    void PutCardData (
        _bstr_t CardData );
    VARIANT_BOOL GetComplete ( );
    void PutComplete (
        VARIANT_BOOL Complete );
    _bstr_t GetContacts ( );
    void PutContacts (
        _bstr_t Contacts );
    _bstr_t GetContactNames ( );
    void PutContactNames (
        _bstr_t ContactNames );
    DATE GetDateCompleted ( );
    void PutDateCompleted (
        DATE DateCompleted );
    enum OlTaskDelegationState GetDelegationState ( );
    _bstr_t GetDelegator ( );
    DATE GetDueDate ( );
    void PutDueDate (
        DATE DueDate );
    VARIANT_BOOL GetIsRecurring ( );
    long GetOrdinal ( );
    void PutOrdinal (
        long Ordinal );
    _bstr_t GetOwner ( );
    void PutOwner (
        _bstr_t Owner );
    enum OlTaskOwnership GetOwnership ( );
    long GetPercentComplete ( );
    void PutPercentComplete (
        long PercentComplete );
    RecipientsPtr GetRecipients ( );
    DATE GetReminderTime ( );
    void PutReminderTime (
        DATE ReminderTime );
    VARIANT_BOOL GetReminderOverrideDefault ( );
    void PutReminderOverrideDefault (
        VARIANT_BOOL ReminderOverrideDefault );
    VARIANT_BOOL GetReminderPlaySound ( );
    void PutReminderPlaySound (
        VARIANT_BOOL ReminderPlaySound );
    VARIANT_BOOL GetReminderSet ( );
    void PutReminderSet (
        VARIANT_BOOL ReminderSet );
    _bstr_t GetReminderSoundFile ( );
    void PutReminderSoundFile (
        _bstr_t ReminderSoundFile );
    enum OlTaskResponse GetResponseState ( );
    _bstr_t GetRole ( );
    void PutRole (
        _bstr_t Role );
    _bstr_t GetSchedulePlusPriority ( );
    void PutSchedulePlusPriority (
        _bstr_t SchedulePlusPriority );
    DATE GetStartDate ( );
    void PutStartDate (
        DATE StartDate );
    enum OlTaskStatus GetStatus ( );
    void PutStatus (
        enum OlTaskStatus Status );
    _bstr_t GetStatusOnCompletionRecipients ( );
    void PutStatusOnCompletionRecipients (
        _bstr_t StatusOnCompletionRecipients );
    _bstr_t GetStatusUpdateRecipients ( );
    void PutStatusUpdateRecipients (
        _bstr_t StatusUpdateRecipients );
    VARIANT_BOOL GetTeamTask ( );
    void PutTeamTask (
        VARIANT_BOOL TeamTask );
    long GetTotalWork ( );
    void PutTotalWork (
        long TotalWork );
    _TaskItemPtr Assign ( );
    HRESULT CancelResponseState ( );
    HRESULT ClearRecurrencePattern ( );
    RecurrencePatternPtr GetRecurrencePattern ( );
    HRESULT MarkComplete ( );
    _TaskItemPtr Respond (
        enum OlTaskResponse Response,
        const _variant_t & fNoUI,
        const _variant_t & fAdditionalTextDialog );
    HRESULT Send ( );
    VARIANT_BOOL SkipRecurrence ( );
    IDispatchPtr StatusReport ( );
    LinksPtr GetLinks ( );
    enum OlDownloadState GetDownloadState ( );
    HRESULT ShowCategoriesDialog ( );
    ItemPropertiesPtr GetItemProperties ( );
    long GetInternetCodepage ( );
    void PutInternetCodepage (
        long InternetCodepage );
    enum OlRemoteStatus GetMarkForDownload ( );
    void PutMarkForDownload (
        enum OlRemoteStatus MarkForDownload );
    VARIANT_BOOL GetIsConflict ( );
    VARIANT_BOOL GetAutoResolvedWinner ( );
    ConflictsPtr GetConflicts ( );
    _PropertyAccessorPtr GetPropertyAccessor ( );
    _AccountPtr GetSendUsingAccount ( );
    void PutSendUsingAccount (
        struct _Account * SendUsingAccount );
    DATE GetToDoTaskOrdinal ( );
    void PutToDoTaskOrdinal (
        DATE ToDoTaskOrdinal );

    //
    // Raw methods provided by interface
    //

      virtual HRESULT __stdcall get_Application (
        /*[out,retval]*/ struct _Application * * Application ) = 0;
      virtual HRESULT __stdcall get_Class (
        /*[out,retval]*/ enum OlObjectClass * Class ) = 0;
      virtual HRESULT __stdcall get_Session (
        /*[out,retval]*/ struct _NameSpace * * Session ) = 0;
      virtual HRESULT __stdcall get_Parent (
        /*[out,retval]*/ IDispatch * * Parent ) = 0;
      virtual HRESULT __stdcall get_Actions (
        /*[out,retval]*/ struct Actions * * Actions ) = 0;
      virtual HRESULT __stdcall get_Attachments (
        /*[out,retval]*/ struct Attachments * * Attachments ) = 0;
      virtual HRESULT __stdcall get_BillingInformation (
        /*[out,retval]*/ BSTR * BillingInformation ) = 0;
      virtual HRESULT __stdcall put_BillingInformation (
        /*[in]*/ BSTR BillingInformation ) = 0;
      virtual HRESULT __stdcall get_Body (
        /*[out,retval]*/ BSTR * Body ) = 0;
      virtual HRESULT __stdcall put_Body (
        /*[in]*/ BSTR Body ) = 0;
      virtual HRESULT __stdcall get_Categories (
        /*[out,retval]*/ BSTR * Categories ) = 0;
      virtual HRESULT __stdcall put_Categories (
        /*[in]*/ BSTR Categories ) = 0;
      virtual HRESULT __stdcall get_Companies (
        /*[out,retval]*/ BSTR * Companies ) = 0;
      virtual HRESULT __stdcall put_Companies (
        /*[in]*/ BSTR Companies ) = 0;
      virtual HRESULT __stdcall get_ConversationIndex (
        /*[out,retval]*/ BSTR * ConversationIndex ) = 0;
      virtual HRESULT __stdcall get_ConversationTopic (
        /*[out,retval]*/ BSTR * ConversationTopic ) = 0;
      virtual HRESULT __stdcall get_CreationTime (
        /*[out,retval]*/ DATE * CreationTime ) = 0;
      virtual HRESULT __stdcall get_EntryID (
        /*[out,retval]*/ BSTR * EntryID ) = 0;
      virtual HRESULT __stdcall get_FormDescription (
        /*[out,retval]*/ struct FormDescription * * FormDescription ) = 0;
      virtual HRESULT __stdcall get_GetInspector (
        /*[out,retval]*/ struct _Inspector * * GetInspector ) = 0;
      virtual HRESULT __stdcall get_Importance (
        /*[out,retval]*/ enum OlImportance * Importance ) = 0;
      virtual HRESULT __stdcall put_Importance (
        /*[in]*/ enum OlImportance Importance ) = 0;
      virtual HRESULT __stdcall get_LastModificationTime (
        /*[out,retval]*/ DATE * LastModificationTime ) = 0;
      virtual HRESULT __stdcall get_MAPIOBJECT (
        /*[out,retval]*/ IUnknown * * MAPIOBJECT ) = 0;
      virtual HRESULT __stdcall get_MessageClass (
        /*[out,retval]*/ BSTR * MessageClass ) = 0;
      virtual HRESULT __stdcall put_MessageClass (
        /*[in]*/ BSTR MessageClass ) = 0;
      virtual HRESULT __stdcall get_Mileage (
        /*[out,retval]*/ BSTR * Mileage ) = 0;
      virtual HRESULT __stdcall put_Mileage (
        /*[in]*/ BSTR Mileage ) = 0;
      virtual HRESULT __stdcall get_NoAging (
        /*[out,retval]*/ VARIANT_BOOL * NoAging ) = 0;
      virtual HRESULT __stdcall put_NoAging (
        /*[in]*/ VARIANT_BOOL NoAging ) = 0;
      virtual HRESULT __stdcall get_OutlookInternalVersion (
        /*[out,retval]*/ long * OutlookInternalVersion ) = 0;
      virtual HRESULT __stdcall get_OutlookVersion (
        /*[out,retval]*/ BSTR * OutlookVersion ) = 0;
      virtual HRESULT __stdcall get_Saved (
        /*[out,retval]*/ VARIANT_BOOL * Saved ) = 0;
      virtual HRESULT __stdcall get_Sensitivity (
        /*[out,retval]*/ enum OlSensitivity * Sensitivity ) = 0;
      virtual HRESULT __stdcall put_Sensitivity (
        /*[in]*/ enum OlSensitivity Sensitivity ) = 0;
      virtual HRESULT __stdcall get_Size (
        /*[out,retval]*/ long * Size ) = 0;
      virtual HRESULT __stdcall get_Subject (
        /*[out,retval]*/ BSTR * Subject ) = 0;
      virtual HRESULT __stdcall put_Subject (
        /*[in]*/ BSTR Subject ) = 0;
      virtual HRESULT __stdcall get_UnRead (
        /*[out,retval]*/ VARIANT_BOOL * UnRead ) = 0;
      virtual HRESULT __stdcall put_UnRead (
        /*[in]*/ VARIANT_BOOL UnRead ) = 0;
      virtual HRESULT __stdcall get_UserProperties (
        /*[out,retval]*/ struct UserProperties * * UserProperties ) = 0;
      virtual HRESULT __stdcall raw_Close (
        /*[in]*/ enum OlInspectorClose SaveMode ) = 0;
      virtual HRESULT __stdcall raw_Copy (
        /*[out,retval]*/ IDispatch * * Item ) = 0;
      virtual HRESULT __stdcall raw_Delete ( ) = 0;
      virtual HRESULT __stdcall raw_Display (
        /*[in]*/ VARIANT Modal = vtMissing ) = 0;
      virtual HRESULT __stdcall raw_Move (
        /*[in]*/ struct MAPIFolder * DestFldr,
        /*[out,retval]*/ IDispatch * * Item ) = 0;
      virtual HRESULT __stdcall raw_PrintOut ( ) = 0;
      virtual HRESULT __stdcall raw_Save ( ) = 0;
      virtual HRESULT __stdcall raw_SaveAs (
        /*[in]*/ BSTR Path,
        /*[in]*/ VARIANT Type = vtMissing ) = 0;
      virtual HRESULT __stdcall get_ActualWork (
        /*[out,retval]*/ long * ActualWork ) = 0;
      virtual HRESULT __stdcall put_ActualWork (
        /*[in]*/ long ActualWork ) = 0;
      virtual HRESULT __stdcall get_CardData (
        /*[out,retval]*/ BSTR * CardData ) = 0;
      virtual HRESULT __stdcall put_CardData (
        /*[in]*/ BSTR CardData ) = 0;
      virtual HRESULT __stdcall get_Complete (
        /*[out,retval]*/ VARIANT_BOOL * Complete ) = 0;
      virtual HRESULT __stdcall put_Complete (
        /*[in]*/ VARIANT_BOOL Complete ) = 0;
      virtual HRESULT __stdcall get_Contacts (
        /*[out,retval]*/ BSTR * Contacts ) = 0;
      virtual HRESULT __stdcall put_Contacts (
        /*[in]*/ BSTR Contacts ) = 0;
      virtual HRESULT __stdcall get_ContactNames (
        /*[out,retval]*/ BSTR * ContactNames ) = 0;
      virtual HRESULT __stdcall put_ContactNames (
        /*[in]*/ BSTR ContactNames ) = 0;
      virtual HRESULT __stdcall get_DateCompleted (
        /*[out,retval]*/ DATE * DateCompleted ) = 0;
      virtual HRESULT __stdcall put_DateCompleted (
        /*[in]*/ DATE DateCompleted ) = 0;
      virtual HRESULT __stdcall get_DelegationState (
        /*[out,retval]*/ enum OlTaskDelegationState * DelegationState ) = 0;
      virtual HRESULT __stdcall get_Delegator (
        /*[out,retval]*/ BSTR * Delegator ) = 0;
      virtual HRESULT __stdcall get_DueDate (
        /*[out,retval]*/ DATE * DueDate ) = 0;
      virtual HRESULT __stdcall put_DueDate (
        /*[in]*/ DATE DueDate ) = 0;
      virtual HRESULT __stdcall get_IsRecurring (
        /*[out,retval]*/ VARIANT_BOOL * IsRecurring ) = 0;
      virtual HRESULT __stdcall get_Ordinal (
        /*[out,retval]*/ long * Ordinal ) = 0;
      virtual HRESULT __stdcall put_Ordinal (
        /*[in]*/ long Ordinal ) = 0;
      virtual HRESULT __stdcall get_Owner (
        /*[out,retval]*/ BSTR * Owner ) = 0;
      virtual HRESULT __stdcall put_Owner (
        /*[in]*/ BSTR Owner ) = 0;
      virtual HRESULT __stdcall get_Ownership (
        /*[out,retval]*/ enum OlTaskOwnership * Ownership ) = 0;
      virtual HRESULT __stdcall get_PercentComplete (
        /*[out,retval]*/ long * PercentComplete ) = 0;
      virtual HRESULT __stdcall put_PercentComplete (
        /*[in]*/ long PercentComplete ) = 0;
      virtual HRESULT __stdcall get_Recipients (
        /*[out,retval]*/ struct Recipients * * Recipients ) = 0;
      virtual HRESULT __stdcall get_ReminderTime (
        /*[out,retval]*/ DATE * ReminderTime ) = 0;
      virtual HRESULT __stdcall put_ReminderTime (
        /*[in]*/ DATE ReminderTime ) = 0;
      virtual HRESULT __stdcall get_ReminderOverrideDefault (
        /*[out,retval]*/ VARIANT_BOOL * ReminderOverrideDefault ) = 0;
      virtual HRESULT __stdcall put_ReminderOverrideDefault (
        /*[in]*/ VARIANT_BOOL ReminderOverrideDefault ) = 0;
      virtual HRESULT __stdcall get_ReminderPlaySound (
        /*[out,retval]*/ VARIANT_BOOL * ReminderPlaySound ) = 0;
      virtual HRESULT __stdcall put_ReminderPlaySound (
        /*[in]*/ VARIANT_BOOL ReminderPlaySound ) = 0;
      virtual HRESULT __stdcall get_ReminderSet (
        /*[out,retval]*/ VARIANT_BOOL * ReminderSet ) = 0;
      virtual HRESULT __stdcall put_ReminderSet (
        /*[in]*/ VARIANT_BOOL ReminderSet ) = 0;
      virtual HRESULT __stdcall get_ReminderSoundFile (
        /*[out,retval]*/ BSTR * ReminderSoundFile ) = 0;
      virtual HRESULT __stdcall put_ReminderSoundFile (
        /*[in]*/ BSTR ReminderSoundFile ) = 0;
      virtual HRESULT __stdcall get_ResponseState (
        /*[out,retval]*/ enum OlTaskResponse * ResponseState ) = 0;
      virtual HRESULT __stdcall get_Role (
        /*[out,retval]*/ BSTR * Role ) = 0;
      virtual HRESULT __stdcall put_Role (
        /*[in]*/ BSTR Role ) = 0;
      virtual HRESULT __stdcall get_SchedulePlusPriority (
        /*[out,retval]*/ BSTR * SchedulePlusPriority ) = 0;
      virtual HRESULT __stdcall put_SchedulePlusPriority (
        /*[in]*/ BSTR SchedulePlusPriority ) = 0;
      virtual HRESULT __stdcall get_StartDate (
        /*[out,retval]*/ DATE * StartDate ) = 0;
      virtual HRESULT __stdcall put_StartDate (
        /*[in]*/ DATE StartDate ) = 0;
      virtual HRESULT __stdcall get_Status (
        /*[out,retval]*/ enum OlTaskStatus * Status ) = 0;
      virtual HRESULT __stdcall put_Status (
        /*[in]*/ enum OlTaskStatus Status ) = 0;
      virtual HRESULT __stdcall get_StatusOnCompletionRecipients (
        /*[out,retval]*/ BSTR * StatusOnCompletionRecipients ) = 0;
      virtual HRESULT __stdcall put_StatusOnCompletionRecipients (
        /*[in]*/ BSTR StatusOnCompletionRecipients ) = 0;
      virtual HRESULT __stdcall get_StatusUpdateRecipients (
        /*[out,retval]*/ BSTR * StatusUpdateRecipients ) = 0;
      virtual HRESULT __stdcall put_StatusUpdateRecipients (
        /*[in]*/ BSTR StatusUpdateRecipients ) = 0;
      virtual HRESULT __stdcall get_TeamTask (
        /*[out,retval]*/ VARIANT_BOOL * TeamTask ) = 0;
      virtual HRESULT __stdcall put_TeamTask (
        /*[in]*/ VARIANT_BOOL TeamTask ) = 0;
      virtual HRESULT __stdcall get_TotalWork (
        /*[out,retval]*/ long * TotalWork ) = 0;
      virtual HRESULT __stdcall put_TotalWork (
        /*[in]*/ long TotalWork ) = 0;
      virtual HRESULT __stdcall raw_Assign (
        /*[out,retval]*/ struct _TaskItem * * Item ) = 0;
      virtual HRESULT __stdcall raw_CancelResponseState ( ) = 0;
      virtual HRESULT __stdcall raw_ClearRecurrencePattern ( ) = 0;
      virtual HRESULT __stdcall raw_GetRecurrencePattern (
        /*[out,retval]*/ struct RecurrencePattern * * RecurrencPattern ) = 0;
      virtual HRESULT __stdcall raw_MarkComplete ( ) = 0;
      virtual HRESULT __stdcall raw_Respond (
        /*[in]*/ enum OlTaskResponse Response,
        /*[in]*/ VARIANT fNoUI,
        /*[in]*/ VARIANT fAdditionalTextDialog,
        /*[out,retval]*/ struct _TaskItem * * Item ) = 0;
      virtual HRESULT __stdcall raw_Send ( ) = 0;
      virtual HRESULT __stdcall raw_SkipRecurrence (
        /*[out,retval]*/ VARIANT_BOOL * flg ) = 0;
      virtual HRESULT __stdcall raw_StatusReport (
        /*[out,retval]*/ IDispatch * * StatusReport ) = 0;
      virtual HRESULT __stdcall get_Links (
        /*[out,retval]*/ struct Links * * Links ) = 0;
      virtual HRESULT __stdcall get_DownloadState (
        /*[out,retval]*/ enum OlDownloadState * DownloadState ) = 0;
      virtual HRESULT __stdcall raw_ShowCategoriesDialog ( ) = 0;
      virtual HRESULT __stdcall get_ItemProperties (
        /*[out,retval]*/ struct ItemProperties * * ItemProperties ) = 0;
      virtual HRESULT __stdcall get_InternetCodepage (
        /*[out,retval]*/ long * InternetCodepage ) = 0;
      virtual HRESULT __stdcall put_InternetCodepage (
        /*[in]*/ long InternetCodepage ) = 0;
      virtual HRESULT __stdcall get_MarkForDownload (
        /*[out,retval]*/ enum OlRemoteStatus * MarkForDownload ) = 0;
      virtual HRESULT __stdcall put_MarkForDownload (
        /*[in]*/ enum OlRemoteStatus MarkForDownload ) = 0;
      virtual HRESULT __stdcall get_IsConflict (
        /*[out,retval]*/ VARIANT_BOOL * IsConflict ) = 0;
      virtual HRESULT __stdcall get_AutoResolvedWinner (
        /*[out,retval]*/ VARIANT_BOOL * AutoResolvedWinner ) = 0;
      virtual HRESULT __stdcall get_Conflicts (
        /*[out,retval]*/ struct Conflicts * * Conflicts ) = 0;
      virtual HRESULT __stdcall get_PropertyAccessor (
        /*[out,retval]*/ struct _PropertyAccessor * * PropertyAccessor ) = 0;
      virtual HRESULT __stdcall get_SendUsingAccount (
        /*[out,retval]*/ struct _Account * * SendUsingAccount ) = 0;
      virtual HRESULT __stdcall put_SendUsingAccount (
        /*[in]*/ struct _Account * SendUsingAccount ) = 0;
      virtual HRESULT __stdcall get_ToDoTaskOrdinal (
        /*[out,retval]*/ DATE * ToDoTaskOrdinal ) = 0;
      virtual HRESULT __stdcall put_ToDoTaskOrdinal (
        /*[in]*/ DATE ToDoTaskOrdinal ) = 0;
};

struct __declspec(uuid("00063038-0000-0000-c000-000000000046"))
_TaskRequestAcceptItem : IDispatch
{
    //
    // Property data
    //

    __declspec(property(get=GetApplication))
    _ApplicationPtr Application;
    __declspec(property(get=GetParent))
    IDispatchPtr Parent;
    __declspec(property(get=GetGetInspector))
    _InspectorPtr GetInspector;
    __declspec(property(get=GetDownloadState))
    enum OlDownloadState DownloadState;
    __declspec(property(get=GetPropertyAccessor))
    _PropertyAccessorPtr PropertyAccessor;
    __declspec(property(get=GetLinks))
    LinksPtr Links;
    __declspec(property(get=GetClass))
    enum OlObjectClass Class;
    __declspec(property(get=GetSession))
    _NameSpacePtr Session;
    __declspec(property(get=GetMAPIOBJECT))
    IUnknownPtr MAPIOBJECT;
    __declspec(property(get=GetMileage,put=PutMileage))
    _bstr_t Mileage;
    __declspec(property(get=GetBillingInformation,put=PutBillingInformation))
    _bstr_t BillingInformation;
    __declspec(property(get=GetMarkForDownload,put=PutMarkForDownload))
    enum OlRemoteStatus MarkForDownload;
    __declspec(property(get=GetImportance,put=PutImportance))
    enum OlImportance Importance;
    __declspec(property(get=GetIsConflict))
    VARIANT_BOOL IsConflict;
    __declspec(property(get=GetCategories,put=PutCategories))
    _bstr_t Categories;
    __declspec(property(get=GetMessageClass,put=PutMessageClass))
    _bstr_t MessageClass;
    __declspec(property(get=GetCompanies,put=PutCompanies))
    _bstr_t Companies;
    __declspec(property(get=GetUnRead,put=PutUnRead))
    VARIANT_BOOL UnRead;
    __declspec(property(get=GetAttachments))
    AttachmentsPtr Attachments;
    __declspec(property(get=GetEntryID))
    _bstr_t EntryID;
    __declspec(property(get=GetActions))
    ActionsPtr Actions;
    __declspec(property(get=GetUserProperties))
    UserPropertiesPtr UserProperties;
    __declspec(property(get=GetFormDescription))
    FormDescriptionPtr FormDescription;
    __declspec(property(get=GetBody,put=PutBody))
    _bstr_t Body;
    __declspec(property(get=GetNoAging,put=PutNoAging))
    VARIANT_BOOL NoAging;
    __declspec(property(get=GetSaved))
    VARIANT_BOOL Saved;
    __declspec(property(get=GetAutoResolvedWinner))
    VARIANT_BOOL AutoResolvedWinner;
    __declspec(property(get=GetConflicts))
    ConflictsPtr Conflicts;
    __declspec(property(get=GetItemProperties))
    ItemPropertiesPtr ItemProperties;
    __declspec(property(get=GetOutlookInternalVersion))
    long OutlookInternalVersion;
    __declspec(property(get=GetConversationTopic))
    _bstr_t ConversationTopic;
    __declspec(property(get=GetSize))
    long Size;
    __declspec(property(get=GetSensitivity,put=PutSensitivity))
    enum OlSensitivity Sensitivity;
    __declspec(property(get=GetSubject,put=PutSubject))
    _bstr_t Subject;
    __declspec(property(get=GetCreationTime))
    DATE CreationTime;
    __declspec(property(get=GetLastModificationTime))
    DATE LastModificationTime;
    __declspec(property(get=GetOutlookVersion))
    _bstr_t OutlookVersion;
    __declspec(property(get=GetConversationIndex))
    _bstr_t ConversationIndex;

    //
    // Wrapper methods for error-handling
    //

    _ApplicationPtr GetApplication ( );
    enum OlObjectClass GetClass ( );
    _NameSpacePtr GetSession ( );
    IDispatchPtr GetParent ( );
    ActionsPtr GetActions ( );
    AttachmentsPtr GetAttachments ( );
    _bstr_t GetBillingInformation ( );
    void PutBillingInformation (
        _bstr_t BillingInformation );
    _bstr_t GetBody ( );
    void PutBody (
        _bstr_t Body );
    _bstr_t GetCategories ( );
    void PutCategories (
        _bstr_t Categories );
    _bstr_t GetCompanies ( );
    void PutCompanies (
        _bstr_t Companies );
    _bstr_t GetConversationIndex ( );
    _bstr_t GetConversationTopic ( );
    DATE GetCreationTime ( );
    _bstr_t GetEntryID ( );
    FormDescriptionPtr GetFormDescription ( );
    _InspectorPtr GetGetInspector ( );
    enum OlImportance GetImportance ( );
    void PutImportance (
        enum OlImportance Importance );
    DATE GetLastModificationTime ( );
    IUnknownPtr GetMAPIOBJECT ( );
    _bstr_t GetMessageClass ( );
    void PutMessageClass (
        _bstr_t MessageClass );
    _bstr_t GetMileage ( );
    void PutMileage (
        _bstr_t Mileage );
    VARIANT_BOOL GetNoAging ( );
    void PutNoAging (
        VARIANT_BOOL NoAging );
    long GetOutlookInternalVersion ( );
    _bstr_t GetOutlookVersion ( );
    VARIANT_BOOL GetSaved ( );
    enum OlSensitivity GetSensitivity ( );
    void PutSensitivity (
        enum OlSensitivity Sensitivity );
    long GetSize ( );
    _bstr_t GetSubject ( );
    void PutSubject (
        _bstr_t Subject );
    VARIANT_BOOL GetUnRead ( );
    void PutUnRead (
        VARIANT_BOOL UnRead );
    UserPropertiesPtr GetUserProperties ( );
    HRESULT Close (
        enum OlInspectorClose SaveMode );
    IDispatchPtr Copy ( );
    HRESULT Delete ( );
    HRESULT Display (
        const _variant_t & Modal = vtMissing );
    IDispatchPtr Move (
        struct MAPIFolder * DestFldr );
    HRESULT PrintOut ( );
    HRESULT Save ( );
    HRESULT SaveAs (
        _bstr_t Path,
        const _variant_t & Type = vtMissing );
    _TaskItemPtr GetAssociatedTask (
        VARIANT_BOOL AddToTaskList );
    LinksPtr GetLinks ( );
    enum OlDownloadState GetDownloadState ( );
    HRESULT ShowCategoriesDialog ( );
    ItemPropertiesPtr GetItemProperties ( );
    enum OlRemoteStatus GetMarkForDownload ( );
    void PutMarkForDownload (
        enum OlRemoteStatus MarkForDownload );
    VARIANT_BOOL GetIsConflict ( );
    VARIANT_BOOL GetAutoResolvedWinner ( );
    ConflictsPtr GetConflicts ( );
    _PropertyAccessorPtr GetPropertyAccessor ( );

    //
    // Raw methods provided by interface
    //

      virtual HRESULT __stdcall get_Application (
        /*[out,retval]*/ struct _Application * * Application ) = 0;
      virtual HRESULT __stdcall get_Class (
        /*[out,retval]*/ enum OlObjectClass * Class ) = 0;
      virtual HRESULT __stdcall get_Session (
        /*[out,retval]*/ struct _NameSpace * * Session ) = 0;
      virtual HRESULT __stdcall get_Parent (
        /*[out,retval]*/ IDispatch * * Parent ) = 0;
      virtual HRESULT __stdcall get_Actions (
        /*[out,retval]*/ struct Actions * * Actions ) = 0;
      virtual HRESULT __stdcall get_Attachments (
        /*[out,retval]*/ struct Attachments * * Attachments ) = 0;
      virtual HRESULT __stdcall get_BillingInformation (
        /*[out,retval]*/ BSTR * BillingInformation ) = 0;
      virtual HRESULT __stdcall put_BillingInformation (
        /*[in]*/ BSTR BillingInformation ) = 0;
      virtual HRESULT __stdcall get_Body (
        /*[out,retval]*/ BSTR * Body ) = 0;
      virtual HRESULT __stdcall put_Body (
        /*[in]*/ BSTR Body ) = 0;
      virtual HRESULT __stdcall get_Categories (
        /*[out,retval]*/ BSTR * Categories ) = 0;
      virtual HRESULT __stdcall put_Categories (
        /*[in]*/ BSTR Categories ) = 0;
      virtual HRESULT __stdcall get_Companies (
        /*[out,retval]*/ BSTR * Companies ) = 0;
      virtual HRESULT __stdcall put_Companies (
        /*[in]*/ BSTR Companies ) = 0;
      virtual HRESULT __stdcall get_ConversationIndex (
        /*[out,retval]*/ BSTR * ConversationIndex ) = 0;
      virtual HRESULT __stdcall get_ConversationTopic (
        /*[out,retval]*/ BSTR * ConversationTopic ) = 0;
      virtual HRESULT __stdcall get_CreationTime (
        /*[out,retval]*/ DATE * CreationTime ) = 0;
      virtual HRESULT __stdcall get_EntryID (
        /*[out,retval]*/ BSTR * EntryID ) = 0;
      virtual HRESULT __stdcall get_FormDescription (
        /*[out,retval]*/ struct FormDescription * * FormDescription ) = 0;
      virtual HRESULT __stdcall get_GetInspector (
        /*[out,retval]*/ struct _Inspector * * GetInspector ) = 0;
      virtual HRESULT __stdcall get_Importance (
        /*[out,retval]*/ enum OlImportance * Importance ) = 0;
      virtual HRESULT __stdcall put_Importance (
        /*[in]*/ enum OlImportance Importance ) = 0;
      virtual HRESULT __stdcall get_LastModificationTime (
        /*[out,retval]*/ DATE * LastModificationTime ) = 0;
      virtual HRESULT __stdcall get_MAPIOBJECT (
        /*[out,retval]*/ IUnknown * * MAPIOBJECT ) = 0;
      virtual HRESULT __stdcall get_MessageClass (
        /*[out,retval]*/ BSTR * MessageClass ) = 0;
      virtual HRESULT __stdcall put_MessageClass (
        /*[in]*/ BSTR MessageClass ) = 0;
      virtual HRESULT __stdcall get_Mileage (
        /*[out,retval]*/ BSTR * Mileage ) = 0;
      virtual HRESULT __stdcall put_Mileage (
        /*[in]*/ BSTR Mileage ) = 0;
      virtual HRESULT __stdcall get_NoAging (
        /*[out,retval]*/ VARIANT_BOOL * NoAging ) = 0;
      virtual HRESULT __stdcall put_NoAging (
        /*[in]*/ VARIANT_BOOL NoAging ) = 0;
      virtual HRESULT __stdcall get_OutlookInternalVersion (
        /*[out,retval]*/ long * OutlookInternalVersion ) = 0;
      virtual HRESULT __stdcall get_OutlookVersion (
        /*[out,retval]*/ BSTR * OutlookVersion ) = 0;
      virtual HRESULT __stdcall get_Saved (
        /*[out,retval]*/ VARIANT_BOOL * Saved ) = 0;
      virtual HRESULT __stdcall get_Sensitivity (
        /*[out,retval]*/ enum OlSensitivity * Sensitivity ) = 0;
      virtual HRESULT __stdcall put_Sensitivity (
        /*[in]*/ enum OlSensitivity Sensitivity ) = 0;
      virtual HRESULT __stdcall get_Size (
        /*[out,retval]*/ long * Size ) = 0;
      virtual HRESULT __stdcall get_Subject (
        /*[out,retval]*/ BSTR * Subject ) = 0;
      virtual HRESULT __stdcall put_Subject (
        /*[in]*/ BSTR Subject ) = 0;
      virtual HRESULT __stdcall get_UnRead (
        /*[out,retval]*/ VARIANT_BOOL * UnRead ) = 0;
      virtual HRESULT __stdcall put_UnRead (
        /*[in]*/ VARIANT_BOOL UnRead ) = 0;
      virtual HRESULT __stdcall get_UserProperties (
        /*[out,retval]*/ struct UserProperties * * UserProperties ) = 0;
      virtual HRESULT __stdcall raw_Close (
        /*[in]*/ enum OlInspectorClose SaveMode ) = 0;
      virtual HRESULT __stdcall raw_Copy (
        /*[out,retval]*/ IDispatch * * Item ) = 0;
      virtual HRESULT __stdcall raw_Delete ( ) = 0;
      virtual HRESULT __stdcall raw_Display (
        /*[in]*/ VARIANT Modal = vtMissing ) = 0;
      virtual HRESULT __stdcall raw_Move (
        /*[in]*/ struct MAPIFolder * DestFldr,
        /*[out,retval]*/ IDispatch * * Item ) = 0;
      virtual HRESULT __stdcall raw_PrintOut ( ) = 0;
      virtual HRESULT __stdcall raw_Save ( ) = 0;
      virtual HRESULT __stdcall raw_SaveAs (
        /*[in]*/ BSTR Path,
        /*[in]*/ VARIANT Type = vtMissing ) = 0;
      virtual HRESULT __stdcall raw_GetAssociatedTask (
        /*[in]*/ VARIANT_BOOL AddToTaskList,
        /*[out,retval]*/ struct _TaskItem * * Item ) = 0;
      virtual HRESULT __stdcall get_Links (
        /*[out,retval]*/ struct Links * * Links ) = 0;
      virtual HRESULT __stdcall get_DownloadState (
        /*[out,retval]*/ enum OlDownloadState * DownloadState ) = 0;
      virtual HRESULT __stdcall raw_ShowCategoriesDialog ( ) = 0;
      virtual HRESULT __stdcall get_ItemProperties (
        /*[out,retval]*/ struct ItemProperties * * ItemProperties ) = 0;
      virtual HRESULT __stdcall get_MarkForDownload (
        /*[out,retval]*/ enum OlRemoteStatus * MarkForDownload ) = 0;
      virtual HRESULT __stdcall put_MarkForDownload (
        /*[in]*/ enum OlRemoteStatus MarkForDownload ) = 0;
      virtual HRESULT __stdcall get_IsConflict (
        /*[out,retval]*/ VARIANT_BOOL * IsConflict ) = 0;
      virtual HRESULT __stdcall get_AutoResolvedWinner (
        /*[out,retval]*/ VARIANT_BOOL * AutoResolvedWinner ) = 0;
      virtual HRESULT __stdcall get_Conflicts (
        /*[out,retval]*/ struct Conflicts * * Conflicts ) = 0;
      virtual HRESULT __stdcall get_PropertyAccessor (
        /*[out,retval]*/ struct _PropertyAccessor * * PropertyAccessor ) = 0;
};

struct __declspec(uuid("00063039-0000-0000-c000-000000000046"))
_TaskRequestDeclineItem : IDispatch
{
    //
    // Property data
    //

    __declspec(property(get=GetApplication))
    _ApplicationPtr Application;
    __declspec(property(get=GetParent))
    IDispatchPtr Parent;
    __declspec(property(get=GetGetInspector))
    _InspectorPtr GetInspector;
    __declspec(property(get=GetDownloadState))
    enum OlDownloadState DownloadState;
    __declspec(property(get=GetPropertyAccessor))
    _PropertyAccessorPtr PropertyAccessor;
    __declspec(property(get=GetLinks))
    LinksPtr Links;
    __declspec(property(get=GetClass))
    enum OlObjectClass Class;
    __declspec(property(get=GetSession))
    _NameSpacePtr Session;
    __declspec(property(get=GetMAPIOBJECT))
    IUnknownPtr MAPIOBJECT;
    __declspec(property(get=GetMileage,put=PutMileage))
    _bstr_t Mileage;
    __declspec(property(get=GetBillingInformation,put=PutBillingInformation))
    _bstr_t BillingInformation;
    __declspec(property(get=GetMarkForDownload,put=PutMarkForDownload))
    enum OlRemoteStatus MarkForDownload;
    __declspec(property(get=GetImportance,put=PutImportance))
    enum OlImportance Importance;
    __declspec(property(get=GetIsConflict))
    VARIANT_BOOL IsConflict;
    __declspec(property(get=GetCategories,put=PutCategories))
    _bstr_t Categories;
    __declspec(property(get=GetMessageClass,put=PutMessageClass))
    _bstr_t MessageClass;
    __declspec(property(get=GetCompanies,put=PutCompanies))
    _bstr_t Companies;
    __declspec(property(get=GetUnRead,put=PutUnRead))
    VARIANT_BOOL UnRead;
    __declspec(property(get=GetAttachments))
    AttachmentsPtr Attachments;
    __declspec(property(get=GetEntryID))
    _bstr_t EntryID;
    __declspec(property(get=GetActions))
    ActionsPtr Actions;
    __declspec(property(get=GetUserProperties))
    UserPropertiesPtr UserProperties;
    __declspec(property(get=GetFormDescription))
    FormDescriptionPtr FormDescription;
    __declspec(property(get=GetBody,put=PutBody))
    _bstr_t Body;
    __declspec(property(get=GetNoAging,put=PutNoAging))
    VARIANT_BOOL NoAging;
    __declspec(property(get=GetSaved))
    VARIANT_BOOL Saved;
    __declspec(property(get=GetAutoResolvedWinner))
    VARIANT_BOOL AutoResolvedWinner;
    __declspec(property(get=GetConflicts))
    ConflictsPtr Conflicts;
    __declspec(property(get=GetItemProperties))
    ItemPropertiesPtr ItemProperties;
    __declspec(property(get=GetOutlookInternalVersion))
    long OutlookInternalVersion;
    __declspec(property(get=GetConversationTopic))
    _bstr_t ConversationTopic;
    __declspec(property(get=GetSize))
    long Size;
    __declspec(property(get=GetSensitivity,put=PutSensitivity))
    enum OlSensitivity Sensitivity;
    __declspec(property(get=GetSubject,put=PutSubject))
    _bstr_t Subject;
    __declspec(property(get=GetCreationTime))
    DATE CreationTime;
    __declspec(property(get=GetLastModificationTime))
    DATE LastModificationTime;
    __declspec(property(get=GetOutlookVersion))
    _bstr_t OutlookVersion;
    __declspec(property(get=GetConversationIndex))
    _bstr_t ConversationIndex;

    //
    // Wrapper methods for error-handling
    //

    _ApplicationPtr GetApplication ( );
    enum OlObjectClass GetClass ( );
    _NameSpacePtr GetSession ( );
    IDispatchPtr GetParent ( );
    ActionsPtr GetActions ( );
    AttachmentsPtr GetAttachments ( );
    _bstr_t GetBillingInformation ( );
    void PutBillingInformation (
        _bstr_t BillingInformation );
    _bstr_t GetBody ( );
    void PutBody (
        _bstr_t Body );
    _bstr_t GetCategories ( );
    void PutCategories (
        _bstr_t Categories );
    _bstr_t GetCompanies ( );
    void PutCompanies (
        _bstr_t Companies );
    _bstr_t GetConversationIndex ( );
    _bstr_t GetConversationTopic ( );
    DATE GetCreationTime ( );
    _bstr_t GetEntryID ( );
    FormDescriptionPtr GetFormDescription ( );
    _InspectorPtr GetGetInspector ( );
    enum OlImportance GetImportance ( );
    void PutImportance (
        enum OlImportance Importance );
    DATE GetLastModificationTime ( );
    IUnknownPtr GetMAPIOBJECT ( );
    _bstr_t GetMessageClass ( );
    void PutMessageClass (
        _bstr_t MessageClass );
    _bstr_t GetMileage ( );
    void PutMileage (
        _bstr_t Mileage );
    VARIANT_BOOL GetNoAging ( );
    void PutNoAging (
        VARIANT_BOOL NoAging );
    long GetOutlookInternalVersion ( );
    _bstr_t GetOutlookVersion ( );
    VARIANT_BOOL GetSaved ( );
    enum OlSensitivity GetSensitivity ( );
    void PutSensitivity (
        enum OlSensitivity Sensitivity );
    long GetSize ( );
    _bstr_t GetSubject ( );
    void PutSubject (
        _bstr_t Subject );
    VARIANT_BOOL GetUnRead ( );
    void PutUnRead (
        VARIANT_BOOL UnRead );
    UserPropertiesPtr GetUserProperties ( );
    HRESULT Close (
        enum OlInspectorClose SaveMode );
    IDispatchPtr Copy ( );
    HRESULT Delete ( );
    HRESULT Display (
        const _variant_t & Modal = vtMissing );
    IDispatchPtr Move (
        struct MAPIFolder * DestFldr );
    HRESULT PrintOut ( );
    HRESULT Save ( );
    HRESULT SaveAs (
        _bstr_t Path,
        const _variant_t & Type = vtMissing );
    _TaskItemPtr GetAssociatedTask (
        VARIANT_BOOL AddToTaskList );
    LinksPtr GetLinks ( );
    enum OlDownloadState GetDownloadState ( );
    HRESULT ShowCategoriesDialog ( );
    ItemPropertiesPtr GetItemProperties ( );
    enum OlRemoteStatus GetMarkForDownload ( );
    void PutMarkForDownload (
        enum OlRemoteStatus MarkForDownload );
    VARIANT_BOOL GetIsConflict ( );
    VARIANT_BOOL GetAutoResolvedWinner ( );
    ConflictsPtr GetConflicts ( );
    _PropertyAccessorPtr GetPropertyAccessor ( );

    //
    // Raw methods provided by interface
    //

      virtual HRESULT __stdcall get_Application (
        /*[out,retval]*/ struct _Application * * Application ) = 0;
      virtual HRESULT __stdcall get_Class (
        /*[out,retval]*/ enum OlObjectClass * Class ) = 0;
      virtual HRESULT __stdcall get_Session (
        /*[out,retval]*/ struct _NameSpace * * Session ) = 0;
      virtual HRESULT __stdcall get_Parent (
        /*[out,retval]*/ IDispatch * * Parent ) = 0;
      virtual HRESULT __stdcall get_Actions (
        /*[out,retval]*/ struct Actions * * Actions ) = 0;
      virtual HRESULT __stdcall get_Attachments (
        /*[out,retval]*/ struct Attachments * * Attachments ) = 0;
      virtual HRESULT __stdcall get_BillingInformation (
        /*[out,retval]*/ BSTR * BillingInformation ) = 0;
      virtual HRESULT __stdcall put_BillingInformation (
        /*[in]*/ BSTR BillingInformation ) = 0;
      virtual HRESULT __stdcall get_Body (
        /*[out,retval]*/ BSTR * Body ) = 0;
      virtual HRESULT __stdcall put_Body (
        /*[in]*/ BSTR Body ) = 0;
      virtual HRESULT __stdcall get_Categories (
        /*[out,retval]*/ BSTR * Categories ) = 0;
      virtual HRESULT __stdcall put_Categories (
        /*[in]*/ BSTR Categories ) = 0;
      virtual HRESULT __stdcall get_Companies (
        /*[out,retval]*/ BSTR * Companies ) = 0;
      virtual HRESULT __stdcall put_Companies (
        /*[in]*/ BSTR Companies ) = 0;
      virtual HRESULT __stdcall get_ConversationIndex (
        /*[out,retval]*/ BSTR * ConversationIndex ) = 0;
      virtual HRESULT __stdcall get_ConversationTopic (
        /*[out,retval]*/ BSTR * ConversationTopic ) = 0;
      virtual HRESULT __stdcall get_CreationTime (
        /*[out,retval]*/ DATE * CreationTime ) = 0;
      virtual HRESULT __stdcall get_EntryID (
        /*[out,retval]*/ BSTR * EntryID ) = 0;
      virtual HRESULT __stdcall get_FormDescription (
        /*[out,retval]*/ struct FormDescription * * FormDescription ) = 0;
      virtual HRESULT __stdcall get_GetInspector (
        /*[out,retval]*/ struct _Inspector * * GetInspector ) = 0;
      virtual HRESULT __stdcall get_Importance (
        /*[out,retval]*/ enum OlImportance * Importance ) = 0;
      virtual HRESULT __stdcall put_Importance (
        /*[in]*/ enum OlImportance Importance ) = 0;
      virtual HRESULT __stdcall get_LastModificationTime (
        /*[out,retval]*/ DATE * LastModificationTime ) = 0;
      virtual HRESULT __stdcall get_MAPIOBJECT (
        /*[out,retval]*/ IUnknown * * MAPIOBJECT ) = 0;
      virtual HRESULT __stdcall get_MessageClass (
        /*[out,retval]*/ BSTR * MessageClass ) = 0;
      virtual HRESULT __stdcall put_MessageClass (
        /*[in]*/ BSTR MessageClass ) = 0;
      virtual HRESULT __stdcall get_Mileage (
        /*[out,retval]*/ BSTR * Mileage ) = 0;
      virtual HRESULT __stdcall put_Mileage (
        /*[in]*/ BSTR Mileage ) = 0;
      virtual HRESULT __stdcall get_NoAging (
        /*[out,retval]*/ VARIANT_BOOL * NoAging ) = 0;
      virtual HRESULT __stdcall put_NoAging (
        /*[in]*/ VARIANT_BOOL NoAging ) = 0;
      virtual HRESULT __stdcall get_OutlookInternalVersion (
        /*[out,retval]*/ long * OutlookInternalVersion ) = 0;
      virtual HRESULT __stdcall get_OutlookVersion (
        /*[out,retval]*/ BSTR * OutlookVersion ) = 0;
      virtual HRESULT __stdcall get_Saved (
        /*[out,retval]*/ VARIANT_BOOL * Saved ) = 0;
      virtual HRESULT __stdcall get_Sensitivity (
        /*[out,retval]*/ enum OlSensitivity * Sensitivity ) = 0;
      virtual HRESULT __stdcall put_Sensitivity (
        /*[in]*/ enum OlSensitivity Sensitivity ) = 0;
      virtual HRESULT __stdcall get_Size (
        /*[out,retval]*/ long * Size ) = 0;
      virtual HRESULT __stdcall get_Subject (
        /*[out,retval]*/ BSTR * Subject ) = 0;
      virtual HRESULT __stdcall put_Subject (
        /*[in]*/ BSTR Subject ) = 0;
      virtual HRESULT __stdcall get_UnRead (
        /*[out,retval]*/ VARIANT_BOOL * UnRead ) = 0;
      virtual HRESULT __stdcall put_UnRead (
        /*[in]*/ VARIANT_BOOL UnRead ) = 0;
      virtual HRESULT __stdcall get_UserProperties (
        /*[out,retval]*/ struct UserProperties * * UserProperties ) = 0;
      virtual HRESULT __stdcall raw_Close (
        /*[in]*/ enum OlInspectorClose SaveMode ) = 0;
      virtual HRESULT __stdcall raw_Copy (
        /*[out,retval]*/ IDispatch * * Item ) = 0;
      virtual HRESULT __stdcall raw_Delete ( ) = 0;
      virtual HRESULT __stdcall raw_Display (
        /*[in]*/ VARIANT Modal = vtMissing ) = 0;
      virtual HRESULT __stdcall raw_Move (
        /*[in]*/ struct MAPIFolder * DestFldr,
        /*[out,retval]*/ IDispatch * * Item ) = 0;
      virtual HRESULT __stdcall raw_PrintOut ( ) = 0;
      virtual HRESULT __stdcall raw_Save ( ) = 0;
      virtual HRESULT __stdcall raw_SaveAs (
        /*[in]*/ BSTR Path,
        /*[in]*/ VARIANT Type = vtMissing ) = 0;
      virtual HRESULT __stdcall raw_GetAssociatedTask (
        /*[in]*/ VARIANT_BOOL AddToTaskList,
        /*[out,retval]*/ struct _TaskItem * * Item ) = 0;
      virtual HRESULT __stdcall get_Links (
        /*[out,retval]*/ struct Links * * Links ) = 0;
      virtual HRESULT __stdcall get_DownloadState (
        /*[out,retval]*/ enum OlDownloadState * DownloadState ) = 0;
      virtual HRESULT __stdcall raw_ShowCategoriesDialog ( ) = 0;
      virtual HRESULT __stdcall get_ItemProperties (
        /*[out,retval]*/ struct ItemProperties * * ItemProperties ) = 0;
      virtual HRESULT __stdcall get_MarkForDownload (
        /*[out,retval]*/ enum OlRemoteStatus * MarkForDownload ) = 0;
      virtual HRESULT __stdcall put_MarkForDownload (
        /*[in]*/ enum OlRemoteStatus MarkForDownload ) = 0;
      virtual HRESULT __stdcall get_IsConflict (
        /*[out,retval]*/ VARIANT_BOOL * IsConflict ) = 0;
      virtual HRESULT __stdcall get_AutoResolvedWinner (
        /*[out,retval]*/ VARIANT_BOOL * AutoResolvedWinner ) = 0;
      virtual HRESULT __stdcall get_Conflicts (
        /*[out,retval]*/ struct Conflicts * * Conflicts ) = 0;
      virtual HRESULT __stdcall get_PropertyAccessor (
        /*[out,retval]*/ struct _PropertyAccessor * * PropertyAccessor ) = 0;
};

struct __declspec(uuid("00063036-0000-0000-c000-000000000046"))
_TaskRequestItem : IDispatch
{
    //
    // Property data
    //

    __declspec(property(get=GetApplication))
    _ApplicationPtr Application;
    __declspec(property(get=GetParent))
    IDispatchPtr Parent;
    __declspec(property(get=GetGetInspector))
    _InspectorPtr GetInspector;
    __declspec(property(get=GetDownloadState))
    enum OlDownloadState DownloadState;
    __declspec(property(get=GetPropertyAccessor))
    _PropertyAccessorPtr PropertyAccessor;
    __declspec(property(get=GetLinks))
    LinksPtr Links;
    __declspec(property(get=GetClass))
    enum OlObjectClass Class;
    __declspec(property(get=GetSession))
    _NameSpacePtr Session;
    __declspec(property(get=GetMAPIOBJECT))
    IUnknownPtr MAPIOBJECT;
    __declspec(property(get=GetMileage,put=PutMileage))
    _bstr_t Mileage;
    __declspec(property(get=GetBillingInformation,put=PutBillingInformation))
    _bstr_t BillingInformation;
    __declspec(property(get=GetMarkForDownload,put=PutMarkForDownload))
    enum OlRemoteStatus MarkForDownload;
    __declspec(property(get=GetImportance,put=PutImportance))
    enum OlImportance Importance;
    __declspec(property(get=GetIsConflict))
    VARIANT_BOOL IsConflict;
    __declspec(property(get=GetCategories,put=PutCategories))
    _bstr_t Categories;
    __declspec(property(get=GetMessageClass,put=PutMessageClass))
    _bstr_t MessageClass;
    __declspec(property(get=GetCompanies,put=PutCompanies))
    _bstr_t Companies;
    __declspec(property(get=GetUnRead,put=PutUnRead))
    VARIANT_BOOL UnRead;
    __declspec(property(get=GetAttachments))
    AttachmentsPtr Attachments;
    __declspec(property(get=GetEntryID))
    _bstr_t EntryID;
    __declspec(property(get=GetActions))
    ActionsPtr Actions;
    __declspec(property(get=GetUserProperties))
    UserPropertiesPtr UserProperties;
    __declspec(property(get=GetFormDescription))
    FormDescriptionPtr FormDescription;
    __declspec(property(get=GetBody,put=PutBody))
    _bstr_t Body;
    __declspec(property(get=GetNoAging,put=PutNoAging))
    VARIANT_BOOL NoAging;
    __declspec(property(get=GetSaved))
    VARIANT_BOOL Saved;
    __declspec(property(get=GetAutoResolvedWinner))
    VARIANT_BOOL AutoResolvedWinner;
    __declspec(property(get=GetConflicts))
    ConflictsPtr Conflicts;
    __declspec(property(get=GetItemProperties))
    ItemPropertiesPtr ItemProperties;
    __declspec(property(get=GetOutlookInternalVersion))
    long OutlookInternalVersion;
    __declspec(property(get=GetConversationTopic))
    _bstr_t ConversationTopic;
    __declspec(property(get=GetSize))
    long Size;
    __declspec(property(get=GetSensitivity,put=PutSensitivity))
    enum OlSensitivity Sensitivity;
    __declspec(property(get=GetSubject,put=PutSubject))
    _bstr_t Subject;
    __declspec(property(get=GetCreationTime))
    DATE CreationTime;
    __declspec(property(get=GetLastModificationTime))
    DATE LastModificationTime;
    __declspec(property(get=GetOutlookVersion))
    _bstr_t OutlookVersion;
    __declspec(property(get=GetConversationIndex))
    _bstr_t ConversationIndex;

    //
    // Wrapper methods for error-handling
    //

    _ApplicationPtr GetApplication ( );
    enum OlObjectClass GetClass ( );
    _NameSpacePtr GetSession ( );
    IDispatchPtr GetParent ( );
    ActionsPtr GetActions ( );
    AttachmentsPtr GetAttachments ( );
    _bstr_t GetBillingInformation ( );
    void PutBillingInformation (
        _bstr_t BillingInformation );
    _bstr_t GetBody ( );
    void PutBody (
        _bstr_t Body );
    _bstr_t GetCategories ( );
    void PutCategories (
        _bstr_t Categories );
    _bstr_t GetCompanies ( );
    void PutCompanies (
        _bstr_t Companies );
    _bstr_t GetConversationIndex ( );
    _bstr_t GetConversationTopic ( );
    DATE GetCreationTime ( );
    _bstr_t GetEntryID ( );
    FormDescriptionPtr GetFormDescription ( );
    _InspectorPtr GetGetInspector ( );
    enum OlImportance GetImportance ( );
    void PutImportance (
        enum OlImportance Importance );
    DATE GetLastModificationTime ( );
    IUnknownPtr GetMAPIOBJECT ( );
    _bstr_t GetMessageClass ( );
    void PutMessageClass (
        _bstr_t MessageClass );
    _bstr_t GetMileage ( );
    void PutMileage (
        _bstr_t Mileage );
    VARIANT_BOOL GetNoAging ( );
    void PutNoAging (
        VARIANT_BOOL NoAging );
    long GetOutlookInternalVersion ( );
    _bstr_t GetOutlookVersion ( );
    VARIANT_BOOL GetSaved ( );
    enum OlSensitivity GetSensitivity ( );
    void PutSensitivity (
        enum OlSensitivity Sensitivity );
    long GetSize ( );
    _bstr_t GetSubject ( );
    void PutSubject (
        _bstr_t Subject );
    VARIANT_BOOL GetUnRead ( );
    void PutUnRead (
        VARIANT_BOOL UnRead );
    UserPropertiesPtr GetUserProperties ( );
    HRESULT Close (
        enum OlInspectorClose SaveMode );
    IDispatchPtr Copy ( );
    HRESULT Delete ( );
    HRESULT Display (
        const _variant_t & Modal = vtMissing );
    IDispatchPtr Move (
        struct MAPIFolder * DestFldr );
    HRESULT PrintOut ( );
    HRESULT Save ( );
    HRESULT SaveAs (
        _bstr_t Path,
        const _variant_t & Type = vtMissing );
    _TaskItemPtr GetAssociatedTask (
        VARIANT_BOOL AddToTaskList );
    LinksPtr GetLinks ( );
    enum OlDownloadState GetDownloadState ( );
    HRESULT ShowCategoriesDialog ( );
    ItemPropertiesPtr GetItemProperties ( );
    enum OlRemoteStatus GetMarkForDownload ( );
    void PutMarkForDownload (
        enum OlRemoteStatus MarkForDownload );
    VARIANT_BOOL GetIsConflict ( );
    VARIANT_BOOL GetAutoResolvedWinner ( );
    ConflictsPtr GetConflicts ( );
    _PropertyAccessorPtr GetPropertyAccessor ( );

    //
    // Raw methods provided by interface
    //

      virtual HRESULT __stdcall get_Application (
        /*[out,retval]*/ struct _Application * * Application ) = 0;
      virtual HRESULT __stdcall get_Class (
        /*[out,retval]*/ enum OlObjectClass * Class ) = 0;
      virtual HRESULT __stdcall get_Session (
        /*[out,retval]*/ struct _NameSpace * * Session ) = 0;
      virtual HRESULT __stdcall get_Parent (
        /*[out,retval]*/ IDispatch * * Parent ) = 0;
      virtual HRESULT __stdcall get_Actions (
        /*[out,retval]*/ struct Actions * * Actions ) = 0;
      virtual HRESULT __stdcall get_Attachments (
        /*[out,retval]*/ struct Attachments * * Attachments ) = 0;
      virtual HRESULT __stdcall get_BillingInformation (
        /*[out,retval]*/ BSTR * BillingInformation ) = 0;
      virtual HRESULT __stdcall put_BillingInformation (
        /*[in]*/ BSTR BillingInformation ) = 0;
      virtual HRESULT __stdcall get_Body (
        /*[out,retval]*/ BSTR * Body ) = 0;
      virtual HRESULT __stdcall put_Body (
        /*[in]*/ BSTR Body ) = 0;
      virtual HRESULT __stdcall get_Categories (
        /*[out,retval]*/ BSTR * Categories ) = 0;
      virtual HRESULT __stdcall put_Categories (
        /*[in]*/ BSTR Categories ) = 0;
      virtual HRESULT __stdcall get_Companies (
        /*[out,retval]*/ BSTR * Companies ) = 0;
      virtual HRESULT __stdcall put_Companies (
        /*[in]*/ BSTR Companies ) = 0;
      virtual HRESULT __stdcall get_ConversationIndex (
        /*[out,retval]*/ BSTR * ConversationIndex ) = 0;
      virtual HRESULT __stdcall get_ConversationTopic (
        /*[out,retval]*/ BSTR * ConversationTopic ) = 0;
      virtual HRESULT __stdcall get_CreationTime (
        /*[out,retval]*/ DATE * CreationTime ) = 0;
      virtual HRESULT __stdcall get_EntryID (
        /*[out,retval]*/ BSTR * EntryID ) = 0;
      virtual HRESULT __stdcall get_FormDescription (
        /*[out,retval]*/ struct FormDescription * * FormDescription ) = 0;
      virtual HRESULT __stdcall get_GetInspector (
        /*[out,retval]*/ struct _Inspector * * GetInspector ) = 0;
      virtual HRESULT __stdcall get_Importance (
        /*[out,retval]*/ enum OlImportance * Importance ) = 0;
      virtual HRESULT __stdcall put_Importance (
        /*[in]*/ enum OlImportance Importance ) = 0;
      virtual HRESULT __stdcall get_LastModificationTime (
        /*[out,retval]*/ DATE * LastModificationTime ) = 0;
      virtual HRESULT __stdcall get_MAPIOBJECT (
        /*[out,retval]*/ IUnknown * * MAPIOBJECT ) = 0;
      virtual HRESULT __stdcall get_MessageClass (
        /*[out,retval]*/ BSTR * MessageClass ) = 0;
      virtual HRESULT __stdcall put_MessageClass (
        /*[in]*/ BSTR MessageClass ) = 0;
      virtual HRESULT __stdcall get_Mileage (
        /*[out,retval]*/ BSTR * Mileage ) = 0;
      virtual HRESULT __stdcall put_Mileage (
        /*[in]*/ BSTR Mileage ) = 0;
      virtual HRESULT __stdcall get_NoAging (
        /*[out,retval]*/ VARIANT_BOOL * NoAging ) = 0;
      virtual HRESULT __stdcall put_NoAging (
        /*[in]*/ VARIANT_BOOL NoAging ) = 0;
      virtual HRESULT __stdcall get_OutlookInternalVersion (
        /*[out,retval]*/ long * OutlookInternalVersion ) = 0;
      virtual HRESULT __stdcall get_OutlookVersion (
        /*[out,retval]*/ BSTR * OutlookVersion ) = 0;
      virtual HRESULT __stdcall get_Saved (
        /*[out,retval]*/ VARIANT_BOOL * Saved ) = 0;
      virtual HRESULT __stdcall get_Sensitivity (
        /*[out,retval]*/ enum OlSensitivity * Sensitivity ) = 0;
      virtual HRESULT __stdcall put_Sensitivity (
        /*[in]*/ enum OlSensitivity Sensitivity ) = 0;
      virtual HRESULT __stdcall get_Size (
        /*[out,retval]*/ long * Size ) = 0;
      virtual HRESULT __stdcall get_Subject (
        /*[out,retval]*/ BSTR * Subject ) = 0;
      virtual HRESULT __stdcall put_Subject (
        /*[in]*/ BSTR Subject ) = 0;
      virtual HRESULT __stdcall get_UnRead (
        /*[out,retval]*/ VARIANT_BOOL * UnRead ) = 0;
      virtual HRESULT __stdcall put_UnRead (
        /*[in]*/ VARIANT_BOOL UnRead ) = 0;
      virtual HRESULT __stdcall get_UserProperties (
        /*[out,retval]*/ struct UserProperties * * UserProperties ) = 0;
      virtual HRESULT __stdcall raw_Close (
        /*[in]*/ enum OlInspectorClose SaveMode ) = 0;
      virtual HRESULT __stdcall raw_Copy (
        /*[out,retval]*/ IDispatch * * Item ) = 0;
      virtual HRESULT __stdcall raw_Delete ( ) = 0;
      virtual HRESULT __stdcall raw_Display (
        /*[in]*/ VARIANT Modal = vtMissing ) = 0;
      virtual HRESULT __stdcall raw_Move (
        /*[in]*/ struct MAPIFolder * DestFldr,
        /*[out,retval]*/ IDispatch * * Item ) = 0;
      virtual HRESULT __stdcall raw_PrintOut ( ) = 0;
      virtual HRESULT __stdcall raw_Save ( ) = 0;
      virtual HRESULT __stdcall raw_SaveAs (
        /*[in]*/ BSTR Path,
        /*[in]*/ VARIANT Type = vtMissing ) = 0;
      virtual HRESULT __stdcall raw_GetAssociatedTask (
        /*[in]*/ VARIANT_BOOL AddToTaskList,
        /*[out,retval]*/ struct _TaskItem * * Item ) = 0;
      virtual HRESULT __stdcall get_Links (
        /*[out,retval]*/ struct Links * * Links ) = 0;
      virtual HRESULT __stdcall get_DownloadState (
        /*[out,retval]*/ enum OlDownloadState * DownloadState ) = 0;
      virtual HRESULT __stdcall raw_ShowCategoriesDialog ( ) = 0;
      virtual HRESULT __stdcall get_ItemProperties (
        /*[out,retval]*/ struct ItemProperties * * ItemProperties ) = 0;
      virtual HRESULT __stdcall get_MarkForDownload (
        /*[out,retval]*/ enum OlRemoteStatus * MarkForDownload ) = 0;
      virtual HRESULT __stdcall put_MarkForDownload (
        /*[in]*/ enum OlRemoteStatus MarkForDownload ) = 0;
      virtual HRESULT __stdcall get_IsConflict (
        /*[out,retval]*/ VARIANT_BOOL * IsConflict ) = 0;
      virtual HRESULT __stdcall get_AutoResolvedWinner (
        /*[out,retval]*/ VARIANT_BOOL * AutoResolvedWinner ) = 0;
      virtual HRESULT __stdcall get_Conflicts (
        /*[out,retval]*/ struct Conflicts * * Conflicts ) = 0;
      virtual HRESULT __stdcall get_PropertyAccessor (
        /*[out,retval]*/ struct _PropertyAccessor * * PropertyAccessor ) = 0;
};

struct __declspec(uuid("00063037-0000-0000-c000-000000000046"))
_TaskRequestUpdateItem : IDispatch
{
    //
    // Property data
    //

    __declspec(property(get=GetApplication))
    _ApplicationPtr Application;
    __declspec(property(get=GetParent))
    IDispatchPtr Parent;
    __declspec(property(get=GetGetInspector))
    _InspectorPtr GetInspector;
    __declspec(property(get=GetDownloadState))
    enum OlDownloadState DownloadState;
    __declspec(property(get=GetPropertyAccessor))
    _PropertyAccessorPtr PropertyAccessor;
    __declspec(property(get=GetLinks))
    LinksPtr Links;
    __declspec(property(get=GetClass))
    enum OlObjectClass Class;
    __declspec(property(get=GetSession))
    _NameSpacePtr Session;
    __declspec(property(get=GetMAPIOBJECT))
    IUnknownPtr MAPIOBJECT;
    __declspec(property(get=GetMileage,put=PutMileage))
    _bstr_t Mileage;
    __declspec(property(get=GetBillingInformation,put=PutBillingInformation))
    _bstr_t BillingInformation;
    __declspec(property(get=GetMarkForDownload,put=PutMarkForDownload))
    enum OlRemoteStatus MarkForDownload;
    __declspec(property(get=GetImportance,put=PutImportance))
    enum OlImportance Importance;
    __declspec(property(get=GetIsConflict))
    VARIANT_BOOL IsConflict;
    __declspec(property(get=GetCategories,put=PutCategories))
    _bstr_t Categories;
    __declspec(property(get=GetMessageClass,put=PutMessageClass))
    _bstr_t MessageClass;
    __declspec(property(get=GetCompanies,put=PutCompanies))
    _bstr_t Companies;
    __declspec(property(get=GetUnRead,put=PutUnRead))
    VARIANT_BOOL UnRead;
    __declspec(property(get=GetAttachments))
    AttachmentsPtr Attachments;
    __declspec(property(get=GetEntryID))
    _bstr_t EntryID;
    __declspec(property(get=GetActions))
    ActionsPtr Actions;
    __declspec(property(get=GetUserProperties))
    UserPropertiesPtr UserProperties;
    __declspec(property(get=GetFormDescription))
    FormDescriptionPtr FormDescription;
    __declspec(property(get=GetBody,put=PutBody))
    _bstr_t Body;
    __declspec(property(get=GetNoAging,put=PutNoAging))
    VARIANT_BOOL NoAging;
    __declspec(property(get=GetSaved))
    VARIANT_BOOL Saved;
    __declspec(property(get=GetAutoResolvedWinner))
    VARIANT_BOOL AutoResolvedWinner;
    __declspec(property(get=GetConflicts))
    ConflictsPtr Conflicts;
    __declspec(property(get=GetItemProperties))
    ItemPropertiesPtr ItemProperties;
    __declspec(property(get=GetOutlookInternalVersion))
    long OutlookInternalVersion;
    __declspec(property(get=GetConversationTopic))
    _bstr_t ConversationTopic;
    __declspec(property(get=GetSize))
    long Size;
    __declspec(property(get=GetSensitivity,put=PutSensitivity))
    enum OlSensitivity Sensitivity;
    __declspec(property(get=GetSubject,put=PutSubject))
    _bstr_t Subject;
    __declspec(property(get=GetCreationTime))
    DATE CreationTime;
    __declspec(property(get=GetLastModificationTime))
    DATE LastModificationTime;
    __declspec(property(get=GetOutlookVersion))
    _bstr_t OutlookVersion;
    __declspec(property(get=GetConversationIndex))
    _bstr_t ConversationIndex;

    //
    // Wrapper methods for error-handling
    //

    _ApplicationPtr GetApplication ( );
    enum OlObjectClass GetClass ( );
    _NameSpacePtr GetSession ( );
    IDispatchPtr GetParent ( );
    ActionsPtr GetActions ( );
    AttachmentsPtr GetAttachments ( );
    _bstr_t GetBillingInformation ( );
    void PutBillingInformation (
        _bstr_t BillingInformation );
    _bstr_t GetBody ( );
    void PutBody (
        _bstr_t Body );
    _bstr_t GetCategories ( );
    void PutCategories (
        _bstr_t Categories );
    _bstr_t GetCompanies ( );
    void PutCompanies (
        _bstr_t Companies );
    _bstr_t GetConversationIndex ( );
    _bstr_t GetConversationTopic ( );
    DATE GetCreationTime ( );
    _bstr_t GetEntryID ( );
    FormDescriptionPtr GetFormDescription ( );
    _InspectorPtr GetGetInspector ( );
    enum OlImportance GetImportance ( );
    void PutImportance (
        enum OlImportance Importance );
    DATE GetLastModificationTime ( );
    IUnknownPtr GetMAPIOBJECT ( );
    _bstr_t GetMessageClass ( );
    void PutMessageClass (
        _bstr_t MessageClass );
    _bstr_t GetMileage ( );
    void PutMileage (
        _bstr_t Mileage );
    VARIANT_BOOL GetNoAging ( );
    void PutNoAging (
        VARIANT_BOOL NoAging );
    long GetOutlookInternalVersion ( );
    _bstr_t GetOutlookVersion ( );
    VARIANT_BOOL GetSaved ( );
    enum OlSensitivity GetSensitivity ( );
    void PutSensitivity (
        enum OlSensitivity Sensitivity );
    long GetSize ( );
    _bstr_t GetSubject ( );
    void PutSubject (
        _bstr_t Subject );
    VARIANT_BOOL GetUnRead ( );
    void PutUnRead (
        VARIANT_BOOL UnRead );
    UserPropertiesPtr GetUserProperties ( );
    HRESULT Close (
        enum OlInspectorClose SaveMode );
    IDispatchPtr Copy ( );
    HRESULT Delete ( );
    HRESULT Display (
        const _variant_t & Modal = vtMissing );
    IDispatchPtr Move (
        struct MAPIFolder * DestFldr );
    HRESULT PrintOut ( );
    HRESULT Save ( );
    HRESULT SaveAs (
        _bstr_t Path,
        const _variant_t & Type = vtMissing );
    _TaskItemPtr GetAssociatedTask (
        VARIANT_BOOL AddToTaskList );
    LinksPtr GetLinks ( );
    enum OlDownloadState GetDownloadState ( );
    HRESULT ShowCategoriesDialog ( );
    ItemPropertiesPtr GetItemProperties ( );
    enum OlRemoteStatus GetMarkForDownload ( );
    void PutMarkForDownload (
        enum OlRemoteStatus MarkForDownload );
    VARIANT_BOOL GetIsConflict ( );
    VARIANT_BOOL GetAutoResolvedWinner ( );
    ConflictsPtr GetConflicts ( );
    _PropertyAccessorPtr GetPropertyAccessor ( );

    //
    // Raw methods provided by interface
    //

      virtual HRESULT __stdcall get_Application (
        /*[out,retval]*/ struct _Application * * Application ) = 0;
      virtual HRESULT __stdcall get_Class (
        /*[out,retval]*/ enum OlObjectClass * Class ) = 0;
      virtual HRESULT __stdcall get_Session (
        /*[out,retval]*/ struct _NameSpace * * Session ) = 0;
      virtual HRESULT __stdcall get_Parent (
        /*[out,retval]*/ IDispatch * * Parent ) = 0;
      virtual HRESULT __stdcall get_Actions (
        /*[out,retval]*/ struct Actions * * Actions ) = 0;
      virtual HRESULT __stdcall get_Attachments (
        /*[out,retval]*/ struct Attachments * * Attachments ) = 0;
      virtual HRESULT __stdcall get_BillingInformation (
        /*[out,retval]*/ BSTR * BillingInformation ) = 0;
      virtual HRESULT __stdcall put_BillingInformation (
        /*[in]*/ BSTR BillingInformation ) = 0;
      virtual HRESULT __stdcall get_Body (
        /*[out,retval]*/ BSTR * Body ) = 0;
      virtual HRESULT __stdcall put_Body (
        /*[in]*/ BSTR Body ) = 0;
      virtual HRESULT __stdcall get_Categories (
        /*[out,retval]*/ BSTR * Categories ) = 0;
      virtual HRESULT __stdcall put_Categories (
        /*[in]*/ BSTR Categories ) = 0;
      virtual HRESULT __stdcall get_Companies (
        /*[out,retval]*/ BSTR * Companies ) = 0;
      virtual HRESULT __stdcall put_Companies (
        /*[in]*/ BSTR Companies ) = 0;
      virtual HRESULT __stdcall get_ConversationIndex (
        /*[out,retval]*/ BSTR * ConversationIndex ) = 0;
      virtual HRESULT __stdcall get_ConversationTopic (
        /*[out,retval]*/ BSTR * ConversationTopic ) = 0;
      virtual HRESULT __stdcall get_CreationTime (
        /*[out,retval]*/ DATE * CreationTime ) = 0;
      virtual HRESULT __stdcall get_EntryID (
        /*[out,retval]*/ BSTR * EntryID ) = 0;
      virtual HRESULT __stdcall get_FormDescription (
        /*[out,retval]*/ struct FormDescription * * FormDescription ) = 0;
      virtual HRESULT __stdcall get_GetInspector (
        /*[out,retval]*/ struct _Inspector * * GetInspector ) = 0;
      virtual HRESULT __stdcall get_Importance (
        /*[out,retval]*/ enum OlImportance * Importance ) = 0;
      virtual HRESULT __stdcall put_Importance (
        /*[in]*/ enum OlImportance Importance ) = 0;
      virtual HRESULT __stdcall get_LastModificationTime (
        /*[out,retval]*/ DATE * LastModificationTime ) = 0;
      virtual HRESULT __stdcall get_MAPIOBJECT (
        /*[out,retval]*/ IUnknown * * MAPIOBJECT ) = 0;
      virtual HRESULT __stdcall get_MessageClass (
        /*[out,retval]*/ BSTR * MessageClass ) = 0;
      virtual HRESULT __stdcall put_MessageClass (
        /*[in]*/ BSTR MessageClass ) = 0;
      virtual HRESULT __stdcall get_Mileage (
        /*[out,retval]*/ BSTR * Mileage ) = 0;
      virtual HRESULT __stdcall put_Mileage (
        /*[in]*/ BSTR Mileage ) = 0;
      virtual HRESULT __stdcall get_NoAging (
        /*[out,retval]*/ VARIANT_BOOL * NoAging ) = 0;
      virtual HRESULT __stdcall put_NoAging (
        /*[in]*/ VARIANT_BOOL NoAging ) = 0;
      virtual HRESULT __stdcall get_OutlookInternalVersion (
        /*[out,retval]*/ long * OutlookInternalVersion ) = 0;
      virtual HRESULT __stdcall get_OutlookVersion (
        /*[out,retval]*/ BSTR * OutlookVersion ) = 0;
      virtual HRESULT __stdcall get_Saved (
        /*[out,retval]*/ VARIANT_BOOL * Saved ) = 0;
      virtual HRESULT __stdcall get_Sensitivity (
        /*[out,retval]*/ enum OlSensitivity * Sensitivity ) = 0;
      virtual HRESULT __stdcall put_Sensitivity (
        /*[in]*/ enum OlSensitivity Sensitivity ) = 0;
      virtual HRESULT __stdcall get_Size (
        /*[out,retval]*/ long * Size ) = 0;
      virtual HRESULT __stdcall get_Subject (
        /*[out,retval]*/ BSTR * Subject ) = 0;
      virtual HRESULT __stdcall put_Subject (
        /*[in]*/ BSTR Subject ) = 0;
      virtual HRESULT __stdcall get_UnRead (
        /*[out,retval]*/ VARIANT_BOOL * UnRead ) = 0;
      virtual HRESULT __stdcall put_UnRead (
        /*[in]*/ VARIANT_BOOL UnRead ) = 0;
      virtual HRESULT __stdcall get_UserProperties (
        /*[out,retval]*/ struct UserProperties * * UserProperties ) = 0;
      virtual HRESULT __stdcall raw_Close (
        /*[in]*/ enum OlInspectorClose SaveMode ) = 0;
      virtual HRESULT __stdcall raw_Copy (
        /*[out,retval]*/ IDispatch * * Item ) = 0;
      virtual HRESULT __stdcall raw_Delete ( ) = 0;
      virtual HRESULT __stdcall raw_Display (
        /*[in]*/ VARIANT Modal = vtMissing ) = 0;
      virtual HRESULT __stdcall raw_Move (
        /*[in]*/ struct MAPIFolder * DestFldr,
        /*[out,retval]*/ IDispatch * * Item ) = 0;
      virtual HRESULT __stdcall raw_PrintOut ( ) = 0;
      virtual HRESULT __stdcall raw_Save ( ) = 0;
      virtual HRESULT __stdcall raw_SaveAs (
        /*[in]*/ BSTR Path,
        /*[in]*/ VARIANT Type = vtMissing ) = 0;
      virtual HRESULT __stdcall raw_GetAssociatedTask (
        /*[in]*/ VARIANT_BOOL AddToTaskList,
        /*[out,retval]*/ struct _TaskItem * * Item ) = 0;
      virtual HRESULT __stdcall get_Links (
        /*[out,retval]*/ struct Links * * Links ) = 0;
      virtual HRESULT __stdcall get_DownloadState (
        /*[out,retval]*/ enum OlDownloadState * DownloadState ) = 0;
      virtual HRESULT __stdcall raw_ShowCategoriesDialog ( ) = 0;
      virtual HRESULT __stdcall get_ItemProperties (
        /*[out,retval]*/ struct ItemProperties * * ItemProperties ) = 0;
      virtual HRESULT __stdcall get_MarkForDownload (
        /*[out,retval]*/ enum OlRemoteStatus * MarkForDownload ) = 0;
      virtual HRESULT __stdcall put_MarkForDownload (
        /*[in]*/ enum OlRemoteStatus MarkForDownload ) = 0;
      virtual HRESULT __stdcall get_IsConflict (
        /*[out,retval]*/ VARIANT_BOOL * IsConflict ) = 0;
      virtual HRESULT __stdcall get_AutoResolvedWinner (
        /*[out,retval]*/ VARIANT_BOOL * AutoResolvedWinner ) = 0;
      virtual HRESULT __stdcall get_Conflicts (
        /*[out,retval]*/ struct Conflicts * * Conflicts ) = 0;
      virtual HRESULT __stdcall get_PropertyAccessor (
        /*[out,retval]*/ struct _PropertyAccessor * * PropertyAccessor ) = 0;
};

struct __declspec(uuid("000630f2-0000-0000-c000-000000000046"))
_NavigationFolder : IDispatch
{
    //
    // Property data
    //

    __declspec(property(get=GetApplication))
    _ApplicationPtr Application;
    __declspec(property(get=GetParent))
    IDispatchPtr Parent;
    __declspec(property(get=GetDisplayName))
    _bstr_t DisplayName;
    __declspec(property(get=GetFolder))
    MAPIFolderPtr Folder;
    __declspec(property(get=GetIsSelected,put=PutIsSelected))
    VARIANT_BOOL IsSelected;
    __declspec(property(get=GetIsSideBySide,put=PutIsSideBySide))
    VARIANT_BOOL IsSideBySide;
    __declspec(property(get=GetPosition,put=PutPosition))
    long Position;
    __declspec(property(get=GetIsRemovable))
    VARIANT_BOOL IsRemovable;
    __declspec(property(get=GetClass))
    enum OlObjectClass Class;
    __declspec(property(get=GetSession))
    _NameSpacePtr Session;

    //
    // Wrapper methods for error-handling
    //

    _ApplicationPtr GetApplication ( );
    enum OlObjectClass GetClass ( );
    _NameSpacePtr GetSession ( );
    IDispatchPtr GetParent ( );
    MAPIFolderPtr GetFolder ( );
    VARIANT_BOOL GetIsSelected ( );
    void PutIsSelected (
        VARIANT_BOOL IsSelected );
    VARIANT_BOOL GetIsSideBySide ( );
    void PutIsSideBySide (
        VARIANT_BOOL IsSideBySide );
    long GetPosition ( );
    void PutPosition (
        long Position );
    VARIANT_BOOL GetIsRemovable ( );
    _bstr_t GetDisplayName ( );

    //
    // Raw methods provided by interface
    //

      virtual HRESULT __stdcall get_Application (
        /*[out,retval]*/ struct _Application * * Application ) = 0;
      virtual HRESULT __stdcall get_Class (
        /*[out,retval]*/ enum OlObjectClass * Class ) = 0;
      virtual HRESULT __stdcall get_Session (
        /*[out,retval]*/ struct _NameSpace * * Session ) = 0;
      virtual HRESULT __stdcall get_Parent (
        /*[out,retval]*/ IDispatch * * Parent ) = 0;
      virtual HRESULT __stdcall get_Folder (
        /*[out,retval]*/ struct MAPIFolder * * Folder ) = 0;
      virtual HRESULT __stdcall get_IsSelected (
        /*[out,retval]*/ VARIANT_BOOL * IsSelected ) = 0;
      virtual HRESULT __stdcall put_IsSelected (
        /*[in]*/ VARIANT_BOOL IsSelected ) = 0;
      virtual HRESULT __stdcall get_IsSideBySide (
        /*[out,retval]*/ VARIANT_BOOL * IsSideBySide ) = 0;
      virtual HRESULT __stdcall put_IsSideBySide (
        /*[in]*/ VARIANT_BOOL IsSideBySide ) = 0;
      virtual HRESULT __stdcall get_Position (
        /*[out,retval]*/ long * Position ) = 0;
      virtual HRESULT __stdcall put_Position (
        /*[in]*/ long Position ) = 0;
      virtual HRESULT __stdcall get_IsRemovable (
        /*[out,retval]*/ VARIANT_BOOL * IsRemovable ) = 0;
      virtual HRESULT __stdcall get_DisplayName (
        /*[out,retval]*/ BSTR * DisplayName ) = 0;
};

struct __declspec(uuid("000630f1-0000-0000-c000-000000000046"))
_NavigationFolders : IDispatch
{
    //
    // Property data
    //

    __declspec(property(get=GetApplication))
    _ApplicationPtr Application;
    __declspec(property(get=GetParent))
    IDispatchPtr Parent;
    __declspec(property(get=GetClass))
    enum OlObjectClass Class;
    __declspec(property(get=GetSession))
    _NameSpacePtr Session;
    __declspec(property(get=GetCount))
    long Count;

    //
    // Wrapper methods for error-handling
    //

    _ApplicationPtr GetApplication ( );
    enum OlObjectClass GetClass ( );
    _NameSpacePtr GetSession ( );
    IDispatchPtr GetParent ( );
    long GetCount ( );
    _NavigationFolderPtr Item (
        const _variant_t & Index );
    _NavigationFolderPtr Add (
        struct MAPIFolder * Folder );
    HRESULT Remove (
        struct _NavigationFolder * RemovableFolder );

    //
    // Raw methods provided by interface
    //

      virtual HRESULT __stdcall get_Application (
        /*[out,retval]*/ struct _Application * * Application ) = 0;
      virtual HRESULT __stdcall get_Class (
        /*[out,retval]*/ enum OlObjectClass * Class ) = 0;
      virtual HRESULT __stdcall get_Session (
        /*[out,retval]*/ struct _NameSpace * * Session ) = 0;
      virtual HRESULT __stdcall get_Parent (
        /*[out,retval]*/ IDispatch * * Parent ) = 0;
      virtual HRESULT __stdcall get_Count (
        /*[out,retval]*/ long * Count ) = 0;
      virtual HRESULT __stdcall raw_Item (
        /*[in]*/ VARIANT Index,
        /*[out,retval]*/ struct _NavigationFolder * * Item ) = 0;
      virtual HRESULT __stdcall raw_Add (
        /*[in]*/ struct MAPIFolder * Folder,
        /*[out,retval]*/ struct _NavigationFolder * * NavigationFolder ) = 0;
      virtual HRESULT __stdcall raw_Remove (
        /*[in]*/ struct _NavigationFolder * RemovableFolder ) = 0;
};

//
// Function implementation mapping
//

/*
#pragma start_map_region("..\kernel\MSO\2007\TLH\MSOUTL.tli")
__declspec(implementation_key(1)) char _IDocSiteControl::GetReadOnly ( );
__declspec(implementation_key(2)) void _IDocSiteControl::PutReadOnly ( char ReadOnly );
__declspec(implementation_key(3)) char _IDocSiteControl::GetSuppressAttachments ( );
__declspec(implementation_key(4)) void _IDocSiteControl::PutSuppressAttachments ( char SuppressAttachments );
__declspec(implementation_key(5)) char _DDocSiteControl::GetReadOnly ( );
__declspec(implementation_key(6)) void _DDocSiteControl::PutReadOnly ( char _arg1 );
__declspec(implementation_key(7)) char _DDocSiteControl::GetSuppressAttachments ( );
__declspec(implementation_key(8)) void _DDocSiteControl::PutSuppressAttachments ( char _arg1 );
__declspec(implementation_key(9)) _bstr_t OlkControl::GetItemProperty ( );
__declspec(implementation_key(10)) void OlkControl::PutItemProperty ( _bstr_t ItemProperty );
__declspec(implementation_key(11)) _bstr_t OlkControl::GetControlProperty ( );
__declspec(implementation_key(12)) void OlkControl::PutControlProperty ( _bstr_t ControlProperty );
__declspec(implementation_key(13)) _bstr_t OlkControl::GetPossibleValues ( );
__declspec(implementation_key(14)) void OlkControl::PutPossibleValues ( _bstr_t PossibleValues );
__declspec(implementation_key(15)) long OlkControl::GetFormat ( );
__declspec(implementation_key(16)) void OlkControl::PutFormat ( long Format );
__declspec(implementation_key(17)) VARIANT_BOOL OlkControl::GetEnableAutoLayout ( );
__declspec(implementation_key(18)) void OlkControl::PutEnableAutoLayout ( VARIANT_BOOL EnableAutoLayout );
__declspec(implementation_key(19)) long OlkControl::GetMinimumWidth ( );
__declspec(implementation_key(20)) void OlkControl::PutMinimumWidth ( long MinimumWidth );
__declspec(implementation_key(21)) long OlkControl::GetMinimumHeight ( );
__declspec(implementation_key(22)) void OlkControl::PutMinimumHeight ( long MinimumHeight );
__declspec(implementation_key(23)) enum OlHorizontalLayout OlkControl::GetHorizontalLayout ( );
__declspec(implementation_key(24)) void OlkControl::PutHorizontalLayout ( enum OlHorizontalLayout HorizontalLayout );
__declspec(implementation_key(25)) enum OlVerticalLayout OlkControl::GetVerticalLayout ( );
__declspec(implementation_key(26)) void OlkControl::PutVerticalLayout ( enum OlVerticalLayout VerticalLayout );
__declspec(implementation_key(27)) VARIANT_BOOL _OlkTextBox::GetAutoSize ( );
__declspec(implementation_key(28)) void _OlkTextBox::PutAutoSize ( VARIANT_BOOL AutoSize );
__declspec(implementation_key(29)) VARIANT_BOOL _OlkTextBox::GetAutoTab ( );
__declspec(implementation_key(30)) void _OlkTextBox::PutAutoTab ( VARIANT_BOOL AutoTab );
__declspec(implementation_key(31)) VARIANT_BOOL _OlkTextBox::GetAutoWordSelect ( );
__declspec(implementation_key(32)) void _OlkTextBox::PutAutoWordSelect ( VARIANT_BOOL AutoWordSelect );
__declspec(implementation_key(33)) OLE_COLOR _OlkTextBox::GetBackColor ( );
__declspec(implementation_key(34)) void _OlkTextBox::PutBackColor ( OLE_COLOR BackColor );
__declspec(implementation_key(35)) enum OlBorderStyle _OlkTextBox::GetBorderStyle ( );
__declspec(implementation_key(36)) void _OlkTextBox::PutBorderStyle ( enum OlBorderStyle BorderStyle );
__declspec(implementation_key(37)) enum OlDragBehavior _OlkTextBox::GetDragBehavior ( );
__declspec(implementation_key(38)) void _OlkTextBox::PutDragBehavior ( enum OlDragBehavior DragBehavior );
__declspec(implementation_key(39)) VARIANT_BOOL _OlkTextBox::GetEnabled ( );
__declspec(implementation_key(40)) void _OlkTextBox::PutEnabled ( VARIANT_BOOL Enabled );
__declspec(implementation_key(41)) enum OlEnterFieldBehavior _OlkTextBox::GetEnterFieldBehavior ( );
__declspec(implementation_key(42)) void _OlkTextBox::PutEnterFieldBehavior ( enum OlEnterFieldBehavior
EnterFieldBehavior );
__declspec(implementation_key(43)) VARIANT_BOOL _OlkTextBox::GetEnterKeyBehavior ( );
__declspec(implementation_key(44)) void _OlkTextBox::PutEnterKeyBehavior ( VARIANT_BOOL EnterKeyBehavior );
__declspec(implementation_key(45)) FontPtr _OlkTextBox::GetFont ( );
__declspec(implementation_key(46)) OLE_COLOR _OlkTextBox::GetForeColor ( );
__declspec(implementation_key(47)) void _OlkTextBox::PutForeColor ( OLE_COLOR ForeColor );
__declspec(implementation_key(48)) VARIANT_BOOL _OlkTextBox::GetHideSelection ( );
__declspec(implementation_key(49)) void _OlkTextBox::PutHideSelection ( VARIANT_BOOL HideSelection );
__declspec(implementation_key(50)) VARIANT_BOOL _OlkTextBox::GetIntegralHeight ( );
__declspec(implementation_key(51)) void _OlkTextBox::PutIntegralHeight ( VARIANT_BOOL IntegralHeight );
__declspec(implementation_key(52)) VARIANT_BOOL _OlkTextBox::GetLocked ( );
__declspec(implementation_key(53)) void _OlkTextBox::PutLocked ( VARIANT_BOOL Locked );
__declspec(implementation_key(54)) long _OlkTextBox::GetMaxLength ( );
__declspec(implementation_key(55)) void _OlkTextBox::PutMaxLength ( long MaxLength );
__declspec(implementation_key(56)) PicturePtr _OlkTextBox::GetMouseIcon ( );
__declspec(implementation_key(57)) void _OlkTextBox::PutMouseIcon ( struct Picture * MouseIcon );
__declspec(implementation_key(58)) enum OlMousePointer _OlkTextBox::GetMousePointer ( );
__declspec(implementation_key(59)) void _OlkTextBox::PutMousePointer ( enum OlMousePointer MousePointer );
__declspec(implementation_key(60)) VARIANT_BOOL _OlkTextBox::GetMultiLine ( );
__declspec(implementation_key(61)) void _OlkTextBox::PutMultiLine ( VARIANT_BOOL MultiLine );
__declspec(implementation_key(62)) _bstr_t _OlkTextBox::GetPasswordChar ( );
__declspec(implementation_key(63)) void _OlkTextBox::PutPasswordChar ( _bstr_t PasswordChar );
__declspec(implementation_key(64)) enum OlScrollBars _OlkTextBox::GetScrollbars ( );
__declspec(implementation_key(65)) void _OlkTextBox::PutScrollbars ( enum OlScrollBars Scrollbars );
__declspec(implementation_key(66)) VARIANT_BOOL _OlkTextBox::GetSelectionMargin ( );
__declspec(implementation_key(67)) void _OlkTextBox::PutSelectionMargin ( VARIANT_BOOL SelectionMargin );
__declspec(implementation_key(68)) VARIANT_BOOL _OlkTextBox::GetTabKeyBehavior ( );
__declspec(implementation_key(69)) void _OlkTextBox::PutTabKeyBehavior ( VARIANT_BOOL TabKeyBehavior );
__declspec(implementation_key(70)) _bstr_t _OlkTextBox::GetText ( );
__declspec(implementation_key(71)) void _OlkTextBox::PutText ( _bstr_t Text );
__declspec(implementation_key(72)) enum OlTextAlign _OlkTextBox::GetTextAlign ( );
__declspec(implementation_key(73)) void _OlkTextBox::PutTextAlign ( enum OlTextAlign TextAlign );
__declspec(implementation_key(74)) _variant_t _OlkTextBox::GetValue ( );
__declspec(implementation_key(75)) void _OlkTextBox::PutValue ( const _variant_t & Value );
__declspec(implementation_key(76)) VARIANT_BOOL _OlkTextBox::GetWordWrap ( );
__declspec(implementation_key(77)) void _OlkTextBox::PutWordWrap ( VARIANT_BOOL WordWrap );
__declspec(implementation_key(78)) long _OlkTextBox::GetSelStart ( );
__declspec(implementation_key(79)) void _OlkTextBox::PutSelStart ( long SelStart );
__declspec(implementation_key(80)) long _OlkTextBox::GetSelLength ( );
__declspec(implementation_key(81)) void _OlkTextBox::PutSelLength ( long SelLength );
__declspec(implementation_key(82)) _bstr_t _OlkTextBox::GetSelText ( );
__declspec(implementation_key(83)) HRESULT _OlkTextBox::Cut ( );
__declspec(implementation_key(84)) HRESULT _OlkTextBox::Copy ( );
__declspec(implementation_key(85)) HRESULT _OlkTextBox::Paste ( );
__declspec(implementation_key(86)) HRESULT _OlkTextBox::Clear ( );
__declspec(implementation_key(87)) VARIANT_BOOL _OlkTextBox::GetEnableRichText ( );
__declspec(implementation_key(88)) void _OlkTextBox::PutEnableRichText ( VARIANT_BOOL EnableRichText );
__declspec(implementation_key(89)) HRESULT OlkTextBoxEvents::Click ( );
__declspec(implementation_key(90)) HRESULT OlkTextBoxEvents::DoubleClick ( );
__declspec(implementation_key(91)) HRESULT OlkTextBoxEvents::MouseDown ( enum OlMouseButton Button, enum OlShiftState
Shift, OLE_XPOS_CONTAINER X, OLE_YPOS_CONTAINER Y );
__declspec(implementation_key(92)) HRESULT OlkTextBoxEvents::MouseMove ( enum OlMouseButton Button, enum OlShiftState
Shift, OLE_XPOS_CONTAINER X, OLE_YPOS_CONTAINER Y );
__declspec(implementation_key(93)) HRESULT OlkTextBoxEvents::MouseUp ( enum OlMouseButton Button, enum OlShiftState
Shift, OLE_XPOS_CONTAINER X, OLE_YPOS_CONTAINER Y );
__declspec(implementation_key(94)) HRESULT OlkTextBoxEvents::Enter ( );
__declspec(implementation_key(95)) HRESULT OlkTextBoxEvents::Exit ( VARIANT_BOOL * Cancel );
__declspec(implementation_key(96)) HRESULT OlkTextBoxEvents::KeyDown ( long * KeyCode, enum OlShiftState Shift );
__declspec(implementation_key(97)) HRESULT OlkTextBoxEvents::KeyPress ( long * KeyAscii );
__declspec(implementation_key(98)) HRESULT OlkTextBoxEvents::KeyUp ( long * KeyCode, enum OlShiftState Shift );
__declspec(implementation_key(99)) HRESULT OlkTextBoxEvents::Change ( );
__declspec(implementation_key(100)) HRESULT OlkTextBoxEvents::AfterUpdate ( );
__declspec(implementation_key(101)) HRESULT OlkTextBoxEvents::BeforeUpdate ( VARIANT_BOOL * Cancel );
__declspec(implementation_key(102)) _bstr_t _OlkLabel::GetAccelerator ( );
__declspec(implementation_key(103)) void _OlkLabel::PutAccelerator ( _bstr_t AcceleratorChar );
__declspec(implementation_key(104)) VARIANT_BOOL _OlkLabel::GetAutoSize ( );
__declspec(implementation_key(105)) void _OlkLabel::PutAutoSize ( VARIANT_BOOL AutoSize );
__declspec(implementation_key(106)) OLE_COLOR _OlkLabel::GetBackColor ( );
__declspec(implementation_key(107)) void _OlkLabel::PutBackColor ( OLE_COLOR BackColor );
__declspec(implementation_key(108)) enum OlBackStyle _OlkLabel::GetBackStyle ( );
__declspec(implementation_key(109)) void _OlkLabel::PutBackStyle ( enum OlBackStyle BackStyle );
__declspec(implementation_key(110)) enum OlBorderStyle _OlkLabel::GetBorderStyle ( );
__declspec(implementation_key(111)) void _OlkLabel::PutBorderStyle ( enum OlBorderStyle BorderStyle );
__declspec(implementation_key(112)) _bstr_t _OlkLabel::GetCaption ( );
__declspec(implementation_key(113)) void _OlkLabel::PutCaption ( _bstr_t Caption );
__declspec(implementation_key(114)) VARIANT_BOOL _OlkLabel::GetEnabled ( );
__declspec(implementation_key(115)) void _OlkLabel::PutEnabled ( VARIANT_BOOL Enabled );
__declspec(implementation_key(116)) FontPtr _OlkLabel::GetFont ( );
__declspec(implementation_key(117)) OLE_COLOR _OlkLabel::GetForeColor ( );
__declspec(implementation_key(118)) void _OlkLabel::PutForeColor ( OLE_COLOR ForeColor );
__declspec(implementation_key(119)) PicturePtr _OlkLabel::GetMouseIcon ( );
__declspec(implementation_key(120)) void _OlkLabel::PutMouseIcon ( struct Picture * MouseIcon );
__declspec(implementation_key(121)) enum OlMousePointer _OlkLabel::GetMousePointer ( );
__declspec(implementation_key(122)) void _OlkLabel::PutMousePointer ( enum OlMousePointer MousePointer );
__declspec(implementation_key(123)) enum OlTextAlign _OlkLabel::GetTextAlign ( );
__declspec(implementation_key(124)) void _OlkLabel::PutTextAlign ( enum OlTextAlign TextAlign );
__declspec(implementation_key(125)) VARIANT_BOOL _OlkLabel::GetWordWrap ( );
__declspec(implementation_key(126)) void _OlkLabel::PutWordWrap ( VARIANT_BOOL WordWrap );
__declspec(implementation_key(127)) _variant_t _OlkLabel::GetValue ( );
__declspec(implementation_key(128)) void _OlkLabel::PutValue ( const _variant_t & Value );
__declspec(implementation_key(129)) VARIANT_BOOL _OlkLabel::GetUseHeaderColor ( );
__declspec(implementation_key(130)) void _OlkLabel::PutUseHeaderColor ( VARIANT_BOOL UseHeaderColor );
__declspec(implementation_key(131)) HRESULT OlkLabelEvents::Click ( );
__declspec(implementation_key(132)) HRESULT OlkLabelEvents::DoubleClick ( );
__declspec(implementation_key(133)) HRESULT OlkLabelEvents::MouseDown ( enum OlMouseButton Button, enum OlShiftState
Shift, OLE_XPOS_CONTAINER X, OLE_YPOS_CONTAINER Y );
__declspec(implementation_key(134)) HRESULT OlkLabelEvents::MouseMove ( enum OlMouseButton Button, enum OlShiftState
Shift, OLE_XPOS_CONTAINER X, OLE_YPOS_CONTAINER Y );
__declspec(implementation_key(135)) HRESULT OlkLabelEvents::MouseUp ( enum OlMouseButton Button, enum OlShiftState
Shift, OLE_XPOS_CONTAINER X, OLE_YPOS_CONTAINER Y );
__declspec(implementation_key(136)) _bstr_t _OlkCommandButton::GetAccelerator ( );
__declspec(implementation_key(137)) void _OlkCommandButton::PutAccelerator ( _bstr_t AcceleratorChar );
__declspec(implementation_key(138)) VARIANT_BOOL _OlkCommandButton::GetAutoSize ( );
__declspec(implementation_key(139)) void _OlkCommandButton::PutAutoSize ( VARIANT_BOOL AutoSize );
__declspec(implementation_key(140)) _bstr_t _OlkCommandButton::GetCaption ( );
__declspec(implementation_key(141)) void _OlkCommandButton::PutCaption ( _bstr_t Caption );
__declspec(implementation_key(142)) VARIANT_BOOL _OlkCommandButton::GetEnabled ( );
__declspec(implementation_key(143)) void _OlkCommandButton::PutEnabled ( VARIANT_BOOL Enabled );
__declspec(implementation_key(144)) FontPtr _OlkCommandButton::GetFont ( );
__declspec(implementation_key(145)) PicturePtr _OlkCommandButton::GetMouseIcon ( );
__declspec(implementation_key(146)) void _OlkCommandButton::PutMouseIcon ( struct Picture * MouseIcon );
__declspec(implementation_key(147)) enum OlMousePointer _OlkCommandButton::GetMousePointer ( );
__declspec(implementation_key(148)) void _OlkCommandButton::PutMousePointer ( enum OlMousePointer MousePointer );
__declspec(implementation_key(149)) VARIANT_BOOL _OlkCommandButton::GetWordWrap ( );
__declspec(implementation_key(150)) void _OlkCommandButton::PutWordWrap ( VARIANT_BOOL WordWrap );
__declspec(implementation_key(151)) enum OlTextAlign _OlkCommandButton::GetTextAlign ( );
__declspec(implementation_key(152)) void _OlkCommandButton::PutTextAlign ( enum OlTextAlign TextAlign );
__declspec(implementation_key(153)) PicturePtr _OlkCommandButton::GetPicture ( );
__declspec(implementation_key(154)) void _OlkCommandButton::PutPicture ( struct Picture * Picture );
__declspec(implementation_key(155)) enum OlPictureAlignment _OlkCommandButton::GetPictureAlignment ( );
__declspec(implementation_key(156)) void _OlkCommandButton::PutPictureAlignment ( enum OlPictureAlignment
PictureAlignment );
__declspec(implementation_key(157)) VARIANT_BOOL _OlkCommandButton::GetDisplayDropArrow ( );
__declspec(implementation_key(158)) void _OlkCommandButton::PutDisplayDropArrow ( VARIANT_BOOL DisplayDropArrow );
__declspec(implementation_key(159)) HRESULT OlkCommandButtonEvents::Click ( );
__declspec(implementation_key(160)) HRESULT OlkCommandButtonEvents::DoubleClick ( );
__declspec(implementation_key(161)) HRESULT OlkCommandButtonEvents::MouseDown ( enum OlMouseButton Button, enum
OlShiftState Shift, OLE_XPOS_CONTAINER X, OLE_YPOS_CONTAINER Y );
__declspec(implementation_key(162)) HRESULT OlkCommandButtonEvents::MouseMove ( enum OlMouseButton Button, enum
OlShiftState Shift, OLE_XPOS_CONTAINER X, OLE_YPOS_CONTAINER Y );
__declspec(implementation_key(163)) HRESULT OlkCommandButtonEvents::MouseUp ( enum OlMouseButton Button, enum
OlShiftState Shift, OLE_XPOS_CONTAINER X, OLE_YPOS_CONTAINER Y );
__declspec(implementation_key(164)) HRESULT OlkCommandButtonEvents::Enter ( );
__declspec(implementation_key(165)) HRESULT OlkCommandButtonEvents::Exit ( VARIANT_BOOL * Cancel );
__declspec(implementation_key(166)) HRESULT OlkCommandButtonEvents::KeyDown ( long * KeyCode, enum OlShiftState Shift );
__declspec(implementation_key(167)) HRESULT OlkCommandButtonEvents::KeyPress ( long * KeyAscii );
__declspec(implementation_key(168)) HRESULT OlkCommandButtonEvents::KeyUp ( long * KeyCode, enum OlShiftState Shift );
__declspec(implementation_key(169)) HRESULT OlkCommandButtonEvents::AfterUpdate ( );
__declspec(implementation_key(170)) HRESULT OlkCommandButtonEvents::BeforeUpdate ( VARIANT_BOOL * Cancel );
__declspec(implementation_key(171)) _bstr_t _OlkCheckBox::GetAccelerator ( );
__declspec(implementation_key(172)) void _OlkCheckBox::PutAccelerator ( _bstr_t AcceleratorChar );
__declspec(implementation_key(173)) enum OlAlignment _OlkCheckBox::GetAlignment ( );
__declspec(implementation_key(174)) void _OlkCheckBox::PutAlignment ( enum OlAlignment Alignment );
__declspec(implementation_key(175)) OLE_COLOR _OlkCheckBox::GetBackColor ( );
__declspec(implementation_key(176)) void _OlkCheckBox::PutBackColor ( OLE_COLOR BackColor );
__declspec(implementation_key(177)) enum OlBackStyle _OlkCheckBox::GetBackStyle ( );
__declspec(implementation_key(178)) void _OlkCheckBox::PutBackStyle ( enum OlBackStyle BackStyle );
__declspec(implementation_key(179)) _bstr_t _OlkCheckBox::GetCaption ( );
__declspec(implementation_key(180)) void _OlkCheckBox::PutCaption ( _bstr_t Caption );
__declspec(implementation_key(181)) VARIANT_BOOL _OlkCheckBox::GetEnabled ( );
__declspec(implementation_key(182)) void _OlkCheckBox::PutEnabled ( VARIANT_BOOL Enabled );
__declspec(implementation_key(183)) FontPtr _OlkCheckBox::GetFont ( );
__declspec(implementation_key(184)) OLE_COLOR _OlkCheckBox::GetForeColor ( );
__declspec(implementation_key(185)) void _OlkCheckBox::PutForeColor ( OLE_COLOR ForeColor );
__declspec(implementation_key(186)) PicturePtr _OlkCheckBox::GetMouseIcon ( );
__declspec(implementation_key(187)) void _OlkCheckBox::PutMouseIcon ( struct Picture * MouseIcon );
__declspec(implementation_key(188)) enum OlMousePointer _OlkCheckBox::GetMousePointer ( );
__declspec(implementation_key(189)) void _OlkCheckBox::PutMousePointer ( enum OlMousePointer MousePointer );
__declspec(implementation_key(190)) VARIANT_BOOL _OlkCheckBox::GetTripleState ( );
__declspec(implementation_key(191)) void _OlkCheckBox::PutTripleState ( VARIANT_BOOL TripleState );
__declspec(implementation_key(192)) _variant_t _OlkCheckBox::GetValue ( );
__declspec(implementation_key(193)) void _OlkCheckBox::PutValue ( const _variant_t & Value );
__declspec(implementation_key(194)) VARIANT_BOOL _OlkCheckBox::GetWordWrap ( );
__declspec(implementation_key(195)) void _OlkCheckBox::PutWordWrap ( VARIANT_BOOL WordWrap );
__declspec(implementation_key(196)) HRESULT OlkCheckBoxEvents::Click ( );
__declspec(implementation_key(197)) HRESULT OlkCheckBoxEvents::DoubleClick ( );
__declspec(implementation_key(198)) HRESULT OlkCheckBoxEvents::MouseDown ( enum OlMouseButton Button, enum OlShiftState
Shift, OLE_XPOS_CONTAINER X, OLE_YPOS_CONTAINER Y );
__declspec(implementation_key(199)) HRESULT OlkCheckBoxEvents::MouseMove ( enum OlMouseButton Button, enum OlShiftState
Shift, OLE_XPOS_CONTAINER X, OLE_YPOS_CONTAINER Y );
__declspec(implementation_key(200)) HRESULT OlkCheckBoxEvents::MouseUp ( enum OlMouseButton Button, enum OlShiftState
Shift, OLE_XPOS_CONTAINER X, OLE_YPOS_CONTAINER Y );
__declspec(implementation_key(201)) HRESULT OlkCheckBoxEvents::Enter ( );
__declspec(implementation_key(202)) HRESULT OlkCheckBoxEvents::Exit ( VARIANT_BOOL * Cancel );
__declspec(implementation_key(203)) HRESULT OlkCheckBoxEvents::KeyDown ( long * KeyCode, enum OlShiftState Shift );
__declspec(implementation_key(204)) HRESULT OlkCheckBoxEvents::KeyPress ( long * KeyAscii );
__declspec(implementation_key(205)) HRESULT OlkCheckBoxEvents::KeyUp ( long * KeyCode, enum OlShiftState Shift );
__declspec(implementation_key(206)) HRESULT OlkCheckBoxEvents::Change ( );
__declspec(implementation_key(207)) HRESULT OlkCheckBoxEvents::AfterUpdate ( );
__declspec(implementation_key(208)) HRESULT OlkCheckBoxEvents::BeforeUpdate ( VARIANT_BOOL * Cancel );
__declspec(implementation_key(209)) _bstr_t _OlkOptionButton::GetAccelerator ( );
__declspec(implementation_key(210)) void _OlkOptionButton::PutAccelerator ( _bstr_t AcceleratorChar );
__declspec(implementation_key(211)) enum OlAlignment _OlkOptionButton::GetAlignment ( );
__declspec(implementation_key(212)) void _OlkOptionButton::PutAlignment ( enum OlAlignment Alignment );
__declspec(implementation_key(213)) OLE_COLOR _OlkOptionButton::GetBackColor ( );
__declspec(implementation_key(214)) void _OlkOptionButton::PutBackColor ( OLE_COLOR BackColor );
__declspec(implementation_key(215)) enum OlBackStyle _OlkOptionButton::GetBackStyle ( );
__declspec(implementation_key(216)) void _OlkOptionButton::PutBackStyle ( enum OlBackStyle BackStyle );
__declspec(implementation_key(217)) _bstr_t _OlkOptionButton::GetCaption ( );
__declspec(implementation_key(218)) void _OlkOptionButton::PutCaption ( _bstr_t Caption );
__declspec(implementation_key(219)) VARIANT_BOOL _OlkOptionButton::GetEnabled ( );
__declspec(implementation_key(220)) void _OlkOptionButton::PutEnabled ( VARIANT_BOOL Enabled );
__declspec(implementation_key(221)) FontPtr _OlkOptionButton::GetFont ( );
__declspec(implementation_key(222)) OLE_COLOR _OlkOptionButton::GetForeColor ( );
__declspec(implementation_key(223)) void _OlkOptionButton::PutForeColor ( OLE_COLOR ForeColor );
__declspec(implementation_key(224)) _bstr_t _OlkOptionButton::GetGroupName ( );
__declspec(implementation_key(225)) void _OlkOptionButton::PutGroupName ( _bstr_t GroupName );
__declspec(implementation_key(226)) PicturePtr _OlkOptionButton::GetMouseIcon ( );
__declspec(implementation_key(227)) void _OlkOptionButton::PutMouseIcon ( struct Picture * MouseIcon );
__declspec(implementation_key(228)) enum OlMousePointer _OlkOptionButton::GetMousePointer ( );
__declspec(implementation_key(229)) void _OlkOptionButton::PutMousePointer ( enum OlMousePointer MousePointer );
__declspec(implementation_key(230)) _variant_t _OlkOptionButton::GetValue ( );
__declspec(implementation_key(231)) void _OlkOptionButton::PutValue ( const _variant_t & Value );
__declspec(implementation_key(232)) VARIANT_BOOL _OlkOptionButton::GetWordWrap ( );
__declspec(implementation_key(233)) void _OlkOptionButton::PutWordWrap ( VARIANT_BOOL WordWrap );
__declspec(implementation_key(234)) HRESULT OlkOptionButtonEvents::Click ( );
__declspec(implementation_key(235)) HRESULT OlkOptionButtonEvents::DoubleClick ( );
__declspec(implementation_key(236)) HRESULT OlkOptionButtonEvents::MouseDown ( enum OlMouseButton Button, enum
OlShiftState Shift, OLE_XPOS_CONTAINER X, OLE_YPOS_CONTAINER Y );
__declspec(implementation_key(237)) HRESULT OlkOptionButtonEvents::MouseMove ( enum OlMouseButton Button, enum
OlShiftState Shift, OLE_XPOS_CONTAINER X, OLE_YPOS_CONTAINER Y );
__declspec(implementation_key(238)) HRESULT OlkOptionButtonEvents::MouseUp ( enum OlMouseButton Button, enum
OlShiftState Shift, OLE_XPOS_CONTAINER X, OLE_YPOS_CONTAINER Y );
__declspec(implementation_key(239)) HRESULT OlkOptionButtonEvents::Enter ( );
__declspec(implementation_key(240)) HRESULT OlkOptionButtonEvents::Exit ( VARIANT_BOOL * Cancel );
__declspec(implementation_key(241)) HRESULT OlkOptionButtonEvents::KeyDown ( long * KeyCode, enum OlShiftState Shift );
__declspec(implementation_key(242)) HRESULT OlkOptionButtonEvents::KeyPress ( long * KeyAscii );
__declspec(implementation_key(243)) HRESULT OlkOptionButtonEvents::KeyUp ( long * KeyCode, enum OlShiftState Shift );
__declspec(implementation_key(244)) HRESULT OlkOptionButtonEvents::Change ( );
__declspec(implementation_key(245)) HRESULT OlkOptionButtonEvents::AfterUpdate ( );
__declspec(implementation_key(246)) HRESULT OlkOptionButtonEvents::BeforeUpdate ( VARIANT_BOOL * Cancel );
__declspec(implementation_key(247)) VARIANT_BOOL _OlkComboBox::GetAutoSize ( );
__declspec(implementation_key(248)) void _OlkComboBox::PutAutoSize ( VARIANT_BOOL AutoSize );
__declspec(implementation_key(249)) VARIANT_BOOL _OlkComboBox::GetAutoTab ( );
__declspec(implementation_key(250)) void _OlkComboBox::PutAutoTab ( VARIANT_BOOL AutoTab );
__declspec(implementation_key(251)) VARIANT_BOOL _OlkComboBox::GetAutoWordSelect ( );
__declspec(implementation_key(252)) void _OlkComboBox::PutAutoWordSelect ( VARIANT_BOOL AutoWordSelect );
__declspec(implementation_key(253)) OLE_COLOR _OlkComboBox::GetBackColor ( );
__declspec(implementation_key(254)) void _OlkComboBox::PutBackColor ( OLE_COLOR BackColor );
__declspec(implementation_key(255)) enum OlBorderStyle _OlkComboBox::GetBorderStyle ( );
__declspec(implementation_key(256)) void _OlkComboBox::PutBorderStyle ( enum OlBorderStyle BorderStyle );
__declspec(implementation_key(257)) enum OlDragBehavior _OlkComboBox::GetDragBehavior ( );
__declspec(implementation_key(258)) void _OlkComboBox::PutDragBehavior ( enum OlDragBehavior DragBehavior );
__declspec(implementation_key(259)) VARIANT_BOOL _OlkComboBox::GetEnabled ( );
__declspec(implementation_key(260)) void _OlkComboBox::PutEnabled ( VARIANT_BOOL Enabled );
__declspec(implementation_key(261)) enum OlEnterFieldBehavior _OlkComboBox::GetEnterFieldBehavior ( );
__declspec(implementation_key(262)) void _OlkComboBox::PutEnterFieldBehavior ( enum OlEnterFieldBehavior
EnterFieldBehavior );
__declspec(implementation_key(263)) FontPtr _OlkComboBox::GetFont ( );
__declspec(implementation_key(264)) OLE_COLOR _OlkComboBox::GetForeColor ( );
__declspec(implementation_key(265)) void _OlkComboBox::PutForeColor ( OLE_COLOR ForeColor );
__declspec(implementation_key(266)) VARIANT_BOOL _OlkComboBox::GetHideSelection ( );
__declspec(implementation_key(267)) void _OlkComboBox::PutHideSelection ( VARIANT_BOOL HideSelection );
__declspec(implementation_key(268)) VARIANT_BOOL _OlkComboBox::GetLocked ( );
__declspec(implementation_key(269)) void _OlkComboBox::PutLocked ( VARIANT_BOOL Locked );
__declspec(implementation_key(270)) long _OlkComboBox::GetMaxLength ( );
__declspec(implementation_key(271)) void _OlkComboBox::PutMaxLength ( long MaxLength );
__declspec(implementation_key(272)) PicturePtr _OlkComboBox::GetMouseIcon ( );
__declspec(implementation_key(273)) void _OlkComboBox::PutMouseIcon ( struct Picture * MouseIcon );
__declspec(implementation_key(274)) enum OlMousePointer _OlkComboBox::GetMousePointer ( );
__declspec(implementation_key(275)) void _OlkComboBox::PutMousePointer ( enum OlMousePointer MousePointer );
__declspec(implementation_key(276)) VARIANT_BOOL _OlkComboBox::GetSelectionMargin ( );
__declspec(implementation_key(277)) void _OlkComboBox::PutSelectionMargin ( VARIANT_BOOL SelectionMargin );
__declspec(implementation_key(278)) enum OlComboBoxStyle _OlkComboBox::GetStyle ( );
__declspec(implementation_key(279)) void _OlkComboBox::PutStyle ( enum OlComboBoxStyle Style );
__declspec(implementation_key(280)) _bstr_t _OlkComboBox::GetText ( );
__declspec(implementation_key(281)) void _OlkComboBox::PutText ( _bstr_t Text );
__declspec(implementation_key(282)) enum OlTextAlign _OlkComboBox::GetTextAlign ( );
__declspec(implementation_key(283)) void _OlkComboBox::PutTextAlign ( enum OlTextAlign TextAlign );
__declspec(implementation_key(284)) long _OlkComboBox::GetTopIndex ( );
__declspec(implementation_key(285)) void _OlkComboBox::PutTopIndex ( long TopIndex );
__declspec(implementation_key(286)) _variant_t _OlkComboBox::GetValue ( );
__declspec(implementation_key(287)) void _OlkComboBox::PutValue ( const _variant_t & Value );
__declspec(implementation_key(288)) long _OlkComboBox::GetListIndex ( );
__declspec(implementation_key(289)) void _OlkComboBox::PutListIndex ( long ListIndex );
__declspec(implementation_key(290)) long _OlkComboBox::GetListCount ( );
__declspec(implementation_key(291)) long _OlkComboBox::GetSelStart ( );
__declspec(implementation_key(292)) void _OlkComboBox::PutSelStart ( long SelStart );
__declspec(implementation_key(293)) long _OlkComboBox::GetSelLength ( );
__declspec(implementation_key(294)) void _OlkComboBox::PutSelLength ( long SelLength );
__declspec(implementation_key(295)) _bstr_t _OlkComboBox::GetSelText ( );
__declspec(implementation_key(296)) _bstr_t _OlkComboBox::GetItem ( long Index );
__declspec(implementation_key(297)) HRESULT _OlkComboBox::SetItem ( long Index, _bstr_t Item );
__declspec(implementation_key(298)) HRESULT _OlkComboBox::Cut ( );
__declspec(implementation_key(299)) HRESULT _OlkComboBox::Copy ( );
__declspec(implementation_key(300)) HRESULT _OlkComboBox::Paste ( );
__declspec(implementation_key(301)) HRESULT _OlkComboBox::Clear ( );
__declspec(implementation_key(302)) HRESULT _OlkComboBox::AddItem ( _bstr_t ItemText, const _variant_t & Index );
__declspec(implementation_key(303)) HRESULT _OlkComboBox::RemoveItem ( long Index );
__declspec(implementation_key(304)) HRESULT _OlkComboBox::DropDown ( );
__declspec(implementation_key(305)) HRESULT OlkComboBoxEvents::Click ( );
__declspec(implementation_key(306)) HRESULT OlkComboBoxEvents::DoubleClick ( );
__declspec(implementation_key(307)) HRESULT OlkComboBoxEvents::MouseDown ( enum OlMouseButton Button, enum OlShiftState
Shift, OLE_XPOS_CONTAINER X, OLE_YPOS_CONTAINER Y );
__declspec(implementation_key(308)) HRESULT OlkComboBoxEvents::MouseMove ( enum OlMouseButton Button, enum OlShiftState
Shift, OLE_XPOS_CONTAINER X, OLE_YPOS_CONTAINER Y );
__declspec(implementation_key(309)) HRESULT OlkComboBoxEvents::MouseUp ( enum OlMouseButton Button, enum OlShiftState
Shift, OLE_XPOS_CONTAINER X, OLE_YPOS_CONTAINER Y );
__declspec(implementation_key(310)) HRESULT OlkComboBoxEvents::Enter ( );
__declspec(implementation_key(311)) HRESULT OlkComboBoxEvents::Exit ( VARIANT_BOOL * Cancel );
__declspec(implementation_key(312)) HRESULT OlkComboBoxEvents::KeyDown ( long * KeyCode, enum OlShiftState Shift );
__declspec(implementation_key(313)) HRESULT OlkComboBoxEvents::KeyPress ( long * KeyAscii );
__declspec(implementation_key(314)) HRESULT OlkComboBoxEvents::KeyUp ( long * KeyCode, enum OlShiftState Shift );
__declspec(implementation_key(315)) HRESULT OlkComboBoxEvents::Change ( );
__declspec(implementation_key(316)) HRESULT OlkComboBoxEvents::DropButtonClick ( );
__declspec(implementation_key(317)) HRESULT OlkComboBoxEvents::AfterUpdate ( );
__declspec(implementation_key(318)) HRESULT OlkComboBoxEvents::BeforeUpdate ( VARIANT_BOOL * Cancel );
__declspec(implementation_key(319)) enum OlBorderStyle _OlkListBox::GetBorderStyle ( );
__declspec(implementation_key(320)) void _OlkListBox::PutBorderStyle ( enum OlBorderStyle BorderStyle );
__declspec(implementation_key(321)) OLE_COLOR _OlkListBox::GetBackColor ( );
__declspec(implementation_key(322)) void _OlkListBox::PutBackColor ( OLE_COLOR BackColor );
__declspec(implementation_key(323)) VARIANT_BOOL _OlkListBox::GetEnabled ( );
__declspec(implementation_key(324)) void _OlkListBox::PutEnabled ( VARIANT_BOOL Enabled );
__declspec(implementation_key(325)) FontPtr _OlkListBox::GetFont ( );
__declspec(implementation_key(326)) OLE_COLOR _OlkListBox::GetForeColor ( );
__declspec(implementation_key(327)) void _OlkListBox::PutForeColor ( OLE_COLOR ForeColor );
__declspec(implementation_key(328)) VARIANT_BOOL _OlkListBox::GetLocked ( );
__declspec(implementation_key(329)) void _OlkListBox::PutLocked ( VARIANT_BOOL Locked );
__declspec(implementation_key(330)) enum OlMatchEntry _OlkListBox::GetMatchEntry ( );
__declspec(implementation_key(331)) void _OlkListBox::PutMatchEntry ( enum OlMatchEntry MatchEntry );
__declspec(implementation_key(332)) PicturePtr _OlkListBox::GetMouseIcon ( );
__declspec(implementation_key(333)) void _OlkListBox::PutMouseIcon ( struct Picture * MouseIcon );
__declspec(implementation_key(334)) enum OlMousePointer _OlkListBox::GetMousePointer ( );
__declspec(implementation_key(335)) void _OlkListBox::PutMousePointer ( enum OlMousePointer MousePointer );
__declspec(implementation_key(336)) enum OlMultiSelect _OlkListBox::GetMultiSelect ( );
__declspec(implementation_key(337)) void _OlkListBox::PutMultiSelect ( enum OlMultiSelect MultiSelect );
__declspec(implementation_key(338)) _bstr_t _OlkListBox::GetText ( );
__declspec(implementation_key(339)) void _OlkListBox::PutText ( _bstr_t Text );
__declspec(implementation_key(340)) enum OlTextAlign _OlkListBox::GetTextAlign ( );
__declspec(implementation_key(341)) void _OlkListBox::PutTextAlign ( enum OlTextAlign TextAlign );
__declspec(implementation_key(342)) long _OlkListBox::GetTopIndex ( );
__declspec(implementation_key(343)) void _OlkListBox::PutTopIndex ( long TopIndex );
__declspec(implementation_key(344)) _variant_t _OlkListBox::GetValue ( );
__declspec(implementation_key(345)) void _OlkListBox::PutValue ( const _variant_t & Value );
__declspec(implementation_key(346)) long _OlkListBox::GetListIndex ( );
__declspec(implementation_key(347)) void _OlkListBox::PutListIndex ( long ListIndex );
__declspec(implementation_key(348)) long _OlkListBox::GetListCount ( );
__declspec(implementation_key(349)) _bstr_t _OlkListBox::GetItem ( long Index );
__declspec(implementation_key(350)) HRESULT _OlkListBox::SetItem ( long Index, _bstr_t Item );
__declspec(implementation_key(351)) VARIANT_BOOL _OlkListBox::GetSelected ( long Index );
__declspec(implementation_key(352)) HRESULT _OlkListBox::SetSelected ( long Index, VARIANT_BOOL Selected );
__declspec(implementation_key(353)) HRESULT _OlkListBox::Copy ( );
__declspec(implementation_key(354)) HRESULT _OlkListBox::Clear ( );
__declspec(implementation_key(355)) HRESULT _OlkListBox::AddItem ( _bstr_t ItemText, const _variant_t & Index );
__declspec(implementation_key(356)) HRESULT _OlkListBox::RemoveItem ( long Index );
__declspec(implementation_key(357)) HRESULT OlkListBoxEvents::Click ( );
__declspec(implementation_key(358)) HRESULT OlkListBoxEvents::DoubleClick ( );
__declspec(implementation_key(359)) HRESULT OlkListBoxEvents::MouseDown ( enum OlMouseButton Button, enum OlShiftState
Shift, OLE_XPOS_CONTAINER X, OLE_YPOS_CONTAINER Y );
__declspec(implementation_key(360)) HRESULT OlkListBoxEvents::MouseMove ( enum OlMouseButton Button, enum OlShiftState
Shift, OLE_XPOS_CONTAINER X, OLE_YPOS_CONTAINER Y );
__declspec(implementation_key(361)) HRESULT OlkListBoxEvents::MouseUp ( enum OlMouseButton Button, enum OlShiftState
Shift, OLE_XPOS_CONTAINER X, OLE_YPOS_CONTAINER Y );
__declspec(implementation_key(362)) HRESULT OlkListBoxEvents::Enter ( );
__declspec(implementation_key(363)) HRESULT OlkListBoxEvents::Exit ( VARIANT_BOOL * Cancel );
__declspec(implementation_key(364)) HRESULT OlkListBoxEvents::KeyDown ( long * KeyCode, enum OlShiftState Shift );
__declspec(implementation_key(365)) HRESULT OlkListBoxEvents::KeyPress ( long * KeyAscii );
__declspec(implementation_key(366)) HRESULT OlkListBoxEvents::KeyUp ( long * KeyCode, enum OlShiftState Shift );
__declspec(implementation_key(367)) HRESULT OlkListBoxEvents::Change ( );
__declspec(implementation_key(368)) HRESULT OlkListBoxEvents::AfterUpdate ( );
__declspec(implementation_key(369)) HRESULT OlkListBoxEvents::BeforeUpdate ( VARIANT_BOOL * Cancel );
__declspec(implementation_key(370)) PicturePtr _OlkInfoBar::GetMouseIcon ( );
__declspec(implementation_key(371)) void _OlkInfoBar::PutMouseIcon ( struct Picture * MouseIcon );
__declspec(implementation_key(372)) enum OlMousePointer _OlkInfoBar::GetMousePointer ( );
__declspec(implementation_key(373)) void _OlkInfoBar::PutMousePointer ( enum OlMousePointer MousePointer );
__declspec(implementation_key(374)) HRESULT OlkInfoBarEvents::Click ( );
__declspec(implementation_key(375)) HRESULT OlkInfoBarEvents::DoubleClick ( );
__declspec(implementation_key(376)) HRESULT OlkInfoBarEvents::MouseDown ( enum OlMouseButton Button, enum OlShiftState
Shift, OLE_XPOS_CONTAINER X, OLE_YPOS_CONTAINER Y );
__declspec(implementation_key(377)) HRESULT OlkInfoBarEvents::MouseMove ( enum OlMouseButton Button, enum OlShiftState
Shift, OLE_XPOS_CONTAINER X, OLE_YPOS_CONTAINER Y );
__declspec(implementation_key(378)) HRESULT OlkInfoBarEvents::MouseUp ( enum OlMouseButton Button, enum OlShiftState
Shift, OLE_XPOS_CONTAINER X, OLE_YPOS_CONTAINER Y );
__declspec(implementation_key(379)) VARIANT_BOOL _OlkContactPhoto::GetEnabled ( );
__declspec(implementation_key(380)) void _OlkContactPhoto::PutEnabled ( VARIANT_BOOL Enabled );
__declspec(implementation_key(381)) PicturePtr _OlkContactPhoto::GetMouseIcon ( );
__declspec(implementation_key(382)) void _OlkContactPhoto::PutMouseIcon ( struct Picture * MouseIcon );
__declspec(implementation_key(383)) enum OlMousePointer _OlkContactPhoto::GetMousePointer ( );
__declspec(implementation_key(384)) void _OlkContactPhoto::PutMousePointer ( enum OlMousePointer MousePointer );
__declspec(implementation_key(385)) HRESULT OlkContactPhotoEvents::Click ( );
__declspec(implementation_key(386)) HRESULT OlkContactPhotoEvents::DoubleClick ( );
__declspec(implementation_key(387)) HRESULT OlkContactPhotoEvents::MouseDown ( enum OlMouseButton Button, enum
OlShiftState Shift, OLE_XPOS_CONTAINER X, OLE_YPOS_CONTAINER Y );
__declspec(implementation_key(388)) HRESULT OlkContactPhotoEvents::MouseMove ( enum OlMouseButton Button, enum
OlShiftState Shift, OLE_XPOS_CONTAINER X, OLE_YPOS_CONTAINER Y );
__declspec(implementation_key(389)) HRESULT OlkContactPhotoEvents::MouseUp ( enum OlMouseButton Button, enum
OlShiftState Shift, OLE_XPOS_CONTAINER X, OLE_YPOS_CONTAINER Y );
__declspec(implementation_key(390)) HRESULT OlkContactPhotoEvents::Enter ( );
__declspec(implementation_key(391)) HRESULT OlkContactPhotoEvents::Exit ( VARIANT_BOOL * Cancel );
__declspec(implementation_key(392)) HRESULT OlkContactPhotoEvents::KeyDown ( long * KeyCode, enum OlShiftState Shift );
__declspec(implementation_key(393)) HRESULT OlkContactPhotoEvents::KeyPress ( long * KeyAscii );
__declspec(implementation_key(394)) HRESULT OlkContactPhotoEvents::KeyUp ( long * KeyCode, enum OlShiftState Shift );
__declspec(implementation_key(395)) HRESULT OlkContactPhotoEvents::Change ( );
__declspec(implementation_key(396)) PicturePtr _OlkBusinessCardControl::GetMouseIcon ( );
__declspec(implementation_key(397)) void _OlkBusinessCardControl::PutMouseIcon ( struct Picture * MouseIcon );
__declspec(implementation_key(398)) enum OlMousePointer _OlkBusinessCardControl::GetMousePointer ( );
__declspec(implementation_key(399)) void _OlkBusinessCardControl::PutMousePointer ( enum OlMousePointer MousePointer );
__declspec(implementation_key(400)) HRESULT OlkBusinessCardControlEvents::Click ( );
__declspec(implementation_key(401)) HRESULT OlkBusinessCardControlEvents::DoubleClick ( );
__declspec(implementation_key(402)) HRESULT OlkBusinessCardControlEvents::MouseDown ( enum OlMouseButton Button, enum
OlShiftState Shift, OLE_XPOS_CONTAINER X, OLE_YPOS_CONTAINER Y );
__declspec(implementation_key(403)) HRESULT OlkBusinessCardControlEvents::MouseMove ( enum OlMouseButton Button, enum
OlShiftState Shift, OLE_XPOS_CONTAINER X, OLE_YPOS_CONTAINER Y );
__declspec(implementation_key(404)) HRESULT OlkBusinessCardControlEvents::MouseUp ( enum OlMouseButton Button, enum
OlShiftState Shift, OLE_XPOS_CONTAINER X, OLE_YPOS_CONTAINER Y );
__declspec(implementation_key(405)) enum OlPageType _OlkPageControl::GetPage ( );
__declspec(implementation_key(406)) void _OlkPageControl::PutPage ( enum OlPageType PageID );
__declspec(implementation_key(407)) VARIANT_BOOL _OlkDateControl::GetAutoSize ( );
__declspec(implementation_key(408)) void _OlkDateControl::PutAutoSize ( VARIANT_BOOL AutoSize );
__declspec(implementation_key(409)) VARIANT_BOOL _OlkDateControl::GetAutoWordSelect ( );
__declspec(implementation_key(410)) void _OlkDateControl::PutAutoWordSelect ( VARIANT_BOOL AutoWordSelect );
__declspec(implementation_key(411)) OLE_COLOR _OlkDateControl::GetBackColor ( );
__declspec(implementation_key(412)) void _OlkDateControl::PutBackColor ( OLE_COLOR BackColor );
__declspec(implementation_key(413)) enum OlBackStyle _OlkDateControl::GetBackStyle ( );
__declspec(implementation_key(414)) void _OlkDateControl::PutBackStyle ( enum OlBackStyle BackStyle );
__declspec(implementation_key(415)) DATE _OlkDateControl::GetDate ( );
__declspec(implementation_key(416)) void _OlkDateControl::PutDate ( DATE Date );
__declspec(implementation_key(417)) VARIANT_BOOL _OlkDateControl::GetEnabled ( );
__declspec(implementation_key(418)) void _OlkDateControl::PutEnabled ( VARIANT_BOOL Enabled );
__declspec(implementation_key(419)) enum OlEnterFieldBehavior _OlkDateControl::GetEnterFieldBehavior ( );
__declspec(implementation_key(420)) void _OlkDateControl::PutEnterFieldBehavior ( enum OlEnterFieldBehavior
EnterFieldBehavior );
__declspec(implementation_key(421)) FontPtr _OlkDateControl::GetFont ( );
__declspec(implementation_key(422)) OLE_COLOR _OlkDateControl::GetForeColor ( );
__declspec(implementation_key(423)) void _OlkDateControl::PutForeColor ( OLE_COLOR ForeColor );
__declspec(implementation_key(424)) VARIANT_BOOL _OlkDateControl::GetHideSelection ( );
__declspec(implementation_key(425)) void _OlkDateControl::PutHideSelection ( VARIANT_BOOL HideSelection );
__declspec(implementation_key(426)) VARIANT_BOOL _OlkDateControl::GetLocked ( );
__declspec(implementation_key(427)) void _OlkDateControl::PutLocked ( VARIANT_BOOL Locked );
__declspec(implementation_key(428)) PicturePtr _OlkDateControl::GetMouseIcon ( );
__declspec(implementation_key(429)) void _OlkDateControl::PutMouseIcon ( struct Picture * MouseIcon );
__declspec(implementation_key(430)) enum OlMousePointer _OlkDateControl::GetMousePointer ( );
__declspec(implementation_key(431)) void _OlkDateControl::PutMousePointer ( enum OlMousePointer MousePointer );
__declspec(implementation_key(432)) VARIANT_BOOL _OlkDateControl::GetShowNoneButton ( );
__declspec(implementation_key(433)) void _OlkDateControl::PutShowNoneButton ( VARIANT_BOOL ShowNoneButton );
__declspec(implementation_key(434)) _bstr_t _OlkDateControl::GetText ( );
__declspec(implementation_key(435)) void _OlkDateControl::PutText ( _bstr_t Text );
__declspec(implementation_key(436)) enum OlTextAlign _OlkDateControl::GetTextAlign ( );
__declspec(implementation_key(437)) void _OlkDateControl::PutTextAlign ( enum OlTextAlign TextAlign );
__declspec(implementation_key(438)) _variant_t _OlkDateControl::GetValue ( );
__declspec(implementation_key(439)) void _OlkDateControl::PutValue ( const _variant_t & Value );
__declspec(implementation_key(440)) HRESULT _OlkDateControl::DropDown ( );
__declspec(implementation_key(441)) HRESULT OlkDateControlEvents::Click ( );
__declspec(implementation_key(442)) HRESULT OlkDateControlEvents::DoubleClick ( );
__declspec(implementation_key(443)) HRESULT OlkDateControlEvents::MouseDown ( enum OlMouseButton Button, enum
OlShiftState Shift, OLE_XPOS_CONTAINER X, OLE_YPOS_CONTAINER Y );
__declspec(implementation_key(444)) HRESULT OlkDateControlEvents::MouseMove ( enum OlMouseButton Button, enum
OlShiftState Shift, OLE_XPOS_CONTAINER X, OLE_YPOS_CONTAINER Y );
__declspec(implementation_key(445)) HRESULT OlkDateControlEvents::MouseUp ( enum OlMouseButton Button, enum OlShiftState
Shift, OLE_XPOS_CONTAINER X, OLE_YPOS_CONTAINER Y );
__declspec(implementation_key(446)) HRESULT OlkDateControlEvents::Enter ( );
__declspec(implementation_key(447)) HRESULT OlkDateControlEvents::Exit ( VARIANT_BOOL * Cancel );
__declspec(implementation_key(448)) HRESULT OlkDateControlEvents::KeyDown ( long * KeyCode, enum OlShiftState Shift );
__declspec(implementation_key(449)) HRESULT OlkDateControlEvents::KeyPress ( long * KeyAscii );
__declspec(implementation_key(450)) HRESULT OlkDateControlEvents::KeyUp ( long * KeyCode, enum OlShiftState Shift );
__declspec(implementation_key(451)) HRESULT OlkDateControlEvents::Change ( );
__declspec(implementation_key(452)) HRESULT OlkDateControlEvents::DropButtonClick ( );
__declspec(implementation_key(453)) HRESULT OlkDateControlEvents::AfterUpdate ( );
__declspec(implementation_key(454)) HRESULT OlkDateControlEvents::BeforeUpdate ( VARIANT_BOOL * Cancel );
__declspec(implementation_key(455)) VARIANT_BOOL _OlkTimeControl::GetAutoSize ( );
__declspec(implementation_key(456)) void _OlkTimeControl::PutAutoSize ( VARIANT_BOOL AutoSize );
__declspec(implementation_key(457)) VARIANT_BOOL _OlkTimeControl::GetAutoWordSelect ( );
__declspec(implementation_key(458)) void _OlkTimeControl::PutAutoWordSelect ( VARIANT_BOOL AutoWordSelect );
__declspec(implementation_key(459)) OLE_COLOR _OlkTimeControl::GetBackColor ( );
__declspec(implementation_key(460)) void _OlkTimeControl::PutBackColor ( OLE_COLOR BackColor );
__declspec(implementation_key(461)) enum OlBackStyle _OlkTimeControl::GetBackStyle ( );
__declspec(implementation_key(462)) void _OlkTimeControl::PutBackStyle ( enum OlBackStyle BackStyle );
__declspec(implementation_key(463)) VARIANT_BOOL _OlkTimeControl::GetEnabled ( );
__declspec(implementation_key(464)) void _OlkTimeControl::PutEnabled ( VARIANT_BOOL Enabled );
__declspec(implementation_key(465)) enum OlEnterFieldBehavior _OlkTimeControl::GetEnterFieldBehavior ( );
__declspec(implementation_key(466)) void _OlkTimeControl::PutEnterFieldBehavior ( enum OlEnterFieldBehavior
EnterFieldBehavior );
__declspec(implementation_key(467)) FontPtr _OlkTimeControl::GetFont ( );
__declspec(implementation_key(468)) OLE_COLOR _OlkTimeControl::GetForeColor ( );
__declspec(implementation_key(469)) void _OlkTimeControl::PutForeColor ( OLE_COLOR ForeColor );
__declspec(implementation_key(470)) VARIANT_BOOL _OlkTimeControl::GetHideSelection ( );
__declspec(implementation_key(471)) void _OlkTimeControl::PutHideSelection ( VARIANT_BOOL HideSelection );
__declspec(implementation_key(472)) VARIANT_BOOL _OlkTimeControl::GetLocked ( );
__declspec(implementation_key(473)) void _OlkTimeControl::PutLocked ( VARIANT_BOOL Locked );
__declspec(implementation_key(474)) PicturePtr _OlkTimeControl::GetMouseIcon ( );
__declspec(implementation_key(475)) void _OlkTimeControl::PutMouseIcon ( struct Picture * MouseIcon );
__declspec(implementation_key(476)) enum OlMousePointer _OlkTimeControl::GetMousePointer ( );
__declspec(implementation_key(477)) void _OlkTimeControl::PutMousePointer ( enum OlMousePointer MousePointer );
__declspec(implementation_key(478)) DATE _OlkTimeControl::GetReferenceTime ( );
__declspec(implementation_key(479)) void _OlkTimeControl::PutReferenceTime ( DATE ReferenceTime );
__declspec(implementation_key(480)) enum OlTimeStyle _OlkTimeControl::GetStyle ( );
__declspec(implementation_key(481)) void _OlkTimeControl::PutStyle ( enum OlTimeStyle TimeStyle );
__declspec(implementation_key(482)) DATE _OlkTimeControl::GetTime ( );
__declspec(implementation_key(483)) void _OlkTimeControl::PutTime ( DATE Time );
__declspec(implementation_key(484)) _bstr_t _OlkTimeControl::GetText ( );
__declspec(implementation_key(485)) void _OlkTimeControl::PutText ( _bstr_t Text );
__declspec(implementation_key(486)) enum OlTextAlign _OlkTimeControl::GetTextAlign ( );
__declspec(implementation_key(487)) void _OlkTimeControl::PutTextAlign ( enum OlTextAlign TextAlign );
__declspec(implementation_key(488)) _variant_t _OlkTimeControl::GetValue ( );
__declspec(implementation_key(489)) void _OlkTimeControl::PutValue ( const _variant_t & Value );
__declspec(implementation_key(490)) DATE _OlkTimeControl::GetIntervalTime ( );
__declspec(implementation_key(491)) void _OlkTimeControl::PutIntervalTime ( DATE IntervalTime );
__declspec(implementation_key(492)) HRESULT _OlkTimeControl::DropDown ( );
__declspec(implementation_key(493)) HRESULT OlkTimeControlEvents::Click ( );
__declspec(implementation_key(494)) HRESULT OlkTimeControlEvents::DoubleClick ( );
__declspec(implementation_key(495)) HRESULT OlkTimeControlEvents::MouseDown ( enum OlMouseButton Button, enum
OlShiftState Shift, OLE_XPOS_CONTAINER X, OLE_YPOS_CONTAINER Y );
__declspec(implementation_key(496)) HRESULT OlkTimeControlEvents::MouseMove ( enum OlMouseButton Button, enum
OlShiftState Shift, OLE_XPOS_CONTAINER X, OLE_YPOS_CONTAINER Y );
__declspec(implementation_key(497)) HRESULT OlkTimeControlEvents::MouseUp ( enum OlMouseButton Button, enum OlShiftState
Shift, OLE_XPOS_CONTAINER X, OLE_YPOS_CONTAINER Y );
__declspec(implementation_key(498)) HRESULT OlkTimeControlEvents::Enter ( );
__declspec(implementation_key(499)) HRESULT OlkTimeControlEvents::Exit ( VARIANT_BOOL * Cancel );
__declspec(implementation_key(500)) HRESULT OlkTimeControlEvents::KeyDown ( long * KeyCode, enum OlShiftState Shift );
__declspec(implementation_key(501)) HRESULT OlkTimeControlEvents::KeyPress ( long * KeyAscii );
__declspec(implementation_key(502)) HRESULT OlkTimeControlEvents::KeyUp ( long * KeyCode, enum OlShiftState Shift );
__declspec(implementation_key(503)) HRESULT OlkTimeControlEvents::Change ( );
__declspec(implementation_key(504)) HRESULT OlkTimeControlEvents::DropButtonClick ( );
__declspec(implementation_key(505)) HRESULT OlkTimeControlEvents::AfterUpdate ( );
__declspec(implementation_key(506)) HRESULT OlkTimeControlEvents::BeforeUpdate ( VARIANT_BOOL * Cancel );
__declspec(implementation_key(507)) VARIANT_BOOL _OlkCategory::GetAutoSize ( );
__declspec(implementation_key(508)) void _OlkCategory::PutAutoSize ( VARIANT_BOOL AutoSize );
__declspec(implementation_key(509)) OLE_COLOR _OlkCategory::GetBackColor ( );
__declspec(implementation_key(510)) void _OlkCategory::PutBackColor ( OLE_COLOR BackColor );
__declspec(implementation_key(511)) enum OlBackStyle _OlkCategory::GetBackStyle ( );
__declspec(implementation_key(512)) void _OlkCategory::PutBackStyle ( enum OlBackStyle BackStyle );
__declspec(implementation_key(513)) VARIANT_BOOL _OlkCategory::GetEnabled ( );
__declspec(implementation_key(514)) void _OlkCategory::PutEnabled ( VARIANT_BOOL Enabled );
__declspec(implementation_key(515)) OLE_COLOR _OlkCategory::GetForeColor ( );
__declspec(implementation_key(516)) void _OlkCategory::PutForeColor ( OLE_COLOR ForeColor );
__declspec(implementation_key(517)) PicturePtr _OlkCategory::GetMouseIcon ( );
__declspec(implementation_key(518)) void _OlkCategory::PutMouseIcon ( struct Picture * MouseIcon );
__declspec(implementation_key(519)) enum OlMousePointer _OlkCategory::GetMousePointer ( );
__declspec(implementation_key(520)) void _OlkCategory::PutMousePointer ( enum OlMousePointer MousePointer );
__declspec(implementation_key(521)) HRESULT OlkCategoryEvents::Click ( );
__declspec(implementation_key(522)) HRESULT OlkCategoryEvents::DoubleClick ( );
__declspec(implementation_key(523)) HRESULT OlkCategoryEvents::MouseDown ( enum OlMouseButton Button, enum OlShiftState
Shift, OLE_XPOS_CONTAINER X, OLE_YPOS_CONTAINER Y );
__declspec(implementation_key(524)) HRESULT OlkCategoryEvents::MouseMove ( enum OlMouseButton Button, enum OlShiftState
Shift, OLE_XPOS_CONTAINER X, OLE_YPOS_CONTAINER Y );
__declspec(implementation_key(525)) HRESULT OlkCategoryEvents::MouseUp ( enum OlMouseButton Button, enum OlShiftState
Shift, OLE_XPOS_CONTAINER X, OLE_YPOS_CONTAINER Y );
__declspec(implementation_key(526)) HRESULT OlkCategoryEvents::Enter ( );
__declspec(implementation_key(527)) HRESULT OlkCategoryEvents::Exit ( VARIANT_BOOL * Cancel );
__declspec(implementation_key(528)) HRESULT OlkCategoryEvents::KeyDown ( long * KeyCode, enum OlShiftState Shift );
__declspec(implementation_key(529)) HRESULT OlkCategoryEvents::KeyPress ( long * KeyAscii );
__declspec(implementation_key(530)) HRESULT OlkCategoryEvents::KeyUp ( long * KeyCode, enum OlShiftState Shift );
__declspec(implementation_key(531)) HRESULT OlkCategoryEvents::Change ( );
__declspec(implementation_key(532)) enum OlAlignment _OlkFrameHeader::GetAlignment ( );
__declspec(implementation_key(533)) void _OlkFrameHeader::PutAlignment ( enum OlAlignment Alignment );
__declspec(implementation_key(534)) _bstr_t _OlkFrameHeader::GetCaption ( );
__declspec(implementation_key(535)) void _OlkFrameHeader::PutCaption ( _bstr_t Caption );
__declspec(implementation_key(536)) FontPtr _OlkFrameHeader::GetFont ( );
__declspec(implementation_key(537)) OLE_COLOR _OlkFrameHeader::GetForeColor ( );
__declspec(implementation_key(538)) void _OlkFrameHeader::PutForeColor ( OLE_COLOR ForeColor );
__declspec(implementation_key(539)) VARIANT_BOOL _OlkFrameHeader::GetEnabled ( );
__declspec(implementation_key(540)) void _OlkFrameHeader::PutEnabled ( VARIANT_BOOL Enabled );
__declspec(implementation_key(541)) PicturePtr _OlkFrameHeader::GetMouseIcon ( );
__declspec(implementation_key(542)) void _OlkFrameHeader::PutMouseIcon ( struct Picture * MouseIcon );
__declspec(implementation_key(543)) enum OlMousePointer _OlkFrameHeader::GetMousePointer ( );
__declspec(implementation_key(544)) void _OlkFrameHeader::PutMousePointer ( enum OlMousePointer MousePointer );
__declspec(implementation_key(545)) VARIANT_BOOL _OlkSenderPhoto::GetEnabled ( );
__declspec(implementation_key(546)) void _OlkSenderPhoto::PutEnabled ( VARIANT_BOOL Enabled );
__declspec(implementation_key(547)) PicturePtr _OlkSenderPhoto::GetMouseIcon ( );
__declspec(implementation_key(548)) void _OlkSenderPhoto::PutMouseIcon ( struct Picture * MouseIcon );
__declspec(implementation_key(549)) enum OlMousePointer _OlkSenderPhoto::GetMousePointer ( );
__declspec(implementation_key(550)) void _OlkSenderPhoto::PutMousePointer ( enum OlMousePointer MousePointer );
__declspec(implementation_key(551)) long _OlkSenderPhoto::GetPreferredWidth ( );
__declspec(implementation_key(552)) long _OlkSenderPhoto::GetPreferredHeight ( );
__declspec(implementation_key(553)) HRESULT OlkSenderPhotoEvents::Click ( );
__declspec(implementation_key(554)) HRESULT OlkSenderPhotoEvents::DoubleClick ( );
__declspec(implementation_key(555)) HRESULT OlkSenderPhotoEvents::MouseDown ( enum OlMouseButton Button, enum
OlShiftState Shift, OLE_XPOS_CONTAINER X, OLE_YPOS_CONTAINER Y );
__declspec(implementation_key(556)) HRESULT OlkSenderPhotoEvents::MouseMove ( enum OlMouseButton Button, enum
OlShiftState Shift, OLE_XPOS_CONTAINER X, OLE_YPOS_CONTAINER Y );
__declspec(implementation_key(557)) HRESULT OlkSenderPhotoEvents::MouseUp ( enum OlMouseButton Button, enum OlShiftState
Shift, OLE_XPOS_CONTAINER X, OLE_YPOS_CONTAINER Y );
__declspec(implementation_key(558)) HRESULT OlkSenderPhotoEvents::Change ( );
__declspec(implementation_key(559)) HRESULT ItemEvents::Open ( VARIANT_BOOL * Cancel );
__declspec(implementation_key(560)) HRESULT ItemEvents::CustomAction ( IDispatch * Action, IDispatch * Response,
VARIANT_BOOL * Cancel );
__declspec(implementation_key(561)) HRESULT ItemEvents::CustomPropertyChange ( _bstr_t Name );
__declspec(implementation_key(562)) HRESULT ItemEvents::Forward ( IDispatch * Forward, VARIANT_BOOL * Cancel );
__declspec(implementation_key(563)) HRESULT ItemEvents::Close ( VARIANT_BOOL * Cancel );
__declspec(implementation_key(564)) HRESULT ItemEvents::PropertyChange ( _bstr_t Name );
__declspec(implementation_key(565)) HRESULT ItemEvents::Read ( );
__declspec(implementation_key(566)) HRESULT ItemEvents::Reply ( IDispatch * Response, VARIANT_BOOL * Cancel );
__declspec(implementation_key(567)) HRESULT ItemEvents::ReplyAll ( IDispatch * Response, VARIANT_BOOL * Cancel );
__declspec(implementation_key(568)) HRESULT ItemEvents::Send ( VARIANT_BOOL * Cancel );
__declspec(implementation_key(569)) HRESULT ItemEvents::Write ( VARIANT_BOOL * Cancel );
__declspec(implementation_key(570)) HRESULT ItemEvents::BeforeCheckNames ( VARIANT_BOOL * Cancel );
__declspec(implementation_key(571)) HRESULT ItemEvents::AttachmentAdd ( struct Attachment * Attachment );
__declspec(implementation_key(572)) HRESULT ItemEvents::AttachmentRead ( struct Attachment * Attachment );
__declspec(implementation_key(573)) HRESULT ItemEvents::BeforeAttachmentSave ( struct Attachment * Attachment,
VARIANT_BOOL * Cancel );
__declspec(implementation_key(574)) HRESULT ItemEvents_10::Open ( VARIANT_BOOL * Cancel );
__declspec(implementation_key(575)) HRESULT ItemEvents_10::CustomAction ( IDispatch * Action, IDispatch * Response,
VARIANT_BOOL * Cancel );
__declspec(implementation_key(576)) HRESULT ItemEvents_10::CustomPropertyChange ( _bstr_t Name );
__declspec(implementation_key(577)) HRESULT ItemEvents_10::Forward ( IDispatch * Forward, VARIANT_BOOL * Cancel );
__declspec(implementation_key(578)) HRESULT ItemEvents_10::Close ( VARIANT_BOOL * Cancel );
__declspec(implementation_key(579)) HRESULT ItemEvents_10::PropertyChange ( _bstr_t Name );
__declspec(implementation_key(580)) HRESULT ItemEvents_10::Read ( );
__declspec(implementation_key(581)) HRESULT ItemEvents_10::Reply ( IDispatch * Response, VARIANT_BOOL * Cancel );
__declspec(implementation_key(582)) HRESULT ItemEvents_10::ReplyAll ( IDispatch * Response, VARIANT_BOOL * Cancel );
__declspec(implementation_key(583)) HRESULT ItemEvents_10::Send ( VARIANT_BOOL * Cancel );
__declspec(implementation_key(584)) HRESULT ItemEvents_10::Write ( VARIANT_BOOL * Cancel );
__declspec(implementation_key(585)) HRESULT ItemEvents_10::BeforeCheckNames ( VARIANT_BOOL * Cancel );
__declspec(implementation_key(586)) HRESULT ItemEvents_10::AttachmentAdd ( struct Attachment * Attachment );
__declspec(implementation_key(587)) HRESULT ItemEvents_10::AttachmentRead ( struct Attachment * Attachment );
__declspec(implementation_key(588)) HRESULT ItemEvents_10::BeforeAttachmentSave ( struct Attachment * Attachment,
VARIANT_BOOL * Cancel );
__declspec(implementation_key(589)) HRESULT ItemEvents_10::BeforeDelete ( IDispatch * Item, VARIANT_BOOL * Cancel );
__declspec(implementation_key(590)) HRESULT ItemEvents_10::AttachmentRemove ( struct Attachment * Attachment );
__declspec(implementation_key(591)) HRESULT ItemEvents_10::BeforeAttachmentAdd ( struct Attachment * Attachment,
VARIANT_BOOL * Cancel );
__declspec(implementation_key(592)) HRESULT ItemEvents_10::BeforeAttachmentPreview ( struct Attachment * Attachment,
VARIANT_BOOL * Cancel );
__declspec(implementation_key(593)) HRESULT ItemEvents_10::BeforeAttachmentRead ( struct Attachment * Attachment,
VARIANT_BOOL * Cancel );
__declspec(implementation_key(594)) HRESULT ItemEvents_10::BeforeAttachmentWriteToTempFile ( struct Attachment *
Attachment, VARIANT_BOOL * Cancel );
__declspec(implementation_key(595)) HRESULT ItemEvents_10::Unload ( );
__declspec(implementation_key(596)) HRESULT ItemEvents_10::BeforeAutoSave ( VARIANT_BOOL * Cancel );
__declspec(implementation_key(597)) HRESULT SyncObjectEvents::SyncStart ( );
__declspec(implementation_key(598)) HRESULT SyncObjectEvents::Progress ( enum OlSyncState State, _bstr_t Description,
long Value, long Max );
__declspec(implementation_key(599)) HRESULT SyncObjectEvents::OnError ( long Code, _bstr_t Description );
__declspec(implementation_key(600)) HRESULT SyncObjectEvents::SyncEnd ( );
__declspec(implementation_key(601)) HRESULT StoresEvents_12::BeforeStoreRemove ( struct _Store * Store, VARIANT_BOOL *
Cancel );
__declspec(implementation_key(602)) HRESULT StoresEvents_12::StoreAdd ( struct _Store * Store );
__declspec(implementation_key(603)) HRESULT ExplorerEvents::Activate ( );
__declspec(implementation_key(604)) HRESULT ExplorerEvents::FolderSwitch ( );
__declspec(implementation_key(605)) HRESULT ExplorerEvents::BeforeFolderSwitch ( IDispatch * NewFolder, VARIANT_BOOL *
Cancel );
__declspec(implementation_key(606)) HRESULT ExplorerEvents::ViewSwitch ( );
__declspec(implementation_key(607)) HRESULT ExplorerEvents::BeforeViewSwitch ( const _variant_t & NewView, VARIANT_BOOL
* Cancel );
__declspec(implementation_key(608)) HRESULT ExplorerEvents::Deactivate ( );
__declspec(implementation_key(609)) HRESULT ExplorerEvents::SelectionChange ( );
__declspec(implementation_key(610)) HRESULT ExplorerEvents::Close ( );
__declspec(implementation_key(611)) HRESULT ExplorerEvents_10::Activate ( );
__declspec(implementation_key(612)) HRESULT ExplorerEvents_10::FolderSwitch ( );
__declspec(implementation_key(613)) HRESULT ExplorerEvents_10::BeforeFolderSwitch ( IDispatch * NewFolder, VARIANT_BOOL
* Cancel );
__declspec(implementation_key(614)) HRESULT ExplorerEvents_10::ViewSwitch ( );
__declspec(implementation_key(615)) HRESULT ExplorerEvents_10::BeforeViewSwitch ( const _variant_t & NewView,
VARIANT_BOOL * Cancel );
__declspec(implementation_key(616)) HRESULT ExplorerEvents_10::Deactivate ( );
__declspec(implementation_key(617)) HRESULT ExplorerEvents_10::SelectionChange ( );
__declspec(implementation_key(618)) HRESULT ExplorerEvents_10::Close ( );
__declspec(implementation_key(619)) HRESULT ExplorerEvents_10::BeforeMaximize ( VARIANT_BOOL * Cancel );
__declspec(implementation_key(620)) HRESULT ExplorerEvents_10::BeforeMinimize ( VARIANT_BOOL * Cancel );
__declspec(implementation_key(621)) HRESULT ExplorerEvents_10::BeforeMove ( VARIANT_BOOL * Cancel );
__declspec(implementation_key(622)) HRESULT ExplorerEvents_10::BeforeSize ( VARIANT_BOOL * Cancel );
__declspec(implementation_key(623)) HRESULT ExplorerEvents_10::BeforeItemCopy ( VARIANT_BOOL * Cancel );
__declspec(implementation_key(624)) HRESULT ExplorerEvents_10::BeforeItemCut ( VARIANT_BOOL * Cancel );
__declspec(implementation_key(625)) HRESULT ExplorerEvents_10::BeforeItemPaste ( VARIANT * ClipboardContent, struct
MAPIFolder * Target, VARIANT_BOOL * Cancel );
__declspec(implementation_key(626)) HRESULT InspectorEvents::Activate ( );
__declspec(implementation_key(627)) HRESULT InspectorEvents::Deactivate ( );
__declspec(implementation_key(628)) HRESULT InspectorEvents::Close ( );
__declspec(implementation_key(629)) HRESULT InspectorEvents_10::Activate ( );
__declspec(implementation_key(630)) HRESULT InspectorEvents_10::Deactivate ( );
__declspec(implementation_key(631)) HRESULT InspectorEvents_10::Close ( );
__declspec(implementation_key(632)) HRESULT InspectorEvents_10::BeforeMaximize ( VARIANT_BOOL * Cancel );
__declspec(implementation_key(633)) HRESULT InspectorEvents_10::BeforeMinimize ( VARIANT_BOOL * Cancel );
__declspec(implementation_key(634)) HRESULT InspectorEvents_10::BeforeMove ( VARIANT_BOOL * Cancel );
__declspec(implementation_key(635)) HRESULT InspectorEvents_10::BeforeSize ( VARIANT_BOOL * Cancel );
__declspec(implementation_key(636)) HRESULT InspectorEvents_10::PageChange ( BSTR * ActivePageName );
__declspec(implementation_key(637)) enum OlAppointmentTimeField _OlkTimeZoneControl::GetAppointmentTimeField ( );
__declspec(implementation_key(638)) void _OlkTimeZoneControl::PutAppointmentTimeField ( enum OlAppointmentTimeField
AppointmentTimeField );
__declspec(implementation_key(639)) enum OlBorderStyle _OlkTimeZoneControl::GetBorderStyle ( );
__declspec(implementation_key(640)) void _OlkTimeZoneControl::PutBorderStyle ( enum OlBorderStyle BorderStyle );
__declspec(implementation_key(641)) VARIANT_BOOL _OlkTimeZoneControl::GetEnabled ( );
__declspec(implementation_key(642)) void _OlkTimeZoneControl::PutEnabled ( VARIANT_BOOL Enabled );
__declspec(implementation_key(643)) VARIANT_BOOL _OlkTimeZoneControl::GetLocked ( );
__declspec(implementation_key(644)) void _OlkTimeZoneControl::PutLocked ( VARIANT_BOOL Locked );
__declspec(implementation_key(645)) PicturePtr _OlkTimeZoneControl::GetMouseIcon ( );
__declspec(implementation_key(646)) void _OlkTimeZoneControl::PutMouseIcon ( struct Picture * MouseIcon );
__declspec(implementation_key(647)) enum OlMousePointer _OlkTimeZoneControl::GetMousePointer ( );
__declspec(implementation_key(648)) void _OlkTimeZoneControl::PutMousePointer ( enum OlMousePointer MousePointer );
__declspec(implementation_key(649)) long _OlkTimeZoneControl::GetSelectedTimeZoneIndex ( );
__declspec(implementation_key(650)) void _OlkTimeZoneControl::PutSelectedTimeZoneIndex ( long SelectedTimeZoneIndex );
__declspec(implementation_key(651)) _variant_t _OlkTimeZoneControl::GetValue ( );
__declspec(implementation_key(652)) void _OlkTimeZoneControl::PutValue ( const _variant_t & Value );
__declspec(implementation_key(653)) HRESULT _OlkTimeZoneControl::DropDown ( );
__declspec(implementation_key(654)) HRESULT OlkTimeZoneControlEvents::Click ( );
__declspec(implementation_key(655)) HRESULT OlkTimeZoneControlEvents::DoubleClick ( );
__declspec(implementation_key(656)) HRESULT OlkTimeZoneControlEvents::MouseDown ( enum OlMouseButton Button, enum
OlShiftState Shift, OLE_XPOS_CONTAINER X, OLE_YPOS_CONTAINER Y );
__declspec(implementation_key(657)) HRESULT OlkTimeZoneControlEvents::MouseMove ( enum OlMouseButton Button, enum
OlShiftState Shift, OLE_XPOS_CONTAINER X, OLE_YPOS_CONTAINER Y );
__declspec(implementation_key(658)) HRESULT OlkTimeZoneControlEvents::MouseUp ( enum OlMouseButton Button, enum
OlShiftState Shift, OLE_XPOS_CONTAINER X, OLE_YPOS_CONTAINER Y );
__declspec(implementation_key(659)) HRESULT OlkTimeZoneControlEvents::Enter ( );
__declspec(implementation_key(660)) HRESULT OlkTimeZoneControlEvents::Exit ( VARIANT_BOOL * Cancel );
__declspec(implementation_key(661)) HRESULT OlkTimeZoneControlEvents::KeyDown ( long * KeyCode, enum OlShiftState Shift
);
__declspec(implementation_key(662)) HRESULT OlkTimeZoneControlEvents::KeyPress ( long * KeyAscii );
__declspec(implementation_key(663)) HRESULT OlkTimeZoneControlEvents::KeyUp ( long * KeyCode, enum OlShiftState Shift );
__declspec(implementation_key(664)) HRESULT OlkTimeZoneControlEvents::Change ( );
__declspec(implementation_key(665)) HRESULT OlkTimeZoneControlEvents::DropButtonClick ( );
__declspec(implementation_key(666)) HRESULT OlkTimeZoneControlEvents::AfterUpdate ( );
__declspec(implementation_key(667)) HRESULT OlkTimeZoneControlEvents::BeforeUpdate ( VARIANT_BOOL * Cancel );
__declspec(implementation_key(668)) HRESULT ApplicationEvents::ItemSend ( IDispatch * Item, VARIANT_BOOL * Cancel );
__declspec(implementation_key(669)) HRESULT ApplicationEvents::NewMail ( );
__declspec(implementation_key(670)) HRESULT ApplicationEvents::Reminder ( IDispatch * Item );
__declspec(implementation_key(671)) HRESULT ApplicationEvents::OptionsPagesAdd ( struct PropertyPages * Pages );
__declspec(implementation_key(672)) HRESULT ApplicationEvents::Startup ( );
__declspec(implementation_key(673)) HRESULT ApplicationEvents::Quit ( );
__declspec(implementation_key(674)) HRESULT ExplorersEvents::NewExplorer ( struct _Explorer * Explorer );
__declspec(implementation_key(675)) HRESULT FoldersEvents::FolderAdd ( struct MAPIFolder * Folder );
__declspec(implementation_key(676)) HRESULT FoldersEvents::FolderChange ( struct MAPIFolder * Folder );
__declspec(implementation_key(677)) HRESULT FoldersEvents::FolderRemove ( );
__declspec(implementation_key(678)) HRESULT InspectorsEvents::NewInspector ( struct _Inspector * Inspector );
__declspec(implementation_key(679)) HRESULT ItemsEvents::ItemAdd ( IDispatch * Item );
__declspec(implementation_key(680)) HRESULT ItemsEvents::ItemChange ( IDispatch * Item );
__declspec(implementation_key(681)) HRESULT ItemsEvents::ItemRemove ( );
__declspec(implementation_key(682)) HRESULT NameSpaceEvents::OptionsPagesAdd ( struct PropertyPages * Pages, struct
MAPIFolder * Folder );
__declspec(implementation_key(683)) HRESULT NameSpaceEvents::AutoDiscoverComplete ( );
__declspec(implementation_key(684)) HRESULT OutlookBarGroupsEvents::GroupAdd ( struct OutlookBarGroup * NewGroup );
__declspec(implementation_key(685)) HRESULT OutlookBarGroupsEvents::BeforeGroupAdd ( VARIANT_BOOL * Cancel );
__declspec(implementation_key(686)) HRESULT OutlookBarGroupsEvents::BeforeGroupRemove ( struct OutlookBarGroup * Group,
VARIANT_BOOL * Cancel );
__declspec(implementation_key(687)) HRESULT OutlookBarPaneEvents::BeforeNavigate ( struct OutlookBarShortcut * Shortcut,
VARIANT_BOOL * Cancel );
__declspec(implementation_key(688)) HRESULT OutlookBarPaneEvents::BeforeGroupSwitch ( struct OutlookBarGroup * ToGroup,
VARIANT_BOOL * Cancel );
__declspec(implementation_key(689)) HRESULT OutlookBarShortcutsEvents::ShortcutAdd ( struct OutlookBarShortcut *
NewShortcut );
__declspec(implementation_key(690)) HRESULT OutlookBarShortcutsEvents::BeforeShortcutAdd ( VARIANT_BOOL * Cancel );
__declspec(implementation_key(691)) HRESULT OutlookBarShortcutsEvents::BeforeShortcutRemove ( struct OutlookBarShortcut
* Shortcut, VARIANT_BOOL * Cancel );
__declspec(implementation_key(692)) HRESULT PropertyPage::GetPageInfo ( BSTR * HelpFile, long * HelpContext );
__declspec(implementation_key(693)) VARIANT_BOOL PropertyPage::GetDirty ( );
__declspec(implementation_key(694)) HRESULT PropertyPage::Apply ( );
__declspec(implementation_key(695)) HRESULT ApplicationEvents_10::ItemSend ( IDispatch * Item, VARIANT_BOOL * Cancel );
__declspec(implementation_key(696)) HRESULT ApplicationEvents_10::NewMail ( );
__declspec(implementation_key(697)) HRESULT ApplicationEvents_10::Reminder ( IDispatch * Item );
__declspec(implementation_key(698)) HRESULT ApplicationEvents_10::OptionsPagesAdd ( struct PropertyPages * Pages );
__declspec(implementation_key(699)) HRESULT ApplicationEvents_10::Startup ( );
__declspec(implementation_key(700)) HRESULT ApplicationEvents_10::Quit ( );
__declspec(implementation_key(701)) HRESULT ApplicationEvents_10::AdvancedSearchComplete ( struct Search * SearchObject
);
__declspec(implementation_key(702)) HRESULT ApplicationEvents_10::AdvancedSearchStopped ( struct Search * SearchObject
);
__declspec(implementation_key(703)) HRESULT ApplicationEvents_10::MAPILogonComplete ( );
__declspec(implementation_key(704)) HRESULT ApplicationEvents_11::ItemSend ( IDispatch * Item, VARIANT_BOOL * Cancel );
__declspec(implementation_key(705)) HRESULT ApplicationEvents_11::NewMail ( );
__declspec(implementation_key(706)) HRESULT ApplicationEvents_11::Reminder ( IDispatch * Item );
__declspec(implementation_key(707)) HRESULT ApplicationEvents_11::OptionsPagesAdd ( struct PropertyPages * Pages );
__declspec(implementation_key(708)) HRESULT ApplicationEvents_11::Startup ( );
__declspec(implementation_key(709)) HRESULT ApplicationEvents_11::Quit ( );
__declspec(implementation_key(710)) HRESULT ApplicationEvents_11::AdvancedSearchComplete ( struct Search * SearchObject
);
__declspec(implementation_key(711)) HRESULT ApplicationEvents_11::AdvancedSearchStopped ( struct Search * SearchObject
);
__declspec(implementation_key(712)) HRESULT ApplicationEvents_11::MAPILogonComplete ( );
__declspec(implementation_key(713)) HRESULT ApplicationEvents_11::NewMailEx ( _bstr_t EntryIDCollection );
__declspec(implementation_key(714)) HRESULT ApplicationEvents_11::AttachmentContextMenuDisplay ( struct
Office::CommandBar * CommandBar, struct _AttachmentSelection * Attachments );
__declspec(implementation_key(715)) HRESULT ApplicationEvents_11::FolderContextMenuDisplay ( struct Office::CommandBar *
CommandBar, struct MAPIFolder * Folder );
__declspec(implementation_key(716)) HRESULT ApplicationEvents_11::StoreContextMenuDisplay ( struct Office::CommandBar *
CommandBar, struct _Store * Store );
__declspec(implementation_key(717)) HRESULT ApplicationEvents_11::ShortcutContextMenuDisplay ( struct Office::CommandBar
* CommandBar, struct OutlookBarShortcut * Shortcut );
__declspec(implementation_key(718)) HRESULT ApplicationEvents_11::ViewContextMenuDisplay ( struct Office::CommandBar *
CommandBar, struct View * View );
__declspec(implementation_key(719)) HRESULT ApplicationEvents_11::ItemContextMenuDisplay ( struct Office::CommandBar *
CommandBar, struct Selection * Selection );
__declspec(implementation_key(720)) HRESULT ApplicationEvents_11::ContextMenuClose ( enum OlContextMenu ContextMenu );
__declspec(implementation_key(721)) HRESULT ApplicationEvents_11::ItemLoad ( IDispatch * Item );
__declspec(implementation_key(722)) HRESULT ApplicationEvents_11::BeforeFolderSharingDialog ( struct MAPIFolder *
FolderToShare, VARIANT_BOOL * Cancel );
__declspec(implementation_key(723)) HRESULT MAPIFolderEvents_12::BeforeFolderMove ( struct MAPIFolder * MoveTo,
VARIANT_BOOL * Cancel );
__declspec(implementation_key(724)) HRESULT MAPIFolderEvents_12::BeforeItemMove ( IDispatch * Item, struct MAPIFolder *
MoveTo, VARIANT_BOOL * Cancel );
__declspec(implementation_key(725)) HRESULT ResultsEvents::ItemAdd ( IDispatch * Item );
__declspec(implementation_key(726)) HRESULT ResultsEvents::ItemChange ( IDispatch * Item );
__declspec(implementation_key(727)) HRESULT ResultsEvents::ItemRemove ( );
__declspec(implementation_key(728)) HRESULT _ViewsEvents::ViewAdd ( struct View * View );
__declspec(implementation_key(729)) HRESULT _ViewsEvents::ViewRemove ( struct View * View );
__declspec(implementation_key(730)) HRESULT ReminderCollectionEvents::BeforeReminderShow ( VARIANT_BOOL * Cancel );
__declspec(implementation_key(731)) HRESULT ReminderCollectionEvents::ReminderAdd ( struct _Reminder * ReminderObject );
__declspec(implementation_key(732)) HRESULT ReminderCollectionEvents::ReminderChange ( struct _Reminder * ReminderObject
);
__declspec(implementation_key(733)) HRESULT ReminderCollectionEvents::ReminderFire ( struct _Reminder * ReminderObject
);
__declspec(implementation_key(734)) HRESULT ReminderCollectionEvents::ReminderRemove ( );
__declspec(implementation_key(735)) HRESULT ReminderCollectionEvents::Snooze ( struct _Reminder * ReminderObject );
__declspec(implementation_key(736)) HRESULT FormRegionEvents::Expanded ( VARIANT_BOOL Expand );
__declspec(implementation_key(737)) HRESULT FormRegionEvents::Close ( );
__declspec(implementation_key(738)) HRESULT NavigationPaneEvents_12::ModuleSwitch ( struct _NavigationModule *
CurrentModule );
__declspec(implementation_key(739)) HRESULT NavigationGroupsEvents_12::SelectedChange ( struct _NavigationFolder *
NavigationFolder );
__declspec(implementation_key(740)) HRESULT NavigationGroupsEvents_12::NavigationFolderAdd ( struct _NavigationFolder *
NavigationFolder );
__declspec(implementation_key(741)) HRESULT NavigationGroupsEvents_12::NavigationFolderRemove ( );
__declspec(implementation_key(742)) _variant_t _FormRegionStartup::GetFormRegionStorage ( _bstr_t FormRegionName,
IDispatch * Item, long LCID, enum OlFormRegionMode FormRegionMode, enum OlFormRegionSize FormRegionSize );
__declspec(implementation_key(743)) HRESULT _FormRegionStartup::BeforeFormRegionShow ( struct _FormRegion * FormRegion
);
__declspec(implementation_key(744)) _variant_t _FormRegionStartup::GetFormRegionManifest ( _bstr_t FormRegionName, long
LCID );
__declspec(implementation_key(745)) _variant_t _FormRegionStartup::GetFormRegionIcon ( _bstr_t FormRegionName, long
LCID, enum OlFormRegionIcon Icon );
__declspec(implementation_key(746)) _ApplicationPtr _TimeZone::GetApplication ( );
__declspec(implementation_key(747)) enum OlObjectClass _TimeZone::GetClass ( );
__declspec(implementation_key(748)) _NameSpacePtr _TimeZone::GetSession ( );
__declspec(implementation_key(749)) IDispatchPtr _TimeZone::GetParent ( );
__declspec(implementation_key(750)) _bstr_t _TimeZone::GetName ( );
__declspec(implementation_key(751)) _bstr_t _TimeZone::GetDaylightDesignation ( );
__declspec(implementation_key(752)) _bstr_t _TimeZone::GetStandardDesignation ( );
__declspec(implementation_key(753)) long _TimeZone::GetBias ( );
__declspec(implementation_key(754)) long _TimeZone::GetStandardBias ( );
__declspec(implementation_key(755)) long _TimeZone::GetDaylightBias ( );
__declspec(implementation_key(756)) DATE _TimeZone::GetStandardDate ( );
__declspec(implementation_key(757)) DATE _TimeZone::GetDaylightDate ( );
__declspec(implementation_key(758)) _bstr_t _TimeZone::GetID ( );
__declspec(implementation_key(759)) _ApplicationPtr _Application::GetApplication ( );
__declspec(implementation_key(760)) enum OlObjectClass _Application::GetClass ( );
__declspec(implementation_key(761)) _NameSpacePtr _Application::GetSession ( );
__declspec(implementation_key(762)) IDispatchPtr _Application::GetParent ( );
__declspec(implementation_key(763)) Office::AssistantPtr _Application::GetAssistant ( );
__declspec(implementation_key(764)) _bstr_t _Application::GetName ( );
__declspec(implementation_key(765)) _bstr_t _Application::GetVersion ( );
__declspec(implementation_key(766)) _ExplorerPtr _Application::ActiveExplorer ( );
__declspec(implementation_key(767)) _InspectorPtr _Application::ActiveInspector ( );
__declspec(implementation_key(768)) IDispatchPtr _Application::CreateItem ( enum OlItemType ItemType );
__declspec(implementation_key(769)) IDispatchPtr _Application::CreateItemFromTemplate ( _bstr_t TemplatePath, const
_variant_t & InFolder );
__declspec(implementation_key(770)) IDispatchPtr _Application::CreateObject ( _bstr_t ObjectName );
__declspec(implementation_key(771)) _NameSpacePtr _Application::GetNamespace ( _bstr_t Type );
__declspec(implementation_key(772)) HRESULT _Application::Quit ( );
__declspec(implementation_key(773)) Office::COMAddInsPtr _Application::GetCOMAddIns ( );
__declspec(implementation_key(774)) _ExplorersPtr _Application::GetExplorers ( );
__declspec(implementation_key(775)) _InspectorsPtr _Application::GetInspectors ( );
__declspec(implementation_key(776)) Office::LanguageSettingsPtr _Application::GetLanguageSettings ( );
__declspec(implementation_key(777)) _bstr_t _Application::GetProductCode ( );
__declspec(implementation_key(778)) Office::AnswerWizardPtr _Application::GetAnswerWizard ( );
__declspec(implementation_key(779)) enum Office::MsoFeatureInstall _Application::GetFeatureInstall ( );
__declspec(implementation_key(780)) void _Application::PutFeatureInstall ( enum Office::MsoFeatureInstall FeatureInstall
);
__declspec(implementation_key(781)) IDispatchPtr _Application::ActiveWindow ( );
__declspec(implementation_key(782)) IDispatchPtr _Application::CopyFile ( _bstr_t FilePath, _bstr_t DestFolderPath );
__declspec(implementation_key(783)) SearchPtr _Application::AdvancedSearch ( _bstr_t Scope, const _variant_t & Filter,
const _variant_t & SearchSubFolders, const _variant_t & Tag );
__declspec(implementation_key(784)) VARIANT_BOOL _Application::IsSearchSynchronous ( _bstr_t LookInFolders );
__declspec(implementation_key(785)) HRESULT _Application::GetNewNickNames ( VARIANT * pvar );
__declspec(implementation_key(786)) _RemindersPtr _Application::GetReminders ( );
__declspec(implementation_key(787)) _bstr_t _Application::GetDefaultProfileName ( );
__declspec(implementation_key(788)) VARIANT_BOOL _Application::GetIsTrusted ( );
__declspec(implementation_key(789)) IDispatchPtr _Application::GetObjectReference ( IDispatch * Item, enum
OlReferenceType ReferenceType );
__declspec(implementation_key(790)) Office::IAssistancePtr _Application::GetAssistance ( );
__declspec(implementation_key(791)) _TimeZonesPtr _Application::GetTimeZones ( );
__declspec(implementation_key(792)) _ApplicationPtr _NameSpace::GetApplication ( );
__declspec(implementation_key(793)) enum OlObjectClass _NameSpace::GetClass ( );
__declspec(implementation_key(794)) _NameSpacePtr _NameSpace::GetSession ( );
__declspec(implementation_key(795)) IDispatchPtr _NameSpace::GetParent ( );
__declspec(implementation_key(796)) RecipientPtr _NameSpace::GetCurrentUser ( );
__declspec(implementation_key(797)) _FoldersPtr _NameSpace::GetFolders ( );
__declspec(implementation_key(798)) _bstr_t _NameSpace::GetType ( );
__declspec(implementation_key(799)) AddressListsPtr _NameSpace::GetAddressLists ( );
__declspec(implementation_key(800)) RecipientPtr _NameSpace::CreateRecipient ( _bstr_t RecipientName );
__declspec(implementation_key(801)) MAPIFolderPtr _NameSpace::GetDefaultFolder ( enum OlDefaultFolders FolderType );
__declspec(implementation_key(802)) MAPIFolderPtr _NameSpace::GetFolderFromID ( _bstr_t EntryIDFolder, const _variant_t
& EntryIDStore );
__declspec(implementation_key(803)) IDispatchPtr _NameSpace::GetItemFromID ( _bstr_t EntryIDItem, const _variant_t &
EntryIDStore );
__declspec(implementation_key(804)) RecipientPtr _NameSpace::GetRecipientFromID ( _bstr_t EntryID );
__declspec(implementation_key(805)) MAPIFolderPtr _NameSpace::GetSharedDefaultFolder ( struct Recipient * Recipient,
enum OlDefaultFolders FolderType );
__declspec(implementation_key(806)) HRESULT _NameSpace::Logoff ( );
__declspec(implementation_key(807)) HRESULT _NameSpace::Logon ( const _variant_t & Profile, const _variant_t & Password,
const _variant_t & ShowDialog, const _variant_t & NewSession );
__declspec(implementation_key(808)) MAPIFolderPtr _NameSpace::PickFolder ( );
__declspec(implementation_key(809)) HRESULT _NameSpace::RefreshRemoteHeaders ( );
__declspec(implementation_key(810)) SyncObjectsPtr _NameSpace::GetSyncObjects ( );
__declspec(implementation_key(811)) HRESULT _NameSpace::AddStore ( const _variant_t & Store );
__declspec(implementation_key(812)) HRESULT _NameSpace::RemoveStore ( struct MAPIFolder * Folder );
__declspec(implementation_key(813)) VARIANT_BOOL _NameSpace::GetOffline ( );
__declspec(implementation_key(814)) HRESULT _NameSpace::Dial ( const _variant_t & ContactItem );
__declspec(implementation_key(815)) IUnknownPtr _NameSpace::GetMAPIOBJECT ( );
__declspec(implementation_key(816)) enum OlExchangeConnectionMode _NameSpace::GetExchangeConnectionMode ( );
__declspec(implementation_key(817)) HRESULT _NameSpace::AddStoreEx ( const _variant_t & Store, enum OlStoreType Type );
__declspec(implementation_key(818)) _AccountsPtr _NameSpace::GetAccounts ( );
__declspec(implementation_key(819)) _bstr_t _NameSpace::GetCurrentProfileName ( );
__declspec(implementation_key(820)) _StoresPtr _NameSpace::GetStores ( );
__declspec(implementation_key(821)) _SelectNamesDialogPtr _NameSpace::GetSelectNamesDialog ( );
__declspec(implementation_key(822)) HRESULT _NameSpace::SendAndReceive ( VARIANT_BOOL showProgressDialog );
__declspec(implementation_key(823)) _StorePtr _NameSpace::GetDefaultStore ( );
__declspec(implementation_key(824)) AddressEntryPtr _NameSpace::GetAddressEntryFromID ( _bstr_t ID );
__declspec(implementation_key(825)) AddressListPtr _NameSpace::GetGlobalAddressList ( );
__declspec(implementation_key(826)) _StorePtr _NameSpace::GetStoreFromID ( _bstr_t ID );
__declspec(implementation_key(827)) _CategoriesPtr _NameSpace::GetCategories ( );
__declspec(implementation_key(828)) MAPIFolderPtr _NameSpace::OpenSharedFolder ( _bstr_t Path, const _variant_t & Name,
const _variant_t & DownloadAttachments, const _variant_t & UseTTL );
__declspec(implementation_key(829)) IDispatchPtr _NameSpace::OpenSharedItem ( _bstr_t Path );
__declspec(implementation_key(830)) _SharingItemPtr _NameSpace::CreateSharingItem ( const _variant_t & Context, const
_variant_t & Provider );
__declspec(implementation_key(831)) _bstr_t _NameSpace::GetExchangeMailboxServerName ( );
__declspec(implementation_key(832)) _bstr_t _NameSpace::GetExchangeMailboxServerVersion ( );
__declspec(implementation_key(833)) VARIANT_BOOL _NameSpace::CompareEntryIDs ( _bstr_t FirstEntryID, _bstr_t
SecondEntryID );
__declspec(implementation_key(834)) _bstr_t _NameSpace::GetAutoDiscoverXml ( );
__declspec(implementation_key(835)) enum OlAutoDiscoverConnectionMode _NameSpace::GetAutoDiscoverConnectionMode ( );
__declspec(implementation_key(836)) _ApplicationPtr Action::GetApplication ( );
__declspec(implementation_key(837)) enum OlObjectClass Action::GetClass ( );
__declspec(implementation_key(838)) _NameSpacePtr Action::GetSession ( );
__declspec(implementation_key(839)) IDispatchPtr Action::GetParent ( );
__declspec(implementation_key(840)) enum OlActionCopyLike Action::GetCopyLike ( );
__declspec(implementation_key(841)) void Action::PutCopyLike ( enum OlActionCopyLike CopyLike );
__declspec(implementation_key(842)) VARIANT_BOOL Action::GetEnabled ( );
__declspec(implementation_key(843)) void Action::PutEnabled ( VARIANT_BOOL Enabled );
__declspec(implementation_key(844)) _bstr_t Action::GetMessageClass ( );
__declspec(implementation_key(845)) void Action::PutMessageClass ( _bstr_t MessageClass );
__declspec(implementation_key(846)) _bstr_t Action::GetName ( );
__declspec(implementation_key(847)) void Action::PutName ( _bstr_t Name );
__declspec(implementation_key(848)) _bstr_t Action::GetPrefix ( );
__declspec(implementation_key(849)) void Action::PutPrefix ( _bstr_t Prefix );
__declspec(implementation_key(850)) enum OlActionReplyStyle Action::GetReplyStyle ( );
__declspec(implementation_key(851)) void Action::PutReplyStyle ( enum OlActionReplyStyle ReplyStyle );
__declspec(implementation_key(852)) enum OlActionResponseStyle Action::GetResponseStyle ( );
__declspec(implementation_key(853)) void Action::PutResponseStyle ( enum OlActionResponseStyle ResponseStyle );
__declspec(implementation_key(854)) enum OlActionShowOn Action::GetShowOn ( );
__declspec(implementation_key(855)) void Action::PutShowOn ( enum OlActionShowOn ShowOn );
__declspec(implementation_key(856)) HRESULT Action::Delete ( );
__declspec(implementation_key(857)) IDispatchPtr Action::Execute ( );
__declspec(implementation_key(858)) _ApplicationPtr Actions::GetApplication ( );
__declspec(implementation_key(859)) enum OlObjectClass Actions::GetClass ( );
__declspec(implementation_key(860)) _NameSpacePtr Actions::GetSession ( );
__declspec(implementation_key(861)) IDispatchPtr Actions::GetParent ( );
__declspec(implementation_key(862)) long Actions::GetCount ( );
__declspec(implementation_key(863)) ActionPtr Actions::Item ( const _variant_t & Index );
__declspec(implementation_key(864)) ActionPtr Actions::Add ( );
__declspec(implementation_key(865)) HRESULT Actions::Remove ( long Index );
__declspec(implementation_key(866)) _ApplicationPtr Attachment::GetApplication ( );
__declspec(implementation_key(867)) enum OlObjectClass Attachment::GetClass ( );
__declspec(implementation_key(868)) _NameSpacePtr Attachment::GetSession ( );
__declspec(implementation_key(869)) IDispatchPtr Attachment::GetParent ( );
__declspec(implementation_key(870)) _bstr_t Attachment::GetDisplayName ( );
__declspec(implementation_key(871)) void Attachment::PutDisplayName ( _bstr_t DisplayName );
__declspec(implementation_key(872)) _bstr_t Attachment::GetFileName ( );
__declspec(implementation_key(873)) long Attachment::GetIndex ( );
__declspec(implementation_key(874)) IUnknownPtr Attachment::GetMAPIOBJECT ( );
__declspec(implementation_key(875)) _bstr_t Attachment::GetPathName ( );
__declspec(implementation_key(876)) long Attachment::GetPosition ( );
__declspec(implementation_key(877)) void Attachment::PutPosition ( long Position );
__declspec(implementation_key(878)) enum OlAttachmentType Attachment::GetType ( );
__declspec(implementation_key(879)) HRESULT Attachment::Delete ( );
__declspec(implementation_key(880)) HRESULT Attachment::SaveAsFile ( _bstr_t Path );
__declspec(implementation_key(881)) _PropertyAccessorPtr Attachment::GetPropertyAccessor ( );
__declspec(implementation_key(882)) long Attachment::GetSize ( );
__declspec(implementation_key(883)) enum OlAttachmentBlockLevel Attachment::GetBlockLevel ( );
__declspec(implementation_key(884)) _ApplicationPtr Attachments::GetApplication ( );
__declspec(implementation_key(885)) enum OlObjectClass Attachments::GetClass ( );
__declspec(implementation_key(886)) _NameSpacePtr Attachments::GetSession ( );
__declspec(implementation_key(887)) IDispatchPtr Attachments::GetParent ( );
__declspec(implementation_key(888)) long Attachments::GetCount ( );
__declspec(implementation_key(889)) AttachmentPtr Attachments::Item ( const _variant_t & Index );
__declspec(implementation_key(890)) AttachmentPtr Attachments::Add ( const _variant_t & Source, const _variant_t & Type,
const _variant_t & Position, const _variant_t & DisplayName );
__declspec(implementation_key(891)) HRESULT Attachments::Remove ( long Index );
__declspec(implementation_key(892)) _ApplicationPtr _PropertyAccessor::GetApplication ( );
__declspec(implementation_key(893)) enum OlObjectClass _PropertyAccessor::GetClass ( );
__declspec(implementation_key(894)) _NameSpacePtr _PropertyAccessor::GetSession ( );
__declspec(implementation_key(895)) IDispatchPtr _PropertyAccessor::GetParent ( );
__declspec(implementation_key(896)) _variant_t _PropertyAccessor::GetProperty ( _bstr_t SchemaName );
__declspec(implementation_key(897)) HRESULT _PropertyAccessor::SetProperty ( _bstr_t SchemaName, const _variant_t &
Value );
__declspec(implementation_key(898)) _variant_t _PropertyAccessor::GetProperties ( const _variant_t & SchemaNames );
__declspec(implementation_key(899)) _variant_t _PropertyAccessor::SetProperties ( const _variant_t & SchemaNames, const
_variant_t & Values );
__declspec(implementation_key(900)) DATE _PropertyAccessor::UTCToLocalTime ( DATE Value );
__declspec(implementation_key(901)) DATE _PropertyAccessor::LocalTimeToUTC ( DATE Value );
__declspec(implementation_key(902)) _variant_t _PropertyAccessor::StringToBinary ( _bstr_t Value );
__declspec(implementation_key(903)) _bstr_t _PropertyAccessor::BinaryToString ( const _variant_t & Value );
__declspec(implementation_key(904)) HRESULT _PropertyAccessor::DeleteProperty ( _bstr_t SchemaName );
__declspec(implementation_key(905)) _variant_t _PropertyAccessor::DeleteProperties ( VARIANT * SchemaNames );
__declspec(implementation_key(906)) _ApplicationPtr FormDescription::GetApplication ( );
__declspec(implementation_key(907)) enum OlObjectClass FormDescription::GetClass ( );
__declspec(implementation_key(908)) _NameSpacePtr FormDescription::GetSession ( );
__declspec(implementation_key(909)) IDispatchPtr FormDescription::GetParent ( );
__declspec(implementation_key(910)) _bstr_t FormDescription::GetCategory ( );
__declspec(implementation_key(911)) void FormDescription::PutCategory ( _bstr_t Category );
__declspec(implementation_key(912)) _bstr_t FormDescription::GetCategorySub ( );
__declspec(implementation_key(913)) void FormDescription::PutCategorySub ( _bstr_t CategorySub );
__declspec(implementation_key(914)) _bstr_t FormDescription::GetComment ( );
__declspec(implementation_key(915)) void FormDescription::PutComment ( _bstr_t Comment );
__declspec(implementation_key(916)) _bstr_t FormDescription::GetContactName ( );
__declspec(implementation_key(917)) void FormDescription::PutContactName ( _bstr_t ContactName );
__declspec(implementation_key(918)) _bstr_t FormDescription::GetDisplayName ( );
__declspec(implementation_key(919)) void FormDescription::PutDisplayName ( _bstr_t DisplayName );
__declspec(implementation_key(920)) VARIANT_BOOL FormDescription::GetHidden ( );
__declspec(implementation_key(921)) void FormDescription::PutHidden ( VARIANT_BOOL Hidden );
__declspec(implementation_key(922)) _bstr_t FormDescription::GetIcon ( );
__declspec(implementation_key(923)) void FormDescription::PutIcon ( _bstr_t Icon );
__declspec(implementation_key(924)) VARIANT_BOOL FormDescription::GetLocked ( );
__declspec(implementation_key(925)) void FormDescription::PutLocked ( VARIANT_BOOL Locked );
__declspec(implementation_key(926)) _bstr_t FormDescription::GetMessageClass ( );
__declspec(implementation_key(927)) _bstr_t FormDescription::GetMiniIcon ( );
__declspec(implementation_key(928)) void FormDescription::PutMiniIcon ( _bstr_t MiniIcon );
__declspec(implementation_key(929)) _bstr_t FormDescription::GetName ( );
__declspec(implementation_key(930)) void FormDescription::PutName ( _bstr_t Name );
__declspec(implementation_key(931)) _bstr_t FormDescription::GetNumber ( );
__declspec(implementation_key(932)) void FormDescription::PutNumber ( _bstr_t Number );
__declspec(implementation_key(933)) VARIANT_BOOL FormDescription::GetOneOff ( );
__declspec(implementation_key(934)) void FormDescription::PutOneOff ( VARIANT_BOOL OneOff );
__declspec(implementation_key(935)) _bstr_t FormDescription::GetPassword ( );
__declspec(implementation_key(936)) void FormDescription::PutPassword ( _bstr_t Password );
__declspec(implementation_key(937)) _bstr_t FormDescription::GetScriptText ( );
__declspec(implementation_key(938)) _bstr_t FormDescription::GetTemplate ( );
__declspec(implementation_key(939)) void FormDescription::PutTemplate ( _bstr_t Template );
__declspec(implementation_key(940)) VARIANT_BOOL FormDescription::GetUseWordMail ( );
__declspec(implementation_key(941)) void FormDescription::PutUseWordMail ( VARIANT_BOOL UseWordMail );
__declspec(implementation_key(942)) _bstr_t FormDescription::GetVersion ( );
__declspec(implementation_key(943)) void FormDescription::PutVersion ( _bstr_t Version );
__declspec(implementation_key(944)) HRESULT FormDescription::PublishForm ( enum OlFormRegistry Registry, const
_variant_t & Folder );
__declspec(implementation_key(945)) _ApplicationPtr _Inspector::GetApplication ( );
__declspec(implementation_key(946)) enum OlObjectClass _Inspector::GetClass ( );
__declspec(implementation_key(947)) _NameSpacePtr _Inspector::GetSession ( );
__declspec(implementation_key(948)) IDispatchPtr _Inspector::GetParent ( );
__declspec(implementation_key(949)) Office::_CommandBarsPtr _Inspector::GetCommandBars ( );
__declspec(implementation_key(950)) IDispatchPtr _Inspector::GetCurrentItem ( );
__declspec(implementation_key(951)) enum OlEditorType _Inspector::GetEditorType ( );
__declspec(implementation_key(952)) IDispatchPtr _Inspector::GetModifiedFormPages ( );
__declspec(implementation_key(953)) HRESULT _Inspector::Close ( enum OlInspectorClose SaveMode );
__declspec(implementation_key(954)) HRESULT _Inspector::Display ( const _variant_t & Modal );
__declspec(implementation_key(955)) HRESULT _Inspector::HideFormPage ( _bstr_t PageName );
__declspec(implementation_key(956)) VARIANT_BOOL _Inspector::IsWordMail ( );
__declspec(implementation_key(957)) HRESULT _Inspector::SetCurrentFormPage ( _bstr_t PageName );
__declspec(implementation_key(958)) HRESULT _Inspector::ShowFormPage ( _bstr_t PageName );
__declspec(implementation_key(959)) IDispatchPtr _Inspector::GetHTMLEditor ( );
__declspec(implementation_key(960)) IDispatchPtr _Inspector::GetWordEditor ( );
__declspec(implementation_key(961)) _bstr_t _Inspector::GetCaption ( );
__declspec(implementation_key(962)) long _Inspector::GetHeight ( );
__declspec(implementation_key(963)) void _Inspector::PutHeight ( long Height );
__declspec(implementation_key(964)) long _Inspector::GetLeft ( );
__declspec(implementation_key(965)) void _Inspector::PutLeft ( long Left );
__declspec(implementation_key(966)) long _Inspector::GetTop ( );
__declspec(implementation_key(967)) void _Inspector::PutTop ( long Top );
__declspec(implementation_key(968)) long _Inspector::GetWidth ( );
__declspec(implementation_key(969)) void _Inspector::PutWidth ( long Width );
__declspec(implementation_key(970)) enum OlWindowState _Inspector::GetWindowState ( );
__declspec(implementation_key(971)) void _Inspector::PutWindowState ( enum OlWindowState WindowState );
__declspec(implementation_key(972)) HRESULT _Inspector::Activate ( );
__declspec(implementation_key(973)) HRESULT _Inspector::SetControlItemProperty ( IDispatch * Control, _bstr_t
PropertyName );
__declspec(implementation_key(974)) IDispatchPtr _Inspector::NewFormRegion ( );
__declspec(implementation_key(975)) IDispatchPtr _Inspector::OpenFormRegion ( _bstr_t Path );
__declspec(implementation_key(976)) HRESULT _Inspector::SaveFormRegion ( IDispatch * Page, _bstr_t FileName );
__declspec(implementation_key(977)) _ApplicationPtr UserProperty::GetApplication ( );
__declspec(implementation_key(978)) enum OlObjectClass UserProperty::GetClass ( );
__declspec(implementation_key(979)) _NameSpacePtr UserProperty::GetSession ( );
__declspec(implementation_key(980)) IDispatchPtr UserProperty::GetParent ( );
__declspec(implementation_key(981)) _bstr_t UserProperty::GetFormula ( );
__declspec(implementation_key(982)) void UserProperty::PutFormula ( _bstr_t Formula );
__declspec(implementation_key(983)) _bstr_t UserProperty::GetName ( );
__declspec(implementation_key(984)) enum OlUserPropertyType UserProperty::GetType ( );
__declspec(implementation_key(985)) _bstr_t UserProperty::GetValidationFormula ( );
__declspec(implementation_key(986)) void UserProperty::PutValidationFormula ( _bstr_t ValidationFormula );
__declspec(implementation_key(987)) _bstr_t UserProperty::GetValidationText ( );
__declspec(implementation_key(988)) void UserProperty::PutValidationText ( _bstr_t ValidationText );
__declspec(implementation_key(989)) _variant_t UserProperty::GetValue ( );
__declspec(implementation_key(990)) void UserProperty::PutValue ( const _variant_t & Value );
__declspec(implementation_key(991)) HRESULT UserProperty::Delete ( );
__declspec(implementation_key(992)) VARIANT_BOOL UserProperty::GetIsUserProperty ( );
__declspec(implementation_key(993)) _ApplicationPtr UserProperties::GetApplication ( );
__declspec(implementation_key(994)) enum OlObjectClass UserProperties::GetClass ( );
__declspec(implementation_key(995)) _NameSpacePtr UserProperties::GetSession ( );
__declspec(implementation_key(996)) IDispatchPtr UserProperties::GetParent ( );
__declspec(implementation_key(997)) long UserProperties::GetCount ( );
__declspec(implementation_key(998)) UserPropertyPtr UserProperties::Item ( const _variant_t & Index );
__declspec(implementation_key(999)) UserPropertyPtr UserProperties::Add ( _bstr_t Name, enum OlUserPropertyType Type,
const _variant_t & AddToFolderFields, const _variant_t & DisplayFormat );
__declspec(implementation_key(1000)) UserPropertyPtr UserProperties::Find ( _bstr_t Name, const _variant_t & Custom );
__declspec(implementation_key(1001)) HRESULT UserProperties::Remove ( long Index );
__declspec(implementation_key(1002)) _ApplicationPtr _Items::GetApplication ( );
__declspec(implementation_key(1003)) enum OlObjectClass _Items::GetClass ( );
__declspec(implementation_key(1004)) _NameSpacePtr _Items::GetSession ( );
__declspec(implementation_key(1005)) IDispatchPtr _Items::GetParent ( );
__declspec(implementation_key(1006)) long _Items::GetCount ( );
__declspec(implementation_key(1007)) IDispatchPtr _Items::Item ( const _variant_t & Index );
__declspec(implementation_key(1008)) IUnknownPtr _Items::GetRawTable ( );
__declspec(implementation_key(1009)) VARIANT_BOOL _Items::GetIncludeRecurrences ( );
__declspec(implementation_key(1010)) void _Items::PutIncludeRecurrences ( VARIANT_BOOL IncludeRecurrences );
__declspec(implementation_key(1011)) IDispatchPtr _Items::Add ( const _variant_t & Type );
__declspec(implementation_key(1012)) IDispatchPtr _Items::Find ( _bstr_t Filter );
__declspec(implementation_key(1013)) IDispatchPtr _Items::FindNext ( );
__declspec(implementation_key(1014)) IDispatchPtr _Items::GetFirst ( );
__declspec(implementation_key(1015)) IDispatchPtr _Items::GetLast ( );
__declspec(implementation_key(1016)) IDispatchPtr _Items::GetNext ( );
__declspec(implementation_key(1017)) IDispatchPtr _Items::GetPrevious ( );
__declspec(implementation_key(1018)) HRESULT _Items::Remove ( long Index );
__declspec(implementation_key(1019)) HRESULT _Items::ResetColumns ( );
__declspec(implementation_key(1020)) _ItemsPtr _Items::Restrict ( _bstr_t Filter );
__declspec(implementation_key(1021)) HRESULT _Items::SetColumns ( _bstr_t Columns );
__declspec(implementation_key(1022)) HRESULT _Items::Sort ( _bstr_t Property, const _variant_t & Descending );
__declspec(implementation_key(1023)) _ApplicationPtr Panes::GetApplication ( );
__declspec(implementation_key(1024)) enum OlObjectClass Panes::GetClass ( );
__declspec(implementation_key(1025)) _NameSpacePtr Panes::GetSession ( );
__declspec(implementation_key(1026)) IDispatchPtr Panes::GetParent ( );
__declspec(implementation_key(1027)) long Panes::GetCount ( );
__declspec(implementation_key(1028)) IDispatchPtr Panes::Item ( const _variant_t & Index );
__declspec(implementation_key(1029)) _ApplicationPtr Selection::GetApplication ( );
__declspec(implementation_key(1030)) enum OlObjectClass Selection::GetClass ( );
__declspec(implementation_key(1031)) _NameSpacePtr Selection::GetSession ( );
__declspec(implementation_key(1032)) IDispatchPtr Selection::GetParent ( );
__declspec(implementation_key(1033)) long Selection::GetCount ( );
__declspec(implementation_key(1034)) IDispatchPtr Selection::Item ( const _variant_t & Index );
__declspec(implementation_key(1035)) _ApplicationPtr _NavigationPane::GetApplication ( );
__declspec(implementation_key(1036)) enum OlObjectClass _NavigationPane::GetClass ( );
__declspec(implementation_key(1037)) _NameSpacePtr _NavigationPane::GetSession ( );
__declspec(implementation_key(1038)) IDispatchPtr _NavigationPane::GetParent ( );
__declspec(implementation_key(1039)) VARIANT_BOOL _NavigationPane::GetIsCollapsed ( );
__declspec(implementation_key(1040)) void _NavigationPane::PutIsCollapsed ( VARIANT_BOOL IsCollapsed );
__declspec(implementation_key(1041)) _NavigationModulePtr _NavigationPane::GetCurrentModule ( );
__declspec(implementation_key(1042)) void _NavigationPane::PutRefCurrentModule ( struct _NavigationModule *
CurrentModule );
__declspec(implementation_key(1043)) long _NavigationPane::GetDisplayedModuleCount ( );
__declspec(implementation_key(1044)) void _NavigationPane::PutDisplayedModuleCount ( long DisplayedModuleCount );
__declspec(implementation_key(1045)) _NavigationModulesPtr _NavigationPane::GetModules ( );
__declspec(implementation_key(1046)) _ApplicationPtr _NavigationModule::GetApplication ( );
__declspec(implementation_key(1047)) enum OlObjectClass _NavigationModule::GetClass ( );
__declspec(implementation_key(1048)) _NameSpacePtr _NavigationModule::GetSession ( );
__declspec(implementation_key(1049)) IDispatchPtr _NavigationModule::GetParent ( );
__declspec(implementation_key(1050)) enum OlNavigationModuleType _NavigationModule::GetNavigationModuleType ( );
__declspec(implementation_key(1051)) _bstr_t _NavigationModule::GetName ( );
__declspec(implementation_key(1052)) long _NavigationModule::GetPosition ( );
__declspec(implementation_key(1053)) void _NavigationModule::PutPosition ( long Position );
__declspec(implementation_key(1054)) VARIANT_BOOL _NavigationModule::GetVisible ( );
__declspec(implementation_key(1055)) void _NavigationModule::PutVisible ( VARIANT_BOOL Visible );
__declspec(implementation_key(1056)) _ApplicationPtr _NavigationModules::GetApplication ( );
__declspec(implementation_key(1057)) enum OlObjectClass _NavigationModules::GetClass ( );
__declspec(implementation_key(1058)) _NameSpacePtr _NavigationModules::GetSession ( );
__declspec(implementation_key(1059)) IDispatchPtr _NavigationModules::GetParent ( );
__declspec(implementation_key(1060)) long _NavigationModules::GetCount ( );
__declspec(implementation_key(1061)) _NavigationModulePtr _NavigationModules::Item ( const _variant_t & Index );
__declspec(implementation_key(1062)) _NavigationModulePtr _NavigationModules::GetNavigationModule ( enum
OlNavigationModuleType ModuleType );
__declspec(implementation_key(1063)) _ApplicationPtr View::GetApplication ( );
__declspec(implementation_key(1064)) enum OlObjectClass View::GetClass ( );
__declspec(implementation_key(1065)) _NameSpacePtr View::GetSession ( );
__declspec(implementation_key(1066)) IDispatchPtr View::GetParent ( );
__declspec(implementation_key(1067)) HRESULT View::Apply ( );
__declspec(implementation_key(1068)) ViewPtr View::Copy ( _bstr_t Name, enum OlViewSaveOption SaveOption );
__declspec(implementation_key(1069)) HRESULT View::Delete ( );
__declspec(implementation_key(1070)) HRESULT View::Reset ( );
__declspec(implementation_key(1071)) HRESULT View::Save ( );
__declspec(implementation_key(1072)) _bstr_t View::GetLanguage ( );
__declspec(implementation_key(1073)) void View::PutLanguage ( _bstr_t Language );
__declspec(implementation_key(1074)) VARIANT_BOOL View::GetLockUserChanges ( );
__declspec(implementation_key(1075)) void View::PutLockUserChanges ( VARIANT_BOOL LockUserChanges );
__declspec(implementation_key(1076)) _bstr_t View::GetName ( );
__declspec(implementation_key(1077)) void View::PutName ( _bstr_t Name );
__declspec(implementation_key(1078)) enum OlViewSaveOption View::GetSaveOption ( );
__declspec(implementation_key(1079)) VARIANT_BOOL View::GetStandard ( );
__declspec(implementation_key(1080)) enum OlViewType View::GetViewType ( );
__declspec(implementation_key(1081)) _bstr_t View::GetXML ( );
__declspec(implementation_key(1082)) void View::PutXML ( _bstr_t XML );
__declspec(implementation_key(1083)) HRESULT View::GoToDate ( DATE Date );
__declspec(implementation_key(1084)) _bstr_t View::GetFilter ( );
__declspec(implementation_key(1085)) void View::PutFilter ( _bstr_t Filter );
__declspec(implementation_key(1086)) _ApplicationPtr _Views::GetApplication ( );
__declspec(implementation_key(1087)) enum OlObjectClass _Views::GetClass ( );
__declspec(implementation_key(1088)) _NameSpacePtr _Views::GetSession ( );
__declspec(implementation_key(1089)) IDispatchPtr _Views::GetParent ( );
__declspec(implementation_key(1090)) long _Views::GetCount ( );
__declspec(implementation_key(1091)) ViewPtr _Views::Item ( const _variant_t & Index );
__declspec(implementation_key(1092)) ViewPtr _Views::Add ( _bstr_t Name, enum OlViewType ViewType, enum OlViewSaveOption
SaveOption );
__declspec(implementation_key(1093)) HRESULT _Views::Remove ( const _variant_t & Index );
__declspec(implementation_key(1094)) IUnknownPtr _Views::_NewEnum ( );
__declspec(implementation_key(1095)) _ApplicationPtr _Rule::GetApplication ( );
__declspec(implementation_key(1096)) enum OlObjectClass _Rule::GetClass ( );
__declspec(implementation_key(1097)) _NameSpacePtr _Rule::GetSession ( );
__declspec(implementation_key(1098)) IDispatchPtr _Rule::GetParent ( );
__declspec(implementation_key(1099)) _bstr_t _Rule::GetName ( );
__declspec(implementation_key(1100)) void _Rule::PutName ( _bstr_t Name );
__declspec(implementation_key(1101)) long _Rule::GetExecutionOrder ( );
__declspec(implementation_key(1102)) void _Rule::PutExecutionOrder ( long ExecutionOrder );
__declspec(implementation_key(1103)) enum OlRuleType _Rule::GetRuleType ( );
__declspec(implementation_key(1104)) VARIANT_BOOL _Rule::GetEnabled ( );
__declspec(implementation_key(1105)) void _Rule::PutEnabled ( VARIANT_BOOL Enabled );
__declspec(implementation_key(1106)) VARIANT_BOOL _Rule::GetIsLocalRule ( );
__declspec(implementation_key(1107)) HRESULT _Rule::Execute ( const _variant_t & ShowProgress, const _variant_t &
Folder, const _variant_t & IncludeSubfolders, const _variant_t & RuleExecuteOption );
__declspec(implementation_key(1108)) _RuleActionsPtr _Rule::GetActions ( );
__declspec(implementation_key(1109)) _RuleConditionsPtr _Rule::GetConditions ( );
__declspec(implementation_key(1110)) _RuleConditionsPtr _Rule::GetExceptions ( );
__declspec(implementation_key(1111)) _ApplicationPtr _Rules::GetApplication ( );
__declspec(implementation_key(1112)) enum OlObjectClass _Rules::GetClass ( );
__declspec(implementation_key(1113)) _NameSpacePtr _Rules::GetSession ( );
__declspec(implementation_key(1114)) IDispatchPtr _Rules::GetParent ( );
__declspec(implementation_key(1115)) long _Rules::GetCount ( );
__declspec(implementation_key(1116)) _RulePtr _Rules::Item ( const _variant_t & Index );
__declspec(implementation_key(1117)) _RulePtr _Rules::Create ( _bstr_t Name, enum OlRuleType RuleType );
__declspec(implementation_key(1118)) HRESULT _Rules::Save ( const _variant_t & ShowProgress );
__declspec(implementation_key(1119)) HRESULT _Rules::Remove ( const _variant_t & Index );
__declspec(implementation_key(1120)) VARIANT_BOOL _Rules::GetIsRssRulesProcessingEnabled ( );
__declspec(implementation_key(1121)) void _Rules::PutIsRssRulesProcessingEnabled ( VARIANT_BOOL
IsRssRulesProcessingEnabled );
__declspec(implementation_key(1122)) _ApplicationPtr _RuleAction::GetApplication ( );
__declspec(implementation_key(1123)) enum OlObjectClass _RuleAction::GetClass ( );
__declspec(implementation_key(1124)) _NameSpacePtr _RuleAction::GetSession ( );
__declspec(implementation_key(1125)) IDispatchPtr _RuleAction::GetParent ( );
__declspec(implementation_key(1126)) VARIANT_BOOL _RuleAction::GetEnabled ( );
__declspec(implementation_key(1127)) void _RuleAction::PutEnabled ( VARIANT_BOOL Enabled );
__declspec(implementation_key(1128)) enum OlRuleActionType _RuleAction::GetActionType ( );
__declspec(implementation_key(1129)) _ApplicationPtr _RuleActions::GetApplication ( );
__declspec(implementation_key(1130)) enum OlObjectClass _RuleActions::GetClass ( );
__declspec(implementation_key(1131)) _NameSpacePtr _RuleActions::GetSession ( );
__declspec(implementation_key(1132)) IDispatchPtr _RuleActions::GetParent ( );
__declspec(implementation_key(1133)) long _RuleActions::GetCount ( );
__declspec(implementation_key(1134)) _RuleActionPtr _RuleActions::Item ( long Index );
__declspec(implementation_key(1135)) _MoveOrCopyRuleActionPtr _RuleActions::GetCopyToFolder ( );
__declspec(implementation_key(1136)) _RuleActionPtr _RuleActions::GetDeletePermanently ( );
__declspec(implementation_key(1137)) _RuleActionPtr _RuleActions::GetDelete ( );
__declspec(implementation_key(1138)) _RuleActionPtr _RuleActions::GetDesktopAlert ( );
__declspec(implementation_key(1139)) _RuleActionPtr _RuleActions::GetNotifyDelivery ( );
__declspec(implementation_key(1140)) _RuleActionPtr _RuleActions::GetNotifyRead ( );
__declspec(implementation_key(1141)) _RuleActionPtr _RuleActions::GetStop ( );
__declspec(implementation_key(1142)) _MoveOrCopyRuleActionPtr _RuleActions::GetMoveToFolder ( );
__declspec(implementation_key(1143)) _SendRuleActionPtr _RuleActions::GetCC ( );
__declspec(implementation_key(1144)) _SendRuleActionPtr _RuleActions::GetForward ( );
__declspec(implementation_key(1145)) _SendRuleActionPtr _RuleActions::GetForwardAsAttachment ( );
__declspec(implementation_key(1146)) _SendRuleActionPtr _RuleActions::GetRedirect ( );
__declspec(implementation_key(1147)) _AssignToCategoryRuleActionPtr _RuleActions::GetAssignToCategory ( );
__declspec(implementation_key(1148)) _PlaySoundRuleActionPtr _RuleActions::GetPlaySound ( );
__declspec(implementation_key(1149)) _MarkAsTaskRuleActionPtr _RuleActions::GetMarkAsTask ( );
__declspec(implementation_key(1150)) _NewItemAlertRuleActionPtr _RuleActions::GetNewItemAlert ( );
__declspec(implementation_key(1151)) _RuleActionPtr _RuleActions::GetClearCategories ( );
__declspec(implementation_key(1152)) _ApplicationPtr _AssignToCategoryRuleAction::GetApplication ( );
__declspec(implementation_key(1153)) enum OlObjectClass _AssignToCategoryRuleAction::GetClass ( );
__declspec(implementation_key(1154)) _NameSpacePtr _AssignToCategoryRuleAction::GetSession ( );
__declspec(implementation_key(1155)) IDispatchPtr _AssignToCategoryRuleAction::GetParent ( );
__declspec(implementation_key(1156)) VARIANT_BOOL _AssignToCategoryRuleAction::GetEnabled ( );
__declspec(implementation_key(1157)) void _AssignToCategoryRuleAction::PutEnabled ( VARIANT_BOOL Enabled );
__declspec(implementation_key(1158)) enum OlRuleActionType _AssignToCategoryRuleAction::GetActionType ( );
__declspec(implementation_key(1159)) _variant_t _AssignToCategoryRuleAction::GetCategories ( );
__declspec(implementation_key(1160)) void _AssignToCategoryRuleAction::PutCategories ( const _variant_t & Categories );
__declspec(implementation_key(1161)) _ApplicationPtr _PlaySoundRuleAction::GetApplication ( );
__declspec(implementation_key(1162)) enum OlObjectClass _PlaySoundRuleAction::GetClass ( );
__declspec(implementation_key(1163)) _NameSpacePtr _PlaySoundRuleAction::GetSession ( );
__declspec(implementation_key(1164)) IDispatchPtr _PlaySoundRuleAction::GetParent ( );
__declspec(implementation_key(1165)) VARIANT_BOOL _PlaySoundRuleAction::GetEnabled ( );
__declspec(implementation_key(1166)) void _PlaySoundRuleAction::PutEnabled ( VARIANT_BOOL Enabled );
__declspec(implementation_key(1167)) enum OlRuleActionType _PlaySoundRuleAction::GetActionType ( );
__declspec(implementation_key(1168)) _bstr_t _PlaySoundRuleAction::GetFilePath ( );
__declspec(implementation_key(1169)) void _PlaySoundRuleAction::PutFilePath ( _bstr_t FilePath );
__declspec(implementation_key(1170)) _ApplicationPtr _MarkAsTaskRuleAction::GetApplication ( );
__declspec(implementation_key(1171)) enum OlObjectClass _MarkAsTaskRuleAction::GetClass ( );
__declspec(implementation_key(1172)) _NameSpacePtr _MarkAsTaskRuleAction::GetSession ( );
__declspec(implementation_key(1173)) IDispatchPtr _MarkAsTaskRuleAction::GetParent ( );
__declspec(implementation_key(1174)) VARIANT_BOOL _MarkAsTaskRuleAction::GetEnabled ( );
__declspec(implementation_key(1175)) void _MarkAsTaskRuleAction::PutEnabled ( VARIANT_BOOL Enabled );
__declspec(implementation_key(1176)) enum OlRuleActionType _MarkAsTaskRuleAction::GetActionType ( );
__declspec(implementation_key(1177)) _bstr_t _MarkAsTaskRuleAction::GetFlagTo ( );
__declspec(implementation_key(1178)) void _MarkAsTaskRuleAction::PutFlagTo ( _bstr_t FlagTo );
__declspec(implementation_key(1179)) enum OlMarkInterval _MarkAsTaskRuleAction::GetMarkInterval ( );
__declspec(implementation_key(1180)) void _MarkAsTaskRuleAction::PutMarkInterval ( enum OlMarkInterval MarkInterval );
__declspec(implementation_key(1181)) _ApplicationPtr _NewItemAlertRuleAction::GetApplication ( );
__declspec(implementation_key(1182)) enum OlObjectClass _NewItemAlertRuleAction::GetClass ( );
__declspec(implementation_key(1183)) _NameSpacePtr _NewItemAlertRuleAction::GetSession ( );
__declspec(implementation_key(1184)) IDispatchPtr _NewItemAlertRuleAction::GetParent ( );
__declspec(implementation_key(1185)) VARIANT_BOOL _NewItemAlertRuleAction::GetEnabled ( );
__declspec(implementation_key(1186)) void _NewItemAlertRuleAction::PutEnabled ( VARIANT_BOOL Enabled );
__declspec(implementation_key(1187)) enum OlRuleActionType _NewItemAlertRuleAction::GetActionType ( );
__declspec(implementation_key(1188)) _bstr_t _NewItemAlertRuleAction::GetText ( );
__declspec(implementation_key(1189)) void _NewItemAlertRuleAction::PutText ( _bstr_t Text );
__declspec(implementation_key(1190)) _ApplicationPtr _RuleCondition::GetApplication ( );
__declspec(implementation_key(1191)) enum OlObjectClass _RuleCondition::GetClass ( );
__declspec(implementation_key(1192)) _NameSpacePtr _RuleCondition::GetSession ( );
__declspec(implementation_key(1193)) IDispatchPtr _RuleCondition::GetParent ( );
__declspec(implementation_key(1194)) VARIANT_BOOL _RuleCondition::GetEnabled ( );
__declspec(implementation_key(1195)) void _RuleCondition::PutEnabled ( VARIANT_BOOL Enabled );
__declspec(implementation_key(1196)) enum OlRuleConditionType _RuleCondition::GetConditionType ( );
__declspec(implementation_key(1197)) _ApplicationPtr _RuleConditions::GetApplication ( );
__declspec(implementation_key(1198)) enum OlObjectClass _RuleConditions::GetClass ( );
__declspec(implementation_key(1199)) _NameSpacePtr _RuleConditions::GetSession ( );
__declspec(implementation_key(1200)) IDispatchPtr _RuleConditions::GetParent ( );
__declspec(implementation_key(1201)) long _RuleConditions::GetCount ( );
__declspec(implementation_key(1202)) _RuleConditionPtr _RuleConditions::Item ( long Index );
__declspec(implementation_key(1203)) _RuleConditionPtr _RuleConditions::GetCC ( );
__declspec(implementation_key(1204)) _RuleConditionPtr _RuleConditions::GetHasAttachment ( );
__declspec(implementation_key(1205)) _ImportanceRuleConditionPtr _RuleConditions::GetImportance ( );
__declspec(implementation_key(1206)) _RuleConditionPtr _RuleConditions::GetMeetingInviteOrUpdate ( );
__declspec(implementation_key(1207)) _RuleConditionPtr _RuleConditions::GetNotTo ( );
__declspec(implementation_key(1208)) _RuleConditionPtr _RuleConditions::GetOnlyToMe ( );
__declspec(implementation_key(1209)) _RuleConditionPtr _RuleConditions::GetToMe ( );
__declspec(implementation_key(1210)) _RuleConditionPtr _RuleConditions::GetToOrCc ( );
__declspec(implementation_key(1211)) _AccountRuleConditionPtr _RuleConditions::GetAccount ( );
__declspec(implementation_key(1212)) _TextRuleConditionPtr _RuleConditions::GetBody ( );
__declspec(implementation_key(1213)) _TextRuleConditionPtr _RuleConditions::GetBodyOrSubject ( );
__declspec(implementation_key(1214)) _CategoryRuleConditionPtr _RuleConditions::GetCategory ( );
__declspec(implementation_key(1215)) _FormNameRuleConditionPtr _RuleConditions::GetFormName ( );
__declspec(implementation_key(1216)) _ToOrFromRuleConditionPtr _RuleConditions::GetFrom ( );
__declspec(implementation_key(1217)) _TextRuleConditionPtr _RuleConditions::GetMessageHeader ( );
__declspec(implementation_key(1218)) _AddressRuleConditionPtr _RuleConditions::GetRecipientAddress ( );
__declspec(implementation_key(1219)) _AddressRuleConditionPtr _RuleConditions::GetSenderAddress ( );
__declspec(implementation_key(1220)) _SenderInAddressListRuleConditionPtr _RuleConditions::GetSenderInAddressList ( );
__declspec(implementation_key(1221)) _TextRuleConditionPtr _RuleConditions::GetSubject ( );
__declspec(implementation_key(1222)) _ToOrFromRuleConditionPtr _RuleConditions::GetSentTo ( );
__declspec(implementation_key(1223)) _RuleConditionPtr _RuleConditions::GetOnLocalMachine ( );
__declspec(implementation_key(1224)) _RuleConditionPtr _RuleConditions::GetOnOtherMachine ( );
__declspec(implementation_key(1225)) _RuleConditionPtr _RuleConditions::GetAnyCategory ( );
__declspec(implementation_key(1226)) _RuleConditionPtr _RuleConditions::GetFromAnyRSSFeed ( );
__declspec(implementation_key(1227)) _FromRssFeedRuleConditionPtr _RuleConditions::GetFromRssFeed ( );
__declspec(implementation_key(1228)) _ApplicationPtr _ImportanceRuleCondition::GetApplication ( );
__declspec(implementation_key(1229)) enum OlObjectClass _ImportanceRuleCondition::GetClass ( );
__declspec(implementation_key(1230)) _NameSpacePtr _ImportanceRuleCondition::GetSession ( );
__declspec(implementation_key(1231)) IDispatchPtr _ImportanceRuleCondition::GetParent ( );
__declspec(implementation_key(1232)) VARIANT_BOOL _ImportanceRuleCondition::GetEnabled ( );
__declspec(implementation_key(1233)) void _ImportanceRuleCondition::PutEnabled ( VARIANT_BOOL Enabled );
__declspec(implementation_key(1234)) enum OlRuleConditionType _ImportanceRuleCondition::GetConditionType ( );
__declspec(implementation_key(1235)) enum OlImportance _ImportanceRuleCondition::GetImportance ( );
__declspec(implementation_key(1236)) void _ImportanceRuleCondition::PutImportance ( enum OlImportance Importance );
__declspec(implementation_key(1237)) _ApplicationPtr _AccountRuleCondition::GetApplication ( );
__declspec(implementation_key(1238)) enum OlObjectClass _AccountRuleCondition::GetClass ( );
__declspec(implementation_key(1239)) _NameSpacePtr _AccountRuleCondition::GetSession ( );
__declspec(implementation_key(1240)) IDispatchPtr _AccountRuleCondition::GetParent ( );
__declspec(implementation_key(1241)) VARIANT_BOOL _AccountRuleCondition::GetEnabled ( );
__declspec(implementation_key(1242)) void _AccountRuleCondition::PutEnabled ( VARIANT_BOOL Enabled );
__declspec(implementation_key(1243)) enum OlRuleConditionType _AccountRuleCondition::GetConditionType ( );
__declspec(implementation_key(1244)) _AccountPtr _AccountRuleCondition::GetAccount ( );
__declspec(implementation_key(1245)) void _AccountRuleCondition::PutAccount ( struct _Account * Account );
__declspec(implementation_key(1246)) _ApplicationPtr _Account::GetApplication ( );
__declspec(implementation_key(1247)) enum OlObjectClass _Account::GetClass ( );
__declspec(implementation_key(1248)) _NameSpacePtr _Account::GetSession ( );
__declspec(implementation_key(1249)) IDispatchPtr _Account::GetParent ( );
__declspec(implementation_key(1250)) enum OlAccountType _Account::GetAccountType ( );
__declspec(implementation_key(1251)) _bstr_t _Account::GetDisplayName ( );
__declspec(implementation_key(1252)) _bstr_t _Account::GetUserName ( );
__declspec(implementation_key(1253)) _bstr_t _Account::GetSmtpAddress ( );
__declspec(implementation_key(1254)) _ApplicationPtr _TextRuleCondition::GetApplication ( );
__declspec(implementation_key(1255)) enum OlObjectClass _TextRuleCondition::GetClass ( );
__declspec(implementation_key(1256)) _NameSpacePtr _TextRuleCondition::GetSession ( );
__declspec(implementation_key(1257)) IDispatchPtr _TextRuleCondition::GetParent ( );
__declspec(implementation_key(1258)) VARIANT_BOOL _TextRuleCondition::GetEnabled ( );
__declspec(implementation_key(1259)) void _TextRuleCondition::PutEnabled ( VARIANT_BOOL Enabled );
__declspec(implementation_key(1260)) enum OlRuleConditionType _TextRuleCondition::GetConditionType ( );
__declspec(implementation_key(1261)) _variant_t _TextRuleCondition::GetText ( );
__declspec(implementation_key(1262)) void _TextRuleCondition::PutText ( const _variant_t & Text );
__declspec(implementation_key(1263)) _ApplicationPtr _CategoryRuleCondition::GetApplication ( );
__declspec(implementation_key(1264)) enum OlObjectClass _CategoryRuleCondition::GetClass ( );
__declspec(implementation_key(1265)) _NameSpacePtr _CategoryRuleCondition::GetSession ( );
__declspec(implementation_key(1266)) IDispatchPtr _CategoryRuleCondition::GetParent ( );
__declspec(implementation_key(1267)) VARIANT_BOOL _CategoryRuleCondition::GetEnabled ( );
__declspec(implementation_key(1268)) void _CategoryRuleCondition::PutEnabled ( VARIANT_BOOL Enabled );
__declspec(implementation_key(1269)) enum OlRuleConditionType _CategoryRuleCondition::GetConditionType ( );
__declspec(implementation_key(1270)) _variant_t _CategoryRuleCondition::GetCategories ( );
__declspec(implementation_key(1271)) void _CategoryRuleCondition::PutCategories ( const _variant_t & Categories );
__declspec(implementation_key(1272)) _ApplicationPtr _FormNameRuleCondition::GetApplication ( );
__declspec(implementation_key(1273)) enum OlObjectClass _FormNameRuleCondition::GetClass ( );
__declspec(implementation_key(1274)) _NameSpacePtr _FormNameRuleCondition::GetSession ( );
__declspec(implementation_key(1275)) IDispatchPtr _FormNameRuleCondition::GetParent ( );
__declspec(implementation_key(1276)) VARIANT_BOOL _FormNameRuleCondition::GetEnabled ( );
__declspec(implementation_key(1277)) void _FormNameRuleCondition::PutEnabled ( VARIANT_BOOL Enabled );
__declspec(implementation_key(1278)) enum OlRuleConditionType _FormNameRuleCondition::GetConditionType ( );
__declspec(implementation_key(1279)) _variant_t _FormNameRuleCondition::GetFormName ( );
__declspec(implementation_key(1280)) void _FormNameRuleCondition::PutFormName ( const _variant_t & FormName );
__declspec(implementation_key(1281)) _ApplicationPtr _AddressRuleCondition::GetApplication ( );
__declspec(implementation_key(1282)) enum OlObjectClass _AddressRuleCondition::GetClass ( );
__declspec(implementation_key(1283)) _NameSpacePtr _AddressRuleCondition::GetSession ( );
__declspec(implementation_key(1284)) IDispatchPtr _AddressRuleCondition::GetParent ( );
__declspec(implementation_key(1285)) VARIANT_BOOL _AddressRuleCondition::GetEnabled ( );
__declspec(implementation_key(1286)) void _AddressRuleCondition::PutEnabled ( VARIANT_BOOL Enabled );
__declspec(implementation_key(1287)) enum OlRuleConditionType _AddressRuleCondition::GetConditionType ( );
__declspec(implementation_key(1288)) _variant_t _AddressRuleCondition::GetAddress ( );
__declspec(implementation_key(1289)) void _AddressRuleCondition::PutAddress ( const _variant_t & Address );
__declspec(implementation_key(1290)) _ApplicationPtr _FromRssFeedRuleCondition::GetApplication ( );
__declspec(implementation_key(1291)) enum OlObjectClass _FromRssFeedRuleCondition::GetClass ( );
__declspec(implementation_key(1292)) _NameSpacePtr _FromRssFeedRuleCondition::GetSession ( );
__declspec(implementation_key(1293)) IDispatchPtr _FromRssFeedRuleCondition::GetParent ( );
__declspec(implementation_key(1294)) VARIANT_BOOL _FromRssFeedRuleCondition::GetEnabled ( );
__declspec(implementation_key(1295)) void _FromRssFeedRuleCondition::PutEnabled ( VARIANT_BOOL Enabled );
__declspec(implementation_key(1296)) enum OlRuleConditionType _FromRssFeedRuleCondition::GetConditionType ( );
__declspec(implementation_key(1297)) _variant_t _FromRssFeedRuleCondition::GetFromRssFeed ( );
__declspec(implementation_key(1298)) void _FromRssFeedRuleCondition::PutFromRssFeed ( const _variant_t & FromRssFeed );
__declspec(implementation_key(1299)) _ApplicationPtr _StorageItem::GetApplication ( );
__declspec(implementation_key(1300)) enum OlObjectClass _StorageItem::GetClass ( );
__declspec(implementation_key(1301)) _NameSpacePtr _StorageItem::GetSession ( );
__declspec(implementation_key(1302)) IDispatchPtr _StorageItem::GetParent ( );
__declspec(implementation_key(1303)) DATE _StorageItem::GetCreationTime ( );
__declspec(implementation_key(1304)) DATE _StorageItem::GetLastModificationTime ( );
__declspec(implementation_key(1305)) _bstr_t _StorageItem::GetEntryID ( );
__declspec(implementation_key(1306)) HRESULT _StorageItem::Save ( );
__declspec(implementation_key(1307)) HRESULT _StorageItem::Delete ( );
__declspec(implementation_key(1308)) _bstr_t _StorageItem::GetBody ( );
__declspec(implementation_key(1309)) void _StorageItem::PutBody ( _bstr_t Body );
__declspec(implementation_key(1310)) AttachmentsPtr _StorageItem::GetAttachments ( );
__declspec(implementation_key(1311)) long _StorageItem::GetSize ( );
__declspec(implementation_key(1312)) UserPropertiesPtr _StorageItem::GetUserProperties ( );
__declspec(implementation_key(1313)) _PropertyAccessorPtr _StorageItem::GetPropertyAccessor ( );
__declspec(implementation_key(1314)) _bstr_t _StorageItem::GetSubject ( );
__declspec(implementation_key(1315)) void _StorageItem::PutSubject ( _bstr_t Subject );
__declspec(implementation_key(1316)) _bstr_t _StorageItem::GetCreator ( );
__declspec(implementation_key(1317)) void _StorageItem::PutCreator ( _bstr_t Creator );
__declspec(implementation_key(1318)) _ApplicationPtr _Table::GetApplication ( );
__declspec(implementation_key(1319)) enum OlObjectClass _Table::GetClass ( );
__declspec(implementation_key(1320)) _NameSpacePtr _Table::GetSession ( );
__declspec(implementation_key(1321)) IDispatchPtr _Table::GetParent ( );
__declspec(implementation_key(1322)) _RowPtr _Table::FindRow ( _bstr_t Filter );
__declspec(implementation_key(1323)) _RowPtr _Table::FindNextRow ( );
__declspec(implementation_key(1324)) _variant_t _Table::GetArray ( long MaxRows );
__declspec(implementation_key(1325)) _RowPtr _Table::GetNextRow ( );
__declspec(implementation_key(1326)) long _Table::GetRowCount ( );
__declspec(implementation_key(1327)) HRESULT _Table::MoveToStart ( );
__declspec(implementation_key(1328)) _TablePtr _Table::Restrict ( _bstr_t Filter );
__declspec(implementation_key(1329)) HRESULT _Table::Sort ( _bstr_t SortProperty, const _variant_t & Descending );
__declspec(implementation_key(1330)) _ColumnsPtr _Table::GetColumns ( );
__declspec(implementation_key(1331)) VARIANT_BOOL _Table::GetEndOfTable ( );
__declspec(implementation_key(1332)) _ApplicationPtr _Row::GetApplication ( );
__declspec(implementation_key(1333)) enum OlObjectClass _Row::GetClass ( );
__declspec(implementation_key(1334)) _NameSpacePtr _Row::GetSession ( );
__declspec(implementation_key(1335)) IDispatchPtr _Row::GetParent ( );
__declspec(implementation_key(1336)) _bstr_t _Row::BinaryToString ( const _variant_t & Index );
__declspec(implementation_key(1337)) _variant_t _Row::GetValues ( );
__declspec(implementation_key(1338)) _variant_t _Row::Item ( const _variant_t & Index );
__declspec(implementation_key(1339)) DATE _Row::LocalTimeToUTC ( const _variant_t & Index );
__declspec(implementation_key(1340)) DATE _Row::UTCToLocalTime ( const _variant_t & Index );
__declspec(implementation_key(1341)) _ApplicationPtr _Column::GetApplication ( );
__declspec(implementation_key(1342)) enum OlObjectClass _Column::GetClass ( );
__declspec(implementation_key(1343)) _NameSpacePtr _Column::GetSession ( );
__declspec(implementation_key(1344)) IDispatchPtr _Column::GetParent ( );
__declspec(implementation_key(1345)) _bstr_t _Column::GetName ( );
__declspec(implementation_key(1346)) _ApplicationPtr _Columns::GetApplication ( );
__declspec(implementation_key(1347)) enum OlObjectClass _Columns::GetClass ( );
__declspec(implementation_key(1348)) _NameSpacePtr _Columns::GetSession ( );
__declspec(implementation_key(1349)) IDispatchPtr _Columns::GetParent ( );
__declspec(implementation_key(1350)) long _Columns::GetCount ( );
__declspec(implementation_key(1351)) _ColumnPtr _Columns::Item ( const _variant_t & Index );
__declspec(implementation_key(1352)) _ColumnPtr _Columns::Add ( _bstr_t Name );
__declspec(implementation_key(1353)) HRESULT _Columns::Remove ( const _variant_t & Index );
__declspec(implementation_key(1354)) HRESULT _Columns::RemoveAll ( );
__declspec(implementation_key(1355)) _ApplicationPtr Link::GetApplication ( );
__declspec(implementation_key(1356)) enum OlObjectClass Link::GetClass ( );
__declspec(implementation_key(1357)) _NameSpacePtr Link::GetSession ( );
__declspec(implementation_key(1358)) IDispatchPtr Link::GetParent ( );
__declspec(implementation_key(1359)) _bstr_t Link::GetName ( );
__declspec(implementation_key(1360)) enum OlObjectClass Link::GetType ( );
__declspec(implementation_key(1361)) IDispatchPtr Link::GetItem ( );
__declspec(implementation_key(1362)) _ApplicationPtr Links::GetApplication ( );
__declspec(implementation_key(1363)) enum OlObjectClass Links::GetClass ( );
__declspec(implementation_key(1364)) _NameSpacePtr Links::GetSession ( );
__declspec(implementation_key(1365)) IDispatchPtr Links::GetParent ( );
__declspec(implementation_key(1366)) long Links::GetCount ( );
__declspec(implementation_key(1367)) LinkPtr Links::Item ( const _variant_t & Index );
__declspec(implementation_key(1368)) LinkPtr Links::Add ( IDispatch * Item );
__declspec(implementation_key(1369)) HRESULT Links::Remove ( const _variant_t & Index );
__declspec(implementation_key(1370)) _ApplicationPtr ItemProperty::GetApplication ( );
__declspec(implementation_key(1371)) enum OlObjectClass ItemProperty::GetClass ( );
__declspec(implementation_key(1372)) _NameSpacePtr ItemProperty::GetSession ( );
__declspec(implementation_key(1373)) IDispatchPtr ItemProperty::GetParent ( );
__declspec(implementation_key(1374)) _bstr_t ItemProperty::GetFormula ( );
__declspec(implementation_key(1375)) void ItemProperty::PutFormula ( _bstr_t Formula );
__declspec(implementation_key(1376)) _bstr_t ItemProperty::GetName ( );
__declspec(implementation_key(1377)) enum OlUserPropertyType ItemProperty::GetType ( );
__declspec(implementation_key(1378)) _bstr_t ItemProperty::GetValidationFormula ( );
__declspec(implementation_key(1379)) void ItemProperty::PutValidationFormula ( _bstr_t ValidationFormula );
__declspec(implementation_key(1380)) _bstr_t ItemProperty::GetValidationText ( );
__declspec(implementation_key(1381)) void ItemProperty::PutValidationText ( _bstr_t ValidationText );
__declspec(implementation_key(1382)) _variant_t ItemProperty::GetValue ( );
__declspec(implementation_key(1383)) void ItemProperty::PutValue ( const _variant_t & Value );
__declspec(implementation_key(1384)) HRESULT ItemProperty::Delete ( );
__declspec(implementation_key(1385)) VARIANT_BOOL ItemProperty::GetIsUserProperty ( );
__declspec(implementation_key(1386)) _ApplicationPtr ItemProperties::GetApplication ( );
__declspec(implementation_key(1387)) enum OlObjectClass ItemProperties::GetClass ( );
__declspec(implementation_key(1388)) _NameSpacePtr ItemProperties::GetSession ( );
__declspec(implementation_key(1389)) IDispatchPtr ItemProperties::GetParent ( );
__declspec(implementation_key(1390)) long ItemProperties::GetCount ( );
__declspec(implementation_key(1391)) ItemPropertyPtr ItemProperties::Item ( const _variant_t & Index );
__declspec(implementation_key(1392)) IUnknownPtr ItemProperties::_NewEnum ( );
__declspec(implementation_key(1393)) ItemPropertyPtr ItemProperties::Add ( _bstr_t Name, enum OlUserPropertyType Type,
const _variant_t & AddToFolderFields, const _variant_t & DisplayFormat );
__declspec(implementation_key(1394)) HRESULT ItemProperties::Remove ( long Index );
__declspec(implementation_key(1395)) _ApplicationPtr Conflict::GetApplication ( );
__declspec(implementation_key(1396)) enum OlObjectClass Conflict::GetClass ( );
__declspec(implementation_key(1397)) _NameSpacePtr Conflict::GetSession ( );
__declspec(implementation_key(1398)) IDispatchPtr Conflict::GetParent ( );
__declspec(implementation_key(1399)) IDispatchPtr Conflict::GetItem ( );
__declspec(implementation_key(1400)) _bstr_t Conflict::GetName ( );
__declspec(implementation_key(1401)) enum OlObjectClass Conflict::GetType ( );
__declspec(implementation_key(1402)) _ApplicationPtr Conflicts::GetApplication ( );
__declspec(implementation_key(1403)) enum OlObjectClass Conflicts::GetClass ( );
__declspec(implementation_key(1404)) _NameSpacePtr Conflicts::GetSession ( );
__declspec(implementation_key(1405)) IDispatchPtr Conflicts::GetParent ( );
__declspec(implementation_key(1406)) long Conflicts::GetCount ( );
__declspec(implementation_key(1407)) ConflictPtr Conflicts::Item ( const _variant_t & Index );
__declspec(implementation_key(1408)) ConflictPtr Conflicts::GetFirst ( );
__declspec(implementation_key(1409)) ConflictPtr Conflicts::GetLast ( );
__declspec(implementation_key(1410)) ConflictPtr Conflicts::GetNext ( );
__declspec(implementation_key(1411)) ConflictPtr Conflicts::GetPrevious ( );
__declspec(implementation_key(1412)) _ApplicationPtr _UserDefinedProperty::GetApplication ( );
__declspec(implementation_key(1413)) enum OlObjectClass _UserDefinedProperty::GetClass ( );
__declspec(implementation_key(1414)) _NameSpacePtr _UserDefinedProperty::GetSession ( );
__declspec(implementation_key(1415)) IDispatchPtr _UserDefinedProperty::GetParent ( );
__declspec(implementation_key(1416)) _bstr_t _UserDefinedProperty::GetFormula ( );
__declspec(implementation_key(1417)) _bstr_t _UserDefinedProperty::GetName ( );
__declspec(implementation_key(1418)) enum OlUserPropertyType _UserDefinedProperty::GetType ( );
__declspec(implementation_key(1419)) long _UserDefinedProperty::GetDisplayFormat ( );
__declspec(implementation_key(1420)) HRESULT _UserDefinedProperty::Delete ( );
__declspec(implementation_key(1421)) _ApplicationPtr _UserDefinedProperties::GetApplication ( );
__declspec(implementation_key(1422)) enum OlObjectClass _UserDefinedProperties::GetClass ( );
__declspec(implementation_key(1423)) _NameSpacePtr _UserDefinedProperties::GetSession ( );
__declspec(implementation_key(1424)) IDispatchPtr _UserDefinedProperties::GetParent ( );
__declspec(implementation_key(1425)) long _UserDefinedProperties::GetCount ( );
__declspec(implementation_key(1426)) _UserDefinedPropertyPtr _UserDefinedProperties::Item ( const _variant_t & Index );
__declspec(implementation_key(1427)) _UserDefinedPropertyPtr _UserDefinedProperties::Add ( _bstr_t Name, enum
OlUserPropertyType Type, const _variant_t & DisplayFormat, const _variant_t & Formula );
__declspec(implementation_key(1428)) _UserDefinedPropertyPtr _UserDefinedProperties::Find ( _bstr_t Name );
__declspec(implementation_key(1429)) HRESULT _UserDefinedProperties::Remove ( long Index );
__declspec(implementation_key(1430)) HRESULT _UserDefinedProperties::Refresh ( );
__declspec(implementation_key(1431)) _ApplicationPtr _SyncObject::GetApplication ( );
__declspec(implementation_key(1432)) enum OlObjectClass _SyncObject::GetClass ( );
__declspec(implementation_key(1433)) _NameSpacePtr _SyncObject::GetSession ( );
__declspec(implementation_key(1434)) IDispatchPtr _SyncObject::GetParent ( );
__declspec(implementation_key(1435)) _bstr_t _SyncObject::GetName ( );
__declspec(implementation_key(1436)) HRESULT _SyncObject::Start ( );
__declspec(implementation_key(1437)) HRESULT _SyncObject::Stop ( );
__declspec(implementation_key(1438)) _ApplicationPtr SyncObjects::GetApplication ( );
__declspec(implementation_key(1439)) enum OlObjectClass SyncObjects::GetClass ( );
__declspec(implementation_key(1440)) _NameSpacePtr SyncObjects::GetSession ( );
__declspec(implementation_key(1441)) IDispatchPtr SyncObjects::GetParent ( );
__declspec(implementation_key(1442)) long SyncObjects::GetCount ( );
__declspec(implementation_key(1443)) _SyncObjectPtr SyncObjects::Item ( const _variant_t & Index );
__declspec(implementation_key(1444)) _SyncObjectPtr SyncObjects::GetAppFolders ( );
__declspec(implementation_key(1445)) _ApplicationPtr _Accounts::GetApplication ( );
__declspec(implementation_key(1446)) enum OlObjectClass _Accounts::GetClass ( );
__declspec(implementation_key(1447)) _NameSpacePtr _Accounts::GetSession ( );
__declspec(implementation_key(1448)) IDispatchPtr _Accounts::GetParent ( );
__declspec(implementation_key(1449)) long _Accounts::GetCount ( );
__declspec(implementation_key(1450)) _AccountPtr _Accounts::Item ( const _variant_t & Index );
__declspec(implementation_key(1451)) _ApplicationPtr _Category::GetApplication ( );
__declspec(implementation_key(1452)) enum OlObjectClass _Category::GetClass ( );
__declspec(implementation_key(1453)) _NameSpacePtr _Category::GetSession ( );
__declspec(implementation_key(1454)) IDispatchPtr _Category::GetParent ( );
__declspec(implementation_key(1455)) _bstr_t _Category::GetName ( );
__declspec(implementation_key(1456)) void _Category::PutName ( _bstr_t Name );
__declspec(implementation_key(1457)) enum OlCategoryColor _Category::GetColor ( );
__declspec(implementation_key(1458)) void _Category::PutColor ( enum OlCategoryColor Color );
__declspec(implementation_key(1459)) enum OlCategoryShortcutKey _Category::GetShortcutKey ( );
__declspec(implementation_key(1460)) void _Category::PutShortcutKey ( enum OlCategoryShortcutKey ShortcutKey );
__declspec(implementation_key(1461)) _bstr_t _Category::GetCategoryID ( );
__declspec(implementation_key(1462)) OLE_COLOR _Category::GetCategoryBorderColor ( );
__declspec(implementation_key(1463)) OLE_COLOR _Category::GetCategoryGradientTopColor ( );
__declspec(implementation_key(1464)) OLE_COLOR _Category::GetCategoryGradientBottomColor ( );
__declspec(implementation_key(1465)) _ApplicationPtr _Categories::GetApplication ( );
__declspec(implementation_key(1466)) enum OlObjectClass _Categories::GetClass ( );
__declspec(implementation_key(1467)) _NameSpacePtr _Categories::GetSession ( );
__declspec(implementation_key(1468)) IDispatchPtr _Categories::GetParent ( );
__declspec(implementation_key(1469)) long _Categories::GetCount ( );
__declspec(implementation_key(1470)) _CategoryPtr _Categories::Item ( const _variant_t & Index );
__declspec(implementation_key(1471)) _CategoryPtr _Categories::Add ( _bstr_t Name, const _variant_t & Color, const
_variant_t & ShortcutKey );
__declspec(implementation_key(1472)) HRESULT _Categories::Remove ( const _variant_t & Index );
__declspec(implementation_key(1473)) _ApplicationPtr _Inspectors::GetApplication ( );
__declspec(implementation_key(1474)) enum OlObjectClass _Inspectors::GetClass ( );
__declspec(implementation_key(1475)) _NameSpacePtr _Inspectors::GetSession ( );
__declspec(implementation_key(1476)) IDispatchPtr _Inspectors::GetParent ( );
__declspec(implementation_key(1477)) long _Inspectors::GetCount ( );
__declspec(implementation_key(1478)) _InspectorPtr _Inspectors::Item ( const _variant_t & Index );
__declspec(implementation_key(1479)) _InspectorPtr _Inspectors::Add ( IDispatch * Item );
__declspec(implementation_key(1480)) _ApplicationPtr _Results::GetApplication ( );
__declspec(implementation_key(1481)) enum OlObjectClass _Results::GetClass ( );
__declspec(implementation_key(1482)) _NameSpacePtr _Results::GetSession ( );
__declspec(implementation_key(1483)) IDispatchPtr _Results::GetParent ( );
__declspec(implementation_key(1484)) long _Results::GetCount ( );
__declspec(implementation_key(1485)) IDispatchPtr _Results::Item ( const _variant_t & Index );
__declspec(implementation_key(1486)) IUnknownPtr _Results::GetRawTable ( );
__declspec(implementation_key(1487)) IDispatchPtr _Results::GetFirst ( );
__declspec(implementation_key(1488)) IDispatchPtr _Results::GetLast ( );
__declspec(implementation_key(1489)) IDispatchPtr _Results::GetNext ( );
__declspec(implementation_key(1490)) IDispatchPtr _Results::GetPrevious ( );
__declspec(implementation_key(1491)) HRESULT _Results::ResetColumns ( );
__declspec(implementation_key(1492)) HRESULT _Results::SetColumns ( _bstr_t Columns );
__declspec(implementation_key(1493)) HRESULT _Results::Sort ( _bstr_t Property, const _variant_t & Descending );
__declspec(implementation_key(1494)) enum OlItemType _Results::GetDefaultItemType ( );
__declspec(implementation_key(1495)) void _Results::PutDefaultItemType ( enum OlItemType DefaultItemType );
__declspec(implementation_key(1496)) _ApplicationPtr _Reminder::GetApplication ( );
__declspec(implementation_key(1497)) enum OlObjectClass _Reminder::GetClass ( );
__declspec(implementation_key(1498)) _NameSpacePtr _Reminder::GetSession ( );
__declspec(implementation_key(1499)) IDispatchPtr _Reminder::GetParent ( );
__declspec(implementation_key(1500)) HRESULT _Reminder::Dismiss ( );
__declspec(implementation_key(1501)) HRESULT _Reminder::Snooze ( const _variant_t & SnoozeTime );
__declspec(implementation_key(1502)) _bstr_t _Reminder::GetCaption ( );
__declspec(implementation_key(1503)) VARIANT_BOOL _Reminder::GetIsVisible ( );
__declspec(implementation_key(1504)) IDispatchPtr _Reminder::GetItem ( );
__declspec(implementation_key(1505)) DATE _Reminder::GetNextReminderDate ( );
__declspec(implementation_key(1506)) DATE _Reminder::GetOriginalReminderDate ( );
__declspec(implementation_key(1507)) _ApplicationPtr _Reminders::GetApplication ( );
__declspec(implementation_key(1508)) enum OlObjectClass _Reminders::GetClass ( );
__declspec(implementation_key(1509)) _NameSpacePtr _Reminders::GetSession ( );
__declspec(implementation_key(1510)) IDispatchPtr _Reminders::GetParent ( );
__declspec(implementation_key(1511)) long _Reminders::GetCount ( );
__declspec(implementation_key(1512)) _ReminderPtr _Reminders::Item ( const _variant_t & Index );
__declspec(implementation_key(1513)) HRESULT _Reminders::Remove ( const _variant_t & Index );
__declspec(implementation_key(1514)) IUnknownPtr _Reminders::_NewEnum ( );
__declspec(implementation_key(1515)) _ApplicationPtr _TimeZones::GetApplication ( );
__declspec(implementation_key(1516)) enum OlObjectClass _TimeZones::GetClass ( );
__declspec(implementation_key(1517)) _NameSpacePtr _TimeZones::GetSession ( );
__declspec(implementation_key(1518)) IDispatchPtr _TimeZones::GetParent ( );
__declspec(implementation_key(1519)) long _TimeZones::GetCount ( );
__declspec(implementation_key(1520)) _TimeZonePtr _TimeZones::Item ( const _variant_t & Index );
__declspec(implementation_key(1521)) DATE _TimeZones::ConvertTime ( DATE SourceDateTime, struct _TimeZone *
SourceTimeZone, struct _TimeZone * DestinationTimeZone );
__declspec(implementation_key(1522)) _TimeZonePtr _TimeZones::GetCurrentTimeZone ( );
__declspec(implementation_key(1523)) _ApplicationPtr PropertyPages::GetApplication ( );
__declspec(implementation_key(1524)) enum OlObjectClass PropertyPages::GetClass ( );
__declspec(implementation_key(1525)) _NameSpacePtr PropertyPages::GetSession ( );
__declspec(implementation_key(1526)) IDispatchPtr PropertyPages::GetParent ( );
__declspec(implementation_key(1527)) long PropertyPages::GetCount ( );
__declspec(implementation_key(1528)) IDispatchPtr PropertyPages::Item ( const _variant_t & Index );
__declspec(implementation_key(1529)) HRESULT PropertyPages::Add ( const _variant_t & Page, _bstr_t Title );
__declspec(implementation_key(1530)) HRESULT PropertyPages::Remove ( const _variant_t & Index );
__declspec(implementation_key(1531)) _ApplicationPtr Exception::GetApplication ( );
__declspec(implementation_key(1532)) enum OlObjectClass Exception::GetClass ( );
__declspec(implementation_key(1533)) _NameSpacePtr Exception::GetSession ( );
__declspec(implementation_key(1534)) IDispatchPtr Exception::GetParent ( );
__declspec(implementation_key(1535)) _AppointmentItemPtr Exception::GetAppointmentItem ( );
__declspec(implementation_key(1536)) VARIANT_BOOL Exception::GetDeleted ( );
__declspec(implementation_key(1537)) DATE Exception::GetOriginalDate ( );
__declspec(implementation_key(1538)) ItemPropertiesPtr Exception::GetItemProperties ( );
__declspec(implementation_key(1539)) _ApplicationPtr Exceptions::GetApplication ( );
__declspec(implementation_key(1540)) enum OlObjectClass Exceptions::GetClass ( );
__declspec(implementation_key(1541)) _NameSpacePtr Exceptions::GetSession ( );
__declspec(implementation_key(1542)) IDispatchPtr Exceptions::GetParent ( );
__declspec(implementation_key(1543)) long Exceptions::GetCount ( );
__declspec(implementation_key(1544)) ExceptionPtr Exceptions::Item ( const _variant_t & Index );
__declspec(implementation_key(1545)) _ApplicationPtr RecurrencePattern::GetApplication ( );
__declspec(implementation_key(1546)) enum OlObjectClass RecurrencePattern::GetClass ( );
__declspec(implementation_key(1547)) _NameSpacePtr RecurrencePattern::GetSession ( );
__declspec(implementation_key(1548)) IDispatchPtr RecurrencePattern::GetParent ( );
__declspec(implementation_key(1549)) long RecurrencePattern::GetDayOfMonth ( );
__declspec(implementation_key(1550)) void RecurrencePattern::PutDayOfMonth ( long DayOfMonth );
__declspec(implementation_key(1551)) enum OlDaysOfWeek RecurrencePattern::GetDayOfWeekMask ( );
__declspec(implementation_key(1552)) void RecurrencePattern::PutDayOfWeekMask ( enum OlDaysOfWeek DayOfWeekMask );
__declspec(implementation_key(1553)) long RecurrencePattern::GetDuration ( );
__declspec(implementation_key(1554)) void RecurrencePattern::PutDuration ( long Duration );
__declspec(implementation_key(1555)) DATE RecurrencePattern::GetEndTime ( );
__declspec(implementation_key(1556)) void RecurrencePattern::PutEndTime ( DATE EndTime );
__declspec(implementation_key(1557)) ExceptionsPtr RecurrencePattern::GetExceptions ( );
__declspec(implementation_key(1558)) long RecurrencePattern::GetInstance ( );
__declspec(implementation_key(1559)) void RecurrencePattern::PutInstance ( long Instance );
__declspec(implementation_key(1560)) long RecurrencePattern::GetInterval ( );
__declspec(implementation_key(1561)) void RecurrencePattern::PutInterval ( long Interval );
__declspec(implementation_key(1562)) long RecurrencePattern::GetMonthOfYear ( );
__declspec(implementation_key(1563)) void RecurrencePattern::PutMonthOfYear ( long MonthOfYear );
__declspec(implementation_key(1564)) VARIANT_BOOL RecurrencePattern::GetNoEndDate ( );
__declspec(implementation_key(1565)) void RecurrencePattern::PutNoEndDate ( VARIANT_BOOL NoEndDate );
__declspec(implementation_key(1566)) long RecurrencePattern::GetOccurrences ( );
__declspec(implementation_key(1567)) void RecurrencePattern::PutOccurrences ( long Occurrences );
__declspec(implementation_key(1568)) DATE RecurrencePattern::GetPatternEndDate ( );
__declspec(implementation_key(1569)) void RecurrencePattern::PutPatternEndDate ( DATE PatternEndDate );
__declspec(implementation_key(1570)) DATE RecurrencePattern::GetPatternStartDate ( );
__declspec(implementation_key(1571)) void RecurrencePattern::PutPatternStartDate ( DATE PatternStartDate );
__declspec(implementation_key(1572)) enum OlRecurrenceType RecurrencePattern::GetRecurrenceType ( );
__declspec(implementation_key(1573)) void RecurrencePattern::PutRecurrenceType ( enum OlRecurrenceType RecurrenceType );
__declspec(implementation_key(1574)) VARIANT_BOOL RecurrencePattern::GetRegenerate ( );
__declspec(implementation_key(1575)) void RecurrencePattern::PutRegenerate ( VARIANT_BOOL Regenerate );
__declspec(implementation_key(1576)) DATE RecurrencePattern::GetStartTime ( );
__declspec(implementation_key(1577)) void RecurrencePattern::PutStartTime ( DATE StartTime );
__declspec(implementation_key(1578)) _AppointmentItemPtr RecurrencePattern::GetOccurrence ( DATE StartDate );
__declspec(implementation_key(1579)) _ApplicationPtr OutlookBarShortcut::GetApplication ( );
__declspec(implementation_key(1580)) enum OlObjectClass OutlookBarShortcut::GetClass ( );
__declspec(implementation_key(1581)) _NameSpacePtr OutlookBarShortcut::GetSession ( );
__declspec(implementation_key(1582)) IDispatchPtr OutlookBarShortcut::GetParent ( );
__declspec(implementation_key(1583)) _bstr_t OutlookBarShortcut::GetName ( );
__declspec(implementation_key(1584)) void OutlookBarShortcut::PutName ( _bstr_t Name );
__declspec(implementation_key(1585)) _variant_t OutlookBarShortcut::GetTarget ( );
__declspec(implementation_key(1586)) HRESULT OutlookBarShortcut::SetIcon ( const _variant_t & Icon );
__declspec(implementation_key(1587)) _ApplicationPtr _OutlookBarShortcuts::GetApplication ( );
__declspec(implementation_key(1588)) enum OlObjectClass _OutlookBarShortcuts::GetClass ( );
__declspec(implementation_key(1589)) _NameSpacePtr _OutlookBarShortcuts::GetSession ( );
__declspec(implementation_key(1590)) IDispatchPtr _OutlookBarShortcuts::GetParent ( );
__declspec(implementation_key(1591)) long _OutlookBarShortcuts::GetCount ( );
__declspec(implementation_key(1592)) OutlookBarShortcutPtr _OutlookBarShortcuts::Item ( const _variant_t & Index );
__declspec(implementation_key(1593)) OutlookBarShortcutPtr _OutlookBarShortcuts::Add ( const _variant_t & Target,
_bstr_t Name, const _variant_t & Index );
__declspec(implementation_key(1594)) HRESULT _OutlookBarShortcuts::Remove ( const _variant_t & Index );
__declspec(implementation_key(1595)) _ApplicationPtr OutlookBarGroup::GetApplication ( );
__declspec(implementation_key(1596)) enum OlObjectClass OutlookBarGroup::GetClass ( );
__declspec(implementation_key(1597)) _NameSpacePtr OutlookBarGroup::GetSession ( );
__declspec(implementation_key(1598)) IDispatchPtr OutlookBarGroup::GetParent ( );
__declspec(implementation_key(1599)) _bstr_t OutlookBarGroup::GetName ( );
__declspec(implementation_key(1600)) void OutlookBarGroup::PutName ( _bstr_t Name );
__declspec(implementation_key(1601)) _OutlookBarShortcutsPtr OutlookBarGroup::GetShortcuts ( );
__declspec(implementation_key(1602)) enum OlOutlookBarViewType OutlookBarGroup::GetViewType ( );
__declspec(implementation_key(1603)) void OutlookBarGroup::PutViewType ( enum OlOutlookBarViewType ViewType );
__declspec(implementation_key(1604)) _ApplicationPtr _OutlookBarGroups::GetApplication ( );
__declspec(implementation_key(1605)) enum OlObjectClass _OutlookBarGroups::GetClass ( );
__declspec(implementation_key(1606)) _NameSpacePtr _OutlookBarGroups::GetSession ( );
__declspec(implementation_key(1607)) IDispatchPtr _OutlookBarGroups::GetParent ( );
__declspec(implementation_key(1608)) long _OutlookBarGroups::GetCount ( );
__declspec(implementation_key(1609)) OutlookBarGroupPtr _OutlookBarGroups::Item ( const _variant_t & Index );
__declspec(implementation_key(1610)) OutlookBarGroupPtr _OutlookBarGroups::Add ( _bstr_t Name, const _variant_t & Index
);
__declspec(implementation_key(1611)) HRESULT _OutlookBarGroups::Remove ( const _variant_t & Index );
__declspec(implementation_key(1612)) _ApplicationPtr OutlookBarStorage::GetApplication ( );
__declspec(implementation_key(1613)) enum OlObjectClass OutlookBarStorage::GetClass ( );
__declspec(implementation_key(1614)) _NameSpacePtr OutlookBarStorage::GetSession ( );
__declspec(implementation_key(1615)) IDispatchPtr OutlookBarStorage::GetParent ( );
__declspec(implementation_key(1616)) _OutlookBarGroupsPtr OutlookBarStorage::GetGroups ( );
__declspec(implementation_key(1617)) _ApplicationPtr _OutlookBarPane::GetApplication ( );
__declspec(implementation_key(1618)) enum OlObjectClass _OutlookBarPane::GetClass ( );
__declspec(implementation_key(1619)) _NameSpacePtr _OutlookBarPane::GetSession ( );
__declspec(implementation_key(1620)) IDispatchPtr _OutlookBarPane::GetParent ( );
__declspec(implementation_key(1621)) OutlookBarStoragePtr _OutlookBarPane::GetContents ( );
__declspec(implementation_key(1622)) OutlookBarGroupPtr _OutlookBarPane::GetCurrentGroup ( );
__declspec(implementation_key(1623)) void _OutlookBarPane::PutRefCurrentGroup ( struct OutlookBarGroup * CurrentGroup );
__declspec(implementation_key(1624)) _bstr_t _OutlookBarPane::GetName ( );
__declspec(implementation_key(1625)) VARIANT_BOOL _OutlookBarPane::GetVisible ( );
__declspec(implementation_key(1626)) void _OutlookBarPane::PutVisible ( VARIANT_BOOL Visible );
__declspec(implementation_key(1627)) _ApplicationPtr PropertyPageSite::GetApplication ( );
__declspec(implementation_key(1628)) enum OlObjectClass PropertyPageSite::GetClass ( );
__declspec(implementation_key(1629)) _NameSpacePtr PropertyPageSite::GetSession ( );
__declspec(implementation_key(1630)) IDispatchPtr PropertyPageSite::GetParent ( );
__declspec(implementation_key(1631)) HRESULT PropertyPageSite::OnStatusChange ( );
__declspec(implementation_key(1632)) _ApplicationPtr Pages::GetApplication ( );
__declspec(implementation_key(1633)) enum OlObjectClass Pages::GetClass ( );
__declspec(implementation_key(1634)) _NameSpacePtr Pages::GetSession ( );
__declspec(implementation_key(1635)) IDispatchPtr Pages::GetParent ( );
__declspec(implementation_key(1636)) long Pages::GetCount ( );
__declspec(implementation_key(1637)) IDispatchPtr Pages::Item ( const _variant_t & Index );
__declspec(implementation_key(1638)) IDispatchPtr Pages::Add ( const _variant_t & Name );
__declspec(implementation_key(1639)) HRESULT Pages::Remove ( long Index );
__declspec(implementation_key(1640)) _ApplicationPtr _AttachmentSelection::GetApplication ( );
__declspec(implementation_key(1641)) enum OlObjectClass _AttachmentSelection::GetClass ( );
__declspec(implementation_key(1642)) _NameSpacePtr _AttachmentSelection::GetSession ( );
__declspec(implementation_key(1643)) IDispatchPtr _AttachmentSelection::GetParent ( );
__declspec(implementation_key(1644)) long _AttachmentSelection::GetCount ( );
__declspec(implementation_key(1645)) AttachmentPtr _AttachmentSelection::Item ( const _variant_t & Index );
__declspec(implementation_key(1646)) _ApplicationPtr _FormRegion::GetApplication ( );
__declspec(implementation_key(1647)) enum OlObjectClass _FormRegion::GetClass ( );
__declspec(implementation_key(1648)) _NameSpacePtr _FormRegion::GetSession ( );
__declspec(implementation_key(1649)) IDispatchPtr _FormRegion::GetParent ( );
__declspec(implementation_key(1650)) VARIANT_BOOL _FormRegion::GetIsExpanded ( );
__declspec(implementation_key(1651)) IDispatchPtr _FormRegion::GetForm ( );
__declspec(implementation_key(1652)) _bstr_t _FormRegion::GetDetail ( );
__declspec(implementation_key(1653)) void _FormRegion::PutDetail ( _bstr_t Detail );
__declspec(implementation_key(1654)) IDispatchPtr _FormRegion::GetItem ( );
__declspec(implementation_key(1655)) _InspectorPtr _FormRegion::GetInspector ( );
__declspec(implementation_key(1656)) enum OlFormRegionMode _FormRegion::GetFormRegionMode ( );
__declspec(implementation_key(1657)) long _FormRegion::GetLanguage ( );
__declspec(implementation_key(1658)) HRESULT _FormRegion::Reflow ( );
__declspec(implementation_key(1659)) _bstr_t _FormRegion::GetDisplayName ( );
__declspec(implementation_key(1660)) _bstr_t _FormRegion::GetInternalName ( );
__declspec(implementation_key(1661)) HRESULT _FormRegion::SetControlItemProperty ( IDispatch * Control, _bstr_t
PropertyName );
__declspec(implementation_key(1662)) VARIANT_BOOL _FormRegion::GetSuppressControlReplacement ( );
__declspec(implementation_key(1663)) void _FormRegion::PutSuppressControlReplacement ( VARIANT_BOOL
SuppressControlReplacement );
__declspec(implementation_key(1664)) HRESULT _FormRegion::Select ( );
__declspec(implementation_key(1665)) VARIANT_BOOL _FormRegion::GetEnableAutoLayout ( );
__declspec(implementation_key(1666)) void _FormRegion::PutEnableAutoLayout ( VARIANT_BOOL EnableAutoLayout );
__declspec(implementation_key(1667)) _ApplicationPtr _TableView::GetApplication ( );
__declspec(implementation_key(1668)) enum OlObjectClass _TableView::GetClass ( );
__declspec(implementation_key(1669)) _NameSpacePtr _TableView::GetSession ( );
__declspec(implementation_key(1670)) IDispatchPtr _TableView::GetParent ( );
__declspec(implementation_key(1671)) HRESULT _TableView::Apply ( );
__declspec(implementation_key(1672)) ViewPtr _TableView::Copy ( _bstr_t Name, enum OlViewSaveOption SaveOption );
__declspec(implementation_key(1673)) HRESULT _TableView::Delete ( );
__declspec(implementation_key(1674)) HRESULT _TableView::Reset ( );
__declspec(implementation_key(1675)) HRESULT _TableView::Save ( );
__declspec(implementation_key(1676)) _bstr_t _TableView::GetLanguage ( );
__declspec(implementation_key(1677)) void _TableView::PutLanguage ( _bstr_t Language );
__declspec(implementation_key(1678)) VARIANT_BOOL _TableView::GetLockUserChanges ( );
__declspec(implementation_key(1679)) void _TableView::PutLockUserChanges ( VARIANT_BOOL LockUserChanges );
__declspec(implementation_key(1680)) _bstr_t _TableView::GetName ( );
__declspec(implementation_key(1681)) void _TableView::PutName ( _bstr_t Name );
__declspec(implementation_key(1682)) enum OlViewSaveOption _TableView::GetSaveOption ( );
__declspec(implementation_key(1683)) VARIANT_BOOL _TableView::GetStandard ( );
__declspec(implementation_key(1684)) enum OlViewType _TableView::GetViewType ( );
__declspec(implementation_key(1685)) _bstr_t _TableView::GetXML ( );
__declspec(implementation_key(1686)) void _TableView::PutXML ( _bstr_t XML );
__declspec(implementation_key(1687)) HRESULT _TableView::GoToDate ( DATE Date );
__declspec(implementation_key(1688)) _bstr_t _TableView::GetFilter ( );
__declspec(implementation_key(1689)) void _TableView::PutFilter ( _bstr_t Filter );
__declspec(implementation_key(1690)) _ViewFieldsPtr _TableView::GetViewFields ( );
__declspec(implementation_key(1691)) _OrderFieldsPtr _TableView::GetGroupByFields ( );
__declspec(implementation_key(1692)) _OrderFieldsPtr _TableView::GetSortFields ( );
__declspec(implementation_key(1693)) long _TableView::GetMaxLinesInMultiLineView ( );
__declspec(implementation_key(1694)) void _TableView::PutMaxLinesInMultiLineView ( long MaxLinesInMultiLineView );
__declspec(implementation_key(1695)) VARIANT_BOOL _TableView::GetAutomaticGrouping ( );
__declspec(implementation_key(1696)) void _TableView::PutAutomaticGrouping ( VARIANT_BOOL AutomaticGrouping );
__declspec(implementation_key(1697)) enum OlDefaultExpandCollapseSetting _TableView::GetDefaultExpandCollapseSetting (
);
__declspec(implementation_key(1698)) void _TableView::PutDefaultExpandCollapseSetting ( enum
OlDefaultExpandCollapseSetting DefaultExpandCollapseSetting );
__declspec(implementation_key(1699)) VARIANT_BOOL _TableView::GetAutomaticColumnSizing ( );
__declspec(implementation_key(1700)) void _TableView::PutAutomaticColumnSizing ( VARIANT_BOOL AutomaticColumnSizing );
__declspec(implementation_key(1701)) enum OlMultiLine _TableView::GetMultiLine ( );
__declspec(implementation_key(1702)) void _TableView::PutMultiLine ( enum OlMultiLine MultiLine );
__declspec(implementation_key(1703)) long _TableView::GetMultiLineWidth ( );
__declspec(implementation_key(1704)) void _TableView::PutMultiLineWidth ( long MultiLineWidth );
__declspec(implementation_key(1705)) VARIANT_BOOL _TableView::GetAllowInCellEditing ( );
__declspec(implementation_key(1706)) void _TableView::PutAllowInCellEditing ( VARIANT_BOOL AllowInCellEditing );
__declspec(implementation_key(1707)) VARIANT_BOOL _TableView::GetShowNewItemRow ( );
__declspec(implementation_key(1708)) void _TableView::PutShowNewItemRow ( VARIANT_BOOL ShowNewItemRow );
__declspec(implementation_key(1709)) enum OlGridLineStyle _TableView::GetGridLineStyle ( );
__declspec(implementation_key(1710)) void _TableView::PutGridLineStyle ( enum OlGridLineStyle GridLineStyle );
__declspec(implementation_key(1711)) VARIANT_BOOL _TableView::GetShowItemsInGroups ( );
__declspec(implementation_key(1712)) void _TableView::PutShowItemsInGroups ( VARIANT_BOOL ShowItemsInGroups );
__declspec(implementation_key(1713)) VARIANT_BOOL _TableView::GetShowReadingPane ( );
__declspec(implementation_key(1714)) void _TableView::PutShowReadingPane ( VARIANT_BOOL ShowReadingPane );
__declspec(implementation_key(1715)) VARIANT_BOOL _TableView::GetHideReadingPaneHeaderInfo ( );
__declspec(implementation_key(1716)) void _TableView::PutHideReadingPaneHeaderInfo ( VARIANT_BOOL
HideReadingPaneHeaderInfo );
__declspec(implementation_key(1717)) VARIANT_BOOL _TableView::GetShowUnreadAndFlaggedMessages ( );
__declspec(implementation_key(1718)) void _TableView::PutShowUnreadAndFlaggedMessages ( VARIANT_BOOL
ShowUnreadAndFlaggedMessages );
__declspec(implementation_key(1719)) _ViewFontPtr _TableView::GetRowFont ( );
__declspec(implementation_key(1720)) _ViewFontPtr _TableView::GetColumnFont ( );
__declspec(implementation_key(1721)) _ViewFontPtr _TableView::GetAutoPreviewFont ( );
__declspec(implementation_key(1722)) enum OlAutoPreview _TableView::GetAutoPreview ( );
__declspec(implementation_key(1723)) void _TableView::PutAutoPreview ( enum OlAutoPreview AutoPreview );
__declspec(implementation_key(1724)) _AutoFormatRulesPtr _TableView::GetAutoFormatRules ( );
__declspec(implementation_key(1725)) _ApplicationPtr _ViewField::GetApplication ( );
__declspec(implementation_key(1726)) enum OlObjectClass _ViewField::GetClass ( );
__declspec(implementation_key(1727)) _NameSpacePtr _ViewField::GetSession ( );
__declspec(implementation_key(1728)) IDispatchPtr _ViewField::GetParent ( );
__declspec(implementation_key(1729)) _bstr_t _ViewField::GetViewXMLSchemaName ( );
__declspec(implementation_key(1730)) _ColumnFormatPtr _ViewField::GetColumnFormat ( );
__declspec(implementation_key(1731)) _ApplicationPtr _ViewFields::GetApplication ( );
__declspec(implementation_key(1732)) enum OlObjectClass _ViewFields::GetClass ( );
__declspec(implementation_key(1733)) _NameSpacePtr _ViewFields::GetSession ( );
__declspec(implementation_key(1734)) IDispatchPtr _ViewFields::GetParent ( );
__declspec(implementation_key(1735)) long _ViewFields::GetCount ( );
__declspec(implementation_key(1736)) _ViewFieldPtr _ViewFields::Item ( const _variant_t & Index );
__declspec(implementation_key(1737)) _ViewFieldPtr _ViewFields::Add ( _bstr_t PropertyName );
__declspec(implementation_key(1738)) _ViewFieldPtr _ViewFields::Insert ( _bstr_t PropertyName, const _variant_t & Index
);
__declspec(implementation_key(1739)) HRESULT _ViewFields::Remove ( const _variant_t & Index );
__declspec(implementation_key(1740)) _ApplicationPtr _ColumnFormat::GetApplication ( );
__declspec(implementation_key(1741)) enum OlObjectClass _ColumnFormat::GetClass ( );
__declspec(implementation_key(1742)) _NameSpacePtr _ColumnFormat::GetSession ( );
__declspec(implementation_key(1743)) IDispatchPtr _ColumnFormat::GetParent ( );
__declspec(implementation_key(1744)) _bstr_t _ColumnFormat::GetLabel ( );
__declspec(implementation_key(1745)) void _ColumnFormat::PutLabel ( _bstr_t Label );
__declspec(implementation_key(1746)) long _ColumnFormat::GetFieldFormat ( );
__declspec(implementation_key(1747)) void _ColumnFormat::PutFieldFormat ( long FieldFormat );
__declspec(implementation_key(1748)) long _ColumnFormat::GetWidth ( );
__declspec(implementation_key(1749)) void _ColumnFormat::PutWidth ( long Width );
__declspec(implementation_key(1750)) enum OlAlign _ColumnFormat::GetAlign ( );
__declspec(implementation_key(1751)) void _ColumnFormat::PutAlign ( enum OlAlign Align );
__declspec(implementation_key(1752)) enum OlUserPropertyType _ColumnFormat::GetFieldType ( );
__declspec(implementation_key(1753)) _ApplicationPtr _OrderField::GetApplication ( );
__declspec(implementation_key(1754)) enum OlObjectClass _OrderField::GetClass ( );
__declspec(implementation_key(1755)) _NameSpacePtr _OrderField::GetSession ( );
__declspec(implementation_key(1756)) IDispatchPtr _OrderField::GetParent ( );
__declspec(implementation_key(1757)) _bstr_t _OrderField::GetViewXMLSchemaName ( );
__declspec(implementation_key(1758)) VARIANT_BOOL _OrderField::GetIsDescending ( );
__declspec(implementation_key(1759)) void _OrderField::PutIsDescending ( VARIANT_BOOL IsDescending );
__declspec(implementation_key(1760)) _ApplicationPtr _OrderFields::GetApplication ( );
__declspec(implementation_key(1761)) enum OlObjectClass _OrderFields::GetClass ( );
__declspec(implementation_key(1762)) _NameSpacePtr _OrderFields::GetSession ( );
__declspec(implementation_key(1763)) IDispatchPtr _OrderFields::GetParent ( );
__declspec(implementation_key(1764)) long _OrderFields::GetCount ( );
__declspec(implementation_key(1765)) _OrderFieldPtr _OrderFields::Item ( const _variant_t & Index );
__declspec(implementation_key(1766)) _OrderFieldPtr _OrderFields::Add ( _bstr_t PropertyName, const _variant_t &
IsDescending );
__declspec(implementation_key(1767)) HRESULT _OrderFields::Remove ( const _variant_t & Index );
__declspec(implementation_key(1768)) HRESULT _OrderFields::RemoveAll ( );
__declspec(implementation_key(1769)) _OrderFieldPtr _OrderFields::Insert ( _bstr_t PropertyName, const _variant_t &
Index, const _variant_t & IsDescending );
__declspec(implementation_key(1770)) _ApplicationPtr _ViewFont::GetApplication ( );
__declspec(implementation_key(1771)) enum OlObjectClass _ViewFont::GetClass ( );
__declspec(implementation_key(1772)) _NameSpacePtr _ViewFont::GetSession ( );
__declspec(implementation_key(1773)) IDispatchPtr _ViewFont::GetParent ( );
__declspec(implementation_key(1774)) VARIANT_BOOL _ViewFont::GetBold ( );
__declspec(implementation_key(1775)) void _ViewFont::PutBold ( VARIANT_BOOL Bold );
__declspec(implementation_key(1776)) VARIANT_BOOL _ViewFont::GetItalic ( );
__declspec(implementation_key(1777)) void _ViewFont::PutItalic ( VARIANT_BOOL Italic );
__declspec(implementation_key(1778)) _bstr_t _ViewFont::GetName ( );
__declspec(implementation_key(1779)) void _ViewFont::PutName ( _bstr_t Name );
__declspec(implementation_key(1780)) long _ViewFont::GetSize ( );
__declspec(implementation_key(1781)) void _ViewFont::PutSize ( long Size );
__declspec(implementation_key(1782)) VARIANT_BOOL _ViewFont::GetStrikethrough ( );
__declspec(implementation_key(1783)) void _ViewFont::PutStrikethrough ( VARIANT_BOOL Strikethrough );
__declspec(implementation_key(1784)) VARIANT_BOOL _ViewFont::GetUnderline ( );
__declspec(implementation_key(1785)) void _ViewFont::PutUnderline ( VARIANT_BOOL Underline );
__declspec(implementation_key(1786)) enum OlColor _ViewFont::GetColor ( );
__declspec(implementation_key(1787)) void _ViewFont::PutColor ( enum OlColor Color );
__declspec(implementation_key(1788)) _ApplicationPtr _AutoFormatRules::GetApplication ( );
__declspec(implementation_key(1789)) enum OlObjectClass _AutoFormatRules::GetClass ( );
__declspec(implementation_key(1790)) _NameSpacePtr _AutoFormatRules::GetSession ( );
__declspec(implementation_key(1791)) IDispatchPtr _AutoFormatRules::GetParent ( );
__declspec(implementation_key(1792)) long _AutoFormatRules::GetCount ( );
__declspec(implementation_key(1793)) _AutoFormatRulePtr _AutoFormatRules::Item ( const _variant_t & Index );
__declspec(implementation_key(1794)) _AutoFormatRulePtr _AutoFormatRules::Add ( _bstr_t Name );
__declspec(implementation_key(1795)) _AutoFormatRulePtr _AutoFormatRules::Insert ( _bstr_t Name, const _variant_t &
Index );
__declspec(implementation_key(1796)) HRESULT _AutoFormatRules::Remove ( const _variant_t & Index );
__declspec(implementation_key(1797)) HRESULT _AutoFormatRules::RemoveAll ( );
__declspec(implementation_key(1798)) HRESULT _AutoFormatRules::Save ( );
__declspec(implementation_key(1799)) _ApplicationPtr _AutoFormatRule::GetApplication ( );
__declspec(implementation_key(1800)) enum OlObjectClass _AutoFormatRule::GetClass ( );
__declspec(implementation_key(1801)) _NameSpacePtr _AutoFormatRule::GetSession ( );
__declspec(implementation_key(1802)) IDispatchPtr _AutoFormatRule::GetParent ( );
__declspec(implementation_key(1803)) _bstr_t _AutoFormatRule::GetName ( );
__declspec(implementation_key(1804)) void _AutoFormatRule::PutName ( _bstr_t Name );
__declspec(implementation_key(1805)) _bstr_t _AutoFormatRule::GetFilter ( );
__declspec(implementation_key(1806)) void _AutoFormatRule::PutFilter ( _bstr_t Filter );
__declspec(implementation_key(1807)) VARIANT_BOOL _AutoFormatRule::GetEnabled ( );
__declspec(implementation_key(1808)) void _AutoFormatRule::PutEnabled ( VARIANT_BOOL Enabled );
__declspec(implementation_key(1809)) _ViewFontPtr _AutoFormatRule::GetFont ( );
__declspec(implementation_key(1810)) void _AutoFormatRule::PutFont ( struct _ViewFont * Font );
__declspec(implementation_key(1811)) VARIANT_BOOL _AutoFormatRule::GetStandard ( );
__declspec(implementation_key(1812)) _ApplicationPtr _IconView::GetApplication ( );
__declspec(implementation_key(1813)) enum OlObjectClass _IconView::GetClass ( );
__declspec(implementation_key(1814)) _NameSpacePtr _IconView::GetSession ( );
__declspec(implementation_key(1815)) IDispatchPtr _IconView::GetParent ( );
__declspec(implementation_key(1816)) HRESULT _IconView::Apply ( );
__declspec(implementation_key(1817)) ViewPtr _IconView::Copy ( _bstr_t Name, enum OlViewSaveOption SaveOption );
__declspec(implementation_key(1818)) HRESULT _IconView::Delete ( );
__declspec(implementation_key(1819)) HRESULT _IconView::Reset ( );
__declspec(implementation_key(1820)) HRESULT _IconView::Save ( );
__declspec(implementation_key(1821)) _bstr_t _IconView::GetLanguage ( );
__declspec(implementation_key(1822)) void _IconView::PutLanguage ( _bstr_t Language );
__declspec(implementation_key(1823)) VARIANT_BOOL _IconView::GetLockUserChanges ( );
__declspec(implementation_key(1824)) void _IconView::PutLockUserChanges ( VARIANT_BOOL LockUserChanges );
__declspec(implementation_key(1825)) _bstr_t _IconView::GetName ( );
__declspec(implementation_key(1826)) void _IconView::PutName ( _bstr_t Name );
__declspec(implementation_key(1827)) enum OlViewSaveOption _IconView::GetSaveOption ( );
__declspec(implementation_key(1828)) VARIANT_BOOL _IconView::GetStandard ( );
__declspec(implementation_key(1829)) enum OlViewType _IconView::GetViewType ( );
__declspec(implementation_key(1830)) _bstr_t _IconView::GetXML ( );
__declspec(implementation_key(1831)) void _IconView::PutXML ( _bstr_t XML );
__declspec(implementation_key(1832)) HRESULT _IconView::GoToDate ( DATE Date );
__declspec(implementation_key(1833)) _bstr_t _IconView::GetFilter ( );
__declspec(implementation_key(1834)) void _IconView::PutFilter ( _bstr_t Filter );
__declspec(implementation_key(1835)) _OrderFieldsPtr _IconView::GetSortFields ( );
__declspec(implementation_key(1836)) enum OlIconViewType _IconView::GetIconViewType ( );
__declspec(implementation_key(1837)) void _IconView::PutIconViewType ( enum OlIconViewType IconViewType );
__declspec(implementation_key(1838)) enum OlIconViewPlacement _IconView::GetIconPlacement ( );
__declspec(implementation_key(1839)) void _IconView::PutIconPlacement ( enum OlIconViewPlacement IconPlacement );
__declspec(implementation_key(1840)) _ApplicationPtr _CardView::GetApplication ( );
__declspec(implementation_key(1841)) enum OlObjectClass _CardView::GetClass ( );
__declspec(implementation_key(1842)) _NameSpacePtr _CardView::GetSession ( );
__declspec(implementation_key(1843)) IDispatchPtr _CardView::GetParent ( );
__declspec(implementation_key(1844)) HRESULT _CardView::Apply ( );
__declspec(implementation_key(1845)) ViewPtr _CardView::Copy ( _bstr_t Name, enum OlViewSaveOption SaveOption );
__declspec(implementation_key(1846)) HRESULT _CardView::Delete ( );
__declspec(implementation_key(1847)) HRESULT _CardView::Reset ( );
__declspec(implementation_key(1848)) HRESULT _CardView::Save ( );
__declspec(implementation_key(1849)) _bstr_t _CardView::GetLanguage ( );
__declspec(implementation_key(1850)) void _CardView::PutLanguage ( _bstr_t Language );
__declspec(implementation_key(1851)) VARIANT_BOOL _CardView::GetLockUserChanges ( );
__declspec(implementation_key(1852)) void _CardView::PutLockUserChanges ( VARIANT_BOOL LockUserChanges );
__declspec(implementation_key(1853)) _bstr_t _CardView::GetName ( );
__declspec(implementation_key(1854)) void _CardView::PutName ( _bstr_t Name );
__declspec(implementation_key(1855)) enum OlViewSaveOption _CardView::GetSaveOption ( );
__declspec(implementation_key(1856)) VARIANT_BOOL _CardView::GetStandard ( );
__declspec(implementation_key(1857)) enum OlViewType _CardView::GetViewType ( );
__declspec(implementation_key(1858)) _bstr_t _CardView::GetXML ( );
__declspec(implementation_key(1859)) void _CardView::PutXML ( _bstr_t XML );
__declspec(implementation_key(1860)) HRESULT _CardView::GoToDate ( DATE Date );
__declspec(implementation_key(1861)) _bstr_t _CardView::GetFilter ( );
__declspec(implementation_key(1862)) void _CardView::PutFilter ( _bstr_t Filter );
__declspec(implementation_key(1863)) _OrderFieldsPtr _CardView::GetSortFields ( );
__declspec(implementation_key(1864)) VARIANT_BOOL _CardView::GetAllowInCellEditing ( );
__declspec(implementation_key(1865)) void _CardView::PutAllowInCellEditing ( VARIANT_BOOL AllowInCellEditing );
__declspec(implementation_key(1866)) VARIANT_BOOL _CardView::GetShowEmptyFields ( );
__declspec(implementation_key(1867)) void _CardView::PutShowEmptyFields ( VARIANT_BOOL ShowEmptyFields );
__declspec(implementation_key(1868)) long _CardView::GetWidth ( );
__declspec(implementation_key(1869)) void _CardView::PutWidth ( long Width );
__declspec(implementation_key(1870)) long _CardView::GetMultiLineFieldHeight ( );
__declspec(implementation_key(1871)) void _CardView::PutMultiLineFieldHeight ( long MultiLineFieldHeight );
__declspec(implementation_key(1872)) _ViewFieldsPtr _CardView::GetViewFields ( );
__declspec(implementation_key(1873)) _ViewFontPtr _CardView::GetHeadingsFont ( );
__declspec(implementation_key(1874)) _ViewFontPtr _CardView::GetBodyFont ( );
__declspec(implementation_key(1875)) _AutoFormatRulesPtr _CardView::GetAutoFormatRules ( );
__declspec(implementation_key(1876)) _ApplicationPtr _CalendarView::GetApplication ( );
__declspec(implementation_key(1877)) enum OlObjectClass _CalendarView::GetClass ( );
__declspec(implementation_key(1878)) _NameSpacePtr _CalendarView::GetSession ( );
__declspec(implementation_key(1879)) IDispatchPtr _CalendarView::GetParent ( );
__declspec(implementation_key(1880)) HRESULT _CalendarView::Apply ( );
__declspec(implementation_key(1881)) ViewPtr _CalendarView::Copy ( _bstr_t Name, enum OlViewSaveOption SaveOption );
__declspec(implementation_key(1882)) HRESULT _CalendarView::Delete ( );
__declspec(implementation_key(1883)) HRESULT _CalendarView::Reset ( );
__declspec(implementation_key(1884)) HRESULT _CalendarView::Save ( );
__declspec(implementation_key(1885)) _bstr_t _CalendarView::GetLanguage ( );
__declspec(implementation_key(1886)) void _CalendarView::PutLanguage ( _bstr_t Language );
__declspec(implementation_key(1887)) VARIANT_BOOL _CalendarView::GetLockUserChanges ( );
__declspec(implementation_key(1888)) void _CalendarView::PutLockUserChanges ( VARIANT_BOOL LockUserChanges );
__declspec(implementation_key(1889)) _bstr_t _CalendarView::GetName ( );
__declspec(implementation_key(1890)) void _CalendarView::PutName ( _bstr_t Name );
__declspec(implementation_key(1891)) enum OlViewSaveOption _CalendarView::GetSaveOption ( );
__declspec(implementation_key(1892)) VARIANT_BOOL _CalendarView::GetStandard ( );
__declspec(implementation_key(1893)) enum OlViewType _CalendarView::GetViewType ( );
__declspec(implementation_key(1894)) _bstr_t _CalendarView::GetXML ( );
__declspec(implementation_key(1895)) void _CalendarView::PutXML ( _bstr_t XML );
__declspec(implementation_key(1896)) HRESULT _CalendarView::GoToDate ( DATE Date );
__declspec(implementation_key(1897)) _bstr_t _CalendarView::GetFilter ( );
__declspec(implementation_key(1898)) void _CalendarView::PutFilter ( _bstr_t Filter );
__declspec(implementation_key(1899)) _bstr_t _CalendarView::GetStartField ( );
__declspec(implementation_key(1900)) void _CalendarView::PutStartField ( _bstr_t StartField );
__declspec(implementation_key(1901)) _bstr_t _CalendarView::GetEndField ( );
__declspec(implementation_key(1902)) void _CalendarView::PutEndField ( _bstr_t EndField );
__declspec(implementation_key(1903)) enum OlCalendarViewMode _CalendarView::GetCalendarViewMode ( );
__declspec(implementation_key(1904)) void _CalendarView::PutCalendarViewMode ( enum OlCalendarViewMode CalendarViewMode
);
__declspec(implementation_key(1905)) enum OlDayWeekTimeScale _CalendarView::GetDayWeekTimeScale ( );
__declspec(implementation_key(1906)) void _CalendarView::PutDayWeekTimeScale ( enum OlDayWeekTimeScale DayWeekTimeScale
);
__declspec(implementation_key(1907)) VARIANT_BOOL _CalendarView::GetMonthShowEndTime ( );
__declspec(implementation_key(1908)) void _CalendarView::PutMonthShowEndTime ( VARIANT_BOOL MonthShowEndTime );
__declspec(implementation_key(1909)) VARIANT_BOOL _CalendarView::GetBoldDatesWithItems ( );
__declspec(implementation_key(1910)) void _CalendarView::PutBoldDatesWithItems ( VARIANT_BOOL BoldDatesWithItems );
__declspec(implementation_key(1911)) _ViewFontPtr _CalendarView::GetDayWeekTimeFont ( );
__declspec(implementation_key(1912)) _ViewFontPtr _CalendarView::GetDayWeekFont ( );
__declspec(implementation_key(1913)) _ViewFontPtr _CalendarView::GetMonthFont ( );
__declspec(implementation_key(1914)) _AutoFormatRulesPtr _CalendarView::GetAutoFormatRules ( );
__declspec(implementation_key(1915)) long _CalendarView::GetDaysInMultiDayMode ( );
__declspec(implementation_key(1916)) void _CalendarView::PutDaysInMultiDayMode ( long DaysInMultiDayMode );
__declspec(implementation_key(1917)) _variant_t _CalendarView::GetDisplayedDates ( );
__declspec(implementation_key(1918)) VARIANT_BOOL _CalendarView::GetBoldSubjects ( );
__declspec(implementation_key(1919)) void _CalendarView::PutBoldSubjects ( VARIANT_BOOL BoldSubjects );
__declspec(implementation_key(1920)) _ApplicationPtr _TimelineView::GetApplication ( );
__declspec(implementation_key(1921)) enum OlObjectClass _TimelineView::GetClass ( );
__declspec(implementation_key(1922)) _NameSpacePtr _TimelineView::GetSession ( );
__declspec(implementation_key(1923)) IDispatchPtr _TimelineView::GetParent ( );
__declspec(implementation_key(1924)) HRESULT _TimelineView::Apply ( );
__declspec(implementation_key(1925)) ViewPtr _TimelineView::Copy ( _bstr_t Name, enum OlViewSaveOption SaveOption );
__declspec(implementation_key(1926)) HRESULT _TimelineView::Delete ( );
__declspec(implementation_key(1927)) HRESULT _TimelineView::Reset ( );
__declspec(implementation_key(1928)) HRESULT _TimelineView::Save ( );
__declspec(implementation_key(1929)) _bstr_t _TimelineView::GetLanguage ( );
__declspec(implementation_key(1930)) void _TimelineView::PutLanguage ( _bstr_t Language );
__declspec(implementation_key(1931)) VARIANT_BOOL _TimelineView::GetLockUserChanges ( );
__declspec(implementation_key(1932)) void _TimelineView::PutLockUserChanges ( VARIANT_BOOL LockUserChanges );
__declspec(implementation_key(1933)) _bstr_t _TimelineView::GetName ( );
__declspec(implementation_key(1934)) void _TimelineView::PutName ( _bstr_t Name );
__declspec(implementation_key(1935)) enum OlViewSaveOption _TimelineView::GetSaveOption ( );
__declspec(implementation_key(1936)) VARIANT_BOOL _TimelineView::GetStandard ( );
__declspec(implementation_key(1937)) enum OlViewType _TimelineView::GetViewType ( );
__declspec(implementation_key(1938)) _bstr_t _TimelineView::GetXML ( );
__declspec(implementation_key(1939)) void _TimelineView::PutXML ( _bstr_t XML );
__declspec(implementation_key(1940)) HRESULT _TimelineView::GoToDate ( DATE Date );
__declspec(implementation_key(1941)) _bstr_t _TimelineView::GetFilter ( );
__declspec(implementation_key(1942)) void _TimelineView::PutFilter ( _bstr_t Filter );
__declspec(implementation_key(1943)) _bstr_t _TimelineView::GetStartField ( );
__declspec(implementation_key(1944)) void _TimelineView::PutStartField ( _bstr_t StartField );
__declspec(implementation_key(1945)) _bstr_t _TimelineView::GetEndField ( );
__declspec(implementation_key(1946)) void _TimelineView::PutEndField ( _bstr_t EndField );
__declspec(implementation_key(1947)) _OrderFieldsPtr _TimelineView::GetGroupByFields ( );
__declspec(implementation_key(1948)) enum OlDefaultExpandCollapseSetting _TimelineView::GetDefaultExpandCollapseSetting
( );
__declspec(implementation_key(1949)) void _TimelineView::PutDefaultExpandCollapseSetting ( enum
OlDefaultExpandCollapseSetting DefaultExpandCollapseSetting );
__declspec(implementation_key(1950)) VARIANT_BOOL _TimelineView::GetShowWeekNumbers ( );
__declspec(implementation_key(1951)) void _TimelineView::PutShowWeekNumbers ( VARIANT_BOOL ShowWeekNumbers );
__declspec(implementation_key(1952)) long _TimelineView::GetMaxLabelWidth ( );
__declspec(implementation_key(1953)) void _TimelineView::PutMaxLabelWidth ( long MaxLabelWidth );
__declspec(implementation_key(1954)) VARIANT_BOOL _TimelineView::GetShowLabelWhenViewingByMonth ( );
__declspec(implementation_key(1955)) void _TimelineView::PutShowLabelWhenViewingByMonth ( VARIANT_BOOL
ShowLabelWhenViewingByMonth );
__declspec(implementation_key(1956)) _ViewFontPtr _TimelineView::GetUpperScaleFont ( );
__declspec(implementation_key(1957)) _ViewFontPtr _TimelineView::GetLowerScaleFont ( );
__declspec(implementation_key(1958)) _ViewFontPtr _TimelineView::GetItemFont ( );
__declspec(implementation_key(1959)) enum OlTimelineViewMode _TimelineView::GetTimelineViewMode ( );
__declspec(implementation_key(1960)) void _TimelineView::PutTimelineViewMode ( enum OlTimelineViewMode TimelineViewMode
);
__declspec(implementation_key(1961)) _ApplicationPtr _NavigationGroup::GetApplication ( );
__declspec(implementation_key(1962)) enum OlObjectClass _NavigationGroup::GetClass ( );
__declspec(implementation_key(1963)) _NameSpacePtr _NavigationGroup::GetSession ( );
__declspec(implementation_key(1964)) IDispatchPtr _NavigationGroup::GetParent ( );
__declspec(implementation_key(1965)) enum OlGroupType _NavigationGroup::GetGroupType ( );
__declspec(implementation_key(1966)) _NavigationFoldersPtr _NavigationGroup::GetNavigationFolders ( );
__declspec(implementation_key(1967)) _bstr_t _NavigationGroup::GetName ( );
__declspec(implementation_key(1968)) void _NavigationGroup::PutName ( _bstr_t Name );
__declspec(implementation_key(1969)) long _NavigationGroup::GetPosition ( );
__declspec(implementation_key(1970)) void _NavigationGroup::PutPosition ( long Position );
__declspec(implementation_key(1971)) _ApplicationPtr _NavigationGroups::GetApplication ( );
__declspec(implementation_key(1972)) enum OlObjectClass _NavigationGroups::GetClass ( );
__declspec(implementation_key(1973)) _NameSpacePtr _NavigationGroups::GetSession ( );
__declspec(implementation_key(1974)) IDispatchPtr _NavigationGroups::GetParent ( );
__declspec(implementation_key(1975)) long _NavigationGroups::GetCount ( );
__declspec(implementation_key(1976)) _NavigationGroupPtr _NavigationGroups::Item ( const _variant_t & Index );
__declspec(implementation_key(1977)) _NavigationGroupPtr _NavigationGroups::Create ( _bstr_t GroupDisplayName );
__declspec(implementation_key(1978)) HRESULT _NavigationGroups::Delete ( struct _NavigationGroup * Group );
__declspec(implementation_key(1979)) _NavigationGroupPtr _NavigationGroups::GetDefaultNavigationGroup ( enum OlGroupType
DefaultFolderGroup );
__declspec(implementation_key(1980)) _ApplicationPtr _MailModule::GetApplication ( );
__declspec(implementation_key(1981)) enum OlObjectClass _MailModule::GetClass ( );
__declspec(implementation_key(1982)) _NameSpacePtr _MailModule::GetSession ( );
__declspec(implementation_key(1983)) IDispatchPtr _MailModule::GetParent ( );
__declspec(implementation_key(1984)) enum OlNavigationModuleType _MailModule::GetNavigationModuleType ( );
__declspec(implementation_key(1985)) _bstr_t _MailModule::GetName ( );
__declspec(implementation_key(1986)) long _MailModule::GetPosition ( );
__declspec(implementation_key(1987)) void _MailModule::PutPosition ( long Position );
__declspec(implementation_key(1988)) VARIANT_BOOL _MailModule::GetVisible ( );
__declspec(implementation_key(1989)) void _MailModule::PutVisible ( VARIANT_BOOL Visible );
__declspec(implementation_key(1990)) _NavigationGroupsPtr _MailModule::GetNavigationGroups ( );
__declspec(implementation_key(1991)) _ApplicationPtr _CalendarModule::GetApplication ( );
__declspec(implementation_key(1992)) enum OlObjectClass _CalendarModule::GetClass ( );
__declspec(implementation_key(1993)) _NameSpacePtr _CalendarModule::GetSession ( );
__declspec(implementation_key(1994)) IDispatchPtr _CalendarModule::GetParent ( );
__declspec(implementation_key(1995)) enum OlNavigationModuleType _CalendarModule::GetNavigationModuleType ( );
__declspec(implementation_key(1996)) _bstr_t _CalendarModule::GetName ( );
__declspec(implementation_key(1997)) long _CalendarModule::GetPosition ( );
__declspec(implementation_key(1998)) void _CalendarModule::PutPosition ( long Position );
__declspec(implementation_key(1999)) VARIANT_BOOL _CalendarModule::GetVisible ( );
__declspec(implementation_key(2000)) void _CalendarModule::PutVisible ( VARIANT_BOOL Visible );
__declspec(implementation_key(2001)) _NavigationGroupsPtr _CalendarModule::GetNavigationGroups ( );
__declspec(implementation_key(2002)) _ApplicationPtr _ContactsModule::GetApplication ( );
__declspec(implementation_key(2003)) enum OlObjectClass _ContactsModule::GetClass ( );
__declspec(implementation_key(2004)) _NameSpacePtr _ContactsModule::GetSession ( );
__declspec(implementation_key(2005)) IDispatchPtr _ContactsModule::GetParent ( );
__declspec(implementation_key(2006)) enum OlNavigationModuleType _ContactsModule::GetNavigationModuleType ( );
__declspec(implementation_key(2007)) _bstr_t _ContactsModule::GetName ( );
__declspec(implementation_key(2008)) long _ContactsModule::GetPosition ( );
__declspec(implementation_key(2009)) void _ContactsModule::PutPosition ( long Position );
__declspec(implementation_key(2010)) VARIANT_BOOL _ContactsModule::GetVisible ( );
__declspec(implementation_key(2011)) void _ContactsModule::PutVisible ( VARIANT_BOOL Visible );
__declspec(implementation_key(2012)) _NavigationGroupsPtr _ContactsModule::GetNavigationGroups ( );
__declspec(implementation_key(2013)) _ApplicationPtr _TasksModule::GetApplication ( );
__declspec(implementation_key(2014)) enum OlObjectClass _TasksModule::GetClass ( );
__declspec(implementation_key(2015)) _NameSpacePtr _TasksModule::GetSession ( );
__declspec(implementation_key(2016)) IDispatchPtr _TasksModule::GetParent ( );
__declspec(implementation_key(2017)) enum OlNavigationModuleType _TasksModule::GetNavigationModuleType ( );
__declspec(implementation_key(2018)) _bstr_t _TasksModule::GetName ( );
__declspec(implementation_key(2019)) long _TasksModule::GetPosition ( );
__declspec(implementation_key(2020)) void _TasksModule::PutPosition ( long Position );
__declspec(implementation_key(2021)) VARIANT_BOOL _TasksModule::GetVisible ( );
__declspec(implementation_key(2022)) void _TasksModule::PutVisible ( VARIANT_BOOL Visible );
__declspec(implementation_key(2023)) _NavigationGroupsPtr _TasksModule::GetNavigationGroups ( );
__declspec(implementation_key(2024)) _ApplicationPtr _JournalModule::GetApplication ( );
__declspec(implementation_key(2025)) enum OlObjectClass _JournalModule::GetClass ( );
__declspec(implementation_key(2026)) _NameSpacePtr _JournalModule::GetSession ( );
__declspec(implementation_key(2027)) IDispatchPtr _JournalModule::GetParent ( );
__declspec(implementation_key(2028)) enum OlNavigationModuleType _JournalModule::GetNavigationModuleType ( );
__declspec(implementation_key(2029)) _bstr_t _JournalModule::GetName ( );
__declspec(implementation_key(2030)) long _JournalModule::GetPosition ( );
__declspec(implementation_key(2031)) void _JournalModule::PutPosition ( long Position );
__declspec(implementation_key(2032)) VARIANT_BOOL _JournalModule::GetVisible ( );
__declspec(implementation_key(2033)) void _JournalModule::PutVisible ( VARIANT_BOOL Visible );
__declspec(implementation_key(2034)) _NavigationGroupsPtr _JournalModule::GetNavigationGroups ( );
__declspec(implementation_key(2035)) _ApplicationPtr _NotesModule::GetApplication ( );
__declspec(implementation_key(2036)) enum OlObjectClass _NotesModule::GetClass ( );
__declspec(implementation_key(2037)) _NameSpacePtr _NotesModule::GetSession ( );
__declspec(implementation_key(2038)) IDispatchPtr _NotesModule::GetParent ( );
__declspec(implementation_key(2039)) enum OlNavigationModuleType _NotesModule::GetNavigationModuleType ( );
__declspec(implementation_key(2040)) _bstr_t _NotesModule::GetName ( );
__declspec(implementation_key(2041)) long _NotesModule::GetPosition ( );
__declspec(implementation_key(2042)) void _NotesModule::PutPosition ( long Position );
__declspec(implementation_key(2043)) VARIANT_BOOL _NotesModule::GetVisible ( );
__declspec(implementation_key(2044)) void _NotesModule::PutVisible ( VARIANT_BOOL Visible );
__declspec(implementation_key(2045)) _NavigationGroupsPtr _NotesModule::GetNavigationGroups ( );
__declspec(implementation_key(2046)) _ApplicationPtr _BusinessCardView::GetApplication ( );
__declspec(implementation_key(2047)) enum OlObjectClass _BusinessCardView::GetClass ( );
__declspec(implementation_key(2048)) _NameSpacePtr _BusinessCardView::GetSession ( );
__declspec(implementation_key(2049)) IDispatchPtr _BusinessCardView::GetParent ( );
__declspec(implementation_key(2050)) HRESULT _BusinessCardView::Apply ( );
__declspec(implementation_key(2051)) ViewPtr _BusinessCardView::Copy ( _bstr_t Name, enum OlViewSaveOption SaveOption );
__declspec(implementation_key(2052)) HRESULT _BusinessCardView::Delete ( );
__declspec(implementation_key(2053)) HRESULT _BusinessCardView::Reset ( );
__declspec(implementation_key(2054)) HRESULT _BusinessCardView::Save ( );
__declspec(implementation_key(2055)) _bstr_t _BusinessCardView::GetLanguage ( );
__declspec(implementation_key(2056)) void _BusinessCardView::PutLanguage ( _bstr_t Language );
__declspec(implementation_key(2057)) VARIANT_BOOL _BusinessCardView::GetLockUserChanges ( );
__declspec(implementation_key(2058)) void _BusinessCardView::PutLockUserChanges ( VARIANT_BOOL LockUserChanges );
__declspec(implementation_key(2059)) _bstr_t _BusinessCardView::GetName ( );
__declspec(implementation_key(2060)) void _BusinessCardView::PutName ( _bstr_t Name );
__declspec(implementation_key(2061)) enum OlViewSaveOption _BusinessCardView::GetSaveOption ( );
__declspec(implementation_key(2062)) VARIANT_BOOL _BusinessCardView::GetStandard ( );
__declspec(implementation_key(2063)) enum OlViewType _BusinessCardView::GetViewType ( );
__declspec(implementation_key(2064)) _bstr_t _BusinessCardView::GetXML ( );
__declspec(implementation_key(2065)) void _BusinessCardView::PutXML ( _bstr_t XML );
__declspec(implementation_key(2066)) HRESULT _BusinessCardView::GoToDate ( DATE Date );
__declspec(implementation_key(2067)) _bstr_t _BusinessCardView::GetFilter ( );
__declspec(implementation_key(2068)) void _BusinessCardView::PutFilter ( _bstr_t Filter );
__declspec(implementation_key(2069)) _ViewFontPtr _BusinessCardView::GetHeadingsFont ( );
__declspec(implementation_key(2070)) _OrderFieldsPtr _BusinessCardView::GetSortFields ( );
__declspec(implementation_key(2071)) long _BusinessCardView::GetCardSize ( );
__declspec(implementation_key(2072)) void _BusinessCardView::PutCardSize ( long CardSize );
__declspec(implementation_key(2073)) _ApplicationPtr Recipient::GetApplication ( );
__declspec(implementation_key(2074)) enum OlObjectClass Recipient::GetClass ( );
__declspec(implementation_key(2075)) _NameSpacePtr Recipient::GetSession ( );
__declspec(implementation_key(2076)) IDispatchPtr Recipient::GetParent ( );
__declspec(implementation_key(2077)) _bstr_t Recipient::GetAddress ( );
__declspec(implementation_key(2078)) AddressEntryPtr Recipient::GetAddressEntry ( );
__declspec(implementation_key(2079)) void Recipient::PutRefAddressEntry ( struct AddressEntry * AddressEntry );
__declspec(implementation_key(2080)) _bstr_t Recipient::GetAutoResponse ( );
__declspec(implementation_key(2081)) void Recipient::PutAutoResponse ( _bstr_t AutoResponse );
__declspec(implementation_key(2082)) enum OlDisplayType Recipient::GetDisplayType ( );
__declspec(implementation_key(2083)) _bstr_t Recipient::GetEntryID ( );
__declspec(implementation_key(2084)) long Recipient::GetIndex ( );
__declspec(implementation_key(2085)) enum OlResponseStatus Recipient::GetMeetingResponseStatus ( );
__declspec(implementation_key(2086)) _bstr_t Recipient::GetName ( );
__declspec(implementation_key(2087)) VARIANT_BOOL Recipient::GetResolved ( );
__declspec(implementation_key(2088)) enum OlTrackingStatus Recipient::GetTrackingStatus ( );
__declspec(implementation_key(2089)) void Recipient::PutTrackingStatus ( enum OlTrackingStatus TrackingStatus );
__declspec(implementation_key(2090)) DATE Recipient::GetTrackingStatusTime ( );
__declspec(implementation_key(2091)) void Recipient::PutTrackingStatusTime ( DATE TrackingStatusTime );
__declspec(implementation_key(2092)) long Recipient::GetType ( );
__declspec(implementation_key(2093)) void Recipient::PutType ( long Type );
__declspec(implementation_key(2094)) HRESULT Recipient::Delete ( );
__declspec(implementation_key(2095)) _bstr_t Recipient::FreeBusy ( DATE Start, long MinPerChar, const _variant_t &
CompleteFormat );
__declspec(implementation_key(2096)) VARIANT_BOOL Recipient::Resolve ( );
__declspec(implementation_key(2097)) _PropertyAccessorPtr Recipient::GetPropertyAccessor ( );
__declspec(implementation_key(2098)) _ApplicationPtr Recipients::GetApplication ( );
__declspec(implementation_key(2099)) enum OlObjectClass Recipients::GetClass ( );
__declspec(implementation_key(2100)) _NameSpacePtr Recipients::GetSession ( );
__declspec(implementation_key(2101)) IDispatchPtr Recipients::GetParent ( );
__declspec(implementation_key(2102)) long Recipients::GetCount ( );
__declspec(implementation_key(2103)) RecipientPtr Recipients::Item ( const _variant_t & Index );
__declspec(implementation_key(2104)) RecipientPtr Recipients::Add ( _bstr_t Name );
__declspec(implementation_key(2105)) HRESULT Recipients::Remove ( long Index );
__declspec(implementation_key(2106)) VARIANT_BOOL Recipients::ResolveAll ( );
__declspec(implementation_key(2107)) _ApplicationPtr _SendRuleAction::GetApplication ( );
__declspec(implementation_key(2108)) enum OlObjectClass _SendRuleAction::GetClass ( );
__declspec(implementation_key(2109)) _NameSpacePtr _SendRuleAction::GetSession ( );
__declspec(implementation_key(2110)) IDispatchPtr _SendRuleAction::GetParent ( );
__declspec(implementation_key(2111)) VARIANT_BOOL _SendRuleAction::GetEnabled ( );
__declspec(implementation_key(2112)) void _SendRuleAction::PutEnabled ( VARIANT_BOOL Enabled );
__declspec(implementation_key(2113)) enum OlRuleActionType _SendRuleAction::GetActionType ( );
__declspec(implementation_key(2114)) RecipientsPtr _SendRuleAction::GetRecipients ( );
__declspec(implementation_key(2115)) _ApplicationPtr _ToOrFromRuleCondition::GetApplication ( );
__declspec(implementation_key(2116)) enum OlObjectClass _ToOrFromRuleCondition::GetClass ( );
__declspec(implementation_key(2117)) _NameSpacePtr _ToOrFromRuleCondition::GetSession ( );
__declspec(implementation_key(2118)) IDispatchPtr _ToOrFromRuleCondition::GetParent ( );
__declspec(implementation_key(2119)) VARIANT_BOOL _ToOrFromRuleCondition::GetEnabled ( );
__declspec(implementation_key(2120)) void _ToOrFromRuleCondition::PutEnabled ( VARIANT_BOOL Enabled );
__declspec(implementation_key(2121)) enum OlRuleConditionType _ToOrFromRuleCondition::GetConditionType ( );
__declspec(implementation_key(2122)) RecipientsPtr _ToOrFromRuleCondition::GetRecipients ( );
__declspec(implementation_key(2123)) _ApplicationPtr AddressEntry::GetApplication ( );
__declspec(implementation_key(2124)) enum OlObjectClass AddressEntry::GetClass ( );
__declspec(implementation_key(2125)) _NameSpacePtr AddressEntry::GetSession ( );
__declspec(implementation_key(2126)) IDispatchPtr AddressEntry::GetParent ( );
__declspec(implementation_key(2127)) _bstr_t AddressEntry::GetAddress ( );
__declspec(implementation_key(2128)) void AddressEntry::PutAddress ( _bstr_t Address );
__declspec(implementation_key(2129)) enum OlDisplayType AddressEntry::GetDisplayType ( );
__declspec(implementation_key(2130)) _bstr_t AddressEntry::GetID ( );
__declspec(implementation_key(2131)) AddressEntryPtr AddressEntry::GetManager ( );
__declspec(implementation_key(2132)) IUnknownPtr AddressEntry::GetMAPIOBJECT ( );
__declspec(implementation_key(2133)) void AddressEntry::PutMAPIOBJECT ( IUnknown * MAPIOBJECT );
__declspec(implementation_key(2134)) AddressEntriesPtr AddressEntry::GetMembers ( );
__declspec(implementation_key(2135)) _bstr_t AddressEntry::GetName ( );
__declspec(implementation_key(2136)) void AddressEntry::PutName ( _bstr_t Name );
__declspec(implementation_key(2137)) _bstr_t AddressEntry::GetType ( );
__declspec(implementation_key(2138)) void AddressEntry::PutType ( _bstr_t Type );
__declspec(implementation_key(2139)) HRESULT AddressEntry::Delete ( );
__declspec(implementation_key(2140)) HRESULT AddressEntry::Details ( const _variant_t & HWnd );
__declspec(implementation_key(2141)) _bstr_t AddressEntry::GetFreeBusy ( DATE Start, long MinPerChar, const _variant_t &
CompleteFormat );
__declspec(implementation_key(2142)) HRESULT AddressEntry::Update ( const _variant_t & MakePermanent, const _variant_t &
Refresh );
__declspec(implementation_key(2143)) HRESULT AddressEntry::UpdateFreeBusy ( );
__declspec(implementation_key(2144)) _ContactItemPtr AddressEntry::GetContact ( );
__declspec(implementation_key(2145)) _ExchangeUserPtr AddressEntry::GetExchangeUser ( );
__declspec(implementation_key(2146)) enum OlAddressEntryUserType AddressEntry::GetAddressEntryUserType ( );
__declspec(implementation_key(2147)) _ExchangeDistributionListPtr AddressEntry::GetExchangeDistributionList ( );
__declspec(implementation_key(2148)) _PropertyAccessorPtr AddressEntry::GetPropertyAccessor ( );
__declspec(implementation_key(2149)) _ApplicationPtr AddressEntries::GetApplication ( );
__declspec(implementation_key(2150)) enum OlObjectClass AddressEntries::GetClass ( );
__declspec(implementation_key(2151)) _NameSpacePtr AddressEntries::GetSession ( );
__declspec(implementation_key(2152)) IDispatchPtr AddressEntries::GetParent ( );
__declspec(implementation_key(2153)) long AddressEntries::GetCount ( );
__declspec(implementation_key(2154)) AddressEntryPtr AddressEntries::Item ( const _variant_t & Index );
__declspec(implementation_key(2155)) IUnknownPtr AddressEntries::GetRawTable ( );
__declspec(implementation_key(2156)) AddressEntryPtr AddressEntries::Add ( _bstr_t Type, const _variant_t & Name, const
_variant_t & Address );
__declspec(implementation_key(2157)) AddressEntryPtr AddressEntries::GetFirst ( );
__declspec(implementation_key(2158)) AddressEntryPtr AddressEntries::GetLast ( );
__declspec(implementation_key(2159)) AddressEntryPtr AddressEntries::GetNext ( );
__declspec(implementation_key(2160)) AddressEntryPtr AddressEntries::GetPrevious ( );
__declspec(implementation_key(2161)) HRESULT AddressEntries::Sort ( const _variant_t & Property, const _variant_t &
Order );
__declspec(implementation_key(2162)) _ApplicationPtr _ContactItem::GetApplication ( );
__declspec(implementation_key(2163)) enum OlObjectClass _ContactItem::GetClass ( );
__declspec(implementation_key(2164)) _NameSpacePtr _ContactItem::GetSession ( );
__declspec(implementation_key(2165)) IDispatchPtr _ContactItem::GetParent ( );
__declspec(implementation_key(2166)) ActionsPtr _ContactItem::GetActions ( );
__declspec(implementation_key(2167)) AttachmentsPtr _ContactItem::GetAttachments ( );
__declspec(implementation_key(2168)) _bstr_t _ContactItem::GetBillingInformation ( );
__declspec(implementation_key(2169)) void _ContactItem::PutBillingInformation ( _bstr_t BillingInformation );
__declspec(implementation_key(2170)) _bstr_t _ContactItem::GetBody ( );
__declspec(implementation_key(2171)) void _ContactItem::PutBody ( _bstr_t Body );
__declspec(implementation_key(2172)) _bstr_t _ContactItem::GetCategories ( );
__declspec(implementation_key(2173)) void _ContactItem::PutCategories ( _bstr_t Categories );
__declspec(implementation_key(2174)) _bstr_t _ContactItem::GetCompanies ( );
__declspec(implementation_key(2175)) void _ContactItem::PutCompanies ( _bstr_t Companies );
__declspec(implementation_key(2176)) _bstr_t _ContactItem::GetConversationIndex ( );
__declspec(implementation_key(2177)) _bstr_t _ContactItem::GetConversationTopic ( );
__declspec(implementation_key(2178)) DATE _ContactItem::GetCreationTime ( );
__declspec(implementation_key(2179)) _bstr_t _ContactItem::GetEntryID ( );
__declspec(implementation_key(2180)) FormDescriptionPtr _ContactItem::GetFormDescription ( );
__declspec(implementation_key(2181)) _InspectorPtr _ContactItem::GetGetInspector ( );
__declspec(implementation_key(2182)) enum OlImportance _ContactItem::GetImportance ( );
__declspec(implementation_key(2183)) void _ContactItem::PutImportance ( enum OlImportance Importance );
__declspec(implementation_key(2184)) DATE _ContactItem::GetLastModificationTime ( );
__declspec(implementation_key(2185)) IUnknownPtr _ContactItem::GetMAPIOBJECT ( );
__declspec(implementation_key(2186)) _bstr_t _ContactItem::GetMessageClass ( );
__declspec(implementation_key(2187)) void _ContactItem::PutMessageClass ( _bstr_t MessageClass );
__declspec(implementation_key(2188)) _bstr_t _ContactItem::GetMileage ( );
__declspec(implementation_key(2189)) void _ContactItem::PutMileage ( _bstr_t Mileage );
__declspec(implementation_key(2190)) VARIANT_BOOL _ContactItem::GetNoAging ( );
__declspec(implementation_key(2191)) void _ContactItem::PutNoAging ( VARIANT_BOOL NoAging );
__declspec(implementation_key(2192)) long _ContactItem::GetOutlookInternalVersion ( );
__declspec(implementation_key(2193)) _bstr_t _ContactItem::GetOutlookVersion ( );
__declspec(implementation_key(2194)) VARIANT_BOOL _ContactItem::GetSaved ( );
__declspec(implementation_key(2195)) enum OlSensitivity _ContactItem::GetSensitivity ( );
__declspec(implementation_key(2196)) void _ContactItem::PutSensitivity ( enum OlSensitivity Sensitivity );
__declspec(implementation_key(2197)) long _ContactItem::GetSize ( );
__declspec(implementation_key(2198)) _bstr_t _ContactItem::GetSubject ( );
__declspec(implementation_key(2199)) void _ContactItem::PutSubject ( _bstr_t Subject );
__declspec(implementation_key(2200)) VARIANT_BOOL _ContactItem::GetUnRead ( );
__declspec(implementation_key(2201)) void _ContactItem::PutUnRead ( VARIANT_BOOL UnRead );
__declspec(implementation_key(2202)) UserPropertiesPtr _ContactItem::GetUserProperties ( );
__declspec(implementation_key(2203)) HRESULT _ContactItem::Close ( enum OlInspectorClose SaveMode );
__declspec(implementation_key(2204)) IDispatchPtr _ContactItem::Copy ( );
__declspec(implementation_key(2205)) HRESULT _ContactItem::Delete ( );
__declspec(implementation_key(2206)) HRESULT _ContactItem::Display ( const _variant_t & Modal );
__declspec(implementation_key(2207)) IDispatchPtr _ContactItem::Move ( struct MAPIFolder * DestFldr );
__declspec(implementation_key(2208)) HRESULT _ContactItem::PrintOut ( );
__declspec(implementation_key(2209)) HRESULT _ContactItem::Save ( );
__declspec(implementation_key(2210)) HRESULT _ContactItem::SaveAs ( _bstr_t Path, const _variant_t & Type );
__declspec(implementation_key(2211)) _bstr_t _ContactItem::GetAccount ( );
__declspec(implementation_key(2212)) void _ContactItem::PutAccount ( _bstr_t Account );
__declspec(implementation_key(2213)) DATE _ContactItem::GetAnniversary ( );
__declspec(implementation_key(2214)) void _ContactItem::PutAnniversary ( DATE Anniversary );
__declspec(implementation_key(2215)) _bstr_t _ContactItem::GetAssistantName ( );
__declspec(implementation_key(2216)) void _ContactItem::PutAssistantName ( _bstr_t AssistantName );
__declspec(implementation_key(2217)) _bstr_t _ContactItem::GetAssistantTelephoneNumber ( );
__declspec(implementation_key(2218)) void _ContactItem::PutAssistantTelephoneNumber ( _bstr_t AssistantTelephoneNumber
);
__declspec(implementation_key(2219)) DATE _ContactItem::GetBirthday ( );
__declspec(implementation_key(2220)) void _ContactItem::PutBirthday ( DATE Birthday );
__declspec(implementation_key(2221)) _bstr_t _ContactItem::GetBusiness2TelephoneNumber ( );
__declspec(implementation_key(2222)) void _ContactItem::PutBusiness2TelephoneNumber ( _bstr_t Business2TelephoneNumber
);
__declspec(implementation_key(2223)) _bstr_t _ContactItem::GetBusinessAddress ( );
__declspec(implementation_key(2224)) void _ContactItem::PutBusinessAddress ( _bstr_t BusinessAddress );
__declspec(implementation_key(2225)) _bstr_t _ContactItem::GetBusinessAddressCity ( );
__declspec(implementation_key(2226)) void _ContactItem::PutBusinessAddressCity ( _bstr_t BusinessAddressCity );
__declspec(implementation_key(2227)) _bstr_t _ContactItem::GetBusinessAddressCountry ( );
__declspec(implementation_key(2228)) void _ContactItem::PutBusinessAddressCountry ( _bstr_t BusinessAddressCountry );
__declspec(implementation_key(2229)) _bstr_t _ContactItem::GetBusinessAddressPostalCode ( );
__declspec(implementation_key(2230)) void _ContactItem::PutBusinessAddressPostalCode ( _bstr_t BusinessAddressPostalCode
);
__declspec(implementation_key(2231)) _bstr_t _ContactItem::GetBusinessAddressPostOfficeBox ( );
__declspec(implementation_key(2232)) void _ContactItem::PutBusinessAddressPostOfficeBox ( _bstr_t
BusinessAddressPostOfficeBox );
__declspec(implementation_key(2233)) _bstr_t _ContactItem::GetBusinessAddressState ( );
__declspec(implementation_key(2234)) void _ContactItem::PutBusinessAddressState ( _bstr_t BusinessAddressState );
__declspec(implementation_key(2235)) _bstr_t _ContactItem::GetBusinessAddressStreet ( );
__declspec(implementation_key(2236)) void _ContactItem::PutBusinessAddressStreet ( _bstr_t BusinessAddressStreet );
__declspec(implementation_key(2237)) _bstr_t _ContactItem::GetBusinessFaxNumber ( );
__declspec(implementation_key(2238)) void _ContactItem::PutBusinessFaxNumber ( _bstr_t BusinessFaxNumber );
__declspec(implementation_key(2239)) _bstr_t _ContactItem::GetBusinessHomePage ( );
__declspec(implementation_key(2240)) void _ContactItem::PutBusinessHomePage ( _bstr_t BusinessHomePage );
__declspec(implementation_key(2241)) _bstr_t _ContactItem::GetBusinessTelephoneNumber ( );
__declspec(implementation_key(2242)) void _ContactItem::PutBusinessTelephoneNumber ( _bstr_t BusinessTelephoneNumber );
__declspec(implementation_key(2243)) _bstr_t _ContactItem::GetCallbackTelephoneNumber ( );
__declspec(implementation_key(2244)) void _ContactItem::PutCallbackTelephoneNumber ( _bstr_t CallbackTelephoneNumber );
__declspec(implementation_key(2245)) _bstr_t _ContactItem::GetCarTelephoneNumber ( );
__declspec(implementation_key(2246)) void _ContactItem::PutCarTelephoneNumber ( _bstr_t CarTelephoneNumber );
__declspec(implementation_key(2247)) _bstr_t _ContactItem::GetChildren ( );
__declspec(implementation_key(2248)) void _ContactItem::PutChildren ( _bstr_t Children );
__declspec(implementation_key(2249)) _bstr_t _ContactItem::GetCompanyAndFullName ( );
__declspec(implementation_key(2250)) _bstr_t _ContactItem::GetCompanyLastFirstNoSpace ( );
__declspec(implementation_key(2251)) _bstr_t _ContactItem::GetCompanyLastFirstSpaceOnly ( );
__declspec(implementation_key(2252)) _bstr_t _ContactItem::GetCompanyMainTelephoneNumber ( );
__declspec(implementation_key(2253)) void _ContactItem::PutCompanyMainTelephoneNumber ( _bstr_t
CompanyMainTelephoneNumber );
__declspec(implementation_key(2254)) _bstr_t _ContactItem::GetCompanyName ( );
__declspec(implementation_key(2255)) void _ContactItem::PutCompanyName ( _bstr_t CompanyName );
__declspec(implementation_key(2256)) _bstr_t _ContactItem::GetComputerNetworkName ( );
__declspec(implementation_key(2257)) void _ContactItem::PutComputerNetworkName ( _bstr_t ComputerNetworkName );
__declspec(implementation_key(2258)) _bstr_t _ContactItem::GetCustomerID ( );
__declspec(implementation_key(2259)) void _ContactItem::PutCustomerID ( _bstr_t CustomerID );
__declspec(implementation_key(2260)) _bstr_t _ContactItem::GetDepartment ( );
__declspec(implementation_key(2261)) void _ContactItem::PutDepartment ( _bstr_t Department );
__declspec(implementation_key(2262)) _bstr_t _ContactItem::GetEmail1Address ( );
__declspec(implementation_key(2263)) void _ContactItem::PutEmail1Address ( _bstr_t Email1Address );
__declspec(implementation_key(2264)) _bstr_t _ContactItem::GetEmail1AddressType ( );
__declspec(implementation_key(2265)) void _ContactItem::PutEmail1AddressType ( _bstr_t Email1AddressType );
__declspec(implementation_key(2266)) _bstr_t _ContactItem::GetEmail1DisplayName ( );
__declspec(implementation_key(2267)) _bstr_t _ContactItem::GetEmail1EntryID ( );
__declspec(implementation_key(2268)) _bstr_t _ContactItem::GetEmail2Address ( );
__declspec(implementation_key(2269)) void _ContactItem::PutEmail2Address ( _bstr_t Email2Address );
__declspec(implementation_key(2270)) _bstr_t _ContactItem::GetEmail2AddressType ( );
__declspec(implementation_key(2271)) void _ContactItem::PutEmail2AddressType ( _bstr_t Email2AddressType );
__declspec(implementation_key(2272)) _bstr_t _ContactItem::GetEmail2DisplayName ( );
__declspec(implementation_key(2273)) _bstr_t _ContactItem::GetEmail2EntryID ( );
__declspec(implementation_key(2274)) _bstr_t _ContactItem::GetEmail3Address ( );
__declspec(implementation_key(2275)) void _ContactItem::PutEmail3Address ( _bstr_t Email3Address );
__declspec(implementation_key(2276)) _bstr_t _ContactItem::GetEmail3AddressType ( );
__declspec(implementation_key(2277)) void _ContactItem::PutEmail3AddressType ( _bstr_t Email3AddressType );
__declspec(implementation_key(2278)) _bstr_t _ContactItem::GetEmail3DisplayName ( );
__declspec(implementation_key(2279)) _bstr_t _ContactItem::GetEmail3EntryID ( );
__declspec(implementation_key(2280)) _bstr_t _ContactItem::GetFileAs ( );
__declspec(implementation_key(2281)) void _ContactItem::PutFileAs ( _bstr_t FileAs );
__declspec(implementation_key(2282)) _bstr_t _ContactItem::GetFirstName ( );
__declspec(implementation_key(2283)) void _ContactItem::PutFirstName ( _bstr_t FirstName );
__declspec(implementation_key(2284)) _bstr_t _ContactItem::GetFTPSite ( );
__declspec(implementation_key(2285)) void _ContactItem::PutFTPSite ( _bstr_t FTPSite );
__declspec(implementation_key(2286)) _bstr_t _ContactItem::GetFullName ( );
__declspec(implementation_key(2287)) void _ContactItem::PutFullName ( _bstr_t FullName );
__declspec(implementation_key(2288)) _bstr_t _ContactItem::GetFullNameAndCompany ( );
__declspec(implementation_key(2289)) enum OlGender _ContactItem::GetGender ( );
__declspec(implementation_key(2290)) void _ContactItem::PutGender ( enum OlGender Gender );
__declspec(implementation_key(2291)) _bstr_t _ContactItem::GetGovernmentIDNumber ( );
__declspec(implementation_key(2292)) void _ContactItem::PutGovernmentIDNumber ( _bstr_t GovernmentIDNumber );
__declspec(implementation_key(2293)) _bstr_t _ContactItem::GetHobby ( );
__declspec(implementation_key(2294)) void _ContactItem::PutHobby ( _bstr_t Hobby );
__declspec(implementation_key(2295)) _bstr_t _ContactItem::GetHome2TelephoneNumber ( );
__declspec(implementation_key(2296)) void _ContactItem::PutHome2TelephoneNumber ( _bstr_t Home2TelephoneNumber );
__declspec(implementation_key(2297)) _bstr_t _ContactItem::GetHomeAddress ( );
__declspec(implementation_key(2298)) void _ContactItem::PutHomeAddress ( _bstr_t HomeAddress );
__declspec(implementation_key(2299)) _bstr_t _ContactItem::GetHomeAddressCity ( );
__declspec(implementation_key(2300)) void _ContactItem::PutHomeAddressCity ( _bstr_t HomeAddressCity );
__declspec(implementation_key(2301)) _bstr_t _ContactItem::GetHomeAddressCountry ( );
__declspec(implementation_key(2302)) void _ContactItem::PutHomeAddressCountry ( _bstr_t HomeAddressCountry );
__declspec(implementation_key(2303)) _bstr_t _ContactItem::GetHomeAddressPostalCode ( );
__declspec(implementation_key(2304)) void _ContactItem::PutHomeAddressPostalCode ( _bstr_t HomeAddressPostalCode );
__declspec(implementation_key(2305)) _bstr_t _ContactItem::GetHomeAddressPostOfficeBox ( );
__declspec(implementation_key(2306)) void _ContactItem::PutHomeAddressPostOfficeBox ( _bstr_t HomeAddressPostOfficeBox
);
__declspec(implementation_key(2307)) _bstr_t _ContactItem::GetHomeAddressState ( );
__declspec(implementation_key(2308)) void _ContactItem::PutHomeAddressState ( _bstr_t HomeAddressState );
__declspec(implementation_key(2309)) _bstr_t _ContactItem::GetHomeAddressStreet ( );
__declspec(implementation_key(2310)) void _ContactItem::PutHomeAddressStreet ( _bstr_t HomeAddressStreet );
__declspec(implementation_key(2311)) _bstr_t _ContactItem::GetHomeFaxNumber ( );
__declspec(implementation_key(2312)) void _ContactItem::PutHomeFaxNumber ( _bstr_t HomeFaxNumber );
__declspec(implementation_key(2313)) _bstr_t _ContactItem::GetHomeTelephoneNumber ( );
__declspec(implementation_key(2314)) void _ContactItem::PutHomeTelephoneNumber ( _bstr_t HomeTelephoneNumber );
__declspec(implementation_key(2315)) _bstr_t _ContactItem::GetInitials ( );
__declspec(implementation_key(2316)) void _ContactItem::PutInitials ( _bstr_t Initials );
__declspec(implementation_key(2317)) _bstr_t _ContactItem::GetInternetFreeBusyAddress ( );
__declspec(implementation_key(2318)) void _ContactItem::PutInternetFreeBusyAddress ( _bstr_t InternetFreeBusyAddress );
__declspec(implementation_key(2319)) _bstr_t _ContactItem::GetISDNNumber ( );
__declspec(implementation_key(2320)) void _ContactItem::PutISDNNumber ( _bstr_t ISDNNumber );
__declspec(implementation_key(2321)) _bstr_t _ContactItem::GetJobTitle ( );
__declspec(implementation_key(2322)) void _ContactItem::PutJobTitle ( _bstr_t JobTitle );
__declspec(implementation_key(2323)) VARIANT_BOOL _ContactItem::GetJournal ( );
__declspec(implementation_key(2324)) void _ContactItem::PutJournal ( VARIANT_BOOL Journal );
__declspec(implementation_key(2325)) _bstr_t _ContactItem::GetLanguage ( );
__declspec(implementation_key(2326)) void _ContactItem::PutLanguage ( _bstr_t Language );
__declspec(implementation_key(2327)) _bstr_t _ContactItem::GetLastFirstAndSuffix ( );
__declspec(implementation_key(2328)) _bstr_t _ContactItem::GetLastFirstNoSpace ( );
__declspec(implementation_key(2329)) _bstr_t _ContactItem::GetLastFirstNoSpaceCompany ( );
__declspec(implementation_key(2330)) _bstr_t _ContactItem::GetLastFirstSpaceOnly ( );
__declspec(implementation_key(2331)) _bstr_t _ContactItem::GetLastFirstSpaceOnlyCompany ( );
__declspec(implementation_key(2332)) _bstr_t _ContactItem::GetLastName ( );
__declspec(implementation_key(2333)) void _ContactItem::PutLastName ( _bstr_t LastName );
__declspec(implementation_key(2334)) _bstr_t _ContactItem::GetLastNameAndFirstName ( );
__declspec(implementation_key(2335)) _bstr_t _ContactItem::GetMailingAddress ( );
__declspec(implementation_key(2336)) void _ContactItem::PutMailingAddress ( _bstr_t MailingAddress );
__declspec(implementation_key(2337)) _bstr_t _ContactItem::GetMailingAddressCity ( );
__declspec(implementation_key(2338)) void _ContactItem::PutMailingAddressCity ( _bstr_t MailingAddressCity );
__declspec(implementation_key(2339)) _bstr_t _ContactItem::GetMailingAddressCountry ( );
__declspec(implementation_key(2340)) void _ContactItem::PutMailingAddressCountry ( _bstr_t MailingAddressCountry );
__declspec(implementation_key(2341)) _bstr_t _ContactItem::GetMailingAddressPostalCode ( );
__declspec(implementation_key(2342)) void _ContactItem::PutMailingAddressPostalCode ( _bstr_t MailingAddressPostalCode
);
__declspec(implementation_key(2343)) _bstr_t _ContactItem::GetMailingAddressPostOfficeBox ( );
__declspec(implementation_key(2344)) void _ContactItem::PutMailingAddressPostOfficeBox ( _bstr_t
MailingAddressPostOfficeBox );
__declspec(implementation_key(2345)) _bstr_t _ContactItem::GetMailingAddressState ( );
__declspec(implementation_key(2346)) void _ContactItem::PutMailingAddressState ( _bstr_t MailingAddressState );
__declspec(implementation_key(2347)) _bstr_t _ContactItem::GetMailingAddressStreet ( );
__declspec(implementation_key(2348)) void _ContactItem::PutMailingAddressStreet ( _bstr_t MailingAddressStreet );
__declspec(implementation_key(2349)) _bstr_t _ContactItem::GetManagerName ( );
__declspec(implementation_key(2350)) void _ContactItem::PutManagerName ( _bstr_t ManagerName );
__declspec(implementation_key(2351)) _bstr_t _ContactItem::GetMiddleName ( );
__declspec(implementation_key(2352)) void _ContactItem::PutMiddleName ( _bstr_t MiddleName );
__declspec(implementation_key(2353)) _bstr_t _ContactItem::GetMobileTelephoneNumber ( );
__declspec(implementation_key(2354)) void _ContactItem::PutMobileTelephoneNumber ( _bstr_t MobileTelephoneNumber );
__declspec(implementation_key(2355)) _bstr_t _ContactItem::GetNetMeetingAlias ( );
__declspec(implementation_key(2356)) void _ContactItem::PutNetMeetingAlias ( _bstr_t NetMeetingAlias );
__declspec(implementation_key(2357)) _bstr_t _ContactItem::GetNetMeetingServer ( );
__declspec(implementation_key(2358)) void _ContactItem::PutNetMeetingServer ( _bstr_t NetMeetingServer );
__declspec(implementation_key(2359)) _bstr_t _ContactItem::GetNickName ( );
__declspec(implementation_key(2360)) void _ContactItem::PutNickName ( _bstr_t NickName );
__declspec(implementation_key(2361)) _bstr_t _ContactItem::GetOfficeLocation ( );
__declspec(implementation_key(2362)) void _ContactItem::PutOfficeLocation ( _bstr_t OfficeLocation );
__declspec(implementation_key(2363)) _bstr_t _ContactItem::GetOrganizationalIDNumber ( );
__declspec(implementation_key(2364)) void _ContactItem::PutOrganizationalIDNumber ( _bstr_t OrganizationalIDNumber );
__declspec(implementation_key(2365)) _bstr_t _ContactItem::GetOtherAddress ( );
__declspec(implementation_key(2366)) void _ContactItem::PutOtherAddress ( _bstr_t OtherAddress );
__declspec(implementation_key(2367)) _bstr_t _ContactItem::GetOtherAddressCity ( );
__declspec(implementation_key(2368)) void _ContactItem::PutOtherAddressCity ( _bstr_t OtherAddressCity );
__declspec(implementation_key(2369)) _bstr_t _ContactItem::GetOtherAddressCountry ( );
__declspec(implementation_key(2370)) void _ContactItem::PutOtherAddressCountry ( _bstr_t OtherAddressCountry );
__declspec(implementation_key(2371)) _bstr_t _ContactItem::GetOtherAddressPostalCode ( );
__declspec(implementation_key(2372)) void _ContactItem::PutOtherAddressPostalCode ( _bstr_t OtherAddressPostalCode );
__declspec(implementation_key(2373)) _bstr_t _ContactItem::GetOtherAddressPostOfficeBox ( );
__declspec(implementation_key(2374)) void _ContactItem::PutOtherAddressPostOfficeBox ( _bstr_t OtherAddressPostOfficeBox
);
__declspec(implementation_key(2375)) _bstr_t _ContactItem::GetOtherAddressState ( );
__declspec(implementation_key(2376)) void _ContactItem::PutOtherAddressState ( _bstr_t OtherAddressState );
__declspec(implementation_key(2377)) _bstr_t _ContactItem::GetOtherAddressStreet ( );
__declspec(implementation_key(2378)) void _ContactItem::PutOtherAddressStreet ( _bstr_t OtherAddressStreet );
__declspec(implementation_key(2379)) _bstr_t _ContactItem::GetOtherFaxNumber ( );
__declspec(implementation_key(2380)) void _ContactItem::PutOtherFaxNumber ( _bstr_t OtherFaxNumber );
__declspec(implementation_key(2381)) _bstr_t _ContactItem::GetOtherTelephoneNumber ( );
__declspec(implementation_key(2382)) void _ContactItem::PutOtherTelephoneNumber ( _bstr_t OtherTelephoneNumber );
__declspec(implementation_key(2383)) _bstr_t _ContactItem::GetPagerNumber ( );
__declspec(implementation_key(2384)) void _ContactItem::PutPagerNumber ( _bstr_t PagerNumber );
__declspec(implementation_key(2385)) _bstr_t _ContactItem::GetPersonalHomePage ( );
__declspec(implementation_key(2386)) void _ContactItem::PutPersonalHomePage ( _bstr_t PersonalHomePage );
__declspec(implementation_key(2387)) _bstr_t _ContactItem::GetPrimaryTelephoneNumber ( );
__declspec(implementation_key(2388)) void _ContactItem::PutPrimaryTelephoneNumber ( _bstr_t PrimaryTelephoneNumber );
__declspec(implementation_key(2389)) _bstr_t _ContactItem::GetProfession ( );
__declspec(implementation_key(2390)) void _ContactItem::PutProfession ( _bstr_t Profession );
__declspec(implementation_key(2391)) _bstr_t _ContactItem::GetRadioTelephoneNumber ( );
__declspec(implementation_key(2392)) void _ContactItem::PutRadioTelephoneNumber ( _bstr_t RadioTelephoneNumber );
__declspec(implementation_key(2393)) _bstr_t _ContactItem::GetReferredBy ( );
__declspec(implementation_key(2394)) void _ContactItem::PutReferredBy ( _bstr_t ReferredBy );
__declspec(implementation_key(2395)) enum OlMailingAddress _ContactItem::GetSelectedMailingAddress ( );
__declspec(implementation_key(2396)) void _ContactItem::PutSelectedMailingAddress ( enum OlMailingAddress
SelectedMailingAddress );
__declspec(implementation_key(2397)) _bstr_t _ContactItem::GetSpouse ( );
__declspec(implementation_key(2398)) void _ContactItem::PutSpouse ( _bstr_t Spouse );
__declspec(implementation_key(2399)) _bstr_t _ContactItem::GetSuffix ( );
__declspec(implementation_key(2400)) void _ContactItem::PutSuffix ( _bstr_t Suffix );
__declspec(implementation_key(2401)) _bstr_t _ContactItem::GetTelexNumber ( );
__declspec(implementation_key(2402)) void _ContactItem::PutTelexNumber ( _bstr_t TelexNumber );
__declspec(implementation_key(2403)) _bstr_t _ContactItem::GetTitle ( );
__declspec(implementation_key(2404)) void _ContactItem::PutTitle ( _bstr_t Title );
__declspec(implementation_key(2405)) _bstr_t _ContactItem::GetTTYTDDTelephoneNumber ( );
__declspec(implementation_key(2406)) void _ContactItem::PutTTYTDDTelephoneNumber ( _bstr_t TTYTDDTelephoneNumber );
__declspec(implementation_key(2407)) _bstr_t _ContactItem::GetUser1 ( );
__declspec(implementation_key(2408)) void _ContactItem::PutUser1 ( _bstr_t User1 );
__declspec(implementation_key(2409)) _bstr_t _ContactItem::GetUser2 ( );
__declspec(implementation_key(2410)) void _ContactItem::PutUser2 ( _bstr_t User2 );
__declspec(implementation_key(2411)) _bstr_t _ContactItem::GetUser3 ( );
__declspec(implementation_key(2412)) void _ContactItem::PutUser3 ( _bstr_t User3 );
__declspec(implementation_key(2413)) _bstr_t _ContactItem::GetUser4 ( );
__declspec(implementation_key(2414)) void _ContactItem::PutUser4 ( _bstr_t User4 );
__declspec(implementation_key(2415)) _bstr_t _ContactItem::GetUserCertificate ( );
__declspec(implementation_key(2416)) void _ContactItem::PutUserCertificate ( _bstr_t UserCertificate );
__declspec(implementation_key(2417)) _bstr_t _ContactItem::GetWebPage ( );
__declspec(implementation_key(2418)) void _ContactItem::PutWebPage ( _bstr_t WebPage );
__declspec(implementation_key(2419)) _bstr_t _ContactItem::GetYomiCompanyName ( );
__declspec(implementation_key(2420)) void _ContactItem::PutYomiCompanyName ( _bstr_t YomiCompanyName );
__declspec(implementation_key(2421)) _bstr_t _ContactItem::GetYomiFirstName ( );
__declspec(implementation_key(2422)) void _ContactItem::PutYomiFirstName ( _bstr_t YomiFirstName );
__declspec(implementation_key(2423)) _bstr_t _ContactItem::GetYomiLastName ( );
__declspec(implementation_key(2424)) void _ContactItem::PutYomiLastName ( _bstr_t YomiLastName );
__declspec(implementation_key(2425)) _MailItemPtr _ContactItem::ForwardAsVcard ( );
__declspec(implementation_key(2426)) LinksPtr _ContactItem::GetLinks ( );
__declspec(implementation_key(2427)) ItemPropertiesPtr _ContactItem::GetItemProperties ( );
__declspec(implementation_key(2428)) _bstr_t _ContactItem::GetLastFirstNoSpaceAndSuffix ( );
__declspec(implementation_key(2429)) enum OlDownloadState _ContactItem::GetDownloadState ( );
__declspec(implementation_key(2430)) HRESULT _ContactItem::ShowCategoriesDialog ( );
__declspec(implementation_key(2431)) _bstr_t _ContactItem::GetIMAddress ( );
__declspec(implementation_key(2432)) void _ContactItem::PutIMAddress ( _bstr_t IMAddress );
__declspec(implementation_key(2433)) enum OlRemoteStatus _ContactItem::GetMarkForDownload ( );
__declspec(implementation_key(2434)) void _ContactItem::PutMarkForDownload ( enum OlRemoteStatus MarkForDownload );
__declspec(implementation_key(2435)) void _ContactItem::PutEmail1DisplayName ( _bstr_t Email1DisplayName );
__declspec(implementation_key(2436)) void _ContactItem::PutEmail2DisplayName ( _bstr_t Email2DisplayName );
__declspec(implementation_key(2437)) void _ContactItem::PutEmail3DisplayName ( _bstr_t Email3DisplayName );
__declspec(implementation_key(2438)) VARIANT_BOOL _ContactItem::GetIsConflict ( );
__declspec(implementation_key(2439)) VARIANT_BOOL _ContactItem::GetAutoResolvedWinner ( );
__declspec(implementation_key(2440)) ConflictsPtr _ContactItem::GetConflicts ( );
__declspec(implementation_key(2441)) HRESULT _ContactItem::AddPicture ( _bstr_t Path );
__declspec(implementation_key(2442)) HRESULT _ContactItem::RemovePicture ( );
__declspec(implementation_key(2443)) VARIANT_BOOL _ContactItem::GetHasPicture ( );
__declspec(implementation_key(2444)) _PropertyAccessorPtr _ContactItem::GetPropertyAccessor ( );
__declspec(implementation_key(2445)) _MailItemPtr _ContactItem::ForwardAsBusinessCard ( );
__declspec(implementation_key(2446)) HRESULT _ContactItem::ShowBusinessCardEditor ( );
__declspec(implementation_key(2447)) HRESULT _ContactItem::SaveBusinessCardImage ( _bstr_t Path );
__declspec(implementation_key(2448)) HRESULT _ContactItem::ShowCheckPhoneDialog ( enum OlContactPhoneNumber PhoneNumber
);
__declspec(implementation_key(2449)) _bstr_t _ContactItem::GetTaskSubject ( );
__declspec(implementation_key(2450)) void _ContactItem::PutTaskSubject ( _bstr_t TaskSubject );
__declspec(implementation_key(2451)) DATE _ContactItem::GetTaskDueDate ( );
__declspec(implementation_key(2452)) void _ContactItem::PutTaskDueDate ( DATE TaskDueDate );
__declspec(implementation_key(2453)) DATE _ContactItem::GetTaskStartDate ( );
__declspec(implementation_key(2454)) void _ContactItem::PutTaskStartDate ( DATE TaskStartDate );
__declspec(implementation_key(2455)) DATE _ContactItem::GetTaskCompletedDate ( );
__declspec(implementation_key(2456)) void _ContactItem::PutTaskCompletedDate ( DATE TaskCompletedDate );
__declspec(implementation_key(2457)) DATE _ContactItem::GetToDoTaskOrdinal ( );
__declspec(implementation_key(2458)) void _ContactItem::PutToDoTaskOrdinal ( DATE ToDoTaskOrdinal );
__declspec(implementation_key(2459)) VARIANT_BOOL _ContactItem::GetReminderOverrideDefault ( );
__declspec(implementation_key(2460)) void _ContactItem::PutReminderOverrideDefault ( VARIANT_BOOL
ReminderOverrideDefault );
__declspec(implementation_key(2461)) VARIANT_BOOL _ContactItem::GetReminderPlaySound ( );
__declspec(implementation_key(2462)) void _ContactItem::PutReminderPlaySound ( VARIANT_BOOL ReminderPlaySound );
__declspec(implementation_key(2463)) VARIANT_BOOL _ContactItem::GetReminderSet ( );
__declspec(implementation_key(2464)) void _ContactItem::PutReminderSet ( VARIANT_BOOL ReminderSet );
__declspec(implementation_key(2465)) _bstr_t _ContactItem::GetReminderSoundFile ( );
__declspec(implementation_key(2466)) void _ContactItem::PutReminderSoundFile ( _bstr_t ReminderSoundFile );
__declspec(implementation_key(2467)) DATE _ContactItem::GetReminderTime ( );
__declspec(implementation_key(2468)) void _ContactItem::PutReminderTime ( DATE ReminderTime );
__declspec(implementation_key(2469)) HRESULT _ContactItem::MarkAsTask ( enum OlMarkInterval MarkInterval );
__declspec(implementation_key(2470)) HRESULT _ContactItem::ClearTaskFlag ( );
__declspec(implementation_key(2471)) VARIANT_BOOL _ContactItem::GetIsMarkedAsTask ( );
__declspec(implementation_key(2472)) _bstr_t _ContactItem::GetBusinessCardLayoutXml ( );
__declspec(implementation_key(2473)) void _ContactItem::PutBusinessCardLayoutXml ( _bstr_t BusinessCardLayoutXml );
__declspec(implementation_key(2474)) HRESULT _ContactItem::ResetBusinessCard ( );
__declspec(implementation_key(2475)) HRESULT _ContactItem::AddBusinessCardLogoPicture ( _bstr_t Path );
__declspec(implementation_key(2476)) enum OlBusinessCardType _ContactItem::GetBusinessCardType ( );
__declspec(implementation_key(2477)) _ApplicationPtr _ExchangeUser::GetApplication ( );
__declspec(implementation_key(2478)) enum OlObjectClass _ExchangeUser::GetClass ( );
__declspec(implementation_key(2479)) _NameSpacePtr _ExchangeUser::GetSession ( );
__declspec(implementation_key(2480)) IDispatchPtr _ExchangeUser::GetParent ( );
__declspec(implementation_key(2481)) _bstr_t _ExchangeUser::GetAddress ( );
__declspec(implementation_key(2482)) void _ExchangeUser::PutAddress ( _bstr_t Address );
__declspec(implementation_key(2483)) enum OlDisplayType _ExchangeUser::GetDisplayType ( );
__declspec(implementation_key(2484)) _bstr_t _ExchangeUser::GetID ( );
__declspec(implementation_key(2485)) AddressEntryPtr _ExchangeUser::GetManager ( );
__declspec(implementation_key(2486)) IUnknownPtr _ExchangeUser::GetMAPIOBJECT ( );
__declspec(implementation_key(2487)) void _ExchangeUser::PutMAPIOBJECT ( IUnknown * MAPIOBJECT );
__declspec(implementation_key(2488)) AddressEntriesPtr _ExchangeUser::GetMembers ( );
__declspec(implementation_key(2489)) _bstr_t _ExchangeUser::GetName ( );
__declspec(implementation_key(2490)) void _ExchangeUser::PutName ( _bstr_t Name );
__declspec(implementation_key(2491)) _bstr_t _ExchangeUser::GetType ( );
__declspec(implementation_key(2492)) void _ExchangeUser::PutType ( _bstr_t Type );
__declspec(implementation_key(2493)) HRESULT _ExchangeUser::Delete ( );
__declspec(implementation_key(2494)) HRESULT _ExchangeUser::Details ( const _variant_t & HWnd );
__declspec(implementation_key(2495)) _bstr_t _ExchangeUser::GetFreeBusy ( DATE Start, long MinPerChar, const _variant_t
& CompleteFormat );
__declspec(implementation_key(2496)) HRESULT _ExchangeUser::Update ( const _variant_t & MakePermanent, const _variant_t
& Refresh );
__declspec(implementation_key(2497)) HRESULT _ExchangeUser::UpdateFreeBusy ( );
__declspec(implementation_key(2498)) _ContactItemPtr _ExchangeUser::GetContact ( );
__declspec(implementation_key(2499)) _ExchangeUserPtr _ExchangeUser::GetExchangeUser ( );
__declspec(implementation_key(2500)) enum OlAddressEntryUserType _ExchangeUser::GetAddressEntryUserType ( );
__declspec(implementation_key(2501)) _ExchangeDistributionListPtr _ExchangeUser::GetExchangeDistributionList ( );
__declspec(implementation_key(2502)) _PropertyAccessorPtr _ExchangeUser::GetPropertyAccessor ( );
__declspec(implementation_key(2503)) AddressEntriesPtr _ExchangeUser::GetDirectReports ( );
__declspec(implementation_key(2504)) AddressEntriesPtr _ExchangeUser::GetMemberOfList ( );
__declspec(implementation_key(2505)) _bstr_t _ExchangeUser::GetAlias ( );
__declspec(implementation_key(2506)) _bstr_t _ExchangeUser::GetAssistantName ( );
__declspec(implementation_key(2507)) void _ExchangeUser::PutAssistantName ( _bstr_t AssistantName );
__declspec(implementation_key(2508)) _bstr_t _ExchangeUser::GetBusinessTelephoneNumber ( );
__declspec(implementation_key(2509)) void _ExchangeUser::PutBusinessTelephoneNumber ( _bstr_t BusinessTelephoneNumber );
__declspec(implementation_key(2510)) _bstr_t _ExchangeUser::GetCity ( );
__declspec(implementation_key(2511)) void _ExchangeUser::PutCity ( _bstr_t City );
__declspec(implementation_key(2512)) _bstr_t _ExchangeUser::GetComments ( );
__declspec(implementation_key(2513)) void _ExchangeUser::PutComments ( _bstr_t Comments );
__declspec(implementation_key(2514)) _bstr_t _ExchangeUser::GetCompanyName ( );
__declspec(implementation_key(2515)) void _ExchangeUser::PutCompanyName ( _bstr_t CompanyName );
__declspec(implementation_key(2516)) _bstr_t _ExchangeUser::GetDepartment ( );
__declspec(implementation_key(2517)) void _ExchangeUser::PutDepartment ( _bstr_t Department );
__declspec(implementation_key(2518)) _bstr_t _ExchangeUser::GetFirstName ( );
__declspec(implementation_key(2519)) void _ExchangeUser::PutFirstName ( _bstr_t FirstName );
__declspec(implementation_key(2520)) _bstr_t _ExchangeUser::GetJobTitle ( );
__declspec(implementation_key(2521)) void _ExchangeUser::PutJobTitle ( _bstr_t JobTitle );
__declspec(implementation_key(2522)) _bstr_t _ExchangeUser::GetLastName ( );
__declspec(implementation_key(2523)) void _ExchangeUser::PutLastName ( _bstr_t LastName );
__declspec(implementation_key(2524)) _bstr_t _ExchangeUser::GetMobileTelephoneNumber ( );
__declspec(implementation_key(2525)) void _ExchangeUser::PutMobileTelephoneNumber ( _bstr_t MobileTelephoneNumber );
__declspec(implementation_key(2526)) _bstr_t _ExchangeUser::GetOfficeLocation ( );
__declspec(implementation_key(2527)) void _ExchangeUser::PutOfficeLocation ( _bstr_t OfficeLocation );
__declspec(implementation_key(2528)) _bstr_t _ExchangeUser::GetPostalCode ( );
__declspec(implementation_key(2529)) void _ExchangeUser::PutPostalCode ( _bstr_t PostalCode );
__declspec(implementation_key(2530)) _bstr_t _ExchangeUser::GetPrimarySmtpAddress ( );
__declspec(implementation_key(2531)) _bstr_t _ExchangeUser::GetStateOrProvince ( );
__declspec(implementation_key(2532)) void _ExchangeUser::PutStateOrProvince ( _bstr_t StateOrProvince );
__declspec(implementation_key(2533)) _bstr_t _ExchangeUser::GetStreetAddress ( );
__declspec(implementation_key(2534)) void _ExchangeUser::PutStreetAddress ( _bstr_t StreetAddress );
__declspec(implementation_key(2535)) _ExchangeUserPtr _ExchangeUser::GetExchangeUserManager ( );
__declspec(implementation_key(2536)) _bstr_t _ExchangeUser::GetYomiCompanyName ( );
__declspec(implementation_key(2537)) void _ExchangeUser::PutYomiCompanyName ( _bstr_t YomiCompanyName );
__declspec(implementation_key(2538)) _bstr_t _ExchangeUser::GetYomiFirstName ( );
__declspec(implementation_key(2539)) void _ExchangeUser::PutYomiFirstName ( _bstr_t YomiFirstName );
__declspec(implementation_key(2540)) _bstr_t _ExchangeUser::GetYomiLastName ( );
__declspec(implementation_key(2541)) void _ExchangeUser::PutYomiLastName ( _bstr_t YomiLastName );
__declspec(implementation_key(2542)) _bstr_t _ExchangeUser::GetYomiDisplayName ( );
__declspec(implementation_key(2543)) void _ExchangeUser::PutYomiDisplayName ( _bstr_t YomiDisplayName );
__declspec(implementation_key(2544)) _bstr_t _ExchangeUser::GetYomiDepartment ( );
__declspec(implementation_key(2545)) void _ExchangeUser::PutYomiDepartment ( _bstr_t YomiDepartment );
__declspec(implementation_key(2546)) _ApplicationPtr _ExchangeDistributionList::GetApplication ( );
__declspec(implementation_key(2547)) enum OlObjectClass _ExchangeDistributionList::GetClass ( );
__declspec(implementation_key(2548)) _NameSpacePtr _ExchangeDistributionList::GetSession ( );
__declspec(implementation_key(2549)) IDispatchPtr _ExchangeDistributionList::GetParent ( );
__declspec(implementation_key(2550)) _bstr_t _ExchangeDistributionList::GetAddress ( );
__declspec(implementation_key(2551)) void _ExchangeDistributionList::PutAddress ( _bstr_t Address );
__declspec(implementation_key(2552)) enum OlDisplayType _ExchangeDistributionList::GetDisplayType ( );
__declspec(implementation_key(2553)) _bstr_t _ExchangeDistributionList::GetID ( );
__declspec(implementation_key(2554)) AddressEntryPtr _ExchangeDistributionList::GetManager ( );
__declspec(implementation_key(2555)) IUnknownPtr _ExchangeDistributionList::GetMAPIOBJECT ( );
__declspec(implementation_key(2556)) void _ExchangeDistributionList::PutMAPIOBJECT ( IUnknown * MAPIOBJECT );
__declspec(implementation_key(2557)) AddressEntriesPtr _ExchangeDistributionList::GetMembers ( );
__declspec(implementation_key(2558)) _bstr_t _ExchangeDistributionList::GetName ( );
__declspec(implementation_key(2559)) void _ExchangeDistributionList::PutName ( _bstr_t Name );
__declspec(implementation_key(2560)) _bstr_t _ExchangeDistributionList::GetType ( );
__declspec(implementation_key(2561)) void _ExchangeDistributionList::PutType ( _bstr_t Type );
__declspec(implementation_key(2562)) HRESULT _ExchangeDistributionList::Delete ( );
__declspec(implementation_key(2563)) HRESULT _ExchangeDistributionList::Details ( const _variant_t & HWnd );
__declspec(implementation_key(2564)) _bstr_t _ExchangeDistributionList::GetFreeBusy ( DATE Start, long MinPerChar, const
_variant_t & CompleteFormat );
__declspec(implementation_key(2565)) HRESULT _ExchangeDistributionList::Update ( const _variant_t & MakePermanent, const
_variant_t & Refresh );
__declspec(implementation_key(2566)) HRESULT _ExchangeDistributionList::UpdateFreeBusy ( );
__declspec(implementation_key(2567)) _ContactItemPtr _ExchangeDistributionList::GetContact ( );
__declspec(implementation_key(2568)) _ExchangeUserPtr _ExchangeDistributionList::GetExchangeUser ( );
__declspec(implementation_key(2569)) enum OlAddressEntryUserType _ExchangeDistributionList::GetAddressEntryUserType ( );
__declspec(implementation_key(2570)) _ExchangeDistributionListPtr _ExchangeDistributionList::GetExchangeDistributionList
( );
__declspec(implementation_key(2571)) _PropertyAccessorPtr _ExchangeDistributionList::GetPropertyAccessor ( );
__declspec(implementation_key(2572)) AddressEntriesPtr _ExchangeDistributionList::GetMemberOfList ( );
__declspec(implementation_key(2573)) AddressEntriesPtr _ExchangeDistributionList::GetExchangeDistributionListMembers (
);
__declspec(implementation_key(2574)) _bstr_t _ExchangeDistributionList::GetAlias ( );
__declspec(implementation_key(2575)) _bstr_t _ExchangeDistributionList::GetComments ( );
__declspec(implementation_key(2576)) void _ExchangeDistributionList::PutComments ( _bstr_t Comments );
__declspec(implementation_key(2577)) _bstr_t _ExchangeDistributionList::GetPrimarySmtpAddress ( );
__declspec(implementation_key(2578)) AddressEntriesPtr _ExchangeDistributionList::GetOwners ( );
__declspec(implementation_key(2579)) _ApplicationPtr MAPIFolder::GetApplication ( );
__declspec(implementation_key(2580)) enum OlObjectClass MAPIFolder::GetClass ( );
__declspec(implementation_key(2581)) _NameSpacePtr MAPIFolder::GetSession ( );
__declspec(implementation_key(2582)) IDispatchPtr MAPIFolder::GetParent ( );
__declspec(implementation_key(2583)) enum OlItemType MAPIFolder::GetDefaultItemType ( );
__declspec(implementation_key(2584)) _bstr_t MAPIFolder::GetDefaultMessageClass ( );
__declspec(implementation_key(2585)) _bstr_t MAPIFolder::GetDescription ( );
__declspec(implementation_key(2586)) void MAPIFolder::PutDescription ( _bstr_t Description );
__declspec(implementation_key(2587)) _bstr_t MAPIFolder::GetEntryID ( );
__declspec(implementation_key(2588)) _FoldersPtr MAPIFolder::GetFolders ( );
__declspec(implementation_key(2589)) _ItemsPtr MAPIFolder::GetItems ( );
__declspec(implementation_key(2590)) _bstr_t MAPIFolder::GetName ( );
__declspec(implementation_key(2591)) void MAPIFolder::PutName ( _bstr_t Name );
__declspec(implementation_key(2592)) _bstr_t MAPIFolder::GetStoreID ( );
__declspec(implementation_key(2593)) long MAPIFolder::GetUnReadItemCount ( );
__declspec(implementation_key(2594)) MAPIFolderPtr MAPIFolder::CopyTo ( struct MAPIFolder * DestinationFolder );
__declspec(implementation_key(2595)) HRESULT MAPIFolder::Delete ( );
__declspec(implementation_key(2596)) HRESULT MAPIFolder::Display ( );
__declspec(implementation_key(2597)) _ExplorerPtr MAPIFolder::GetExplorer ( const _variant_t & DisplayMode );
__declspec(implementation_key(2598)) HRESULT MAPIFolder::MoveTo ( struct MAPIFolder * DestinationFolder );
__declspec(implementation_key(2599)) IDispatchPtr MAPIFolder::GetUserPermissions ( );
__declspec(implementation_key(2600)) VARIANT_BOOL MAPIFolder::GetWebViewOn ( );
__declspec(implementation_key(2601)) void MAPIFolder::PutWebViewOn ( VARIANT_BOOL WebViewOn );
__declspec(implementation_key(2602)) _bstr_t MAPIFolder::GetWebViewURL ( );
__declspec(implementation_key(2603)) void MAPIFolder::PutWebViewURL ( _bstr_t WebViewURL );
__declspec(implementation_key(2604)) VARIANT_BOOL MAPIFolder::GetWebViewAllowNavigation ( );
__declspec(implementation_key(2605)) void MAPIFolder::PutWebViewAllowNavigation ( VARIANT_BOOL WebViewAllowNavigation );
__declspec(implementation_key(2606)) HRESULT MAPIFolder::AddToPFFavorites ( );
__declspec(implementation_key(2607)) _bstr_t MAPIFolder::GetAddressBookName ( );
__declspec(implementation_key(2608)) void MAPIFolder::PutAddressBookName ( _bstr_t AddressBookName );
__declspec(implementation_key(2609)) VARIANT_BOOL MAPIFolder::GetShowAsOutlookAB ( );
__declspec(implementation_key(2610)) void MAPIFolder::PutShowAsOutlookAB ( VARIANT_BOOL ShowAsOutlookAB );
__declspec(implementation_key(2611)) _bstr_t MAPIFolder::GetFolderPath ( );
__declspec(implementation_key(2612)) HRESULT MAPIFolder::AddToFavorites ( const _variant_t & fNoUI, const _variant_t &
Name );
__declspec(implementation_key(2613)) VARIANT_BOOL MAPIFolder::GetInAppFolderSyncObject ( );
__declspec(implementation_key(2614)) void MAPIFolder::PutInAppFolderSyncObject ( VARIANT_BOOL InAppFolderSyncObject );
__declspec(implementation_key(2615)) ViewPtr MAPIFolder::GetCurrentView ( );
__declspec(implementation_key(2616)) VARIANT_BOOL MAPIFolder::GetCustomViewsOnly ( );
__declspec(implementation_key(2617)) void MAPIFolder::PutCustomViewsOnly ( VARIANT_BOOL CustomViewsOnly );
__declspec(implementation_key(2618)) _ViewsPtr MAPIFolder::GetViews ( );
__declspec(implementation_key(2619)) IUnknownPtr MAPIFolder::GetMAPIOBJECT ( );
__declspec(implementation_key(2620)) _bstr_t MAPIFolder::GetFullFolderPath ( );
__declspec(implementation_key(2621)) VARIANT_BOOL MAPIFolder::GetIsSharePointFolder ( );
__declspec(implementation_key(2622)) enum OlShowItemCount MAPIFolder::GetShowItemCount ( );
__declspec(implementation_key(2623)) void MAPIFolder::PutShowItemCount ( enum OlShowItemCount ShowItemCount );
__declspec(implementation_key(2624)) _StorePtr MAPIFolder::GetStore ( );
__declspec(implementation_key(2625)) _StorageItemPtr MAPIFolder::GetStorage ( _bstr_t StorageIdentifier, enum
OlStorageIdentifierType StorageIdentifierType );
__declspec(implementation_key(2626)) _TablePtr MAPIFolder::GetTable ( const _variant_t & Filter, const _variant_t &
TableContents );
__declspec(implementation_key(2627)) _PropertyAccessorPtr MAPIFolder::GetPropertyAccessor ( );
__declspec(implementation_key(2628)) _CalendarSharingPtr MAPIFolder::GetCalendarExporter ( );
__declspec(implementation_key(2629)) _UserDefinedPropertiesPtr MAPIFolder::GetUserDefinedProperties ( );
__declspec(implementation_key(2630)) _ApplicationPtr _Folders::GetApplication ( );
__declspec(implementation_key(2631)) enum OlObjectClass _Folders::GetClass ( );
__declspec(implementation_key(2632)) _NameSpacePtr _Folders::GetSession ( );
__declspec(implementation_key(2633)) IDispatchPtr _Folders::GetParent ( );
__declspec(implementation_key(2634)) long _Folders::GetCount ( );
__declspec(implementation_key(2635)) MAPIFolderPtr _Folders::Item ( const _variant_t & Index );
__declspec(implementation_key(2636)) IUnknownPtr _Folders::GetRawTable ( );
__declspec(implementation_key(2637)) MAPIFolderPtr _Folders::Add ( _bstr_t Name, const _variant_t & Type );
__declspec(implementation_key(2638)) MAPIFolderPtr _Folders::GetFirst ( );
__declspec(implementation_key(2639)) MAPIFolderPtr _Folders::GetLast ( );
__declspec(implementation_key(2640)) MAPIFolderPtr _Folders::GetNext ( );
__declspec(implementation_key(2641)) MAPIFolderPtr _Folders::GetPrevious ( );
__declspec(implementation_key(2642)) HRESULT _Folders::Remove ( long Index );
__declspec(implementation_key(2643)) _ApplicationPtr _Explorer::GetApplication ( );
__declspec(implementation_key(2644)) enum OlObjectClass _Explorer::GetClass ( );
__declspec(implementation_key(2645)) _NameSpacePtr _Explorer::GetSession ( );
__declspec(implementation_key(2646)) IDispatchPtr _Explorer::GetParent ( );
__declspec(implementation_key(2647)) Office::_CommandBarsPtr _Explorer::GetCommandBars ( );
__declspec(implementation_key(2648)) MAPIFolderPtr _Explorer::GetCurrentFolder ( );
__declspec(implementation_key(2649)) void _Explorer::PutRefCurrentFolder ( struct MAPIFolder * CurrentFolder );
__declspec(implementation_key(2650)) HRESULT _Explorer::Close ( );
__declspec(implementation_key(2651)) HRESULT _Explorer::Display ( );
__declspec(implementation_key(2652)) _bstr_t _Explorer::GetCaption ( );
__declspec(implementation_key(2653)) _variant_t _Explorer::GetCurrentView ( );
__declspec(implementation_key(2654)) void _Explorer::PutCurrentView ( const _variant_t & CurrentView );
__declspec(implementation_key(2655)) long _Explorer::GetHeight ( );
__declspec(implementation_key(2656)) void _Explorer::PutHeight ( long Height );
__declspec(implementation_key(2657)) long _Explorer::GetLeft ( );
__declspec(implementation_key(2658)) void _Explorer::PutLeft ( long Left );
__declspec(implementation_key(2659)) PanesPtr _Explorer::GetPanes ( );
__declspec(implementation_key(2660)) SelectionPtr _Explorer::GetSelection ( );
__declspec(implementation_key(2661)) long _Explorer::GetTop ( );
__declspec(implementation_key(2662)) void _Explorer::PutTop ( long Top );
__declspec(implementation_key(2663)) long _Explorer::GetWidth ( );
__declspec(implementation_key(2664)) void _Explorer::PutWidth ( long Width );
__declspec(implementation_key(2665)) enum OlWindowState _Explorer::GetWindowState ( );
__declspec(implementation_key(2666)) void _Explorer::PutWindowState ( enum OlWindowState WindowState );
__declspec(implementation_key(2667)) HRESULT _Explorer::Activate ( );
__declspec(implementation_key(2668)) VARIANT_BOOL _Explorer::IsPaneVisible ( enum OlPane Pane );
__declspec(implementation_key(2669)) HRESULT _Explorer::ShowPane ( enum OlPane Pane, VARIANT_BOOL Visible );
__declspec(implementation_key(2670)) IDispatchPtr _Explorer::GetViews ( );
__declspec(implementation_key(2671)) IDispatchPtr _Explorer::GetHTMLDocument ( );
__declspec(implementation_key(2672)) HRESULT _Explorer::SelectFolder ( struct MAPIFolder * Folder );
__declspec(implementation_key(2673)) HRESULT _Explorer::DeselectFolder ( struct MAPIFolder * Folder );
__declspec(implementation_key(2674)) VARIANT_BOOL _Explorer::IsFolderSelected ( struct MAPIFolder * Folder );
__declspec(implementation_key(2675)) _NavigationPanePtr _Explorer::GetNavigationPane ( );
__declspec(implementation_key(2676)) HRESULT _Explorer::ClearSearch ( );
__declspec(implementation_key(2677)) HRESULT _Explorer::Search ( _bstr_t Query, enum OlSearchScope SearchScope );
__declspec(implementation_key(2678)) _ApplicationPtr _Store::GetApplication ( );
__declspec(implementation_key(2679)) enum OlObjectClass _Store::GetClass ( );
__declspec(implementation_key(2680)) _NameSpacePtr _Store::GetSession ( );
__declspec(implementation_key(2681)) IDispatchPtr _Store::GetParent ( );
__declspec(implementation_key(2682)) _bstr_t _Store::GetDisplayName ( );
__declspec(implementation_key(2683)) _bstr_t _Store::GetStoreID ( );
__declspec(implementation_key(2684)) enum OlExchangeStoreType _Store::GetExchangeStoreType ( );
__declspec(implementation_key(2685)) _bstr_t _Store::GetFilePath ( );
__declspec(implementation_key(2686)) VARIANT_BOOL _Store::GetIsCachedExchange ( );
__declspec(implementation_key(2687)) VARIANT_BOOL _Store::GetIsDataFileStore ( );
__declspec(implementation_key(2688)) MAPIFolderPtr _Store::GetRootFolder ( );
__declspec(implementation_key(2689)) _FoldersPtr _Store::GetSearchFolders ( );
__declspec(implementation_key(2690)) VARIANT_BOOL _Store::GetIsOpen ( );
__declspec(implementation_key(2691)) IUnknownPtr _Store::GetMAPIOBJECT ( );
__declspec(implementation_key(2692)) _RulesPtr _Store::GetRules ( );
__declspec(implementation_key(2693)) _PropertyAccessorPtr _Store::GetPropertyAccessor ( );
__declspec(implementation_key(2694)) MAPIFolderPtr _Store::GetSpecialFolder ( enum OlSpecialFolders FolderType );
__declspec(implementation_key(2695)) VARIANT_BOOL _Store::GetIsInstantSearchEnabled ( );
__declspec(implementation_key(2696)) _ApplicationPtr _MoveOrCopyRuleAction::GetApplication ( );
__declspec(implementation_key(2697)) enum OlObjectClass _MoveOrCopyRuleAction::GetClass ( );
__declspec(implementation_key(2698)) _NameSpacePtr _MoveOrCopyRuleAction::GetSession ( );
__declspec(implementation_key(2699)) IDispatchPtr _MoveOrCopyRuleAction::GetParent ( );
__declspec(implementation_key(2700)) VARIANT_BOOL _MoveOrCopyRuleAction::GetEnabled ( );
__declspec(implementation_key(2701)) void _MoveOrCopyRuleAction::PutEnabled ( VARIANT_BOOL Enabled );
__declspec(implementation_key(2702)) enum OlRuleActionType _MoveOrCopyRuleAction::GetActionType ( );
__declspec(implementation_key(2703)) MAPIFolderPtr _MoveOrCopyRuleAction::GetFolder ( );
__declspec(implementation_key(2704)) void _MoveOrCopyRuleAction::PutFolder ( struct MAPIFolder * Folder );
__declspec(implementation_key(2705)) _ApplicationPtr AddressList::GetApplication ( );
__declspec(implementation_key(2706)) enum OlObjectClass AddressList::GetClass ( );
__declspec(implementation_key(2707)) _NameSpacePtr AddressList::GetSession ( );
__declspec(implementation_key(2708)) IDispatchPtr AddressList::GetParent ( );
__declspec(implementation_key(2709)) AddressEntriesPtr AddressList::GetAddressEntries ( );
__declspec(implementation_key(2710)) _bstr_t AddressList::GetID ( );
__declspec(implementation_key(2711)) long AddressList::GetIndex ( );
__declspec(implementation_key(2712)) VARIANT_BOOL AddressList::GetIsReadOnly ( );
__declspec(implementation_key(2713)) _bstr_t AddressList::GetName ( );
__declspec(implementation_key(2714)) MAPIFolderPtr AddressList::GetContactsFolder ( );
__declspec(implementation_key(2715)) enum OlAddressListType AddressList::GetAddressListType ( );
__declspec(implementation_key(2716)) long AddressList::GetResolutionOrder ( );
__declspec(implementation_key(2717)) VARIANT_BOOL AddressList::GetIsInitialAddressList ( );
__declspec(implementation_key(2718)) _PropertyAccessorPtr AddressList::GetPropertyAccessor ( );
__declspec(implementation_key(2719)) _ApplicationPtr _SenderInAddressListRuleCondition::GetApplication ( );
__declspec(implementation_key(2720)) enum OlObjectClass _SenderInAddressListRuleCondition::GetClass ( );
__declspec(implementation_key(2721)) _NameSpacePtr _SenderInAddressListRuleCondition::GetSession ( );
__declspec(implementation_key(2722)) IDispatchPtr _SenderInAddressListRuleCondition::GetParent ( );
__declspec(implementation_key(2723)) VARIANT_BOOL _SenderInAddressListRuleCondition::GetEnabled ( );
__declspec(implementation_key(2724)) void _SenderInAddressListRuleCondition::PutEnabled ( VARIANT_BOOL Enabled );
__declspec(implementation_key(2725)) enum OlRuleConditionType _SenderInAddressListRuleCondition::GetConditionType ( );
__declspec(implementation_key(2726)) AddressListPtr _SenderInAddressListRuleCondition::GetAddressList ( );
__declspec(implementation_key(2727)) void _SenderInAddressListRuleCondition::PutAddressList ( struct AddressList *
AddressList );
__declspec(implementation_key(2728)) _ApplicationPtr _CalendarSharing::GetApplication ( );
__declspec(implementation_key(2729)) enum OlObjectClass _CalendarSharing::GetClass ( );
__declspec(implementation_key(2730)) _NameSpacePtr _CalendarSharing::GetSession ( );
__declspec(implementation_key(2731)) IDispatchPtr _CalendarSharing::GetParent ( );
__declspec(implementation_key(2732)) HRESULT _CalendarSharing::SaveAsICal ( _bstr_t Path );
__declspec(implementation_key(2733)) _MailItemPtr _CalendarSharing::ForwardAsICal ( enum OlCalendarMailFormat MailFormat
);
__declspec(implementation_key(2734)) enum OlCalendarDetail _CalendarSharing::GetCalendarDetail ( );
__declspec(implementation_key(2735)) void _CalendarSharing::PutCalendarDetail ( enum OlCalendarDetail CalendarDetail );
__declspec(implementation_key(2736)) DATE _CalendarSharing::GetEndDate ( );
__declspec(implementation_key(2737)) void _CalendarSharing::PutEndDate ( DATE EndDate );
__declspec(implementation_key(2738)) MAPIFolderPtr _CalendarSharing::GetFolder ( );
__declspec(implementation_key(2739)) VARIANT_BOOL _CalendarSharing::GetIncludeAttachments ( );
__declspec(implementation_key(2740)) void _CalendarSharing::PutIncludeAttachments ( VARIANT_BOOL IncludeAttachments );
__declspec(implementation_key(2741)) VARIANT_BOOL _CalendarSharing::GetIncludePrivateDetails ( );
__declspec(implementation_key(2742)) void _CalendarSharing::PutIncludePrivateDetails ( VARIANT_BOOL
IncludePrivateDetails );
__declspec(implementation_key(2743)) VARIANT_BOOL _CalendarSharing::GetRestrictToWorkingHours ( );
__declspec(implementation_key(2744)) void _CalendarSharing::PutRestrictToWorkingHours ( VARIANT_BOOL
RestrictToWorkingHours );
__declspec(implementation_key(2745)) DATE _CalendarSharing::GetStartDate ( );
__declspec(implementation_key(2746)) void _CalendarSharing::PutStartDate ( DATE StartDate );
__declspec(implementation_key(2747)) VARIANT_BOOL _CalendarSharing::GetIncludeWholeCalendar ( );
__declspec(implementation_key(2748)) void _CalendarSharing::PutIncludeWholeCalendar ( VARIANT_BOOL IncludeWholeCalendar
);
__declspec(implementation_key(2749)) _ApplicationPtr _MailItem::GetApplication ( );
__declspec(implementation_key(2750)) enum OlObjectClass _MailItem::GetClass ( );
__declspec(implementation_key(2751)) _NameSpacePtr _MailItem::GetSession ( );
__declspec(implementation_key(2752)) IDispatchPtr _MailItem::GetParent ( );
__declspec(implementation_key(2753)) ActionsPtr _MailItem::GetActions ( );
__declspec(implementation_key(2754)) AttachmentsPtr _MailItem::GetAttachments ( );
__declspec(implementation_key(2755)) _bstr_t _MailItem::GetBillingInformation ( );
__declspec(implementation_key(2756)) void _MailItem::PutBillingInformation ( _bstr_t BillingInformation );
__declspec(implementation_key(2757)) _bstr_t _MailItem::GetBody ( );
__declspec(implementation_key(2758)) void _MailItem::PutBody ( _bstr_t Body );
__declspec(implementation_key(2759)) _bstr_t _MailItem::GetCategories ( );
__declspec(implementation_key(2760)) void _MailItem::PutCategories ( _bstr_t Categories );
__declspec(implementation_key(2761)) _bstr_t _MailItem::GetCompanies ( );
__declspec(implementation_key(2762)) void _MailItem::PutCompanies ( _bstr_t Companies );
__declspec(implementation_key(2763)) _bstr_t _MailItem::GetConversationIndex ( );
__declspec(implementation_key(2764)) _bstr_t _MailItem::GetConversationTopic ( );
__declspec(implementation_key(2765)) DATE _MailItem::GetCreationTime ( );
__declspec(implementation_key(2766)) _bstr_t _MailItem::GetEntryID ( );
__declspec(implementation_key(2767)) FormDescriptionPtr _MailItem::GetFormDescription ( );
__declspec(implementation_key(2768)) _InspectorPtr _MailItem::GetGetInspector ( );
__declspec(implementation_key(2769)) enum OlImportance _MailItem::GetImportance ( );
__declspec(implementation_key(2770)) void _MailItem::PutImportance ( enum OlImportance Importance );
__declspec(implementation_key(2771)) DATE _MailItem::GetLastModificationTime ( );
__declspec(implementation_key(2772)) IUnknownPtr _MailItem::GetMAPIOBJECT ( );
__declspec(implementation_key(2773)) _bstr_t _MailItem::GetMessageClass ( );
__declspec(implementation_key(2774)) void _MailItem::PutMessageClass ( _bstr_t MessageClass );
__declspec(implementation_key(2775)) _bstr_t _MailItem::GetMileage ( );
__declspec(implementation_key(2776)) void _MailItem::PutMileage ( _bstr_t Mileage );
__declspec(implementation_key(2777)) VARIANT_BOOL _MailItem::GetNoAging ( );
__declspec(implementation_key(2778)) void _MailItem::PutNoAging ( VARIANT_BOOL NoAging );
__declspec(implementation_key(2779)) long _MailItem::GetOutlookInternalVersion ( );
__declspec(implementation_key(2780)) _bstr_t _MailItem::GetOutlookVersion ( );
__declspec(implementation_key(2781)) VARIANT_BOOL _MailItem::GetSaved ( );
__declspec(implementation_key(2782)) enum OlSensitivity _MailItem::GetSensitivity ( );
__declspec(implementation_key(2783)) void _MailItem::PutSensitivity ( enum OlSensitivity Sensitivity );
__declspec(implementation_key(2784)) long _MailItem::GetSize ( );
__declspec(implementation_key(2785)) _bstr_t _MailItem::GetSubject ( );
__declspec(implementation_key(2786)) void _MailItem::PutSubject ( _bstr_t Subject );
__declspec(implementation_key(2787)) VARIANT_BOOL _MailItem::GetUnRead ( );
__declspec(implementation_key(2788)) void _MailItem::PutUnRead ( VARIANT_BOOL UnRead );
__declspec(implementation_key(2789)) UserPropertiesPtr _MailItem::GetUserProperties ( );
__declspec(implementation_key(2790)) HRESULT _MailItem::Close ( enum OlInspectorClose SaveMode );
__declspec(implementation_key(2791)) IDispatchPtr _MailItem::Copy ( );
__declspec(implementation_key(2792)) HRESULT _MailItem::Delete ( );
__declspec(implementation_key(2793)) HRESULT _MailItem::Display ( const _variant_t & Modal );
__declspec(implementation_key(2794)) IDispatchPtr _MailItem::Move ( struct MAPIFolder * DestFldr );
__declspec(implementation_key(2795)) HRESULT _MailItem::PrintOut ( );
__declspec(implementation_key(2796)) HRESULT _MailItem::Save ( );
__declspec(implementation_key(2797)) HRESULT _MailItem::SaveAs ( _bstr_t Path, const _variant_t & Type );
__declspec(implementation_key(2798)) VARIANT_BOOL _MailItem::GetAlternateRecipientAllowed ( );
__declspec(implementation_key(2799)) void _MailItem::PutAlternateRecipientAllowed ( VARIANT_BOOL
AlternateRecipientAllowed );
__declspec(implementation_key(2800)) VARIANT_BOOL _MailItem::GetAutoForwarded ( );
__declspec(implementation_key(2801)) void _MailItem::PutAutoForwarded ( VARIANT_BOOL AutoForwarded );
__declspec(implementation_key(2802)) _bstr_t _MailItem::GetBCC ( );
__declspec(implementation_key(2803)) void _MailItem::PutBCC ( _bstr_t BCC );
__declspec(implementation_key(2804)) _bstr_t _MailItem::GetCC ( );
__declspec(implementation_key(2805)) void _MailItem::PutCC ( _bstr_t CC );
__declspec(implementation_key(2806)) DATE _MailItem::GetDeferredDeliveryTime ( );
__declspec(implementation_key(2807)) void _MailItem::PutDeferredDeliveryTime ( DATE DeferredDeliveryTime );
__declspec(implementation_key(2808)) VARIANT_BOOL _MailItem::GetDeleteAfterSubmit ( );
__declspec(implementation_key(2809)) void _MailItem::PutDeleteAfterSubmit ( VARIANT_BOOL DeleteAfterSubmit );
__declspec(implementation_key(2810)) DATE _MailItem::GetExpiryTime ( );
__declspec(implementation_key(2811)) void _MailItem::PutExpiryTime ( DATE ExpiryTime );
__declspec(implementation_key(2812)) DATE _MailItem::GetFlagDueBy ( );
__declspec(implementation_key(2813)) void _MailItem::PutFlagDueBy ( DATE FlagDueBy );
__declspec(implementation_key(2814)) _bstr_t _MailItem::GetFlagRequest ( );
__declspec(implementation_key(2815)) void _MailItem::PutFlagRequest ( _bstr_t FlagRequest );
__declspec(implementation_key(2816)) enum OlFlagStatus _MailItem::GetFlagStatus ( );
__declspec(implementation_key(2817)) void _MailItem::PutFlagStatus ( enum OlFlagStatus FlagStatus );
__declspec(implementation_key(2818)) _bstr_t _MailItem::GetHTMLBody ( );
__declspec(implementation_key(2819)) void _MailItem::PutHTMLBody ( _bstr_t HTMLBody );
__declspec(implementation_key(2820)) VARIANT_BOOL _MailItem::GetOriginatorDeliveryReportRequested ( );
__declspec(implementation_key(2821)) void _MailItem::PutOriginatorDeliveryReportRequested ( VARIANT_BOOL
OriginatorDeliveryReportRequested );
__declspec(implementation_key(2822)) VARIANT_BOOL _MailItem::GetReadReceiptRequested ( );
__declspec(implementation_key(2823)) void _MailItem::PutReadReceiptRequested ( VARIANT_BOOL ReadReceiptRequested );
__declspec(implementation_key(2824)) _bstr_t _MailItem::GetReceivedByEntryID ( );
__declspec(implementation_key(2825)) _bstr_t _MailItem::GetReceivedByName ( );
__declspec(implementation_key(2826)) _bstr_t _MailItem::GetReceivedOnBehalfOfEntryID ( );
__declspec(implementation_key(2827)) _bstr_t _MailItem::GetReceivedOnBehalfOfName ( );
__declspec(implementation_key(2828)) DATE _MailItem::GetReceivedTime ( );
__declspec(implementation_key(2829)) VARIANT_BOOL _MailItem::GetRecipientReassignmentProhibited ( );
__declspec(implementation_key(2830)) void _MailItem::PutRecipientReassignmentProhibited ( VARIANT_BOOL
RecipientReassignmentProhibited );
__declspec(implementation_key(2831)) RecipientsPtr _MailItem::GetRecipients ( );
__declspec(implementation_key(2832)) VARIANT_BOOL _MailItem::GetReminderOverrideDefault ( );
__declspec(implementation_key(2833)) void _MailItem::PutReminderOverrideDefault ( VARIANT_BOOL ReminderOverrideDefault
);
__declspec(implementation_key(2834)) VARIANT_BOOL _MailItem::GetReminderPlaySound ( );
__declspec(implementation_key(2835)) void _MailItem::PutReminderPlaySound ( VARIANT_BOOL ReminderPlaySound );
__declspec(implementation_key(2836)) VARIANT_BOOL _MailItem::GetReminderSet ( );
__declspec(implementation_key(2837)) void _MailItem::PutReminderSet ( VARIANT_BOOL ReminderSet );
__declspec(implementation_key(2838)) _bstr_t _MailItem::GetReminderSoundFile ( );
__declspec(implementation_key(2839)) void _MailItem::PutReminderSoundFile ( _bstr_t ReminderSoundFile );
__declspec(implementation_key(2840)) DATE _MailItem::GetReminderTime ( );
__declspec(implementation_key(2841)) void _MailItem::PutReminderTime ( DATE ReminderTime );
__declspec(implementation_key(2842)) enum OlRemoteStatus _MailItem::GetRemoteStatus ( );
__declspec(implementation_key(2843)) void _MailItem::PutRemoteStatus ( enum OlRemoteStatus RemoteStatus );
__declspec(implementation_key(2844)) _bstr_t _MailItem::GetReplyRecipientNames ( );
__declspec(implementation_key(2845)) RecipientsPtr _MailItem::GetReplyRecipients ( );
__declspec(implementation_key(2846)) MAPIFolderPtr _MailItem::GetSaveSentMessageFolder ( );
__declspec(implementation_key(2847)) void _MailItem::PutRefSaveSentMessageFolder ( struct MAPIFolder *
SaveSentMessageFolder );
__declspec(implementation_key(2848)) _bstr_t _MailItem::GetSenderName ( );
__declspec(implementation_key(2849)) VARIANT_BOOL _MailItem::GetSent ( );
__declspec(implementation_key(2850)) DATE _MailItem::GetSentOn ( );
__declspec(implementation_key(2851)) _bstr_t _MailItem::GetSentOnBehalfOfName ( );
__declspec(implementation_key(2852)) void _MailItem::PutSentOnBehalfOfName ( _bstr_t SentOnBehalfOfName );
__declspec(implementation_key(2853)) VARIANT_BOOL _MailItem::GetSubmitted ( );
__declspec(implementation_key(2854)) _bstr_t _MailItem::GetTo ( );
__declspec(implementation_key(2855)) void _MailItem::PutTo ( _bstr_t To );
__declspec(implementation_key(2856)) _bstr_t _MailItem::GetVotingOptions ( );
__declspec(implementation_key(2857)) void _MailItem::PutVotingOptions ( _bstr_t VotingOptions );
__declspec(implementation_key(2858)) _bstr_t _MailItem::GetVotingResponse ( );
__declspec(implementation_key(2859)) void _MailItem::PutVotingResponse ( _bstr_t VotingResponse );
__declspec(implementation_key(2860)) HRESULT _MailItem::ClearConversationIndex ( );
__declspec(implementation_key(2861)) _MailItemPtr _MailItem::Forward ( );
__declspec(implementation_key(2862)) _MailItemPtr _MailItem::Reply ( );
__declspec(implementation_key(2863)) _MailItemPtr _MailItem::ReplyAll ( );
__declspec(implementation_key(2864)) HRESULT _MailItem::Send ( );
__declspec(implementation_key(2865)) LinksPtr _MailItem::GetLinks ( );
__declspec(implementation_key(2866)) ItemPropertiesPtr _MailItem::GetItemProperties ( );
__declspec(implementation_key(2867)) enum OlBodyFormat _MailItem::GetBodyFormat ( );
__declspec(implementation_key(2868)) void _MailItem::PutBodyFormat ( enum OlBodyFormat BodyFormat );
__declspec(implementation_key(2869)) enum OlDownloadState _MailItem::GetDownloadState ( );
__declspec(implementation_key(2870)) HRESULT _MailItem::ShowCategoriesDialog ( );
__declspec(implementation_key(2871)) long _MailItem::GetInternetCodepage ( );
__declspec(implementation_key(2872)) void _MailItem::PutInternetCodepage ( long InternetCodepage );
__declspec(implementation_key(2873)) enum OlRemoteStatus _MailItem::GetMarkForDownload ( );
__declspec(implementation_key(2874)) void _MailItem::PutMarkForDownload ( enum OlRemoteStatus MarkForDownload );
__declspec(implementation_key(2875)) VARIANT_BOOL _MailItem::GetIsConflict ( );
__declspec(implementation_key(2876)) VARIANT_BOOL _MailItem::GetIsIPFax ( );
__declspec(implementation_key(2877)) void _MailItem::PutIsIPFax ( VARIANT_BOOL IsIPFax );
__declspec(implementation_key(2878)) enum OlFlagIcon _MailItem::GetFlagIcon ( );
__declspec(implementation_key(2879)) void _MailItem::PutFlagIcon ( enum OlFlagIcon FlagIcon );
__declspec(implementation_key(2880)) VARIANT_BOOL _MailItem::GetHasCoverSheet ( );
__declspec(implementation_key(2881)) void _MailItem::PutHasCoverSheet ( VARIANT_BOOL HasCoverSheet );
__declspec(implementation_key(2882)) VARIANT_BOOL _MailItem::GetAutoResolvedWinner ( );
__declspec(implementation_key(2883)) ConflictsPtr _MailItem::GetConflicts ( );
__declspec(implementation_key(2884)) _bstr_t _MailItem::GetSenderEmailAddress ( );
__declspec(implementation_key(2885)) _bstr_t _MailItem::GetSenderEmailType ( );
__declspec(implementation_key(2886)) VARIANT_BOOL _MailItem::GetEnableSharedAttachments ( );
__declspec(implementation_key(2887)) void _MailItem::PutEnableSharedAttachments ( VARIANT_BOOL EnableSharedAttachments
);
__declspec(implementation_key(2888)) enum OlPermission _MailItem::GetPermission ( );
__declspec(implementation_key(2889)) void _MailItem::PutPermission ( enum OlPermission Permission );
__declspec(implementation_key(2890)) enum OlPermissionService _MailItem::GetPermissionService ( );
__declspec(implementation_key(2891)) void _MailItem::PutPermissionService ( enum OlPermissionService PermissionService
);
__declspec(implementation_key(2892)) _PropertyAccessorPtr _MailItem::GetPropertyAccessor ( );
__declspec(implementation_key(2893)) HRESULT _MailItem::AddBusinessCard ( struct _ContactItem * contact );
__declspec(implementation_key(2894)) _AccountPtr _MailItem::GetSendUsingAccount ( );
__declspec(implementation_key(2895)) void _MailItem::PutSendUsingAccount ( struct _Account * SendUsingAccount );
__declspec(implementation_key(2896)) _bstr_t _MailItem::GetTaskSubject ( );
__declspec(implementation_key(2897)) void _MailItem::PutTaskSubject ( _bstr_t TaskSubject );
__declspec(implementation_key(2898)) DATE _MailItem::GetTaskDueDate ( );
__declspec(implementation_key(2899)) void _MailItem::PutTaskDueDate ( DATE TaskDueDate );
__declspec(implementation_key(2900)) DATE _MailItem::GetTaskStartDate ( );
__declspec(implementation_key(2901)) void _MailItem::PutTaskStartDate ( DATE TaskStartDate );
__declspec(implementation_key(2902)) DATE _MailItem::GetTaskCompletedDate ( );
__declspec(implementation_key(2903)) void _MailItem::PutTaskCompletedDate ( DATE TaskCompletedDate );
__declspec(implementation_key(2904)) DATE _MailItem::GetToDoTaskOrdinal ( );
__declspec(implementation_key(2905)) void _MailItem::PutToDoTaskOrdinal ( DATE ToDoTaskOrdinal );
__declspec(implementation_key(2906)) HRESULT _MailItem::MarkAsTask ( enum OlMarkInterval MarkInterval );
__declspec(implementation_key(2907)) HRESULT _MailItem::ClearTaskFlag ( );
__declspec(implementation_key(2908)) VARIANT_BOOL _MailItem::GetIsMarkedAsTask ( );
__declspec(implementation_key(2909)) _ApplicationPtr AddressLists::GetApplication ( );
__declspec(implementation_key(2910)) enum OlObjectClass AddressLists::GetClass ( );
__declspec(implementation_key(2911)) _NameSpacePtr AddressLists::GetSession ( );
__declspec(implementation_key(2912)) IDispatchPtr AddressLists::GetParent ( );
__declspec(implementation_key(2913)) long AddressLists::GetCount ( );
__declspec(implementation_key(2914)) AddressListPtr AddressLists::Item ( const _variant_t & Index );
__declspec(implementation_key(2915)) _ApplicationPtr _Stores::GetApplication ( );
__declspec(implementation_key(2916)) enum OlObjectClass _Stores::GetClass ( );
__declspec(implementation_key(2917)) _NameSpacePtr _Stores::GetSession ( );
__declspec(implementation_key(2918)) IDispatchPtr _Stores::GetParent ( );
__declspec(implementation_key(2919)) long _Stores::GetCount ( );
__declspec(implementation_key(2920)) _StorePtr _Stores::Item ( const _variant_t & Index );
__declspec(implementation_key(2921)) _ApplicationPtr _SelectNamesDialog::GetApplication ( );
__declspec(implementation_key(2922)) enum OlObjectClass _SelectNamesDialog::GetClass ( );
__declspec(implementation_key(2923)) _NameSpacePtr _SelectNamesDialog::GetSession ( );
__declspec(implementation_key(2924)) IDispatchPtr _SelectNamesDialog::GetParent ( );
__declspec(implementation_key(2925)) _bstr_t _SelectNamesDialog::GetCaption ( );
__declspec(implementation_key(2926)) void _SelectNamesDialog::PutCaption ( _bstr_t Caption );
__declspec(implementation_key(2927)) VARIANT_BOOL _SelectNamesDialog::Display ( );
__declspec(implementation_key(2928)) RecipientsPtr _SelectNamesDialog::GetRecipients ( );
__declspec(implementation_key(2929)) void _SelectNamesDialog::PutRecipients ( struct Recipients * Recipients );
__declspec(implementation_key(2930)) _bstr_t _SelectNamesDialog::GetBccLabel ( );
__declspec(implementation_key(2931)) void _SelectNamesDialog::PutBccLabel ( _bstr_t BccLabel );
__declspec(implementation_key(2932)) _bstr_t _SelectNamesDialog::GetCcLabel ( );
__declspec(implementation_key(2933)) void _SelectNamesDialog::PutCcLabel ( _bstr_t CcLabel );
__declspec(implementation_key(2934)) _bstr_t _SelectNamesDialog::GetToLabel ( );
__declspec(implementation_key(2935)) void _SelectNamesDialog::PutToLabel ( _bstr_t ToLabel );
__declspec(implementation_key(2936)) VARIANT_BOOL _SelectNamesDialog::GetAllowMultipleSelection ( );
__declspec(implementation_key(2937)) void _SelectNamesDialog::PutAllowMultipleSelection ( VARIANT_BOOL
AllowMultipleSelection );
__declspec(implementation_key(2938)) VARIANT_BOOL _SelectNamesDialog::GetForceResolution ( );
__declspec(implementation_key(2939)) void _SelectNamesDialog::PutForceResolution ( VARIANT_BOOL ForceResolution );
__declspec(implementation_key(2940)) VARIANT_BOOL _SelectNamesDialog::GetShowOnlyInitialAddressList ( );
__declspec(implementation_key(2941)) void _SelectNamesDialog::PutShowOnlyInitialAddressList ( VARIANT_BOOL
ShowOnlyInitialAddressList );
__declspec(implementation_key(2942)) enum OlRecipientSelectors _SelectNamesDialog::GetNumberOfRecipientSelectors ( );
__declspec(implementation_key(2943)) void _SelectNamesDialog::PutNumberOfRecipientSelectors ( enum OlRecipientSelectors
NumberOfRecipientSelectors );
__declspec(implementation_key(2944)) AddressListPtr _SelectNamesDialog::GetInitialAddressList ( );
__declspec(implementation_key(2945)) void _SelectNamesDialog::PutInitialAddressList ( struct AddressList *
InitialAddressList );
__declspec(implementation_key(2946)) HRESULT _SelectNamesDialog::SetDefaultDisplayMode ( enum
OlDefaultSelectNamesDisplayMode defaultMode );
__declspec(implementation_key(2947)) _ApplicationPtr _SharingItem::GetApplication ( );
__declspec(implementation_key(2948)) enum OlObjectClass _SharingItem::GetClass ( );
__declspec(implementation_key(2949)) _NameSpacePtr _SharingItem::GetSession ( );
__declspec(implementation_key(2950)) IDispatchPtr _SharingItem::GetParent ( );
__declspec(implementation_key(2951)) ActionsPtr _SharingItem::GetActions ( );
__declspec(implementation_key(2952)) AttachmentsPtr _SharingItem::GetAttachments ( );
__declspec(implementation_key(2953)) _bstr_t _SharingItem::GetBillingInformation ( );
__declspec(implementation_key(2954)) void _SharingItem::PutBillingInformation ( _bstr_t BillingInformation );
__declspec(implementation_key(2955)) _bstr_t _SharingItem::GetBody ( );
__declspec(implementation_key(2956)) void _SharingItem::PutBody ( _bstr_t Body );
__declspec(implementation_key(2957)) _bstr_t _SharingItem::GetCategories ( );
__declspec(implementation_key(2958)) void _SharingItem::PutCategories ( _bstr_t Categories );
__declspec(implementation_key(2959)) _bstr_t _SharingItem::GetCompanies ( );
__declspec(implementation_key(2960)) void _SharingItem::PutCompanies ( _bstr_t Companies );
__declspec(implementation_key(2961)) _bstr_t _SharingItem::GetConversationIndex ( );
__declspec(implementation_key(2962)) _bstr_t _SharingItem::GetConversationTopic ( );
__declspec(implementation_key(2963)) DATE _SharingItem::GetCreationTime ( );
__declspec(implementation_key(2964)) _bstr_t _SharingItem::GetEntryID ( );
__declspec(implementation_key(2965)) FormDescriptionPtr _SharingItem::GetFormDescription ( );
__declspec(implementation_key(2966)) _InspectorPtr _SharingItem::GetGetInspector ( );
__declspec(implementation_key(2967)) enum OlImportance _SharingItem::GetImportance ( );
__declspec(implementation_key(2968)) void _SharingItem::PutImportance ( enum OlImportance Importance );
__declspec(implementation_key(2969)) DATE _SharingItem::GetLastModificationTime ( );
__declspec(implementation_key(2970)) IUnknownPtr _SharingItem::GetMAPIOBJECT ( );
__declspec(implementation_key(2971)) _bstr_t _SharingItem::GetMessageClass ( );
__declspec(implementation_key(2972)) void _SharingItem::PutMessageClass ( _bstr_t MessageClass );
__declspec(implementation_key(2973)) _bstr_t _SharingItem::GetMileage ( );
__declspec(implementation_key(2974)) void _SharingItem::PutMileage ( _bstr_t Mileage );
__declspec(implementation_key(2975)) VARIANT_BOOL _SharingItem::GetNoAging ( );
__declspec(implementation_key(2976)) void _SharingItem::PutNoAging ( VARIANT_BOOL NoAging );
__declspec(implementation_key(2977)) long _SharingItem::GetOutlookInternalVersion ( );
__declspec(implementation_key(2978)) _bstr_t _SharingItem::GetOutlookVersion ( );
__declspec(implementation_key(2979)) VARIANT_BOOL _SharingItem::GetSaved ( );
__declspec(implementation_key(2980)) enum OlSensitivity _SharingItem::GetSensitivity ( );
__declspec(implementation_key(2981)) void _SharingItem::PutSensitivity ( enum OlSensitivity Sensitivity );
__declspec(implementation_key(2982)) long _SharingItem::GetSize ( );
__declspec(implementation_key(2983)) _bstr_t _SharingItem::GetSubject ( );
__declspec(implementation_key(2984)) void _SharingItem::PutSubject ( _bstr_t Subject );
__declspec(implementation_key(2985)) VARIANT_BOOL _SharingItem::GetUnRead ( );
__declspec(implementation_key(2986)) void _SharingItem::PutUnRead ( VARIANT_BOOL UnRead );
__declspec(implementation_key(2987)) UserPropertiesPtr _SharingItem::GetUserProperties ( );
__declspec(implementation_key(2988)) HRESULT _SharingItem::Close ( enum OlInspectorClose SaveMode );
__declspec(implementation_key(2989)) IDispatchPtr _SharingItem::Copy ( );
__declspec(implementation_key(2990)) HRESULT _SharingItem::Delete ( );
__declspec(implementation_key(2991)) HRESULT _SharingItem::Display ( const _variant_t & Modal );
__declspec(implementation_key(2992)) IDispatchPtr _SharingItem::Move ( struct MAPIFolder * DestFldr );
__declspec(implementation_key(2993)) HRESULT _SharingItem::PrintOut ( );
__declspec(implementation_key(2994)) HRESULT _SharingItem::Save ( );
__declspec(implementation_key(2995)) HRESULT _SharingItem::SaveAs ( _bstr_t Path, const _variant_t & Type );
__declspec(implementation_key(2996)) HRESULT _SharingItem::Allow ( );
__declspec(implementation_key(2997)) _SharingItemPtr _SharingItem::Deny ( );
__declspec(implementation_key(2998)) _PropertyAccessorPtr _SharingItem::GetPropertyAccessor ( );
__declspec(implementation_key(2999)) _bstr_t _SharingItem::GetRemoteName ( );
__declspec(implementation_key(3000)) _bstr_t _SharingItem::GetRemoteID ( );
__declspec(implementation_key(3001)) _bstr_t _SharingItem::GetRemotePath ( );
__declspec(implementation_key(3002)) _bstr_t _SharingItem::GetSharingProviderGuid ( );
__declspec(implementation_key(3003)) MAPIFolderPtr _SharingItem::OpenSharedFolder ( );
__declspec(implementation_key(3004)) enum OlSharingProvider _SharingItem::GetSharingProvider ( );
__declspec(implementation_key(3005)) VARIANT_BOOL _SharingItem::GetAllowWriteAccess ( );
__declspec(implementation_key(3006)) void _SharingItem::PutAllowWriteAccess ( VARIANT_BOOL AllowWriteAccess );
__declspec(implementation_key(3007)) enum OlSharingMsgType _SharingItem::GetType ( );
__declspec(implementation_key(3008)) void _SharingItem::PutType ( enum OlSharingMsgType Type );
__declspec(implementation_key(3009)) enum OlDefaultFolders _SharingItem::GetRequestedFolder ( );
__declspec(implementation_key(3010)) _AccountPtr _SharingItem::GetSendUsingAccount ( );
__declspec(implementation_key(3011)) void _SharingItem::PutSendUsingAccount ( struct _Account * SendUsingAccount );
__declspec(implementation_key(3012)) VARIANT_BOOL _SharingItem::GetAlternateRecipientAllowed ( );
__declspec(implementation_key(3013)) void _SharingItem::PutAlternateRecipientAllowed ( VARIANT_BOOL
AlternateRecipientAllowed );
__declspec(implementation_key(3014)) VARIANT_BOOL _SharingItem::GetAutoForwarded ( );
__declspec(implementation_key(3015)) void _SharingItem::PutAutoForwarded ( VARIANT_BOOL AutoForwarded );
__declspec(implementation_key(3016)) _bstr_t _SharingItem::GetBCC ( );
__declspec(implementation_key(3017)) void _SharingItem::PutBCC ( _bstr_t BCC );
__declspec(implementation_key(3018)) _bstr_t _SharingItem::GetCC ( );
__declspec(implementation_key(3019)) void _SharingItem::PutCC ( _bstr_t CC );
__declspec(implementation_key(3020)) DATE _SharingItem::GetDeferredDeliveryTime ( );
__declspec(implementation_key(3021)) void _SharingItem::PutDeferredDeliveryTime ( DATE DeferredDeliveryTime );
__declspec(implementation_key(3022)) VARIANT_BOOL _SharingItem::GetDeleteAfterSubmit ( );
__declspec(implementation_key(3023)) void _SharingItem::PutDeleteAfterSubmit ( VARIANT_BOOL DeleteAfterSubmit );
__declspec(implementation_key(3024)) DATE _SharingItem::GetExpiryTime ( );
__declspec(implementation_key(3025)) void _SharingItem::PutExpiryTime ( DATE ExpiryTime );
__declspec(implementation_key(3026)) DATE _SharingItem::GetFlagDueBy ( );
__declspec(implementation_key(3027)) void _SharingItem::PutFlagDueBy ( DATE FlagDueBy );
__declspec(implementation_key(3028)) _bstr_t _SharingItem::GetFlagRequest ( );
__declspec(implementation_key(3029)) void _SharingItem::PutFlagRequest ( _bstr_t FlagRequest );
__declspec(implementation_key(3030)) enum OlFlagStatus _SharingItem::GetFlagStatus ( );
__declspec(implementation_key(3031)) void _SharingItem::PutFlagStatus ( enum OlFlagStatus FlagStatus );
__declspec(implementation_key(3032)) _bstr_t _SharingItem::GetHTMLBody ( );
__declspec(implementation_key(3033)) void _SharingItem::PutHTMLBody ( _bstr_t HTMLBody );
__declspec(implementation_key(3034)) VARIANT_BOOL _SharingItem::GetOriginatorDeliveryReportRequested ( );
__declspec(implementation_key(3035)) void _SharingItem::PutOriginatorDeliveryReportRequested ( VARIANT_BOOL
OriginatorDeliveryReportRequested );
__declspec(implementation_key(3036)) VARIANT_BOOL _SharingItem::GetReadReceiptRequested ( );
__declspec(implementation_key(3037)) void _SharingItem::PutReadReceiptRequested ( VARIANT_BOOL ReadReceiptRequested );
__declspec(implementation_key(3038)) _bstr_t _SharingItem::GetReceivedByEntryID ( );
__declspec(implementation_key(3039)) _bstr_t _SharingItem::GetReceivedByName ( );
__declspec(implementation_key(3040)) _bstr_t _SharingItem::GetReceivedOnBehalfOfEntryID ( );
__declspec(implementation_key(3041)) _bstr_t _SharingItem::GetReceivedOnBehalfOfName ( );
__declspec(implementation_key(3042)) DATE _SharingItem::GetReceivedTime ( );
__declspec(implementation_key(3043)) VARIANT_BOOL _SharingItem::GetRecipientReassignmentProhibited ( );
__declspec(implementation_key(3044)) void _SharingItem::PutRecipientReassignmentProhibited ( VARIANT_BOOL
RecipientReassignmentProhibited );
__declspec(implementation_key(3045)) RecipientsPtr _SharingItem::GetRecipients ( );
__declspec(implementation_key(3046)) VARIANT_BOOL _SharingItem::GetReminderOverrideDefault ( );
__declspec(implementation_key(3047)) void _SharingItem::PutReminderOverrideDefault ( VARIANT_BOOL
ReminderOverrideDefault );
__declspec(implementation_key(3048)) VARIANT_BOOL _SharingItem::GetReminderPlaySound ( );
__declspec(implementation_key(3049)) void _SharingItem::PutReminderPlaySound ( VARIANT_BOOL ReminderPlaySound );
__declspec(implementation_key(3050)) VARIANT_BOOL _SharingItem::GetReminderSet ( );
__declspec(implementation_key(3051)) void _SharingItem::PutReminderSet ( VARIANT_BOOL ReminderSet );
__declspec(implementation_key(3052)) _bstr_t _SharingItem::GetReminderSoundFile ( );
__declspec(implementation_key(3053)) void _SharingItem::PutReminderSoundFile ( _bstr_t ReminderSoundFile );
__declspec(implementation_key(3054)) DATE _SharingItem::GetReminderTime ( );
__declspec(implementation_key(3055)) void _SharingItem::PutReminderTime ( DATE ReminderTime );
__declspec(implementation_key(3056)) enum OlRemoteStatus _SharingItem::GetRemoteStatus ( );
__declspec(implementation_key(3057)) void _SharingItem::PutRemoteStatus ( enum OlRemoteStatus RemoteStatus );
__declspec(implementation_key(3058)) _bstr_t _SharingItem::GetReplyRecipientNames ( );
__declspec(implementation_key(3059)) RecipientsPtr _SharingItem::GetReplyRecipients ( );
__declspec(implementation_key(3060)) MAPIFolderPtr _SharingItem::GetSaveSentMessageFolder ( );
__declspec(implementation_key(3061)) void _SharingItem::PutRefSaveSentMessageFolder ( struct MAPIFolder *
SaveSentMessageFolder );
__declspec(implementation_key(3062)) _bstr_t _SharingItem::GetSenderName ( );
__declspec(implementation_key(3063)) VARIANT_BOOL _SharingItem::GetSent ( );
__declspec(implementation_key(3064)) DATE _SharingItem::GetSentOn ( );
__declspec(implementation_key(3065)) _bstr_t _SharingItem::GetSentOnBehalfOfName ( );
__declspec(implementation_key(3066)) void _SharingItem::PutSentOnBehalfOfName ( _bstr_t SentOnBehalfOfName );
__declspec(implementation_key(3067)) VARIANT_BOOL _SharingItem::GetSubmitted ( );
__declspec(implementation_key(3068)) _bstr_t _SharingItem::GetTo ( );
__declspec(implementation_key(3069)) void _SharingItem::PutTo ( _bstr_t To );
__declspec(implementation_key(3070)) HRESULT _SharingItem::ClearConversationIndex ( );
__declspec(implementation_key(3071)) _SharingItemPtr _SharingItem::Forward ( );
__declspec(implementation_key(3072)) _MailItemPtr _SharingItem::Reply ( );
__declspec(implementation_key(3073)) _MailItemPtr _SharingItem::ReplyAll ( );
__declspec(implementation_key(3074)) HRESULT _SharingItem::Send ( );
__declspec(implementation_key(3075)) ItemPropertiesPtr _SharingItem::GetItemProperties ( );
__declspec(implementation_key(3076)) enum OlBodyFormat _SharingItem::GetBodyFormat ( );
__declspec(implementation_key(3077)) void _SharingItem::PutBodyFormat ( enum OlBodyFormat BodyFormat );
__declspec(implementation_key(3078)) enum OlDownloadState _SharingItem::GetDownloadState ( );
__declspec(implementation_key(3079)) HRESULT _SharingItem::ShowCategoriesDialog ( );
__declspec(implementation_key(3080)) long _SharingItem::GetInternetCodepage ( );
__declspec(implementation_key(3081)) void _SharingItem::PutInternetCodepage ( long InternetCodepage );
__declspec(implementation_key(3082)) enum OlRemoteStatus _SharingItem::GetMarkForDownload ( );
__declspec(implementation_key(3083)) void _SharingItem::PutMarkForDownload ( enum OlRemoteStatus MarkForDownload );
__declspec(implementation_key(3084)) VARIANT_BOOL _SharingItem::GetIsConflict ( );
__declspec(implementation_key(3085)) HRESULT _SharingItem::AddBusinessCard ( struct _ContactItem * contact );
__declspec(implementation_key(3086)) _bstr_t _SharingItem::GetTaskSubject ( );
__declspec(implementation_key(3087)) void _SharingItem::PutTaskSubject ( _bstr_t TaskSubject );
__declspec(implementation_key(3088)) DATE _SharingItem::GetTaskDueDate ( );
__declspec(implementation_key(3089)) void _SharingItem::PutTaskDueDate ( DATE TaskDueDate );
__declspec(implementation_key(3090)) DATE _SharingItem::GetTaskStartDate ( );
__declspec(implementation_key(3091)) void _SharingItem::PutTaskStartDate ( DATE TaskStartDate );
__declspec(implementation_key(3092)) DATE _SharingItem::GetTaskCompletedDate ( );
__declspec(implementation_key(3093)) void _SharingItem::PutTaskCompletedDate ( DATE TaskCompletedDate );
__declspec(implementation_key(3094)) DATE _SharingItem::GetToDoTaskOrdinal ( );
__declspec(implementation_key(3095)) void _SharingItem::PutToDoTaskOrdinal ( DATE ToDoTaskOrdinal );
__declspec(implementation_key(3096)) enum OlFlagIcon _SharingItem::GetFlagIcon ( );
__declspec(implementation_key(3097)) void _SharingItem::PutFlagIcon ( enum OlFlagIcon FlagIcon );
__declspec(implementation_key(3098)) ConflictsPtr _SharingItem::GetConflicts ( );
__declspec(implementation_key(3099)) _bstr_t _SharingItem::GetSenderEmailAddress ( );
__declspec(implementation_key(3100)) _bstr_t _SharingItem::GetSenderEmailType ( );
__declspec(implementation_key(3101)) VARIANT_BOOL _SharingItem::GetEnableSharedAttachments ( );
__declspec(implementation_key(3102)) void _SharingItem::PutEnableSharedAttachments ( VARIANT_BOOL
EnableSharedAttachments );
__declspec(implementation_key(3103)) enum OlPermission _SharingItem::GetPermission ( );
__declspec(implementation_key(3104)) void _SharingItem::PutPermission ( enum OlPermission Permission );
__declspec(implementation_key(3105)) enum OlPermissionService _SharingItem::GetPermissionService ( );
__declspec(implementation_key(3106)) void _SharingItem::PutPermissionService ( enum OlPermissionService
PermissionService );
__declspec(implementation_key(3107)) HRESULT _SharingItem::MarkAsTask ( enum OlMarkInterval MarkInterval );
__declspec(implementation_key(3108)) HRESULT _SharingItem::ClearTaskFlag ( );
__declspec(implementation_key(3109)) VARIANT_BOOL _SharingItem::GetIsMarkedAsTask ( );
__declspec(implementation_key(3110)) _ApplicationPtr _Explorers::GetApplication ( );
__declspec(implementation_key(3111)) enum OlObjectClass _Explorers::GetClass ( );
__declspec(implementation_key(3112)) _NameSpacePtr _Explorers::GetSession ( );
__declspec(implementation_key(3113)) IDispatchPtr _Explorers::GetParent ( );
__declspec(implementation_key(3114)) long _Explorers::GetCount ( );
__declspec(implementation_key(3115)) _ExplorerPtr _Explorers::Item ( const _variant_t & Index );
__declspec(implementation_key(3116)) _ExplorerPtr _Explorers::Add ( const _variant_t & Folder, enum OlFolderDisplayMode
DisplayMode );
__declspec(implementation_key(3117)) _ApplicationPtr Search::GetApplication ( );
__declspec(implementation_key(3118)) enum OlObjectClass Search::GetClass ( );
__declspec(implementation_key(3119)) _NameSpacePtr Search::GetSession ( );
__declspec(implementation_key(3120)) IDispatchPtr Search::GetParent ( );
__declspec(implementation_key(3121)) _bstr_t Search::GetFilter ( );
__declspec(implementation_key(3122)) VARIANT_BOOL Search::GetIsSynchronous ( );
__declspec(implementation_key(3123)) _ResultsPtr Search::GetResults ( );
__declspec(implementation_key(3124)) VARIANT_BOOL Search::GetSearchSubFolders ( );
__declspec(implementation_key(3125)) HRESULT Search::Stop ( );
__declspec(implementation_key(3126)) _bstr_t Search::GetTag ( );
__declspec(implementation_key(3127)) _bstr_t Search::GetScope ( );
__declspec(implementation_key(3128)) MAPIFolderPtr Search::Save ( _bstr_t Name );
__declspec(implementation_key(3129)) _TablePtr Search::GetTable ( );
__declspec(implementation_key(3130)) _ApplicationPtr _AppointmentItem::GetApplication ( );
__declspec(implementation_key(3131)) enum OlObjectClass _AppointmentItem::GetClass ( );
__declspec(implementation_key(3132)) _NameSpacePtr _AppointmentItem::GetSession ( );
__declspec(implementation_key(3133)) IDispatchPtr _AppointmentItem::GetParent ( );
__declspec(implementation_key(3134)) ActionsPtr _AppointmentItem::GetActions ( );
__declspec(implementation_key(3135)) AttachmentsPtr _AppointmentItem::GetAttachments ( );
__declspec(implementation_key(3136)) _bstr_t _AppointmentItem::GetBillingInformation ( );
__declspec(implementation_key(3137)) void _AppointmentItem::PutBillingInformation ( _bstr_t BillingInformation );
__declspec(implementation_key(3138)) _bstr_t _AppointmentItem::GetBody ( );
__declspec(implementation_key(3139)) void _AppointmentItem::PutBody ( _bstr_t Body );
__declspec(implementation_key(3140)) _bstr_t _AppointmentItem::GetCategories ( );
__declspec(implementation_key(3141)) void _AppointmentItem::PutCategories ( _bstr_t Categories );
__declspec(implementation_key(3142)) _bstr_t _AppointmentItem::GetCompanies ( );
__declspec(implementation_key(3143)) void _AppointmentItem::PutCompanies ( _bstr_t Companies );
__declspec(implementation_key(3144)) _bstr_t _AppointmentItem::GetConversationIndex ( );
__declspec(implementation_key(3145)) _bstr_t _AppointmentItem::GetConversationTopic ( );
__declspec(implementation_key(3146)) DATE _AppointmentItem::GetCreationTime ( );
__declspec(implementation_key(3147)) _bstr_t _AppointmentItem::GetEntryID ( );
__declspec(implementation_key(3148)) FormDescriptionPtr _AppointmentItem::GetFormDescription ( );
__declspec(implementation_key(3149)) _InspectorPtr _AppointmentItem::GetGetInspector ( );
__declspec(implementation_key(3150)) enum OlImportance _AppointmentItem::GetImportance ( );
__declspec(implementation_key(3151)) void _AppointmentItem::PutImportance ( enum OlImportance Importance );
__declspec(implementation_key(3152)) DATE _AppointmentItem::GetLastModificationTime ( );
__declspec(implementation_key(3153)) IUnknownPtr _AppointmentItem::GetMAPIOBJECT ( );
__declspec(implementation_key(3154)) _bstr_t _AppointmentItem::GetMessageClass ( );
__declspec(implementation_key(3155)) void _AppointmentItem::PutMessageClass ( _bstr_t MessageClass );
__declspec(implementation_key(3156)) _bstr_t _AppointmentItem::GetMileage ( );
__declspec(implementation_key(3157)) void _AppointmentItem::PutMileage ( _bstr_t Mileage );
__declspec(implementation_key(3158)) VARIANT_BOOL _AppointmentItem::GetNoAging ( );
__declspec(implementation_key(3159)) void _AppointmentItem::PutNoAging ( VARIANT_BOOL NoAging );
__declspec(implementation_key(3160)) long _AppointmentItem::GetOutlookInternalVersion ( );
__declspec(implementation_key(3161)) _bstr_t _AppointmentItem::GetOutlookVersion ( );
__declspec(implementation_key(3162)) VARIANT_BOOL _AppointmentItem::GetSaved ( );
__declspec(implementation_key(3163)) enum OlSensitivity _AppointmentItem::GetSensitivity ( );
__declspec(implementation_key(3164)) void _AppointmentItem::PutSensitivity ( enum OlSensitivity Sensitivity );
__declspec(implementation_key(3165)) long _AppointmentItem::GetSize ( );
__declspec(implementation_key(3166)) _bstr_t _AppointmentItem::GetSubject ( );
__declspec(implementation_key(3167)) void _AppointmentItem::PutSubject ( _bstr_t Subject );
__declspec(implementation_key(3168)) VARIANT_BOOL _AppointmentItem::GetUnRead ( );
__declspec(implementation_key(3169)) void _AppointmentItem::PutUnRead ( VARIANT_BOOL UnRead );
__declspec(implementation_key(3170)) UserPropertiesPtr _AppointmentItem::GetUserProperties ( );
__declspec(implementation_key(3171)) HRESULT _AppointmentItem::Close ( enum OlInspectorClose SaveMode );
__declspec(implementation_key(3172)) IDispatchPtr _AppointmentItem::Copy ( );
__declspec(implementation_key(3173)) HRESULT _AppointmentItem::Delete ( );
__declspec(implementation_key(3174)) HRESULT _AppointmentItem::Display ( const _variant_t & Modal );
__declspec(implementation_key(3175)) IDispatchPtr _AppointmentItem::Move ( struct MAPIFolder * DestFldr );
__declspec(implementation_key(3176)) HRESULT _AppointmentItem::PrintOut ( );
__declspec(implementation_key(3177)) HRESULT _AppointmentItem::Save ( );
__declspec(implementation_key(3178)) HRESULT _AppointmentItem::SaveAs ( _bstr_t Path, const _variant_t & Type );
__declspec(implementation_key(3179)) VARIANT_BOOL _AppointmentItem::GetAllDayEvent ( );
__declspec(implementation_key(3180)) void _AppointmentItem::PutAllDayEvent ( VARIANT_BOOL AllDayEvent );
__declspec(implementation_key(3181)) enum OlBusyStatus _AppointmentItem::GetBusyStatus ( );
__declspec(implementation_key(3182)) void _AppointmentItem::PutBusyStatus ( enum OlBusyStatus BusyStatus );
__declspec(implementation_key(3183)) long _AppointmentItem::GetDuration ( );
__declspec(implementation_key(3184)) void _AppointmentItem::PutDuration ( long Duration );
__declspec(implementation_key(3185)) DATE _AppointmentItem::GetEnd ( );
__declspec(implementation_key(3186)) void _AppointmentItem::PutEnd ( DATE End );
__declspec(implementation_key(3187)) VARIANT_BOOL _AppointmentItem::GetIsOnlineMeeting ( );
__declspec(implementation_key(3188)) void _AppointmentItem::PutIsOnlineMeeting ( VARIANT_BOOL IsOnlineMeeting );
__declspec(implementation_key(3189)) VARIANT_BOOL _AppointmentItem::GetIsRecurring ( );
__declspec(implementation_key(3190)) _bstr_t _AppointmentItem::GetLocation ( );
__declspec(implementation_key(3191)) void _AppointmentItem::PutLocation ( _bstr_t Location );
__declspec(implementation_key(3192)) enum OlMeetingStatus _AppointmentItem::GetMeetingStatus ( );
__declspec(implementation_key(3193)) void _AppointmentItem::PutMeetingStatus ( enum OlMeetingStatus MeetingStatus );
__declspec(implementation_key(3194)) VARIANT_BOOL _AppointmentItem::GetNetMeetingAutoStart ( );
__declspec(implementation_key(3195)) void _AppointmentItem::PutNetMeetingAutoStart ( VARIANT_BOOL NetMeetingAutoStart );
__declspec(implementation_key(3196)) _bstr_t _AppointmentItem::GetNetMeetingOrganizerAlias ( );
__declspec(implementation_key(3197)) void _AppointmentItem::PutNetMeetingOrganizerAlias ( _bstr_t
NetMeetingOrganizerAlias );
__declspec(implementation_key(3198)) _bstr_t _AppointmentItem::GetNetMeetingServer ( );
__declspec(implementation_key(3199)) void _AppointmentItem::PutNetMeetingServer ( _bstr_t NetMeetingServer );
__declspec(implementation_key(3200)) enum OlNetMeetingType _AppointmentItem::GetNetMeetingType ( );
__declspec(implementation_key(3201)) void _AppointmentItem::PutNetMeetingType ( enum OlNetMeetingType NetMeetingType );
__declspec(implementation_key(3202)) _bstr_t _AppointmentItem::GetOptionalAttendees ( );
__declspec(implementation_key(3203)) void _AppointmentItem::PutOptionalAttendees ( _bstr_t OptionalAttendees );
__declspec(implementation_key(3204)) _bstr_t _AppointmentItem::GetOrganizer ( );
__declspec(implementation_key(3205)) RecipientsPtr _AppointmentItem::GetRecipients ( );
__declspec(implementation_key(3206)) enum OlRecurrenceState _AppointmentItem::GetRecurrenceState ( );
__declspec(implementation_key(3207)) long _AppointmentItem::GetReminderMinutesBeforeStart ( );
__declspec(implementation_key(3208)) void _AppointmentItem::PutReminderMinutesBeforeStart ( long
ReminderMinutesBeforeStart );
__declspec(implementation_key(3209)) VARIANT_BOOL _AppointmentItem::GetReminderOverrideDefault ( );
__declspec(implementation_key(3210)) void _AppointmentItem::PutReminderOverrideDefault ( VARIANT_BOOL
ReminderOverrideDefault );
__declspec(implementation_key(3211)) VARIANT_BOOL _AppointmentItem::GetReminderPlaySound ( );
__declspec(implementation_key(3212)) void _AppointmentItem::PutReminderPlaySound ( VARIANT_BOOL ReminderPlaySound );
__declspec(implementation_key(3213)) VARIANT_BOOL _AppointmentItem::GetReminderSet ( );
__declspec(implementation_key(3214)) void _AppointmentItem::PutReminderSet ( VARIANT_BOOL ReminderSet );
__declspec(implementation_key(3215)) _bstr_t _AppointmentItem::GetReminderSoundFile ( );
__declspec(implementation_key(3216)) void _AppointmentItem::PutReminderSoundFile ( _bstr_t ReminderSoundFile );
__declspec(implementation_key(3217)) DATE _AppointmentItem::GetReplyTime ( );
__declspec(implementation_key(3218)) void _AppointmentItem::PutReplyTime ( DATE ReplyTime );
__declspec(implementation_key(3219)) _bstr_t _AppointmentItem::GetRequiredAttendees ( );
__declspec(implementation_key(3220)) void _AppointmentItem::PutRequiredAttendees ( _bstr_t RequiredAttendees );
__declspec(implementation_key(3221)) _bstr_t _AppointmentItem::GetResources ( );
__declspec(implementation_key(3222)) void _AppointmentItem::PutResources ( _bstr_t Resources );
__declspec(implementation_key(3223)) VARIANT_BOOL _AppointmentItem::GetResponseRequested ( );
__declspec(implementation_key(3224)) void _AppointmentItem::PutResponseRequested ( VARIANT_BOOL ResponseRequested );
__declspec(implementation_key(3225)) enum OlResponseStatus _AppointmentItem::GetResponseStatus ( );
__declspec(implementation_key(3226)) DATE _AppointmentItem::GetStart ( );
__declspec(implementation_key(3227)) void _AppointmentItem::PutStart ( DATE Start );
__declspec(implementation_key(3228)) HRESULT _AppointmentItem::ClearRecurrencePattern ( );
__declspec(implementation_key(3229)) _MailItemPtr _AppointmentItem::ForwardAsVcal ( );
__declspec(implementation_key(3230)) RecurrencePatternPtr _AppointmentItem::GetRecurrencePattern ( );
__declspec(implementation_key(3231)) _MeetingItemPtr _AppointmentItem::Respond ( enum OlMeetingResponse Response, const
_variant_t & fNoUI, const _variant_t & fAdditionalTextDialog );
__declspec(implementation_key(3232)) HRESULT _AppointmentItem::Send ( );
__declspec(implementation_key(3233)) _bstr_t _AppointmentItem::GetNetMeetingDocPathName ( );
__declspec(implementation_key(3234)) void _AppointmentItem::PutNetMeetingDocPathName ( _bstr_t NetMeetingDocPathName );
__declspec(implementation_key(3235)) _bstr_t _AppointmentItem::GetNetShowURL ( );
__declspec(implementation_key(3236)) void _AppointmentItem::PutNetShowURL ( _bstr_t NetShowURL );
__declspec(implementation_key(3237)) LinksPtr _AppointmentItem::GetLinks ( );
__declspec(implementation_key(3238)) VARIANT_BOOL _AppointmentItem::GetConferenceServerAllowExternal ( );
__declspec(implementation_key(3239)) void _AppointmentItem::PutConferenceServerAllowExternal ( VARIANT_BOOL
ConferenceServerAllowExternal );
__declspec(implementation_key(3240)) _bstr_t _AppointmentItem::GetConferenceServerPassword ( );
__declspec(implementation_key(3241)) void _AppointmentItem::PutConferenceServerPassword ( _bstr_t
ConferenceServerPassword );
__declspec(implementation_key(3242)) ItemPropertiesPtr _AppointmentItem::GetItemProperties ( );
__declspec(implementation_key(3243)) enum OlDownloadState _AppointmentItem::GetDownloadState ( );
__declspec(implementation_key(3244)) HRESULT _AppointmentItem::ShowCategoriesDialog ( );
__declspec(implementation_key(3245)) long _AppointmentItem::GetInternetCodepage ( );
__declspec(implementation_key(3246)) void _AppointmentItem::PutInternetCodepage ( long InternetCodepage );
__declspec(implementation_key(3247)) enum OlRemoteStatus _AppointmentItem::GetMarkForDownload ( );
__declspec(implementation_key(3248)) void _AppointmentItem::PutMarkForDownload ( enum OlRemoteStatus MarkForDownload );
__declspec(implementation_key(3249)) VARIANT_BOOL _AppointmentItem::GetIsConflict ( );
__declspec(implementation_key(3250)) _bstr_t _AppointmentItem::GetMeetingWorkspaceURL ( );
__declspec(implementation_key(3251)) VARIANT_BOOL _AppointmentItem::GetAutoResolvedWinner ( );
__declspec(implementation_key(3252)) ConflictsPtr _AppointmentItem::GetConflicts ( );
__declspec(implementation_key(3253)) _PropertyAccessorPtr _AppointmentItem::GetPropertyAccessor ( );
__declspec(implementation_key(3254)) _AccountPtr _AppointmentItem::GetSendUsingAccount ( );
__declspec(implementation_key(3255)) void _AppointmentItem::PutSendUsingAccount ( struct _Account * SendUsingAccount );
__declspec(implementation_key(3256)) _bstr_t _AppointmentItem::GetGlobalAppointmentID ( );
__declspec(implementation_key(3257)) VARIANT_BOOL _AppointmentItem::GetForceUpdateToAllAttendees ( );
__declspec(implementation_key(3258)) void _AppointmentItem::PutForceUpdateToAllAttendees ( VARIANT_BOOL
ForceUpdateToAllAttendees );
__declspec(implementation_key(3259)) DATE _AppointmentItem::GetStartUTC ( );
__declspec(implementation_key(3260)) void _AppointmentItem::PutStartUTC ( DATE StartUTC );
__declspec(implementation_key(3261)) DATE _AppointmentItem::GetEndUTC ( );
__declspec(implementation_key(3262)) void _AppointmentItem::PutEndUTC ( DATE EndUTC );
__declspec(implementation_key(3263)) DATE _AppointmentItem::GetStartInStartTimeZone ( );
__declspec(implementation_key(3264)) void _AppointmentItem::PutStartInStartTimeZone ( DATE StartInStartTimeZone );
__declspec(implementation_key(3265)) DATE _AppointmentItem::GetEndInEndTimeZone ( );
__declspec(implementation_key(3266)) void _AppointmentItem::PutEndInEndTimeZone ( DATE EndInEndTimeZone );
__declspec(implementation_key(3267)) _TimeZonePtr _AppointmentItem::GetStartTimeZone ( );
__declspec(implementation_key(3268)) void _AppointmentItem::PutStartTimeZone ( struct _TimeZone * StartTimeZone );
__declspec(implementation_key(3269)) _TimeZonePtr _AppointmentItem::GetEndTimeZone ( );
__declspec(implementation_key(3270)) void _AppointmentItem::PutEndTimeZone ( struct _TimeZone * EndTimeZone );
__declspec(implementation_key(3271)) _ApplicationPtr _MeetingItem::GetApplication ( );
__declspec(implementation_key(3272)) enum OlObjectClass _MeetingItem::GetClass ( );
__declspec(implementation_key(3273)) _NameSpacePtr _MeetingItem::GetSession ( );
__declspec(implementation_key(3274)) IDispatchPtr _MeetingItem::GetParent ( );
__declspec(implementation_key(3275)) ActionsPtr _MeetingItem::GetActions ( );
__declspec(implementation_key(3276)) AttachmentsPtr _MeetingItem::GetAttachments ( );
__declspec(implementation_key(3277)) _bstr_t _MeetingItem::GetBillingInformation ( );
__declspec(implementation_key(3278)) void _MeetingItem::PutBillingInformation ( _bstr_t BillingInformation );
__declspec(implementation_key(3279)) _bstr_t _MeetingItem::GetBody ( );
__declspec(implementation_key(3280)) void _MeetingItem::PutBody ( _bstr_t Body );
__declspec(implementation_key(3281)) _bstr_t _MeetingItem::GetCategories ( );
__declspec(implementation_key(3282)) void _MeetingItem::PutCategories ( _bstr_t Categories );
__declspec(implementation_key(3283)) _bstr_t _MeetingItem::GetCompanies ( );
__declspec(implementation_key(3284)) void _MeetingItem::PutCompanies ( _bstr_t Companies );
__declspec(implementation_key(3285)) _bstr_t _MeetingItem::GetConversationIndex ( );
__declspec(implementation_key(3286)) _bstr_t _MeetingItem::GetConversationTopic ( );
__declspec(implementation_key(3287)) DATE _MeetingItem::GetCreationTime ( );
__declspec(implementation_key(3288)) _bstr_t _MeetingItem::GetEntryID ( );
__declspec(implementation_key(3289)) FormDescriptionPtr _MeetingItem::GetFormDescription ( );
__declspec(implementation_key(3290)) _InspectorPtr _MeetingItem::GetGetInspector ( );
__declspec(implementation_key(3291)) enum OlImportance _MeetingItem::GetImportance ( );
__declspec(implementation_key(3292)) void _MeetingItem::PutImportance ( enum OlImportance Importance );
__declspec(implementation_key(3293)) DATE _MeetingItem::GetLastModificationTime ( );
__declspec(implementation_key(3294)) IUnknownPtr _MeetingItem::GetMAPIOBJECT ( );
__declspec(implementation_key(3295)) _bstr_t _MeetingItem::GetMessageClass ( );
__declspec(implementation_key(3296)) void _MeetingItem::PutMessageClass ( _bstr_t MessageClass );
__declspec(implementation_key(3297)) _bstr_t _MeetingItem::GetMileage ( );
__declspec(implementation_key(3298)) void _MeetingItem::PutMileage ( _bstr_t Mileage );
__declspec(implementation_key(3299)) VARIANT_BOOL _MeetingItem::GetNoAging ( );
__declspec(implementation_key(3300)) void _MeetingItem::PutNoAging ( VARIANT_BOOL NoAging );
__declspec(implementation_key(3301)) long _MeetingItem::GetOutlookInternalVersion ( );
__declspec(implementation_key(3302)) _bstr_t _MeetingItem::GetOutlookVersion ( );
__declspec(implementation_key(3303)) VARIANT_BOOL _MeetingItem::GetSaved ( );
__declspec(implementation_key(3304)) enum OlSensitivity _MeetingItem::GetSensitivity ( );
__declspec(implementation_key(3305)) void _MeetingItem::PutSensitivity ( enum OlSensitivity Sensitivity );
__declspec(implementation_key(3306)) long _MeetingItem::GetSize ( );
__declspec(implementation_key(3307)) _bstr_t _MeetingItem::GetSubject ( );
__declspec(implementation_key(3308)) void _MeetingItem::PutSubject ( _bstr_t Subject );
__declspec(implementation_key(3309)) VARIANT_BOOL _MeetingItem::GetUnRead ( );
__declspec(implementation_key(3310)) void _MeetingItem::PutUnRead ( VARIANT_BOOL UnRead );
__declspec(implementation_key(3311)) UserPropertiesPtr _MeetingItem::GetUserProperties ( );
__declspec(implementation_key(3312)) HRESULT _MeetingItem::Close ( enum OlInspectorClose SaveMode );
__declspec(implementation_key(3313)) IDispatchPtr _MeetingItem::Copy ( );
__declspec(implementation_key(3314)) HRESULT _MeetingItem::Delete ( );
__declspec(implementation_key(3315)) HRESULT _MeetingItem::Display ( const _variant_t & Modal );
__declspec(implementation_key(3316)) IDispatchPtr _MeetingItem::Move ( struct MAPIFolder * DestFldr );
__declspec(implementation_key(3317)) HRESULT _MeetingItem::PrintOut ( );
__declspec(implementation_key(3318)) HRESULT _MeetingItem::Save ( );
__declspec(implementation_key(3319)) HRESULT _MeetingItem::SaveAs ( _bstr_t Path, const _variant_t & Type );
__declspec(implementation_key(3320)) VARIANT_BOOL _MeetingItem::GetAutoForwarded ( );
__declspec(implementation_key(3321)) void _MeetingItem::PutAutoForwarded ( VARIANT_BOOL AutoForwarded );
__declspec(implementation_key(3322)) DATE _MeetingItem::GetDeferredDeliveryTime ( );
__declspec(implementation_key(3323)) void _MeetingItem::PutDeferredDeliveryTime ( DATE DeferredDeliveryTime );
__declspec(implementation_key(3324)) VARIANT_BOOL _MeetingItem::GetDeleteAfterSubmit ( );
__declspec(implementation_key(3325)) void _MeetingItem::PutDeleteAfterSubmit ( VARIANT_BOOL DeleteAfterSubmit );
__declspec(implementation_key(3326)) DATE _MeetingItem::GetExpiryTime ( );
__declspec(implementation_key(3327)) void _MeetingItem::PutExpiryTime ( DATE ExpiryTime );
__declspec(implementation_key(3328)) DATE _MeetingItem::GetFlagDueBy ( );
__declspec(implementation_key(3329)) void _MeetingItem::PutFlagDueBy ( DATE FlagDueBy );
__declspec(implementation_key(3330)) _bstr_t _MeetingItem::GetFlagRequest ( );
__declspec(implementation_key(3331)) void _MeetingItem::PutFlagRequest ( _bstr_t FlagRequest );
__declspec(implementation_key(3332)) enum OlFlagStatus _MeetingItem::GetFlagStatus ( );
__declspec(implementation_key(3333)) void _MeetingItem::PutFlagStatus ( enum OlFlagStatus FlagStatus );
__declspec(implementation_key(3334)) VARIANT_BOOL _MeetingItem::GetOriginatorDeliveryReportRequested ( );
__declspec(implementation_key(3335)) void _MeetingItem::PutOriginatorDeliveryReportRequested ( VARIANT_BOOL
OriginatorDeliveryReportRequested );
__declspec(implementation_key(3336)) DATE _MeetingItem::GetReceivedTime ( );
__declspec(implementation_key(3337)) void _MeetingItem::PutReceivedTime ( DATE ReceivedTime );
__declspec(implementation_key(3338)) RecipientsPtr _MeetingItem::GetRecipients ( );
__declspec(implementation_key(3339)) VARIANT_BOOL _MeetingItem::GetReminderSet ( );
__declspec(implementation_key(3340)) void _MeetingItem::PutReminderSet ( VARIANT_BOOL ReminderSet );
__declspec(implementation_key(3341)) DATE _MeetingItem::GetReminderTime ( );
__declspec(implementation_key(3342)) void _MeetingItem::PutReminderTime ( DATE ReminderTime );
__declspec(implementation_key(3343)) RecipientsPtr _MeetingItem::GetReplyRecipients ( );
__declspec(implementation_key(3344)) MAPIFolderPtr _MeetingItem::GetSaveSentMessageFolder ( );
__declspec(implementation_key(3345)) void _MeetingItem::PutRefSaveSentMessageFolder ( struct MAPIFolder *
SaveSentMessageFolder );
__declspec(implementation_key(3346)) _bstr_t _MeetingItem::GetSenderName ( );
__declspec(implementation_key(3347)) VARIANT_BOOL _MeetingItem::GetSent ( );
__declspec(implementation_key(3348)) DATE _MeetingItem::GetSentOn ( );
__declspec(implementation_key(3349)) VARIANT_BOOL _MeetingItem::GetSubmitted ( );
__declspec(implementation_key(3350)) _MeetingItemPtr _MeetingItem::Forward ( );
__declspec(implementation_key(3351)) _AppointmentItemPtr _MeetingItem::GetAssociatedAppointment ( VARIANT_BOOL
AddToCalendar );
__declspec(implementation_key(3352)) _MailItemPtr _MeetingItem::Reply ( );
__declspec(implementation_key(3353)) _MailItemPtr _MeetingItem::ReplyAll ( );
__declspec(implementation_key(3354)) HRESULT _MeetingItem::Send ( );
__declspec(implementation_key(3355)) LinksPtr _MeetingItem::GetLinks ( );
__declspec(implementation_key(3356)) enum OlDownloadState _MeetingItem::GetDownloadState ( );
__declspec(implementation_key(3357)) HRESULT _MeetingItem::ShowCategoriesDialog ( );
__declspec(implementation_key(3358)) ItemPropertiesPtr _MeetingItem::GetItemProperties ( );
__declspec(implementation_key(3359)) enum OlRemoteStatus _MeetingItem::GetMarkForDownload ( );
__declspec(implementation_key(3360)) void _MeetingItem::PutMarkForDownload ( enum OlRemoteStatus MarkForDownload );
__declspec(implementation_key(3361)) VARIANT_BOOL _MeetingItem::GetIsConflict ( );
__declspec(implementation_key(3362)) _bstr_t _MeetingItem::GetMeetingWorkspaceURL ( );
__declspec(implementation_key(3363)) enum OlFlagIcon _MeetingItem::GetFlagIcon ( );
__declspec(implementation_key(3364)) void _MeetingItem::PutFlagIcon ( enum OlFlagIcon FlagIcon );
__declspec(implementation_key(3365)) VARIANT_BOOL _MeetingItem::GetAutoResolvedWinner ( );
__declspec(implementation_key(3366)) ConflictsPtr _MeetingItem::GetConflicts ( );
__declspec(implementation_key(3367)) _bstr_t _MeetingItem::GetSenderEmailAddress ( );
__declspec(implementation_key(3368)) _bstr_t _MeetingItem::GetSenderEmailType ( );
__declspec(implementation_key(3369)) _PropertyAccessorPtr _MeetingItem::GetPropertyAccessor ( );
__declspec(implementation_key(3370)) _ApplicationPtr _DistListItem::GetApplication ( );
__declspec(implementation_key(3371)) enum OlObjectClass _DistListItem::GetClass ( );
__declspec(implementation_key(3372)) _NameSpacePtr _DistListItem::GetSession ( );
__declspec(implementation_key(3373)) IDispatchPtr _DistListItem::GetParent ( );
__declspec(implementation_key(3374)) ActionsPtr _DistListItem::GetActions ( );
__declspec(implementation_key(3375)) AttachmentsPtr _DistListItem::GetAttachments ( );
__declspec(implementation_key(3376)) _bstr_t _DistListItem::GetBillingInformation ( );
__declspec(implementation_key(3377)) void _DistListItem::PutBillingInformation ( _bstr_t BillingInformation );
__declspec(implementation_key(3378)) _bstr_t _DistListItem::GetBody ( );
__declspec(implementation_key(3379)) void _DistListItem::PutBody ( _bstr_t Body );
__declspec(implementation_key(3380)) _bstr_t _DistListItem::GetCategories ( );
__declspec(implementation_key(3381)) void _DistListItem::PutCategories ( _bstr_t Categories );
__declspec(implementation_key(3382)) _bstr_t _DistListItem::GetCompanies ( );
__declspec(implementation_key(3383)) void _DistListItem::PutCompanies ( _bstr_t Companies );
__declspec(implementation_key(3384)) _bstr_t _DistListItem::GetConversationIndex ( );
__declspec(implementation_key(3385)) _bstr_t _DistListItem::GetConversationTopic ( );
__declspec(implementation_key(3386)) DATE _DistListItem::GetCreationTime ( );
__declspec(implementation_key(3387)) _bstr_t _DistListItem::GetEntryID ( );
__declspec(implementation_key(3388)) FormDescriptionPtr _DistListItem::GetFormDescription ( );
__declspec(implementation_key(3389)) _InspectorPtr _DistListItem::GetGetInspector ( );
__declspec(implementation_key(3390)) enum OlImportance _DistListItem::GetImportance ( );
__declspec(implementation_key(3391)) void _DistListItem::PutImportance ( enum OlImportance Importance );
__declspec(implementation_key(3392)) DATE _DistListItem::GetLastModificationTime ( );
__declspec(implementation_key(3393)) IUnknownPtr _DistListItem::GetMAPIOBJECT ( );
__declspec(implementation_key(3394)) _bstr_t _DistListItem::GetMessageClass ( );
__declspec(implementation_key(3395)) void _DistListItem::PutMessageClass ( _bstr_t MessageClass );
__declspec(implementation_key(3396)) _bstr_t _DistListItem::GetMileage ( );
__declspec(implementation_key(3397)) void _DistListItem::PutMileage ( _bstr_t Mileage );
__declspec(implementation_key(3398)) VARIANT_BOOL _DistListItem::GetNoAging ( );
__declspec(implementation_key(3399)) void _DistListItem::PutNoAging ( VARIANT_BOOL NoAging );
__declspec(implementation_key(3400)) long _DistListItem::GetOutlookInternalVersion ( );
__declspec(implementation_key(3401)) _bstr_t _DistListItem::GetOutlookVersion ( );
__declspec(implementation_key(3402)) VARIANT_BOOL _DistListItem::GetSaved ( );
__declspec(implementation_key(3403)) enum OlSensitivity _DistListItem::GetSensitivity ( );
__declspec(implementation_key(3404)) void _DistListItem::PutSensitivity ( enum OlSensitivity Sensitivity );
__declspec(implementation_key(3405)) long _DistListItem::GetSize ( );
__declspec(implementation_key(3406)) _bstr_t _DistListItem::GetSubject ( );
__declspec(implementation_key(3407)) void _DistListItem::PutSubject ( _bstr_t Subject );
__declspec(implementation_key(3408)) VARIANT_BOOL _DistListItem::GetUnRead ( );
__declspec(implementation_key(3409)) void _DistListItem::PutUnRead ( VARIANT_BOOL UnRead );
__declspec(implementation_key(3410)) UserPropertiesPtr _DistListItem::GetUserProperties ( );
__declspec(implementation_key(3411)) HRESULT _DistListItem::Close ( enum OlInspectorClose SaveMode );
__declspec(implementation_key(3412)) IDispatchPtr _DistListItem::Copy ( );
__declspec(implementation_key(3413)) HRESULT _DistListItem::Delete ( );
__declspec(implementation_key(3414)) HRESULT _DistListItem::Display ( const _variant_t & Modal );
__declspec(implementation_key(3415)) IDispatchPtr _DistListItem::Move ( struct MAPIFolder * DestFldr );
__declspec(implementation_key(3416)) HRESULT _DistListItem::PrintOut ( );
__declspec(implementation_key(3417)) HRESULT _DistListItem::Save ( );
__declspec(implementation_key(3418)) HRESULT _DistListItem::SaveAs ( _bstr_t Path, const _variant_t & Type );
__declspec(implementation_key(3419)) _bstr_t _DistListItem::GetDLName ( );
__declspec(implementation_key(3420)) void _DistListItem::PutDLName ( _bstr_t DLName );
__declspec(implementation_key(3421)) long _DistListItem::GetMemberCount ( );
__declspec(implementation_key(3422)) long _DistListItem::GetCheckSum ( );
__declspec(implementation_key(3423)) _variant_t _DistListItem::GetMembers ( );
__declspec(implementation_key(3424)) void _DistListItem::PutMembers ( const _variant_t & Members );
__declspec(implementation_key(3425)) _variant_t _DistListItem::GetOneOffMembers ( );
__declspec(implementation_key(3426)) void _DistListItem::PutOneOffMembers ( const _variant_t & OneOffMembers );
__declspec(implementation_key(3427)) LinksPtr _DistListItem::GetLinks ( );
__declspec(implementation_key(3428)) HRESULT _DistListItem::AddMembers ( struct Recipients * Recipients );
__declspec(implementation_key(3429)) HRESULT _DistListItem::RemoveMembers ( struct Recipients * Recipients );
__declspec(implementation_key(3430)) RecipientPtr _DistListItem::GetMember ( long Index );
__declspec(implementation_key(3431)) enum OlDownloadState _DistListItem::GetDownloadState ( );
__declspec(implementation_key(3432)) HRESULT _DistListItem::ShowCategoriesDialog ( );
__declspec(implementation_key(3433)) HRESULT _DistListItem::AddMember ( struct Recipient * Recipient );
__declspec(implementation_key(3434)) HRESULT _DistListItem::RemoveMember ( struct Recipient * Recipient );
__declspec(implementation_key(3435)) ItemPropertiesPtr _DistListItem::GetItemProperties ( );
__declspec(implementation_key(3436)) enum OlRemoteStatus _DistListItem::GetMarkForDownload ( );
__declspec(implementation_key(3437)) void _DistListItem::PutMarkForDownload ( enum OlRemoteStatus MarkForDownload );
__declspec(implementation_key(3438)) VARIANT_BOOL _DistListItem::GetIsConflict ( );
__declspec(implementation_key(3439)) VARIANT_BOOL _DistListItem::GetAutoResolvedWinner ( );
__declspec(implementation_key(3440)) ConflictsPtr _DistListItem::GetConflicts ( );
__declspec(implementation_key(3441)) _PropertyAccessorPtr _DistListItem::GetPropertyAccessor ( );
__declspec(implementation_key(3442)) _bstr_t _DistListItem::GetTaskSubject ( );
__declspec(implementation_key(3443)) void _DistListItem::PutTaskSubject ( _bstr_t TaskSubject );
__declspec(implementation_key(3444)) DATE _DistListItem::GetTaskDueDate ( );
__declspec(implementation_key(3445)) void _DistListItem::PutTaskDueDate ( DATE TaskDueDate );
__declspec(implementation_key(3446)) DATE _DistListItem::GetTaskStartDate ( );
__declspec(implementation_key(3447)) void _DistListItem::PutTaskStartDate ( DATE TaskStartDate );
__declspec(implementation_key(3448)) DATE _DistListItem::GetTaskCompletedDate ( );
__declspec(implementation_key(3449)) void _DistListItem::PutTaskCompletedDate ( DATE TaskCompletedDate );
__declspec(implementation_key(3450)) DATE _DistListItem::GetToDoTaskOrdinal ( );
__declspec(implementation_key(3451)) void _DistListItem::PutToDoTaskOrdinal ( DATE ToDoTaskOrdinal );
__declspec(implementation_key(3452)) VARIANT_BOOL _DistListItem::GetReminderOverrideDefault ( );
__declspec(implementation_key(3453)) void _DistListItem::PutReminderOverrideDefault ( VARIANT_BOOL
ReminderOverrideDefault );
__declspec(implementation_key(3454)) VARIANT_BOOL _DistListItem::GetReminderPlaySound ( );
__declspec(implementation_key(3455)) void _DistListItem::PutReminderPlaySound ( VARIANT_BOOL ReminderPlaySound );
__declspec(implementation_key(3456)) VARIANT_BOOL _DistListItem::GetReminderSet ( );
__declspec(implementation_key(3457)) void _DistListItem::PutReminderSet ( VARIANT_BOOL ReminderSet );
__declspec(implementation_key(3458)) _bstr_t _DistListItem::GetReminderSoundFile ( );
__declspec(implementation_key(3459)) void _DistListItem::PutReminderSoundFile ( _bstr_t ReminderSoundFile );
__declspec(implementation_key(3460)) DATE _DistListItem::GetReminderTime ( );
__declspec(implementation_key(3461)) void _DistListItem::PutReminderTime ( DATE ReminderTime );
__declspec(implementation_key(3462)) HRESULT _DistListItem::MarkAsTask ( enum OlMarkInterval MarkInterval );
__declspec(implementation_key(3463)) HRESULT _DistListItem::ClearTaskFlag ( );
__declspec(implementation_key(3464)) VARIANT_BOOL _DistListItem::GetIsMarkedAsTask ( );
__declspec(implementation_key(3465)) _ApplicationPtr _DocumentItem::GetApplication ( );
__declspec(implementation_key(3466)) enum OlObjectClass _DocumentItem::GetClass ( );
__declspec(implementation_key(3467)) _NameSpacePtr _DocumentItem::GetSession ( );
__declspec(implementation_key(3468)) IDispatchPtr _DocumentItem::GetParent ( );
__declspec(implementation_key(3469)) ActionsPtr _DocumentItem::GetActions ( );
__declspec(implementation_key(3470)) AttachmentsPtr _DocumentItem::GetAttachments ( );
__declspec(implementation_key(3471)) _bstr_t _DocumentItem::GetBillingInformation ( );
__declspec(implementation_key(3472)) void _DocumentItem::PutBillingInformation ( _bstr_t BillingInformation );
__declspec(implementation_key(3473)) _bstr_t _DocumentItem::GetBody ( );
__declspec(implementation_key(3474)) void _DocumentItem::PutBody ( _bstr_t Body );
__declspec(implementation_key(3475)) _bstr_t _DocumentItem::GetCategories ( );
__declspec(implementation_key(3476)) void _DocumentItem::PutCategories ( _bstr_t Categories );
__declspec(implementation_key(3477)) _bstr_t _DocumentItem::GetCompanies ( );
__declspec(implementation_key(3478)) void _DocumentItem::PutCompanies ( _bstr_t Companies );
__declspec(implementation_key(3479)) _bstr_t _DocumentItem::GetConversationIndex ( );
__declspec(implementation_key(3480)) _bstr_t _DocumentItem::GetConversationTopic ( );
__declspec(implementation_key(3481)) DATE _DocumentItem::GetCreationTime ( );
__declspec(implementation_key(3482)) _bstr_t _DocumentItem::GetEntryID ( );
__declspec(implementation_key(3483)) FormDescriptionPtr _DocumentItem::GetFormDescription ( );
__declspec(implementation_key(3484)) _InspectorPtr _DocumentItem::GetGetInspector ( );
__declspec(implementation_key(3485)) enum OlImportance _DocumentItem::GetImportance ( );
__declspec(implementation_key(3486)) void _DocumentItem::PutImportance ( enum OlImportance Importance );
__declspec(implementation_key(3487)) DATE _DocumentItem::GetLastModificationTime ( );
__declspec(implementation_key(3488)) IUnknownPtr _DocumentItem::GetMAPIOBJECT ( );
__declspec(implementation_key(3489)) _bstr_t _DocumentItem::GetMessageClass ( );
__declspec(implementation_key(3490)) void _DocumentItem::PutMessageClass ( _bstr_t MessageClass );
__declspec(implementation_key(3491)) _bstr_t _DocumentItem::GetMileage ( );
__declspec(implementation_key(3492)) void _DocumentItem::PutMileage ( _bstr_t Mileage );
__declspec(implementation_key(3493)) VARIANT_BOOL _DocumentItem::GetNoAging ( );
__declspec(implementation_key(3494)) void _DocumentItem::PutNoAging ( VARIANT_BOOL NoAging );
__declspec(implementation_key(3495)) long _DocumentItem::GetOutlookInternalVersion ( );
__declspec(implementation_key(3496)) _bstr_t _DocumentItem::GetOutlookVersion ( );
__declspec(implementation_key(3497)) VARIANT_BOOL _DocumentItem::GetSaved ( );
__declspec(implementation_key(3498)) enum OlSensitivity _DocumentItem::GetSensitivity ( );
__declspec(implementation_key(3499)) void _DocumentItem::PutSensitivity ( enum OlSensitivity Sensitivity );
__declspec(implementation_key(3500)) long _DocumentItem::GetSize ( );
__declspec(implementation_key(3501)) _bstr_t _DocumentItem::GetSubject ( );
__declspec(implementation_key(3502)) void _DocumentItem::PutSubject ( _bstr_t Subject );
__declspec(implementation_key(3503)) VARIANT_BOOL _DocumentItem::GetUnRead ( );
__declspec(implementation_key(3504)) void _DocumentItem::PutUnRead ( VARIANT_BOOL UnRead );
__declspec(implementation_key(3505)) UserPropertiesPtr _DocumentItem::GetUserProperties ( );
__declspec(implementation_key(3506)) HRESULT _DocumentItem::Close ( enum OlInspectorClose SaveMode );
__declspec(implementation_key(3507)) IDispatchPtr _DocumentItem::Copy ( );
__declspec(implementation_key(3508)) HRESULT _DocumentItem::Delete ( );
__declspec(implementation_key(3509)) HRESULT _DocumentItem::Display ( const _variant_t & Modal );
__declspec(implementation_key(3510)) IDispatchPtr _DocumentItem::Move ( struct MAPIFolder * DestFldr );
__declspec(implementation_key(3511)) HRESULT _DocumentItem::PrintOut ( );
__declspec(implementation_key(3512)) HRESULT _DocumentItem::Save ( );
__declspec(implementation_key(3513)) HRESULT _DocumentItem::SaveAs ( _bstr_t Path, const _variant_t & Type );
__declspec(implementation_key(3514)) LinksPtr _DocumentItem::GetLinks ( );
__declspec(implementation_key(3515)) enum OlDownloadState _DocumentItem::GetDownloadState ( );
__declspec(implementation_key(3516)) HRESULT _DocumentItem::ShowCategoriesDialog ( );
__declspec(implementation_key(3517)) ItemPropertiesPtr _DocumentItem::GetItemProperties ( );
__declspec(implementation_key(3518)) enum OlRemoteStatus _DocumentItem::GetMarkForDownload ( );
__declspec(implementation_key(3519)) void _DocumentItem::PutMarkForDownload ( enum OlRemoteStatus MarkForDownload );
__declspec(implementation_key(3520)) VARIANT_BOOL _DocumentItem::GetIsConflict ( );
__declspec(implementation_key(3521)) VARIANT_BOOL _DocumentItem::GetAutoResolvedWinner ( );
__declspec(implementation_key(3522)) ConflictsPtr _DocumentItem::GetConflicts ( );
__declspec(implementation_key(3523)) _PropertyAccessorPtr _DocumentItem::GetPropertyAccessor ( );
__declspec(implementation_key(3524)) _ApplicationPtr _JournalItem::GetApplication ( );
__declspec(implementation_key(3525)) enum OlObjectClass _JournalItem::GetClass ( );
__declspec(implementation_key(3526)) _NameSpacePtr _JournalItem::GetSession ( );
__declspec(implementation_key(3527)) IDispatchPtr _JournalItem::GetParent ( );
__declspec(implementation_key(3528)) ActionsPtr _JournalItem::GetActions ( );
__declspec(implementation_key(3529)) AttachmentsPtr _JournalItem::GetAttachments ( );
__declspec(implementation_key(3530)) _bstr_t _JournalItem::GetBillingInformation ( );
__declspec(implementation_key(3531)) void _JournalItem::PutBillingInformation ( _bstr_t BillingInformation );
__declspec(implementation_key(3532)) _bstr_t _JournalItem::GetBody ( );
__declspec(implementation_key(3533)) void _JournalItem::PutBody ( _bstr_t Body );
__declspec(implementation_key(3534)) _bstr_t _JournalItem::GetCategories ( );
__declspec(implementation_key(3535)) void _JournalItem::PutCategories ( _bstr_t Categories );
__declspec(implementation_key(3536)) _bstr_t _JournalItem::GetCompanies ( );
__declspec(implementation_key(3537)) void _JournalItem::PutCompanies ( _bstr_t Companies );
__declspec(implementation_key(3538)) _bstr_t _JournalItem::GetConversationIndex ( );
__declspec(implementation_key(3539)) _bstr_t _JournalItem::GetConversationTopic ( );
__declspec(implementation_key(3540)) DATE _JournalItem::GetCreationTime ( );
__declspec(implementation_key(3541)) _bstr_t _JournalItem::GetEntryID ( );
__declspec(implementation_key(3542)) FormDescriptionPtr _JournalItem::GetFormDescription ( );
__declspec(implementation_key(3543)) _InspectorPtr _JournalItem::GetGetInspector ( );
__declspec(implementation_key(3544)) enum OlImportance _JournalItem::GetImportance ( );
__declspec(implementation_key(3545)) void _JournalItem::PutImportance ( enum OlImportance Importance );
__declspec(implementation_key(3546)) DATE _JournalItem::GetLastModificationTime ( );
__declspec(implementation_key(3547)) IUnknownPtr _JournalItem::GetMAPIOBJECT ( );
__declspec(implementation_key(3548)) _bstr_t _JournalItem::GetMessageClass ( );
__declspec(implementation_key(3549)) void _JournalItem::PutMessageClass ( _bstr_t MessageClass );
__declspec(implementation_key(3550)) _bstr_t _JournalItem::GetMileage ( );
__declspec(implementation_key(3551)) void _JournalItem::PutMileage ( _bstr_t Mileage );
__declspec(implementation_key(3552)) VARIANT_BOOL _JournalItem::GetNoAging ( );
__declspec(implementation_key(3553)) void _JournalItem::PutNoAging ( VARIANT_BOOL NoAging );
__declspec(implementation_key(3554)) long _JournalItem::GetOutlookInternalVersion ( );
__declspec(implementation_key(3555)) _bstr_t _JournalItem::GetOutlookVersion ( );
__declspec(implementation_key(3556)) VARIANT_BOOL _JournalItem::GetSaved ( );
__declspec(implementation_key(3557)) enum OlSensitivity _JournalItem::GetSensitivity ( );
__declspec(implementation_key(3558)) void _JournalItem::PutSensitivity ( enum OlSensitivity Sensitivity );
__declspec(implementation_key(3559)) long _JournalItem::GetSize ( );
__declspec(implementation_key(3560)) _bstr_t _JournalItem::GetSubject ( );
__declspec(implementation_key(3561)) void _JournalItem::PutSubject ( _bstr_t Subject );
__declspec(implementation_key(3562)) VARIANT_BOOL _JournalItem::GetUnRead ( );
__declspec(implementation_key(3563)) void _JournalItem::PutUnRead ( VARIANT_BOOL UnRead );
__declspec(implementation_key(3564)) UserPropertiesPtr _JournalItem::GetUserProperties ( );
__declspec(implementation_key(3565)) HRESULT _JournalItem::Close ( enum OlInspectorClose SaveMode );
__declspec(implementation_key(3566)) IDispatchPtr _JournalItem::Copy ( );
__declspec(implementation_key(3567)) HRESULT _JournalItem::Delete ( );
__declspec(implementation_key(3568)) HRESULT _JournalItem::Display ( const _variant_t & Modal );
__declspec(implementation_key(3569)) IDispatchPtr _JournalItem::Move ( struct MAPIFolder * DestFldr );
__declspec(implementation_key(3570)) HRESULT _JournalItem::PrintOut ( );
__declspec(implementation_key(3571)) HRESULT _JournalItem::Save ( );
__declspec(implementation_key(3572)) HRESULT _JournalItem::SaveAs ( _bstr_t Path, const _variant_t & Type );
__declspec(implementation_key(3573)) _bstr_t _JournalItem::GetContactNames ( );
__declspec(implementation_key(3574)) void _JournalItem::PutContactNames ( _bstr_t ContactNames );
__declspec(implementation_key(3575)) VARIANT_BOOL _JournalItem::GetDocPosted ( );
__declspec(implementation_key(3576)) void _JournalItem::PutDocPosted ( VARIANT_BOOL DocPosted );
__declspec(implementation_key(3577)) VARIANT_BOOL _JournalItem::GetDocPrinted ( );
__declspec(implementation_key(3578)) void _JournalItem::PutDocPrinted ( VARIANT_BOOL DocPrinted );
__declspec(implementation_key(3579)) VARIANT_BOOL _JournalItem::GetDocRouted ( );
__declspec(implementation_key(3580)) void _JournalItem::PutDocRouted ( VARIANT_BOOL DocRouted );
__declspec(implementation_key(3581)) VARIANT_BOOL _JournalItem::GetDocSaved ( );
__declspec(implementation_key(3582)) void _JournalItem::PutDocSaved ( VARIANT_BOOL DocSaved );
__declspec(implementation_key(3583)) long _JournalItem::GetDuration ( );
__declspec(implementation_key(3584)) void _JournalItem::PutDuration ( long Duration );
__declspec(implementation_key(3585)) DATE _JournalItem::GetEnd ( );
__declspec(implementation_key(3586)) void _JournalItem::PutEnd ( DATE End );
__declspec(implementation_key(3587)) _bstr_t _JournalItem::GetType ( );
__declspec(implementation_key(3588)) void _JournalItem::PutType ( _bstr_t Type );
__declspec(implementation_key(3589)) RecipientsPtr _JournalItem::GetRecipients ( );
__declspec(implementation_key(3590)) DATE _JournalItem::GetStart ( );
__declspec(implementation_key(3591)) void _JournalItem::PutStart ( DATE Start );
__declspec(implementation_key(3592)) _MailItemPtr _JournalItem::Forward ( );
__declspec(implementation_key(3593)) _MailItemPtr _JournalItem::Reply ( );
__declspec(implementation_key(3594)) _MailItemPtr _JournalItem::ReplyAll ( );
__declspec(implementation_key(3595)) HRESULT _JournalItem::StartTimer ( );
__declspec(implementation_key(3596)) HRESULT _JournalItem::StopTimer ( );
__declspec(implementation_key(3597)) LinksPtr _JournalItem::GetLinks ( );
__declspec(implementation_key(3598)) enum OlDownloadState _JournalItem::GetDownloadState ( );
__declspec(implementation_key(3599)) HRESULT _JournalItem::ShowCategoriesDialog ( );
__declspec(implementation_key(3600)) ItemPropertiesPtr _JournalItem::GetItemProperties ( );
__declspec(implementation_key(3601)) enum OlRemoteStatus _JournalItem::GetMarkForDownload ( );
__declspec(implementation_key(3602)) void _JournalItem::PutMarkForDownload ( enum OlRemoteStatus MarkForDownload );
__declspec(implementation_key(3603)) VARIANT_BOOL _JournalItem::GetIsConflict ( );
__declspec(implementation_key(3604)) VARIANT_BOOL _JournalItem::GetAutoResolvedWinner ( );
__declspec(implementation_key(3605)) ConflictsPtr _JournalItem::GetConflicts ( );
__declspec(implementation_key(3606)) _PropertyAccessorPtr _JournalItem::GetPropertyAccessor ( );
__declspec(implementation_key(3607)) _ApplicationPtr _NoteItem::GetApplication ( );
__declspec(implementation_key(3608)) enum OlObjectClass _NoteItem::GetClass ( );
__declspec(implementation_key(3609)) _NameSpacePtr _NoteItem::GetSession ( );
__declspec(implementation_key(3610)) IDispatchPtr _NoteItem::GetParent ( );
__declspec(implementation_key(3611)) _bstr_t _NoteItem::GetBody ( );
__declspec(implementation_key(3612)) void _NoteItem::PutBody ( _bstr_t Body );
__declspec(implementation_key(3613)) _bstr_t _NoteItem::GetCategories ( );
__declspec(implementation_key(3614)) void _NoteItem::PutCategories ( _bstr_t Categories );
__declspec(implementation_key(3615)) enum OlNoteColor _NoteItem::GetColor ( );
__declspec(implementation_key(3616)) void _NoteItem::PutColor ( enum OlNoteColor Color );
__declspec(implementation_key(3617)) DATE _NoteItem::GetCreationTime ( );
__declspec(implementation_key(3618)) _bstr_t _NoteItem::GetEntryID ( );
__declspec(implementation_key(3619)) _InspectorPtr _NoteItem::GetGetInspector ( );
__declspec(implementation_key(3620)) long _NoteItem::GetHeight ( );
__declspec(implementation_key(3621)) void _NoteItem::PutHeight ( long Height );
__declspec(implementation_key(3622)) DATE _NoteItem::GetLastModificationTime ( );
__declspec(implementation_key(3623)) long _NoteItem::GetLeft ( );
__declspec(implementation_key(3624)) void _NoteItem::PutLeft ( long Left );
__declspec(implementation_key(3625)) _bstr_t _NoteItem::GetMessageClass ( );
__declspec(implementation_key(3626)) void _NoteItem::PutMessageClass ( _bstr_t MessageClass );
__declspec(implementation_key(3627)) VARIANT_BOOL _NoteItem::GetSaved ( );
__declspec(implementation_key(3628)) long _NoteItem::GetSize ( );
__declspec(implementation_key(3629)) _bstr_t _NoteItem::GetSubject ( );
__declspec(implementation_key(3630)) long _NoteItem::GetTop ( );
__declspec(implementation_key(3631)) void _NoteItem::PutTop ( long Top );
__declspec(implementation_key(3632)) long _NoteItem::GetWidth ( );
__declspec(implementation_key(3633)) void _NoteItem::PutWidth ( long Width );
__declspec(implementation_key(3634)) HRESULT _NoteItem::Close ( enum OlInspectorClose SaveMode );
__declspec(implementation_key(3635)) IDispatchPtr _NoteItem::Copy ( );
__declspec(implementation_key(3636)) HRESULT _NoteItem::Delete ( );
__declspec(implementation_key(3637)) HRESULT _NoteItem::Display ( const _variant_t & Modal );
__declspec(implementation_key(3638)) IDispatchPtr _NoteItem::Move ( struct MAPIFolder * DestFldr );
__declspec(implementation_key(3639)) HRESULT _NoteItem::PrintOut ( );
__declspec(implementation_key(3640)) HRESULT _NoteItem::Save ( );
__declspec(implementation_key(3641)) HRESULT _NoteItem::SaveAs ( _bstr_t Path, const _variant_t & Type );
__declspec(implementation_key(3642)) LinksPtr _NoteItem::GetLinks ( );
__declspec(implementation_key(3643)) enum OlDownloadState _NoteItem::GetDownloadState ( );
__declspec(implementation_key(3644)) ItemPropertiesPtr _NoteItem::GetItemProperties ( );
__declspec(implementation_key(3645)) enum OlRemoteStatus _NoteItem::GetMarkForDownload ( );
__declspec(implementation_key(3646)) void _NoteItem::PutMarkForDownload ( enum OlRemoteStatus MarkForDownload );
__declspec(implementation_key(3647)) VARIANT_BOOL _NoteItem::GetIsConflict ( );
__declspec(implementation_key(3648)) VARIANT_BOOL _NoteItem::GetAutoResolvedWinner ( );
__declspec(implementation_key(3649)) ConflictsPtr _NoteItem::GetConflicts ( );
__declspec(implementation_key(3650)) _PropertyAccessorPtr _NoteItem::GetPropertyAccessor ( );
__declspec(implementation_key(3651)) _ApplicationPtr _PostItem::GetApplication ( );
__declspec(implementation_key(3652)) enum OlObjectClass _PostItem::GetClass ( );
__declspec(implementation_key(3653)) _NameSpacePtr _PostItem::GetSession ( );
__declspec(implementation_key(3654)) IDispatchPtr _PostItem::GetParent ( );
__declspec(implementation_key(3655)) ActionsPtr _PostItem::GetActions ( );
__declspec(implementation_key(3656)) AttachmentsPtr _PostItem::GetAttachments ( );
__declspec(implementation_key(3657)) _bstr_t _PostItem::GetBillingInformation ( );
__declspec(implementation_key(3658)) void _PostItem::PutBillingInformation ( _bstr_t BillingInformation );
__declspec(implementation_key(3659)) _bstr_t _PostItem::GetBody ( );
__declspec(implementation_key(3660)) void _PostItem::PutBody ( _bstr_t Body );
__declspec(implementation_key(3661)) _bstr_t _PostItem::GetCategories ( );
__declspec(implementation_key(3662)) void _PostItem::PutCategories ( _bstr_t Categories );
__declspec(implementation_key(3663)) _bstr_t _PostItem::GetCompanies ( );
__declspec(implementation_key(3664)) void _PostItem::PutCompanies ( _bstr_t Companies );
__declspec(implementation_key(3665)) _bstr_t _PostItem::GetConversationIndex ( );
__declspec(implementation_key(3666)) _bstr_t _PostItem::GetConversationTopic ( );
__declspec(implementation_key(3667)) DATE _PostItem::GetCreationTime ( );
__declspec(implementation_key(3668)) _bstr_t _PostItem::GetEntryID ( );
__declspec(implementation_key(3669)) FormDescriptionPtr _PostItem::GetFormDescription ( );
__declspec(implementation_key(3670)) _InspectorPtr _PostItem::GetGetInspector ( );
__declspec(implementation_key(3671)) enum OlImportance _PostItem::GetImportance ( );
__declspec(implementation_key(3672)) void _PostItem::PutImportance ( enum OlImportance Importance );
__declspec(implementation_key(3673)) DATE _PostItem::GetLastModificationTime ( );
__declspec(implementation_key(3674)) IUnknownPtr _PostItem::GetMAPIOBJECT ( );
__declspec(implementation_key(3675)) _bstr_t _PostItem::GetMessageClass ( );
__declspec(implementation_key(3676)) void _PostItem::PutMessageClass ( _bstr_t MessageClass );
__declspec(implementation_key(3677)) _bstr_t _PostItem::GetMileage ( );
__declspec(implementation_key(3678)) void _PostItem::PutMileage ( _bstr_t Mileage );
__declspec(implementation_key(3679)) VARIANT_BOOL _PostItem::GetNoAging ( );
__declspec(implementation_key(3680)) void _PostItem::PutNoAging ( VARIANT_BOOL NoAging );
__declspec(implementation_key(3681)) long _PostItem::GetOutlookInternalVersion ( );
__declspec(implementation_key(3682)) _bstr_t _PostItem::GetOutlookVersion ( );
__declspec(implementation_key(3683)) VARIANT_BOOL _PostItem::GetSaved ( );
__declspec(implementation_key(3684)) enum OlSensitivity _PostItem::GetSensitivity ( );
__declspec(implementation_key(3685)) void _PostItem::PutSensitivity ( enum OlSensitivity Sensitivity );
__declspec(implementation_key(3686)) long _PostItem::GetSize ( );
__declspec(implementation_key(3687)) _bstr_t _PostItem::GetSubject ( );
__declspec(implementation_key(3688)) void _PostItem::PutSubject ( _bstr_t Subject );
__declspec(implementation_key(3689)) VARIANT_BOOL _PostItem::GetUnRead ( );
__declspec(implementation_key(3690)) void _PostItem::PutUnRead ( VARIANT_BOOL UnRead );
__declspec(implementation_key(3691)) UserPropertiesPtr _PostItem::GetUserProperties ( );
__declspec(implementation_key(3692)) HRESULT _PostItem::Close ( enum OlInspectorClose SaveMode );
__declspec(implementation_key(3693)) IDispatchPtr _PostItem::Copy ( );
__declspec(implementation_key(3694)) HRESULT _PostItem::Delete ( );
__declspec(implementation_key(3695)) HRESULT _PostItem::Display ( const _variant_t & Modal );
__declspec(implementation_key(3696)) IDispatchPtr _PostItem::Move ( struct MAPIFolder * DestFldr );
__declspec(implementation_key(3697)) HRESULT _PostItem::PrintOut ( );
__declspec(implementation_key(3698)) HRESULT _PostItem::Save ( );
__declspec(implementation_key(3699)) HRESULT _PostItem::SaveAs ( _bstr_t Path, const _variant_t & Type );
__declspec(implementation_key(3700)) DATE _PostItem::GetExpiryTime ( );
__declspec(implementation_key(3701)) void _PostItem::PutExpiryTime ( DATE ExpiryTime );
__declspec(implementation_key(3702)) _bstr_t _PostItem::GetHTMLBody ( );
__declspec(implementation_key(3703)) void _PostItem::PutHTMLBody ( _bstr_t HTMLBody );
__declspec(implementation_key(3704)) DATE _PostItem::GetReceivedTime ( );
__declspec(implementation_key(3705)) _bstr_t _PostItem::GetSenderName ( );
__declspec(implementation_key(3706)) DATE _PostItem::GetSentOn ( );
__declspec(implementation_key(3707)) HRESULT _PostItem::ClearConversationIndex ( );
__declspec(implementation_key(3708)) _MailItemPtr _PostItem::Forward ( );
__declspec(implementation_key(3709)) HRESULT _PostItem::Post ( );
__declspec(implementation_key(3710)) _MailItemPtr _PostItem::Reply ( );
__declspec(implementation_key(3711)) LinksPtr _PostItem::GetLinks ( );
__declspec(implementation_key(3712)) ItemPropertiesPtr _PostItem::GetItemProperties ( );
__declspec(implementation_key(3713)) enum OlBodyFormat _PostItem::GetBodyFormat ( );
__declspec(implementation_key(3714)) void _PostItem::PutBodyFormat ( enum OlBodyFormat BodyFormat );
__declspec(implementation_key(3715)) enum OlDownloadState _PostItem::GetDownloadState ( );
__declspec(implementation_key(3716)) HRESULT _PostItem::ShowCategoriesDialog ( );
__declspec(implementation_key(3717)) long _PostItem::GetInternetCodepage ( );
__declspec(implementation_key(3718)) void _PostItem::PutInternetCodepage ( long InternetCodepage );
__declspec(implementation_key(3719)) enum OlRemoteStatus _PostItem::GetMarkForDownload ( );
__declspec(implementation_key(3720)) void _PostItem::PutMarkForDownload ( enum OlRemoteStatus MarkForDownload );
__declspec(implementation_key(3721)) VARIANT_BOOL _PostItem::SetACLs ( );
__declspec(implementation_key(3722)) VARIANT_BOOL _PostItem::GetIsConflict ( );
__declspec(implementation_key(3723)) VARIANT_BOOL _PostItem::GetAutoResolvedWinner ( );
__declspec(implementation_key(3724)) ConflictsPtr _PostItem::GetConflicts ( );
__declspec(implementation_key(3725)) _bstr_t _PostItem::GetSenderEmailAddress ( );
__declspec(implementation_key(3726)) _bstr_t _PostItem::GetSenderEmailType ( );
__declspec(implementation_key(3727)) _PropertyAccessorPtr _PostItem::GetPropertyAccessor ( );
__declspec(implementation_key(3728)) _bstr_t _PostItem::GetTaskSubject ( );
__declspec(implementation_key(3729)) void _PostItem::PutTaskSubject ( _bstr_t TaskSubject );
__declspec(implementation_key(3730)) DATE _PostItem::GetTaskDueDate ( );
__declspec(implementation_key(3731)) void _PostItem::PutTaskDueDate ( DATE TaskDueDate );
__declspec(implementation_key(3732)) DATE _PostItem::GetTaskStartDate ( );
__declspec(implementation_key(3733)) void _PostItem::PutTaskStartDate ( DATE TaskStartDate );
__declspec(implementation_key(3734)) DATE _PostItem::GetTaskCompletedDate ( );
__declspec(implementation_key(3735)) void _PostItem::PutTaskCompletedDate ( DATE TaskCompletedDate );
__declspec(implementation_key(3736)) DATE _PostItem::GetToDoTaskOrdinal ( );
__declspec(implementation_key(3737)) void _PostItem::PutToDoTaskOrdinal ( DATE ToDoTaskOrdinal );
__declspec(implementation_key(3738)) VARIANT_BOOL _PostItem::GetReminderOverrideDefault ( );
__declspec(implementation_key(3739)) void _PostItem::PutReminderOverrideDefault ( VARIANT_BOOL ReminderOverrideDefault
);
__declspec(implementation_key(3740)) VARIANT_BOOL _PostItem::GetReminderPlaySound ( );
__declspec(implementation_key(3741)) void _PostItem::PutReminderPlaySound ( VARIANT_BOOL ReminderPlaySound );
__declspec(implementation_key(3742)) VARIANT_BOOL _PostItem::GetReminderSet ( );
__declspec(implementation_key(3743)) void _PostItem::PutReminderSet ( VARIANT_BOOL ReminderSet );
__declspec(implementation_key(3744)) _bstr_t _PostItem::GetReminderSoundFile ( );
__declspec(implementation_key(3745)) void _PostItem::PutReminderSoundFile ( _bstr_t ReminderSoundFile );
__declspec(implementation_key(3746)) DATE _PostItem::GetReminderTime ( );
__declspec(implementation_key(3747)) void _PostItem::PutReminderTime ( DATE ReminderTime );
__declspec(implementation_key(3748)) HRESULT _PostItem::MarkAsTask ( enum OlMarkInterval MarkInterval );
__declspec(implementation_key(3749)) HRESULT _PostItem::ClearTaskFlag ( );
__declspec(implementation_key(3750)) VARIANT_BOOL _PostItem::GetIsMarkedAsTask ( );
__declspec(implementation_key(3751)) _ApplicationPtr _RemoteItem::GetApplication ( );
__declspec(implementation_key(3752)) enum OlObjectClass _RemoteItem::GetClass ( );
__declspec(implementation_key(3753)) _NameSpacePtr _RemoteItem::GetSession ( );
__declspec(implementation_key(3754)) IDispatchPtr _RemoteItem::GetParent ( );
__declspec(implementation_key(3755)) ActionsPtr _RemoteItem::GetActions ( );
__declspec(implementation_key(3756)) AttachmentsPtr _RemoteItem::GetAttachments ( );
__declspec(implementation_key(3757)) _bstr_t _RemoteItem::GetBillingInformation ( );
__declspec(implementation_key(3758)) void _RemoteItem::PutBillingInformation ( _bstr_t BillingInformation );
__declspec(implementation_key(3759)) _bstr_t _RemoteItem::GetBody ( );
__declspec(implementation_key(3760)) void _RemoteItem::PutBody ( _bstr_t Body );
__declspec(implementation_key(3761)) _bstr_t _RemoteItem::GetCategories ( );
__declspec(implementation_key(3762)) void _RemoteItem::PutCategories ( _bstr_t Categories );
__declspec(implementation_key(3763)) _bstr_t _RemoteItem::GetCompanies ( );
__declspec(implementation_key(3764)) void _RemoteItem::PutCompanies ( _bstr_t Companies );
__declspec(implementation_key(3765)) _bstr_t _RemoteItem::GetConversationIndex ( );
__declspec(implementation_key(3766)) _bstr_t _RemoteItem::GetConversationTopic ( );
__declspec(implementation_key(3767)) DATE _RemoteItem::GetCreationTime ( );
__declspec(implementation_key(3768)) _bstr_t _RemoteItem::GetEntryID ( );
__declspec(implementation_key(3769)) FormDescriptionPtr _RemoteItem::GetFormDescription ( );
__declspec(implementation_key(3770)) _InspectorPtr _RemoteItem::GetGetInspector ( );
__declspec(implementation_key(3771)) enum OlImportance _RemoteItem::GetImportance ( );
__declspec(implementation_key(3772)) void _RemoteItem::PutImportance ( enum OlImportance Importance );
__declspec(implementation_key(3773)) DATE _RemoteItem::GetLastModificationTime ( );
__declspec(implementation_key(3774)) IUnknownPtr _RemoteItem::GetMAPIOBJECT ( );
__declspec(implementation_key(3775)) _bstr_t _RemoteItem::GetMessageClass ( );
__declspec(implementation_key(3776)) void _RemoteItem::PutMessageClass ( _bstr_t MessageClass );
__declspec(implementation_key(3777)) _bstr_t _RemoteItem::GetMileage ( );
__declspec(implementation_key(3778)) void _RemoteItem::PutMileage ( _bstr_t Mileage );
__declspec(implementation_key(3779)) VARIANT_BOOL _RemoteItem::GetNoAging ( );
__declspec(implementation_key(3780)) void _RemoteItem::PutNoAging ( VARIANT_BOOL NoAging );
__declspec(implementation_key(3781)) long _RemoteItem::GetOutlookInternalVersion ( );
__declspec(implementation_key(3782)) _bstr_t _RemoteItem::GetOutlookVersion ( );
__declspec(implementation_key(3783)) VARIANT_BOOL _RemoteItem::GetSaved ( );
__declspec(implementation_key(3784)) enum OlSensitivity _RemoteItem::GetSensitivity ( );
__declspec(implementation_key(3785)) void _RemoteItem::PutSensitivity ( enum OlSensitivity Sensitivity );
__declspec(implementation_key(3786)) long _RemoteItem::GetSize ( );
__declspec(implementation_key(3787)) _bstr_t _RemoteItem::GetSubject ( );
__declspec(implementation_key(3788)) void _RemoteItem::PutSubject ( _bstr_t Subject );
__declspec(implementation_key(3789)) VARIANT_BOOL _RemoteItem::GetUnRead ( );
__declspec(implementation_key(3790)) void _RemoteItem::PutUnRead ( VARIANT_BOOL UnRead );
__declspec(implementation_key(3791)) UserPropertiesPtr _RemoteItem::GetUserProperties ( );
__declspec(implementation_key(3792)) HRESULT _RemoteItem::Close ( enum OlInspectorClose SaveMode );
__declspec(implementation_key(3793)) IDispatchPtr _RemoteItem::Copy ( );
__declspec(implementation_key(3794)) HRESULT _RemoteItem::Delete ( );
__declspec(implementation_key(3795)) HRESULT _RemoteItem::Display ( const _variant_t & Modal );
__declspec(implementation_key(3796)) IDispatchPtr _RemoteItem::Move ( struct MAPIFolder * DestFldr );
__declspec(implementation_key(3797)) HRESULT _RemoteItem::PrintOut ( );
__declspec(implementation_key(3798)) HRESULT _RemoteItem::Save ( );
__declspec(implementation_key(3799)) HRESULT _RemoteItem::SaveAs ( _bstr_t Path, const _variant_t & Type );
__declspec(implementation_key(3800)) VARIANT_BOOL _RemoteItem::GetHasAttachment ( );
__declspec(implementation_key(3801)) _bstr_t _RemoteItem::GetRemoteMessageClass ( );
__declspec(implementation_key(3802)) long _RemoteItem::GetTransferSize ( );
__declspec(implementation_key(3803)) long _RemoteItem::GetTransferTime ( );
__declspec(implementation_key(3804)) LinksPtr _RemoteItem::GetLinks ( );
__declspec(implementation_key(3805)) enum OlDownloadState _RemoteItem::GetDownloadState ( );
__declspec(implementation_key(3806)) HRESULT _RemoteItem::ShowCategoriesDialog ( );
__declspec(implementation_key(3807)) ItemPropertiesPtr _RemoteItem::GetItemProperties ( );
__declspec(implementation_key(3808)) enum OlRemoteStatus _RemoteItem::GetMarkForDownload ( );
__declspec(implementation_key(3809)) void _RemoteItem::PutMarkForDownload ( enum OlRemoteStatus MarkForDownload );
__declspec(implementation_key(3810)) VARIANT_BOOL _RemoteItem::GetIsConflict ( );
__declspec(implementation_key(3811)) VARIANT_BOOL _RemoteItem::GetAutoResolvedWinner ( );
__declspec(implementation_key(3812)) ConflictsPtr _RemoteItem::GetConflicts ( );
__declspec(implementation_key(3813)) _PropertyAccessorPtr _RemoteItem::GetPropertyAccessor ( );
__declspec(implementation_key(3814)) _ApplicationPtr _ReportItem::GetApplication ( );
__declspec(implementation_key(3815)) enum OlObjectClass _ReportItem::GetClass ( );
__declspec(implementation_key(3816)) _NameSpacePtr _ReportItem::GetSession ( );
__declspec(implementation_key(3817)) IDispatchPtr _ReportItem::GetParent ( );
__declspec(implementation_key(3818)) ActionsPtr _ReportItem::GetActions ( );
__declspec(implementation_key(3819)) AttachmentsPtr _ReportItem::GetAttachments ( );
__declspec(implementation_key(3820)) _bstr_t _ReportItem::GetBillingInformation ( );
__declspec(implementation_key(3821)) void _ReportItem::PutBillingInformation ( _bstr_t BillingInformation );
__declspec(implementation_key(3822)) _bstr_t _ReportItem::GetBody ( );
__declspec(implementation_key(3823)) void _ReportItem::PutBody ( _bstr_t Body );
__declspec(implementation_key(3824)) _bstr_t _ReportItem::GetCategories ( );
__declspec(implementation_key(3825)) void _ReportItem::PutCategories ( _bstr_t Categories );
__declspec(implementation_key(3826)) _bstr_t _ReportItem::GetCompanies ( );
__declspec(implementation_key(3827)) void _ReportItem::PutCompanies ( _bstr_t Companies );
__declspec(implementation_key(3828)) _bstr_t _ReportItem::GetConversationIndex ( );
__declspec(implementation_key(3829)) _bstr_t _ReportItem::GetConversationTopic ( );
__declspec(implementation_key(3830)) DATE _ReportItem::GetCreationTime ( );
__declspec(implementation_key(3831)) _bstr_t _ReportItem::GetEntryID ( );
__declspec(implementation_key(3832)) FormDescriptionPtr _ReportItem::GetFormDescription ( );
__declspec(implementation_key(3833)) _InspectorPtr _ReportItem::GetGetInspector ( );
__declspec(implementation_key(3834)) enum OlImportance _ReportItem::GetImportance ( );
__declspec(implementation_key(3835)) void _ReportItem::PutImportance ( enum OlImportance Importance );
__declspec(implementation_key(3836)) DATE _ReportItem::GetLastModificationTime ( );
__declspec(implementation_key(3837)) IUnknownPtr _ReportItem::GetMAPIOBJECT ( );
__declspec(implementation_key(3838)) _bstr_t _ReportItem::GetMessageClass ( );
__declspec(implementation_key(3839)) void _ReportItem::PutMessageClass ( _bstr_t MessageClass );
__declspec(implementation_key(3840)) _bstr_t _ReportItem::GetMileage ( );
__declspec(implementation_key(3841)) void _ReportItem::PutMileage ( _bstr_t Mileage );
__declspec(implementation_key(3842)) VARIANT_BOOL _ReportItem::GetNoAging ( );
__declspec(implementation_key(3843)) void _ReportItem::PutNoAging ( VARIANT_BOOL NoAging );
__declspec(implementation_key(3844)) long _ReportItem::GetOutlookInternalVersion ( );
__declspec(implementation_key(3845)) _bstr_t _ReportItem::GetOutlookVersion ( );
__declspec(implementation_key(3846)) VARIANT_BOOL _ReportItem::GetSaved ( );
__declspec(implementation_key(3847)) enum OlSensitivity _ReportItem::GetSensitivity ( );
__declspec(implementation_key(3848)) void _ReportItem::PutSensitivity ( enum OlSensitivity Sensitivity );
__declspec(implementation_key(3849)) long _ReportItem::GetSize ( );
__declspec(implementation_key(3850)) _bstr_t _ReportItem::GetSubject ( );
__declspec(implementation_key(3851)) void _ReportItem::PutSubject ( _bstr_t Subject );
__declspec(implementation_key(3852)) VARIANT_BOOL _ReportItem::GetUnRead ( );
__declspec(implementation_key(3853)) void _ReportItem::PutUnRead ( VARIANT_BOOL UnRead );
__declspec(implementation_key(3854)) UserPropertiesPtr _ReportItem::GetUserProperties ( );
__declspec(implementation_key(3855)) HRESULT _ReportItem::Close ( enum OlInspectorClose SaveMode );
__declspec(implementation_key(3856)) IDispatchPtr _ReportItem::Copy ( );
__declspec(implementation_key(3857)) HRESULT _ReportItem::Delete ( );
__declspec(implementation_key(3858)) HRESULT _ReportItem::Display ( const _variant_t & Modal );
__declspec(implementation_key(3859)) IDispatchPtr _ReportItem::Move ( struct MAPIFolder * DestFldr );
__declspec(implementation_key(3860)) HRESULT _ReportItem::PrintOut ( );
__declspec(implementation_key(3861)) HRESULT _ReportItem::Save ( );
__declspec(implementation_key(3862)) HRESULT _ReportItem::SaveAs ( _bstr_t Path, const _variant_t & Type );
__declspec(implementation_key(3863)) LinksPtr _ReportItem::GetLinks ( );
__declspec(implementation_key(3864)) enum OlDownloadState _ReportItem::GetDownloadState ( );
__declspec(implementation_key(3865)) HRESULT _ReportItem::ShowCategoriesDialog ( );
__declspec(implementation_key(3866)) ItemPropertiesPtr _ReportItem::GetItemProperties ( );
__declspec(implementation_key(3867)) enum OlRemoteStatus _ReportItem::GetMarkForDownload ( );
__declspec(implementation_key(3868)) void _ReportItem::PutMarkForDownload ( enum OlRemoteStatus MarkForDownload );
__declspec(implementation_key(3869)) VARIANT_BOOL _ReportItem::GetIsConflict ( );
__declspec(implementation_key(3870)) VARIANT_BOOL _ReportItem::GetAutoResolvedWinner ( );
__declspec(implementation_key(3871)) ConflictsPtr _ReportItem::GetConflicts ( );
__declspec(implementation_key(3872)) _PropertyAccessorPtr _ReportItem::GetPropertyAccessor ( );
__declspec(implementation_key(3873)) _ApplicationPtr _TaskItem::GetApplication ( );
__declspec(implementation_key(3874)) enum OlObjectClass _TaskItem::GetClass ( );
__declspec(implementation_key(3875)) _NameSpacePtr _TaskItem::GetSession ( );
__declspec(implementation_key(3876)) IDispatchPtr _TaskItem::GetParent ( );
__declspec(implementation_key(3877)) ActionsPtr _TaskItem::GetActions ( );
__declspec(implementation_key(3878)) AttachmentsPtr _TaskItem::GetAttachments ( );
__declspec(implementation_key(3879)) _bstr_t _TaskItem::GetBillingInformation ( );
__declspec(implementation_key(3880)) void _TaskItem::PutBillingInformation ( _bstr_t BillingInformation );
__declspec(implementation_key(3881)) _bstr_t _TaskItem::GetBody ( );
__declspec(implementation_key(3882)) void _TaskItem::PutBody ( _bstr_t Body );
__declspec(implementation_key(3883)) _bstr_t _TaskItem::GetCategories ( );
__declspec(implementation_key(3884)) void _TaskItem::PutCategories ( _bstr_t Categories );
__declspec(implementation_key(3885)) _bstr_t _TaskItem::GetCompanies ( );
__declspec(implementation_key(3886)) void _TaskItem::PutCompanies ( _bstr_t Companies );
__declspec(implementation_key(3887)) _bstr_t _TaskItem::GetConversationIndex ( );
__declspec(implementation_key(3888)) _bstr_t _TaskItem::GetConversationTopic ( );
__declspec(implementation_key(3889)) DATE _TaskItem::GetCreationTime ( );
__declspec(implementation_key(3890)) _bstr_t _TaskItem::GetEntryID ( );
__declspec(implementation_key(3891)) FormDescriptionPtr _TaskItem::GetFormDescription ( );
__declspec(implementation_key(3892)) _InspectorPtr _TaskItem::GetGetInspector ( );
__declspec(implementation_key(3893)) enum OlImportance _TaskItem::GetImportance ( );
__declspec(implementation_key(3894)) void _TaskItem::PutImportance ( enum OlImportance Importance );
__declspec(implementation_key(3895)) DATE _TaskItem::GetLastModificationTime ( );
__declspec(implementation_key(3896)) IUnknownPtr _TaskItem::GetMAPIOBJECT ( );
__declspec(implementation_key(3897)) _bstr_t _TaskItem::GetMessageClass ( );
__declspec(implementation_key(3898)) void _TaskItem::PutMessageClass ( _bstr_t MessageClass );
__declspec(implementation_key(3899)) _bstr_t _TaskItem::GetMileage ( );
__declspec(implementation_key(3900)) void _TaskItem::PutMileage ( _bstr_t Mileage );
__declspec(implementation_key(3901)) VARIANT_BOOL _TaskItem::GetNoAging ( );
__declspec(implementation_key(3902)) void _TaskItem::PutNoAging ( VARIANT_BOOL NoAging );
__declspec(implementation_key(3903)) long _TaskItem::GetOutlookInternalVersion ( );
__declspec(implementation_key(3904)) _bstr_t _TaskItem::GetOutlookVersion ( );
__declspec(implementation_key(3905)) VARIANT_BOOL _TaskItem::GetSaved ( );
__declspec(implementation_key(3906)) enum OlSensitivity _TaskItem::GetSensitivity ( );
__declspec(implementation_key(3907)) void _TaskItem::PutSensitivity ( enum OlSensitivity Sensitivity );
__declspec(implementation_key(3908)) long _TaskItem::GetSize ( );
__declspec(implementation_key(3909)) _bstr_t _TaskItem::GetSubject ( );
__declspec(implementation_key(3910)) void _TaskItem::PutSubject ( _bstr_t Subject );
__declspec(implementation_key(3911)) VARIANT_BOOL _TaskItem::GetUnRead ( );
__declspec(implementation_key(3912)) void _TaskItem::PutUnRead ( VARIANT_BOOL UnRead );
__declspec(implementation_key(3913)) UserPropertiesPtr _TaskItem::GetUserProperties ( );
__declspec(implementation_key(3914)) HRESULT _TaskItem::Close ( enum OlInspectorClose SaveMode );
__declspec(implementation_key(3915)) IDispatchPtr _TaskItem::Copy ( );
__declspec(implementation_key(3916)) HRESULT _TaskItem::Delete ( );
__declspec(implementation_key(3917)) HRESULT _TaskItem::Display ( const _variant_t & Modal );
__declspec(implementation_key(3918)) IDispatchPtr _TaskItem::Move ( struct MAPIFolder * DestFldr );
__declspec(implementation_key(3919)) HRESULT _TaskItem::PrintOut ( );
__declspec(implementation_key(3920)) HRESULT _TaskItem::Save ( );
__declspec(implementation_key(3921)) HRESULT _TaskItem::SaveAs ( _bstr_t Path, const _variant_t & Type );
__declspec(implementation_key(3922)) long _TaskItem::GetActualWork ( );
__declspec(implementation_key(3923)) void _TaskItem::PutActualWork ( long ActualWork );
__declspec(implementation_key(3924)) _bstr_t _TaskItem::GetCardData ( );
__declspec(implementation_key(3925)) void _TaskItem::PutCardData ( _bstr_t CardData );
__declspec(implementation_key(3926)) VARIANT_BOOL _TaskItem::GetComplete ( );
__declspec(implementation_key(3927)) void _TaskItem::PutComplete ( VARIANT_BOOL Complete );
__declspec(implementation_key(3928)) _bstr_t _TaskItem::GetContacts ( );
__declspec(implementation_key(3929)) void _TaskItem::PutContacts ( _bstr_t Contacts );
__declspec(implementation_key(3930)) _bstr_t _TaskItem::GetContactNames ( );
__declspec(implementation_key(3931)) void _TaskItem::PutContactNames ( _bstr_t ContactNames );
__declspec(implementation_key(3932)) DATE _TaskItem::GetDateCompleted ( );
__declspec(implementation_key(3933)) void _TaskItem::PutDateCompleted ( DATE DateCompleted );
__declspec(implementation_key(3934)) enum OlTaskDelegationState _TaskItem::GetDelegationState ( );
__declspec(implementation_key(3935)) _bstr_t _TaskItem::GetDelegator ( );
__declspec(implementation_key(3936)) DATE _TaskItem::GetDueDate ( );
__declspec(implementation_key(3937)) void _TaskItem::PutDueDate ( DATE DueDate );
__declspec(implementation_key(3938)) VARIANT_BOOL _TaskItem::GetIsRecurring ( );
__declspec(implementation_key(3939)) long _TaskItem::GetOrdinal ( );
__declspec(implementation_key(3940)) void _TaskItem::PutOrdinal ( long Ordinal );
__declspec(implementation_key(3941)) _bstr_t _TaskItem::GetOwner ( );
__declspec(implementation_key(3942)) void _TaskItem::PutOwner ( _bstr_t Owner );
__declspec(implementation_key(3943)) enum OlTaskOwnership _TaskItem::GetOwnership ( );
__declspec(implementation_key(3944)) long _TaskItem::GetPercentComplete ( );
__declspec(implementation_key(3945)) void _TaskItem::PutPercentComplete ( long PercentComplete );
__declspec(implementation_key(3946)) RecipientsPtr _TaskItem::GetRecipients ( );
__declspec(implementation_key(3947)) DATE _TaskItem::GetReminderTime ( );
__declspec(implementation_key(3948)) void _TaskItem::PutReminderTime ( DATE ReminderTime );
__declspec(implementation_key(3949)) VARIANT_BOOL _TaskItem::GetReminderOverrideDefault ( );
__declspec(implementation_key(3950)) void _TaskItem::PutReminderOverrideDefault ( VARIANT_BOOL ReminderOverrideDefault
);
__declspec(implementation_key(3951)) VARIANT_BOOL _TaskItem::GetReminderPlaySound ( );
__declspec(implementation_key(3952)) void _TaskItem::PutReminderPlaySound ( VARIANT_BOOL ReminderPlaySound );
__declspec(implementation_key(3953)) VARIANT_BOOL _TaskItem::GetReminderSet ( );
__declspec(implementation_key(3954)) void _TaskItem::PutReminderSet ( VARIANT_BOOL ReminderSet );
__declspec(implementation_key(3955)) _bstr_t _TaskItem::GetReminderSoundFile ( );
__declspec(implementation_key(3956)) void _TaskItem::PutReminderSoundFile ( _bstr_t ReminderSoundFile );
__declspec(implementation_key(3957)) enum OlTaskResponse _TaskItem::GetResponseState ( );
__declspec(implementation_key(3958)) _bstr_t _TaskItem::GetRole ( );
__declspec(implementation_key(3959)) void _TaskItem::PutRole ( _bstr_t Role );
__declspec(implementation_key(3960)) _bstr_t _TaskItem::GetSchedulePlusPriority ( );
__declspec(implementation_key(3961)) void _TaskItem::PutSchedulePlusPriority ( _bstr_t SchedulePlusPriority );
__declspec(implementation_key(3962)) DATE _TaskItem::GetStartDate ( );
__declspec(implementation_key(3963)) void _TaskItem::PutStartDate ( DATE StartDate );
__declspec(implementation_key(3964)) enum OlTaskStatus _TaskItem::GetStatus ( );
__declspec(implementation_key(3965)) void _TaskItem::PutStatus ( enum OlTaskStatus Status );
__declspec(implementation_key(3966)) _bstr_t _TaskItem::GetStatusOnCompletionRecipients ( );
__declspec(implementation_key(3967)) void _TaskItem::PutStatusOnCompletionRecipients ( _bstr_t
StatusOnCompletionRecipients );
__declspec(implementation_key(3968)) _bstr_t _TaskItem::GetStatusUpdateRecipients ( );
__declspec(implementation_key(3969)) void _TaskItem::PutStatusUpdateRecipients ( _bstr_t StatusUpdateRecipients );
__declspec(implementation_key(3970)) VARIANT_BOOL _TaskItem::GetTeamTask ( );
__declspec(implementation_key(3971)) void _TaskItem::PutTeamTask ( VARIANT_BOOL TeamTask );
__declspec(implementation_key(3972)) long _TaskItem::GetTotalWork ( );
__declspec(implementation_key(3973)) void _TaskItem::PutTotalWork ( long TotalWork );
__declspec(implementation_key(3974)) _TaskItemPtr _TaskItem::Assign ( );
__declspec(implementation_key(3975)) HRESULT _TaskItem::CancelResponseState ( );
__declspec(implementation_key(3976)) HRESULT _TaskItem::ClearRecurrencePattern ( );
__declspec(implementation_key(3977)) RecurrencePatternPtr _TaskItem::GetRecurrencePattern ( );
__declspec(implementation_key(3978)) HRESULT _TaskItem::MarkComplete ( );
__declspec(implementation_key(3979)) _TaskItemPtr _TaskItem::Respond ( enum OlTaskResponse Response, const _variant_t &
fNoUI, const _variant_t & fAdditionalTextDialog );
__declspec(implementation_key(3980)) HRESULT _TaskItem::Send ( );
__declspec(implementation_key(3981)) VARIANT_BOOL _TaskItem::SkipRecurrence ( );
__declspec(implementation_key(3982)) IDispatchPtr _TaskItem::StatusReport ( );
__declspec(implementation_key(3983)) LinksPtr _TaskItem::GetLinks ( );
__declspec(implementation_key(3984)) enum OlDownloadState _TaskItem::GetDownloadState ( );
__declspec(implementation_key(3985)) HRESULT _TaskItem::ShowCategoriesDialog ( );
__declspec(implementation_key(3986)) ItemPropertiesPtr _TaskItem::GetItemProperties ( );
__declspec(implementation_key(3987)) long _TaskItem::GetInternetCodepage ( );
__declspec(implementation_key(3988)) void _TaskItem::PutInternetCodepage ( long InternetCodepage );
__declspec(implementation_key(3989)) enum OlRemoteStatus _TaskItem::GetMarkForDownload ( );
__declspec(implementation_key(3990)) void _TaskItem::PutMarkForDownload ( enum OlRemoteStatus MarkForDownload );
__declspec(implementation_key(3991)) VARIANT_BOOL _TaskItem::GetIsConflict ( );
__declspec(implementation_key(3992)) VARIANT_BOOL _TaskItem::GetAutoResolvedWinner ( );
__declspec(implementation_key(3993)) ConflictsPtr _TaskItem::GetConflicts ( );
__declspec(implementation_key(3994)) _PropertyAccessorPtr _TaskItem::GetPropertyAccessor ( );
__declspec(implementation_key(3995)) _AccountPtr _TaskItem::GetSendUsingAccount ( );
__declspec(implementation_key(3996)) void _TaskItem::PutSendUsingAccount ( struct _Account * SendUsingAccount );
__declspec(implementation_key(3997)) DATE _TaskItem::GetToDoTaskOrdinal ( );
__declspec(implementation_key(3998)) void _TaskItem::PutToDoTaskOrdinal ( DATE ToDoTaskOrdinal );
__declspec(implementation_key(3999)) _ApplicationPtr _TaskRequestAcceptItem::GetApplication ( );
__declspec(implementation_key(4000)) enum OlObjectClass _TaskRequestAcceptItem::GetClass ( );
__declspec(implementation_key(4001)) _NameSpacePtr _TaskRequestAcceptItem::GetSession ( );
__declspec(implementation_key(4002)) IDispatchPtr _TaskRequestAcceptItem::GetParent ( );
__declspec(implementation_key(4003)) ActionsPtr _TaskRequestAcceptItem::GetActions ( );
__declspec(implementation_key(4004)) AttachmentsPtr _TaskRequestAcceptItem::GetAttachments ( );
__declspec(implementation_key(4005)) _bstr_t _TaskRequestAcceptItem::GetBillingInformation ( );
__declspec(implementation_key(4006)) void _TaskRequestAcceptItem::PutBillingInformation ( _bstr_t BillingInformation );
__declspec(implementation_key(4007)) _bstr_t _TaskRequestAcceptItem::GetBody ( );
__declspec(implementation_key(4008)) void _TaskRequestAcceptItem::PutBody ( _bstr_t Body );
__declspec(implementation_key(4009)) _bstr_t _TaskRequestAcceptItem::GetCategories ( );
__declspec(implementation_key(4010)) void _TaskRequestAcceptItem::PutCategories ( _bstr_t Categories );
__declspec(implementation_key(4011)) _bstr_t _TaskRequestAcceptItem::GetCompanies ( );
__declspec(implementation_key(4012)) void _TaskRequestAcceptItem::PutCompanies ( _bstr_t Companies );
__declspec(implementation_key(4013)) _bstr_t _TaskRequestAcceptItem::GetConversationIndex ( );
__declspec(implementation_key(4014)) _bstr_t _TaskRequestAcceptItem::GetConversationTopic ( );
__declspec(implementation_key(4015)) DATE _TaskRequestAcceptItem::GetCreationTime ( );
__declspec(implementation_key(4016)) _bstr_t _TaskRequestAcceptItem::GetEntryID ( );
__declspec(implementation_key(4017)) FormDescriptionPtr _TaskRequestAcceptItem::GetFormDescription ( );
__declspec(implementation_key(4018)) _InspectorPtr _TaskRequestAcceptItem::GetGetInspector ( );
__declspec(implementation_key(4019)) enum OlImportance _TaskRequestAcceptItem::GetImportance ( );
__declspec(implementation_key(4020)) void _TaskRequestAcceptItem::PutImportance ( enum OlImportance Importance );
__declspec(implementation_key(4021)) DATE _TaskRequestAcceptItem::GetLastModificationTime ( );
__declspec(implementation_key(4022)) IUnknownPtr _TaskRequestAcceptItem::GetMAPIOBJECT ( );
__declspec(implementation_key(4023)) _bstr_t _TaskRequestAcceptItem::GetMessageClass ( );
__declspec(implementation_key(4024)) void _TaskRequestAcceptItem::PutMessageClass ( _bstr_t MessageClass );
__declspec(implementation_key(4025)) _bstr_t _TaskRequestAcceptItem::GetMileage ( );
__declspec(implementation_key(4026)) void _TaskRequestAcceptItem::PutMileage ( _bstr_t Mileage );
__declspec(implementation_key(4027)) VARIANT_BOOL _TaskRequestAcceptItem::GetNoAging ( );
__declspec(implementation_key(4028)) void _TaskRequestAcceptItem::PutNoAging ( VARIANT_BOOL NoAging );
__declspec(implementation_key(4029)) long _TaskRequestAcceptItem::GetOutlookInternalVersion ( );
__declspec(implementation_key(4030)) _bstr_t _TaskRequestAcceptItem::GetOutlookVersion ( );
__declspec(implementation_key(4031)) VARIANT_BOOL _TaskRequestAcceptItem::GetSaved ( );
__declspec(implementation_key(4032)) enum OlSensitivity _TaskRequestAcceptItem::GetSensitivity ( );
__declspec(implementation_key(4033)) void _TaskRequestAcceptItem::PutSensitivity ( enum OlSensitivity Sensitivity );
__declspec(implementation_key(4034)) long _TaskRequestAcceptItem::GetSize ( );
__declspec(implementation_key(4035)) _bstr_t _TaskRequestAcceptItem::GetSubject ( );
__declspec(implementation_key(4036)) void _TaskRequestAcceptItem::PutSubject ( _bstr_t Subject );
__declspec(implementation_key(4037)) VARIANT_BOOL _TaskRequestAcceptItem::GetUnRead ( );
__declspec(implementation_key(4038)) void _TaskRequestAcceptItem::PutUnRead ( VARIANT_BOOL UnRead );
__declspec(implementation_key(4039)) UserPropertiesPtr _TaskRequestAcceptItem::GetUserProperties ( );
__declspec(implementation_key(4040)) HRESULT _TaskRequestAcceptItem::Close ( enum OlInspectorClose SaveMode );
__declspec(implementation_key(4041)) IDispatchPtr _TaskRequestAcceptItem::Copy ( );
__declspec(implementation_key(4042)) HRESULT _TaskRequestAcceptItem::Delete ( );
__declspec(implementation_key(4043)) HRESULT _TaskRequestAcceptItem::Display ( const _variant_t & Modal );
__declspec(implementation_key(4044)) IDispatchPtr _TaskRequestAcceptItem::Move ( struct MAPIFolder * DestFldr );
__declspec(implementation_key(4045)) HRESULT _TaskRequestAcceptItem::PrintOut ( );
__declspec(implementation_key(4046)) HRESULT _TaskRequestAcceptItem::Save ( );
__declspec(implementation_key(4047)) HRESULT _TaskRequestAcceptItem::SaveAs ( _bstr_t Path, const _variant_t & Type );
__declspec(implementation_key(4048)) _TaskItemPtr _TaskRequestAcceptItem::GetAssociatedTask ( VARIANT_BOOL AddToTaskList
);
__declspec(implementation_key(4049)) LinksPtr _TaskRequestAcceptItem::GetLinks ( );
__declspec(implementation_key(4050)) enum OlDownloadState _TaskRequestAcceptItem::GetDownloadState ( );
__declspec(implementation_key(4051)) HRESULT _TaskRequestAcceptItem::ShowCategoriesDialog ( );
__declspec(implementation_key(4052)) ItemPropertiesPtr _TaskRequestAcceptItem::GetItemProperties ( );
__declspec(implementation_key(4053)) enum OlRemoteStatus _TaskRequestAcceptItem::GetMarkForDownload ( );
__declspec(implementation_key(4054)) void _TaskRequestAcceptItem::PutMarkForDownload ( enum OlRemoteStatus
MarkForDownload );
__declspec(implementation_key(4055)) VARIANT_BOOL _TaskRequestAcceptItem::GetIsConflict ( );
__declspec(implementation_key(4056)) VARIANT_BOOL _TaskRequestAcceptItem::GetAutoResolvedWinner ( );
__declspec(implementation_key(4057)) ConflictsPtr _TaskRequestAcceptItem::GetConflicts ( );
__declspec(implementation_key(4058)) _PropertyAccessorPtr _TaskRequestAcceptItem::GetPropertyAccessor ( );
__declspec(implementation_key(4059)) _ApplicationPtr _TaskRequestDeclineItem::GetApplication ( );
__declspec(implementation_key(4060)) enum OlObjectClass _TaskRequestDeclineItem::GetClass ( );
__declspec(implementation_key(4061)) _NameSpacePtr _TaskRequestDeclineItem::GetSession ( );
__declspec(implementation_key(4062)) IDispatchPtr _TaskRequestDeclineItem::GetParent ( );
__declspec(implementation_key(4063)) ActionsPtr _TaskRequestDeclineItem::GetActions ( );
__declspec(implementation_key(4064)) AttachmentsPtr _TaskRequestDeclineItem::GetAttachments ( );
__declspec(implementation_key(4065)) _bstr_t _TaskRequestDeclineItem::GetBillingInformation ( );
__declspec(implementation_key(4066)) void _TaskRequestDeclineItem::PutBillingInformation ( _bstr_t BillingInformation );
__declspec(implementation_key(4067)) _bstr_t _TaskRequestDeclineItem::GetBody ( );
__declspec(implementation_key(4068)) void _TaskRequestDeclineItem::PutBody ( _bstr_t Body );
__declspec(implementation_key(4069)) _bstr_t _TaskRequestDeclineItem::GetCategories ( );
__declspec(implementation_key(4070)) void _TaskRequestDeclineItem::PutCategories ( _bstr_t Categories );
__declspec(implementation_key(4071)) _bstr_t _TaskRequestDeclineItem::GetCompanies ( );
__declspec(implementation_key(4072)) void _TaskRequestDeclineItem::PutCompanies ( _bstr_t Companies );
__declspec(implementation_key(4073)) _bstr_t _TaskRequestDeclineItem::GetConversationIndex ( );
__declspec(implementation_key(4074)) _bstr_t _TaskRequestDeclineItem::GetConversationTopic ( );
__declspec(implementation_key(4075)) DATE _TaskRequestDeclineItem::GetCreationTime ( );
__declspec(implementation_key(4076)) _bstr_t _TaskRequestDeclineItem::GetEntryID ( );
__declspec(implementation_key(4077)) FormDescriptionPtr _TaskRequestDeclineItem::GetFormDescription ( );
__declspec(implementation_key(4078)) _InspectorPtr _TaskRequestDeclineItem::GetGetInspector ( );
__declspec(implementation_key(4079)) enum OlImportance _TaskRequestDeclineItem::GetImportance ( );
__declspec(implementation_key(4080)) void _TaskRequestDeclineItem::PutImportance ( enum OlImportance Importance );
__declspec(implementation_key(4081)) DATE _TaskRequestDeclineItem::GetLastModificationTime ( );
__declspec(implementation_key(4082)) IUnknownPtr _TaskRequestDeclineItem::GetMAPIOBJECT ( );
__declspec(implementation_key(4083)) _bstr_t _TaskRequestDeclineItem::GetMessageClass ( );
__declspec(implementation_key(4084)) void _TaskRequestDeclineItem::PutMessageClass ( _bstr_t MessageClass );
__declspec(implementation_key(4085)) _bstr_t _TaskRequestDeclineItem::GetMileage ( );
__declspec(implementation_key(4086)) void _TaskRequestDeclineItem::PutMileage ( _bstr_t Mileage );
__declspec(implementation_key(4087)) VARIANT_BOOL _TaskRequestDeclineItem::GetNoAging ( );
__declspec(implementation_key(4088)) void _TaskRequestDeclineItem::PutNoAging ( VARIANT_BOOL NoAging );
__declspec(implementation_key(4089)) long _TaskRequestDeclineItem::GetOutlookInternalVersion ( );
__declspec(implementation_key(4090)) _bstr_t _TaskRequestDeclineItem::GetOutlookVersion ( );
__declspec(implementation_key(4091)) VARIANT_BOOL _TaskRequestDeclineItem::GetSaved ( );
__declspec(implementation_key(4092)) enum OlSensitivity _TaskRequestDeclineItem::GetSensitivity ( );
__declspec(implementation_key(4093)) void _TaskRequestDeclineItem::PutSensitivity ( enum OlSensitivity Sensitivity );
__declspec(implementation_key(4094)) long _TaskRequestDeclineItem::GetSize ( );
__declspec(implementation_key(4095)) _bstr_t _TaskRequestDeclineItem::GetSubject ( );
__declspec(implementation_key(4096)) void _TaskRequestDeclineItem::PutSubject ( _bstr_t Subject );
__declspec(implementation_key(4097)) VARIANT_BOOL _TaskRequestDeclineItem::GetUnRead ( );
__declspec(implementation_key(4098)) void _TaskRequestDeclineItem::PutUnRead ( VARIANT_BOOL UnRead );
__declspec(implementation_key(4099)) UserPropertiesPtr _TaskRequestDeclineItem::GetUserProperties ( );
__declspec(implementation_key(4100)) HRESULT _TaskRequestDeclineItem::Close ( enum OlInspectorClose SaveMode );
__declspec(implementation_key(4101)) IDispatchPtr _TaskRequestDeclineItem::Copy ( );
__declspec(implementation_key(4102)) HRESULT _TaskRequestDeclineItem::Delete ( );
__declspec(implementation_key(4103)) HRESULT _TaskRequestDeclineItem::Display ( const _variant_t & Modal );
__declspec(implementation_key(4104)) IDispatchPtr _TaskRequestDeclineItem::Move ( struct MAPIFolder * DestFldr );
__declspec(implementation_key(4105)) HRESULT _TaskRequestDeclineItem::PrintOut ( );
__declspec(implementation_key(4106)) HRESULT _TaskRequestDeclineItem::Save ( );
__declspec(implementation_key(4107)) HRESULT _TaskRequestDeclineItem::SaveAs ( _bstr_t Path, const _variant_t & Type );
__declspec(implementation_key(4108)) _TaskItemPtr _TaskRequestDeclineItem::GetAssociatedTask ( VARIANT_BOOL
AddToTaskList );
__declspec(implementation_key(4109)) LinksPtr _TaskRequestDeclineItem::GetLinks ( );
__declspec(implementation_key(4110)) enum OlDownloadState _TaskRequestDeclineItem::GetDownloadState ( );
__declspec(implementation_key(4111)) HRESULT _TaskRequestDeclineItem::ShowCategoriesDialog ( );
__declspec(implementation_key(4112)) ItemPropertiesPtr _TaskRequestDeclineItem::GetItemProperties ( );
__declspec(implementation_key(4113)) enum OlRemoteStatus _TaskRequestDeclineItem::GetMarkForDownload ( );
__declspec(implementation_key(4114)) void _TaskRequestDeclineItem::PutMarkForDownload ( enum OlRemoteStatus
MarkForDownload );
__declspec(implementation_key(4115)) VARIANT_BOOL _TaskRequestDeclineItem::GetIsConflict ( );
__declspec(implementation_key(4116)) VARIANT_BOOL _TaskRequestDeclineItem::GetAutoResolvedWinner ( );
__declspec(implementation_key(4117)) ConflictsPtr _TaskRequestDeclineItem::GetConflicts ( );
__declspec(implementation_key(4118)) _PropertyAccessorPtr _TaskRequestDeclineItem::GetPropertyAccessor ( );
__declspec(implementation_key(4119)) _ApplicationPtr _TaskRequestItem::GetApplication ( );
__declspec(implementation_key(4120)) enum OlObjectClass _TaskRequestItem::GetClass ( );
__declspec(implementation_key(4121)) _NameSpacePtr _TaskRequestItem::GetSession ( );
__declspec(implementation_key(4122)) IDispatchPtr _TaskRequestItem::GetParent ( );
__declspec(implementation_key(4123)) ActionsPtr _TaskRequestItem::GetActions ( );
__declspec(implementation_key(4124)) AttachmentsPtr _TaskRequestItem::GetAttachments ( );
__declspec(implementation_key(4125)) _bstr_t _TaskRequestItem::GetBillingInformation ( );
__declspec(implementation_key(4126)) void _TaskRequestItem::PutBillingInformation ( _bstr_t BillingInformation );
__declspec(implementation_key(4127)) _bstr_t _TaskRequestItem::GetBody ( );
__declspec(implementation_key(4128)) void _TaskRequestItem::PutBody ( _bstr_t Body );
__declspec(implementation_key(4129)) _bstr_t _TaskRequestItem::GetCategories ( );
__declspec(implementation_key(4130)) void _TaskRequestItem::PutCategories ( _bstr_t Categories );
__declspec(implementation_key(4131)) _bstr_t _TaskRequestItem::GetCompanies ( );
__declspec(implementation_key(4132)) void _TaskRequestItem::PutCompanies ( _bstr_t Companies );
__declspec(implementation_key(4133)) _bstr_t _TaskRequestItem::GetConversationIndex ( );
__declspec(implementation_key(4134)) _bstr_t _TaskRequestItem::GetConversationTopic ( );
__declspec(implementation_key(4135)) DATE _TaskRequestItem::GetCreationTime ( );
__declspec(implementation_key(4136)) _bstr_t _TaskRequestItem::GetEntryID ( );
__declspec(implementation_key(4137)) FormDescriptionPtr _TaskRequestItem::GetFormDescription ( );
__declspec(implementation_key(4138)) _InspectorPtr _TaskRequestItem::GetGetInspector ( );
__declspec(implementation_key(4139)) enum OlImportance _TaskRequestItem::GetImportance ( );
__declspec(implementation_key(4140)) void _TaskRequestItem::PutImportance ( enum OlImportance Importance );
__declspec(implementation_key(4141)) DATE _TaskRequestItem::GetLastModificationTime ( );
__declspec(implementation_key(4142)) IUnknownPtr _TaskRequestItem::GetMAPIOBJECT ( );
__declspec(implementation_key(4143)) _bstr_t _TaskRequestItem::GetMessageClass ( );
__declspec(implementation_key(4144)) void _TaskRequestItem::PutMessageClass ( _bstr_t MessageClass );
__declspec(implementation_key(4145)) _bstr_t _TaskRequestItem::GetMileage ( );
__declspec(implementation_key(4146)) void _TaskRequestItem::PutMileage ( _bstr_t Mileage );
__declspec(implementation_key(4147)) VARIANT_BOOL _TaskRequestItem::GetNoAging ( );
__declspec(implementation_key(4148)) void _TaskRequestItem::PutNoAging ( VARIANT_BOOL NoAging );
__declspec(implementation_key(4149)) long _TaskRequestItem::GetOutlookInternalVersion ( );
__declspec(implementation_key(4150)) _bstr_t _TaskRequestItem::GetOutlookVersion ( );
__declspec(implementation_key(4151)) VARIANT_BOOL _TaskRequestItem::GetSaved ( );
__declspec(implementation_key(4152)) enum OlSensitivity _TaskRequestItem::GetSensitivity ( );
__declspec(implementation_key(4153)) void _TaskRequestItem::PutSensitivity ( enum OlSensitivity Sensitivity );
__declspec(implementation_key(4154)) long _TaskRequestItem::GetSize ( );
__declspec(implementation_key(4155)) _bstr_t _TaskRequestItem::GetSubject ( );
__declspec(implementation_key(4156)) void _TaskRequestItem::PutSubject ( _bstr_t Subject );
__declspec(implementation_key(4157)) VARIANT_BOOL _TaskRequestItem::GetUnRead ( );
__declspec(implementation_key(4158)) void _TaskRequestItem::PutUnRead ( VARIANT_BOOL UnRead );
__declspec(implementation_key(4159)) UserPropertiesPtr _TaskRequestItem::GetUserProperties ( );
__declspec(implementation_key(4160)) HRESULT _TaskRequestItem::Close ( enum OlInspectorClose SaveMode );
__declspec(implementation_key(4161)) IDispatchPtr _TaskRequestItem::Copy ( );
__declspec(implementation_key(4162)) HRESULT _TaskRequestItem::Delete ( );
__declspec(implementation_key(4163)) HRESULT _TaskRequestItem::Display ( const _variant_t & Modal );
__declspec(implementation_key(4164)) IDispatchPtr _TaskRequestItem::Move ( struct MAPIFolder * DestFldr );
__declspec(implementation_key(4165)) HRESULT _TaskRequestItem::PrintOut ( );
__declspec(implementation_key(4166)) HRESULT _TaskRequestItem::Save ( );
__declspec(implementation_key(4167)) HRESULT _TaskRequestItem::SaveAs ( _bstr_t Path, const _variant_t & Type );
__declspec(implementation_key(4168)) _TaskItemPtr _TaskRequestItem::GetAssociatedTask ( VARIANT_BOOL AddToTaskList );
__declspec(implementation_key(4169)) LinksPtr _TaskRequestItem::GetLinks ( );
__declspec(implementation_key(4170)) enum OlDownloadState _TaskRequestItem::GetDownloadState ( );
__declspec(implementation_key(4171)) HRESULT _TaskRequestItem::ShowCategoriesDialog ( );
__declspec(implementation_key(4172)) ItemPropertiesPtr _TaskRequestItem::GetItemProperties ( );
__declspec(implementation_key(4173)) enum OlRemoteStatus _TaskRequestItem::GetMarkForDownload ( );
__declspec(implementation_key(4174)) void _TaskRequestItem::PutMarkForDownload ( enum OlRemoteStatus MarkForDownload );
__declspec(implementation_key(4175)) VARIANT_BOOL _TaskRequestItem::GetIsConflict ( );
__declspec(implementation_key(4176)) VARIANT_BOOL _TaskRequestItem::GetAutoResolvedWinner ( );
__declspec(implementation_key(4177)) ConflictsPtr _TaskRequestItem::GetConflicts ( );
__declspec(implementation_key(4178)) _PropertyAccessorPtr _TaskRequestItem::GetPropertyAccessor ( );
__declspec(implementation_key(4179)) _ApplicationPtr _TaskRequestUpdateItem::GetApplication ( );
__declspec(implementation_key(4180)) enum OlObjectClass _TaskRequestUpdateItem::GetClass ( );
__declspec(implementation_key(4181)) _NameSpacePtr _TaskRequestUpdateItem::GetSession ( );
__declspec(implementation_key(4182)) IDispatchPtr _TaskRequestUpdateItem::GetParent ( );
__declspec(implementation_key(4183)) ActionsPtr _TaskRequestUpdateItem::GetActions ( );
__declspec(implementation_key(4184)) AttachmentsPtr _TaskRequestUpdateItem::GetAttachments ( );
__declspec(implementation_key(4185)) _bstr_t _TaskRequestUpdateItem::GetBillingInformation ( );
__declspec(implementation_key(4186)) void _TaskRequestUpdateItem::PutBillingInformation ( _bstr_t BillingInformation );
__declspec(implementation_key(4187)) _bstr_t _TaskRequestUpdateItem::GetBody ( );
__declspec(implementation_key(4188)) void _TaskRequestUpdateItem::PutBody ( _bstr_t Body );
__declspec(implementation_key(4189)) _bstr_t _TaskRequestUpdateItem::GetCategories ( );
__declspec(implementation_key(4190)) void _TaskRequestUpdateItem::PutCategories ( _bstr_t Categories );
__declspec(implementation_key(4191)) _bstr_t _TaskRequestUpdateItem::GetCompanies ( );
__declspec(implementation_key(4192)) void _TaskRequestUpdateItem::PutCompanies ( _bstr_t Companies );
__declspec(implementation_key(4193)) _bstr_t _TaskRequestUpdateItem::GetConversationIndex ( );
__declspec(implementation_key(4194)) _bstr_t _TaskRequestUpdateItem::GetConversationTopic ( );
__declspec(implementation_key(4195)) DATE _TaskRequestUpdateItem::GetCreationTime ( );
__declspec(implementation_key(4196)) _bstr_t _TaskRequestUpdateItem::GetEntryID ( );
__declspec(implementation_key(4197)) FormDescriptionPtr _TaskRequestUpdateItem::GetFormDescription ( );
__declspec(implementation_key(4198)) _InspectorPtr _TaskRequestUpdateItem::GetGetInspector ( );
__declspec(implementation_key(4199)) enum OlImportance _TaskRequestUpdateItem::GetImportance ( );
__declspec(implementation_key(4200)) void _TaskRequestUpdateItem::PutImportance ( enum OlImportance Importance );
__declspec(implementation_key(4201)) DATE _TaskRequestUpdateItem::GetLastModificationTime ( );
__declspec(implementation_key(4202)) IUnknownPtr _TaskRequestUpdateItem::GetMAPIOBJECT ( );
__declspec(implementation_key(4203)) _bstr_t _TaskRequestUpdateItem::GetMessageClass ( );
__declspec(implementation_key(4204)) void _TaskRequestUpdateItem::PutMessageClass ( _bstr_t MessageClass );
__declspec(implementation_key(4205)) _bstr_t _TaskRequestUpdateItem::GetMileage ( );
__declspec(implementation_key(4206)) void _TaskRequestUpdateItem::PutMileage ( _bstr_t Mileage );
__declspec(implementation_key(4207)) VARIANT_BOOL _TaskRequestUpdateItem::GetNoAging ( );
__declspec(implementation_key(4208)) void _TaskRequestUpdateItem::PutNoAging ( VARIANT_BOOL NoAging );
__declspec(implementation_key(4209)) long _TaskRequestUpdateItem::GetOutlookInternalVersion ( );
__declspec(implementation_key(4210)) _bstr_t _TaskRequestUpdateItem::GetOutlookVersion ( );
__declspec(implementation_key(4211)) VARIANT_BOOL _TaskRequestUpdateItem::GetSaved ( );
__declspec(implementation_key(4212)) enum OlSensitivity _TaskRequestUpdateItem::GetSensitivity ( );
__declspec(implementation_key(4213)) void _TaskRequestUpdateItem::PutSensitivity ( enum OlSensitivity Sensitivity );
__declspec(implementation_key(4214)) long _TaskRequestUpdateItem::GetSize ( );
__declspec(implementation_key(4215)) _bstr_t _TaskRequestUpdateItem::GetSubject ( );
__declspec(implementation_key(4216)) void _TaskRequestUpdateItem::PutSubject ( _bstr_t Subject );
__declspec(implementation_key(4217)) VARIANT_BOOL _TaskRequestUpdateItem::GetUnRead ( );
__declspec(implementation_key(4218)) void _TaskRequestUpdateItem::PutUnRead ( VARIANT_BOOL UnRead );
__declspec(implementation_key(4219)) UserPropertiesPtr _TaskRequestUpdateItem::GetUserProperties ( );
__declspec(implementation_key(4220)) HRESULT _TaskRequestUpdateItem::Close ( enum OlInspectorClose SaveMode );
__declspec(implementation_key(4221)) IDispatchPtr _TaskRequestUpdateItem::Copy ( );
__declspec(implementation_key(4222)) HRESULT _TaskRequestUpdateItem::Delete ( );
__declspec(implementation_key(4223)) HRESULT _TaskRequestUpdateItem::Display ( const _variant_t & Modal );
__declspec(implementation_key(4224)) IDispatchPtr _TaskRequestUpdateItem::Move ( struct MAPIFolder * DestFldr );
__declspec(implementation_key(4225)) HRESULT _TaskRequestUpdateItem::PrintOut ( );
__declspec(implementation_key(4226)) HRESULT _TaskRequestUpdateItem::Save ( );
__declspec(implementation_key(4227)) HRESULT _TaskRequestUpdateItem::SaveAs ( _bstr_t Path, const _variant_t & Type );
__declspec(implementation_key(4228)) _TaskItemPtr _TaskRequestUpdateItem::GetAssociatedTask ( VARIANT_BOOL AddToTaskList
);
__declspec(implementation_key(4229)) LinksPtr _TaskRequestUpdateItem::GetLinks ( );
__declspec(implementation_key(4230)) enum OlDownloadState _TaskRequestUpdateItem::GetDownloadState ( );
__declspec(implementation_key(4231)) HRESULT _TaskRequestUpdateItem::ShowCategoriesDialog ( );
__declspec(implementation_key(4232)) ItemPropertiesPtr _TaskRequestUpdateItem::GetItemProperties ( );
__declspec(implementation_key(4233)) enum OlRemoteStatus _TaskRequestUpdateItem::GetMarkForDownload ( );
__declspec(implementation_key(4234)) void _TaskRequestUpdateItem::PutMarkForDownload ( enum OlRemoteStatus
MarkForDownload );
__declspec(implementation_key(4235)) VARIANT_BOOL _TaskRequestUpdateItem::GetIsConflict ( );
__declspec(implementation_key(4236)) VARIANT_BOOL _TaskRequestUpdateItem::GetAutoResolvedWinner ( );
__declspec(implementation_key(4237)) ConflictsPtr _TaskRequestUpdateItem::GetConflicts ( );
__declspec(implementation_key(4238)) _PropertyAccessorPtr _TaskRequestUpdateItem::GetPropertyAccessor ( );
__declspec(implementation_key(4239)) _ApplicationPtr _NavigationFolder::GetApplication ( );
__declspec(implementation_key(4240)) enum OlObjectClass _NavigationFolder::GetClass ( );
__declspec(implementation_key(4241)) _NameSpacePtr _NavigationFolder::GetSession ( );
__declspec(implementation_key(4242)) IDispatchPtr _NavigationFolder::GetParent ( );
__declspec(implementation_key(4243)) MAPIFolderPtr _NavigationFolder::GetFolder ( );
__declspec(implementation_key(4244)) VARIANT_BOOL _NavigationFolder::GetIsSelected ( );
__declspec(implementation_key(4245)) void _NavigationFolder::PutIsSelected ( VARIANT_BOOL IsSelected );
__declspec(implementation_key(4246)) VARIANT_BOOL _NavigationFolder::GetIsSideBySide ( );
__declspec(implementation_key(4247)) void _NavigationFolder::PutIsSideBySide ( VARIANT_BOOL IsSideBySide );
__declspec(implementation_key(4248)) long _NavigationFolder::GetPosition ( );
__declspec(implementation_key(4249)) void _NavigationFolder::PutPosition ( long Position );
__declspec(implementation_key(4250)) VARIANT_BOOL _NavigationFolder::GetIsRemovable ( );
__declspec(implementation_key(4251)) _bstr_t _NavigationFolder::GetDisplayName ( );
__declspec(implementation_key(4252)) _ApplicationPtr _NavigationFolders::GetApplication ( );
__declspec(implementation_key(4253)) enum OlObjectClass _NavigationFolders::GetClass ( );
__declspec(implementation_key(4254)) _NameSpacePtr _NavigationFolders::GetSession ( );
__declspec(implementation_key(4255)) IDispatchPtr _NavigationFolders::GetParent ( );
__declspec(implementation_key(4256)) long _NavigationFolders::GetCount ( );
__declspec(implementation_key(4257)) _NavigationFolderPtr _NavigationFolders::Item ( const _variant_t & Index );
__declspec(implementation_key(4258)) _NavigationFolderPtr _NavigationFolders::Add ( struct MAPIFolder * Folder );
__declspec(implementation_key(4259)) HRESULT _NavigationFolders::Remove ( struct _NavigationFolder * RemovableFolder );
#pragma stop_map_region
*/
} // namespace Outlook

#include "MSOUTL.tli"

#pragma pack(pop)
